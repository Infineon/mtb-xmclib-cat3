<?xml version="1.0" encoding="utf-8"?>

<!--****************************************************************************
* \file pin-1.0.cypersonality
* \version 1.0
*
* \brief
* Pin personality description file.
*
********************************************************************************
* \copyright
* Copyright 2020-2021 Cypress Semiconductor Corporation
* SPDX-License-Identifier: Apache-2.0
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*****************************************************************************-->

<Personality id="xmc_pin" name="Pin" version="1.0" xmlns="http://cypress.com/xsd/cyhwpersonality_v5">
  <Dependencies>
    <IpBlock name="xmc_ioss" />
    <Resource name="ioss\.port\.pin" />
  </Dependencies>
  <ExposedMembers/>
  <Parameters>
    <!--Internal-->
    <ParamBool id="xmc1" name="xmc1" group="Internal" default="`${lookupExpression(&quot;XMC1&quot;, 0)}`" visible="false" editable="false" desc="" />
    <ParamBool id="xmc4" name="xmc4" group="Internal" default="`${lookupExpression(&quot;XMC4&quot;, 0)}`" visible="false" editable="false" desc="" />
    <ParamRange id="port" name="Port Number" group="Internal" default="`${getInstNumber(&quot;port&quot;)}`" min="0" max="16" resolution="1" visible="false" editable="false" desc="" />
    <ParamRange id="pin" name="Pin Number" group="Internal" default="`${getInstNumber(&quot;pin&quot;)}`" min="0" max="16" resolution="1" visible="false" editable="false" desc="" />
    <ParamString id="blockName" name="Block Name" group="Internal" default="`${&quot;ioss_0_port_&quot; . port . &quot;_pin_&quot; . pin}`" visible="false" editable="false" desc="" />

    <!-- Peripheral documentation -->
    <ParamDoc id="apiDoc" name="Configuration Help" group="Peripheral Documentation" default="file:///`${cy_libs_path()}`/docs/`${xmc1 ? &quot;xmc1&quot; : &quot;xmc4&quot;}`_api_reference_manual/html/group___g_p_i_o.html" linkText="Open GPIO Documentation" visible="true" desc="Opens the XMC Peripheral Library Documentation" />

    <!--General-->
    <ParamChoice id="io_function" name="Pin Direction" group="General" default="XMC_GPIO_INPUT_OUTPUT" visible="true" editable="true" desc="Select Pin functionality." >
      <Entry name="Input" value="XMC_GPIO_INPUT" visible="true" />
      <Entry name="Input/Output" value="XMC_GPIO_INPUT_OUTPUT" visible="true" />
      <Entry name="Hardware Controlled" value="XMC_GPIO_HWCTRL" visible="true" />
    </ParamChoice>

    <!--Input Settings-->
    <ParamChoice id="input_mode" name="Input Mode" group="Input" default="XMC_GPIO_MODE_INPUT_TRISTATE" visible="`${io_function eq XMC_GPIO_INPUT}`" editable="true" desc="Select Pull up/Pull down Devices." >
      <Entry name="Tristate" value="XMC_GPIO_MODE_INPUT_TRISTATE" visible="true" />
      <Entry name="Pull Up" value="XMC_GPIO_MODE_INPUT_PULL_UP" visible="true" />
      <Entry name="Pull Down" value="XMC_GPIO_MODE_INPUT_PULL_DOWN" visible="true" />
      <Entry name="Continuous Sampling Mode" value="XMC_GPIO_MODE_INPUT_SAMPLING" visible="true" />
      <Entry name="Inverted Tristate" value="XMC_GPIO_MODE_INPUT_INVERTED_TRISTATE" visible="true" />
      <Entry name="Inverted Pull Up" value="XMC_GPIO_MODE_INPUT_INVERTED_PULL_UP" visible="true" />
      <Entry name="Inverted Pull Down" value="XMC_GPIO_MODE_INPUT_INVERTED_PULL_DOWN" visible="true" />
      <Entry name="Inverted Continuous Sampling Mode" value="XMC_GPIO_MODE_INPUT_INVERTED_SAMPLING" visible="true" />
    </ParamChoice>
    <ParamChoice id="input_hysteresis" name="Hysteresis" group="Input" default="XMC_GPIO_INPUT_HYSTERESIS_STANDARD" visible="`${xmc1 &amp;&amp; (io_function eq XMC_GPIO_INPUT)}`" editable="true" desc="Select Pad Hysteresis Control." >
      <Entry name="Standard" value="XMC_GPIO_INPUT_HYSTERESIS_STANDARD" visible="true" />
      <Entry name="Large" value="XMC_GPIO_INPUT_HYSTERESIS_LARGE" visible="true" />
    </ParamChoice>

    <!--Output Settings-->
    <ParamChoice id="output_mode" name="Output Mode" group="Output" default="XMC_GPIO_MODE_OUTPUT_PUSH_PULL" visible="`${io_function eq XMC_GPIO_INPUT_OUTPUT}`" editable="true" desc="Select push pull/open drain mode." >
      <Entry name="Push Pull" value="XMC_GPIO_MODE_OUTPUT_PUSH_PULL" visible="true" />
      <Entry name="Open Drain" value="XMC_GPIO_MODE_OUTPUT_OPEN_DRAIN" visible="true" />
    </ParamChoice>
    <ParamChoice id="output_level" name="Initial Output Level" group="Output" default="XMC_GPIO_OUTPUT_LEVEL_LOW" visible="`${io_function eq XMC_GPIO_INPUT_OUTPUT}`" editable="true" desc="Select output initialization level for the port." >
      <Entry name="Low" value="XMC_GPIO_OUTPUT_LEVEL_LOW" visible="true" />
      <Entry name="High" value="XMC_GPIO_OUTPUT_LEVEL_HIGH" visible="true" />
    </ParamChoice>
    <ParamChoice id="output_strength" name="Driver Strength" group="Output" default="XMC_GPIO_OUTPUT_STRENGTH_NONE" visible="`${xmc4 &amp;&amp; (io_function ne XMC_GPIO_INPUT)}`" editable="true" desc="Select output strength and slew rate of a pin." >
      <Entry name="Don't Care" value="XMC_GPIO_OUTPUT_STRENGTH_NONE" visible="true" />
      <Entry name="Weak Driver" value="XMC_GPIO_OUTPUT_STRENGTH_WEAK" visible="true" />
      <Entry name="Medium Driver" value="XMC_GPIO_OUTPUT_STRENGTH_MEDIUM" visible="true" />
      <Entry name="Strong Driver Soft Edge" value="XMC_GPIO_OUTPUT_STRENGTH_STRONG_SOFT_EDGE" visible="true" />
      <Entry name="Strong Driver Slow Edge" value="XMC_GPIO_OUTPUT_STRENGTH_STRONG_SLOW_EDGE" visible="true" />
      <Entry name="Strong Driver Sharp Edge" value="XMC_GPIO_OUTPUT_STRENGTH_STRONG_SHARP_EDGE" visible="true" />
      <Entry name="Strong Driver Medium Edge" value="XMC_GPIO_OUTPUT_STRENGTH_STRONG_MEDIUM_EDGE" visible="true" />
    </ParamChoice>

    <!-- Connections -->
    <ParamSignal port="digital_in[0]" name="Digital Input" group="Connections" visible="`${hasVisibleOption(&quot;digital_in[0]&quot;)}`" desc="A digital input signal to connect to" canBeEmpty="true" />
    <ParamSignal port="digital_out[0]" name="Digital Output" group="Connections" visible="`${hasVisibleOption(&quot;digital_out[0]&quot;) &amp;&amp; (io_function eq XMC_GPIO_INPUT_OUTPUT)}`" desc="A digital output signal to connect to" canBeEmpty="true" />
    <ParamSignal port="hw_out[0]" name="Hardware Output" group="Connections" visible="`${hasVisibleOption(&quot;hw_out[0]&quot;) &amp;&amp; (io_function eq XMC_GPIO_HWCTRL)}`" desc="A hardware peripheral controlled signal to connect to" canBeEmpty="true" />
    <ParamSignal port="analog[0]" name="Analog" group="Connections" visible="`${hasVisibleOption(&quot;analog[0]&quot;)}`" desc="An analog signal to connect to" canBeEmpty="true" />

    <!-- Skip code gen: analog[0] may be connected to external clock -->
    <ParamBool id="skipConfigCodeGen" name="skipConfigCodeGen" group="Internal" default="`${hasConnection(&quot;analog&quot;, 0) &amp;&amp; hasExposedMember(getBlockFromSignal(&quot;analog[0]&quot;), &quot;suppressCodeGen&quot;) &amp;&amp; getExposedMember(getBlockFromSignal(&quot;analog[0]&quot;), &quot;suppressCodeGen&quot;)}`" visible="false" editable="false" desc="" />

    <!--Config-->
    <ParamBool id="inFlash" name="Store Config in Flash" group="Advanced" default="true" visible="true" editable="true" desc="Controls whether the configuration structure is stored in flash (const, true) or SRAM (not const, false)." />
    <ParamBool id="hasDigitalConnection" name="Has Digital Connection" group="Advanced" default="`${hasConnection(&quot;digital_in&quot;, 0) || hasConnection(&quot;digital_out&quot;, 0)}`" visible="false" editable="false" desc="" />
  </Parameters>

  <DRCs>
    <DRC type="ERROR" text="The analog terminal cannot be connected when the digital_in terminal is connected."
      condition="`${hasConnection(&quot;analog&quot;, 0) &amp;&amp; hasConnection(&quot;digital_in&quot;, 0)}`" />
    <DRC type="ERROR" text="The analog terminal cannot be connected when the digital_out terminal is connected."
      condition="`${hasConnection(&quot;analog&quot;, 0) &amp;&amp; hasConnection(&quot;digital_out&quot;, 0)}`" />
    <DRC type="ERROR" text="The analog terminal cannot be connected when the hw_out terminal is connected."
      condition="`${hasConnection(&quot;analog&quot;, 0) &amp;&amp; hasConnection(&quot;hw_out&quot;, 0)}`" />
  </DRCs>

  <ConfigFirmware>
    <ConfigInclude value="xmc_gpio.h" include="true" />
    <ConfigInclude value="cycfg_routing.h" include="`${hasDigitalConnection}`" />

    <ConfigDefine name="`${INST_NAME}`_PORT" value="XMC_GPIO_PORT`${port}`" public="true" include="true" />
    <ConfigDefine name="`${INST_NAME}`_PORT_NUM" value="`${port}`U" public="true" include="true" />
    <ConfigDefine name="`${INST_NAME}`_PIN" value="`${pin}`U" public="true" include="true" />
    <ConfigDefine name="`${blockName . &quot;_INPUT&quot;}`" value="0U" public="true" include="`${io_function eq XMC_GPIO_INPUT}`" preventOverride="true" />
    <ConfigDefine name="`${blockName . &quot;_ALT&quot;}`" value="0U" public="true" include="`${io_function ne XMC_GPIO_INPUT}`" preventOverride="true" />
    <ConfigDefine name="`${INST_NAME}`_MODE" value="`${(io_function eq XMC_GPIO_INPUT) ? (&quot;(&quot; . input_mode . &quot; | &quot; . blockName . &quot;_INPUT)&quot;) : ((io_function eq XMC_GPIO_INPUT_OUTPUT) ? (&quot;(&quot; . output_mode . &quot; | &quot; . blockName . &quot;_ALT)&quot;) : blockName . &quot;_ALT&quot;)}`" public="true" include="true" />
    <ConfigDefine name="`${blockName . &quot;_HWO&quot;}`" value="XMC_GPIO_HWCTRL_DISABLED" public="true" include="true" preventOverride="true" />
    <ConfigDefine name="`${INST_NAME}`_HWO" value="`${blockName . &quot;_HWO&quot;}`" public="true" include="`${INST_NAME ne blockName}`" />

    <ConfigStruct name="`${INST_NAME}`_config" type="XMC_GPIO_CONFIG_t" const="`${inFlash}`" public="true" include="true">
      <Member name="mode" value="(XMC_GPIO_MODE_t)`${INST_NAME}`_MODE" />
      <Member name="input_hysteresis" value="`${input_hysteresis}`" include="`${xmc1 &amp;&amp; (io_function eq XMC_GPIO_INPUT)}`" />
      <Member name="output_level" value="`${output_level}`" include="`${io_function eq XMC_GPIO_INPUT_OUTPUT}`" />
      <Member name="output_strength" value="`${output_strength}`" include="`${xmc4 &amp;&amp; (io_function ne XMC_GPIO_INPUT) &amp;&amp; (output_strength ne XMC_GPIO_OUTPUT_STRENGTH_NONE)}`" />
    </ConfigStruct>

    <ConfigInstruction value="XMC_GPIO_Init(`${INST_NAME}`_PORT, `${INST_NAME}`_PIN, &amp;`${INST_NAME}`_config);" include="`${!skipConfigCodeGen}`"/>
    <ConfigInstruction value="XMC_GPIO_SetHardwareControl(`${INST_NAME}`_PORT, `${INST_NAME}`_PIN, `${INST_NAME}`_HWO);" include="`${!skipConfigCodeGen}`" />
  </ConfigFirmware>
</Personality>
