<?xml version="1.0" encoding="utf-8"?>

<!--****************************************************************************
* \file ccu8_global-1.0.cypersonality
* \version 1.0
*
* \brief
* CCU8 global personality description file.
*
********************************************************************************
* \copyright
* Copyright 2021-2023 Cypress Semiconductor Corporation
* SPDX-License-Identifier: Apache-2.0
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*****************************************************************************-->

<Personality id="xmc_ccu8_global" name="CCU8 Global" version="1.0" xmlns="http://cypress.com/xsd/cyhwpersonality_v7">
  <Dependencies>
    <IpBlock name="xmc_ccu8" />
    <Resource name="ccu8" />
  </Dependencies>
  <ExposedMembers>
    <ExposedMember key="frequency" paramId="fCCU8" />
    <ExposedMember key="baseAddr" paramId="baseAddr" />
  </ExposedMembers>

  <Parameters>
    <!-- Internal -->
    <ParamBool id="debug" name="debug" group="Internal" default="false" visible="false" editable="false" desc="" />
    <ParamString id="baseAddr" name="baseAddr" group="Internal" default="`${INST_NAME}`_HW" visible="`${debug}`" editable="false" desc="" />
    <ParamString id="module_num" name="CCU8 module index" group="Internal" default="`${getInstNumber(&quot;ccu8&quot;)}`" visible="false" editable="false" desc="" />
    <ParamString id="clock_resource" name="CCU Clock Resource" group="Internal" default="scu[0].clock[0].ccuclk[0]" visible="false" editable="false" desc="" />
    <ParamBool id="clock_error" name="Clock Error" group="Internal" default="`${!isBlockUsed(clock_resource)}`" visible="false" editable="false" desc="" />
    <Repeat count="4">
      <ParamString id="slice$idxRcs" name="slice$idxRcs" group="Internal" default="ccu8[`${module_num}`].ch[$idx]" visible="`${debug}`" editable="false" desc="" />
      <ParamBool id="isSlice$idxUsed" name="isSlice$idxUsed" group="Internal" default="`${hasBlock(slice$idxRcs) &amp;&amp; isBlockUsed(slice$idxRcs)}`" visible="`${debug}`" editable="false" desc="" />
    </Repeat>

    <!-- Peripheral documentation -->
    <ParamDoc id="apiDoc" name="API Help" group="Documentation" default="file:///`${cy_libs_path()}`/docs/`${lookupExpression(&quot;XMC1&quot;, 0) ? &quot;xmc1&quot; : &quot;xmc4&quot;}`_api_reference_manual/html/group___c_c_u8.html" linkText="Open CCU8 Driver Documentation" visible="true" desc="Opens the XMC Peripheral Library Documentation." />

    <!-- General -->
    <ParamString id="fCCU8" name="Frequency (Hz)" group="General" default="`${clock_error ? 0.0 : getExposedMember(clock_resource, &quot;frequency&quot;)}`" visible="false" editable="false" desc="" />
    <ParamString id="frequency_info" name="Frequency" group="General" default="`${formatFrequency(fCCU8)}`" visible="true" editable="false" desc="Input frequency to CCU8 module from System Control Unit (SCU)." />
    <ParamChoice id="mc_shadow_tx_function" name="Multi-Channel Mode Shadow Transfer" group="General" default="XMC_CCU8_SLICE_MCMS_ACTION_TRANSFER_PR_CR" visible="true" editable="true" desc="Select this to allow the override of the status signal (CC8yST) with a value passed through an external signal. This will consume two events: one configured as edge that will act as trigger to override the status bit and the other configured as level that contains the value to be copied in the status bit.">
      <Entry name="Period and Compare" value="XMC_CCU8_SLICE_MCMS_ACTION_TRANSFER_PR_CR" visible="true" />
      <Entry name="Period, Compare and Prescaler" value="XMC_CCU8_SLICE_MCMS_ACTION_TRANSFER_PR_CR_PCMP" visible="true" />
      <Entry name="Period, Compare, Prescaler and Dither" value="XMC_CCU8_SLICE_MCMS_ACTION_TRANSFER_PR_CR_PCMP_DIT" visible="true" />
    </ParamChoice>
  </Parameters>

  <DRCs>
    <DRC type="ERROR" text="CCU8 source clock is not enabled." condition="`${clock_error}`">
      <FixIt action="ENABLE_BLOCK" target="`${clock_resource}`" value="" valid="true" />
    </DRC>
  </DRCs>

  <ConfigFirmware>
    <ConfigInclude value="xmc_ccu8.h" include="true" />
    <ConfigDefine name="`${INST_NAME}`_NUM" value="`${module_num}`U" public="true" include="true" />
    <ConfigDefine name="`${baseAddr}`" value="CCU8`${module_num}`" public="true" include="true" />
    
    <ConfigDefine name="`${INST_NAME}`_SR$idx_INTERRUPT_HANDLER" value="CCU8`${module_num}`_$idx_IRQHandler" public="true" 
                  include="`${(isSlice0Used ? getExposedMember(slice0Rcs, &quot;isSR$idxUsed&quot;) : false) ||
                              (isSlice1Used ? getExposedMember(slice1Rcs, &quot;isSR$idxUsed&quot;) : false) ||
                              (isSlice2Used ? getExposedMember(slice2Rcs, &quot;isSR$idxUsed&quot;) : false) ||
                              (isSlice3Used ? getExposedMember(slice3Rcs, &quot;isSR$idxUsed&quot;) : false)}`" repeatCount="4" />
                              
    <ConfigDefine name="`${INST_NAME}`_SR$idx_IRQN" value="CCU8`${module_num}`_$idx_IRQn" public="true" 
                  include="`${(isSlice0Used ? getExposedMember(slice0Rcs, &quot;isSR$idxUsed&quot;) : false) ||
                              (isSlice1Used ? getExposedMember(slice1Rcs, &quot;isSR$idxUsed&quot;) : false) ||
                              (isSlice2Used ? getExposedMember(slice2Rcs, &quot;isSR$idxUsed&quot;) : false) ||
                              (isSlice3Used ? getExposedMember(slice3Rcs, &quot;isSR$idxUsed&quot;) : false)}`" repeatCount="4" />
    
    <ConfigInstruction value="XMC_CCU8_Init(`${baseAddr}`, `${mc_shadow_tx_function}`);" include="true" />
    <ConfigInstruction value="XMC_CCU8_StartPrescaler(`${baseAddr}`);" include="true" />
  </ConfigFirmware>
</Personality>
