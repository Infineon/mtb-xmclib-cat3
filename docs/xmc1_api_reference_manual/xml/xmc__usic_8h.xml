<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="xmc__usic_8h" kind="file" language="C++">
    <compoundname>xmc_usic.h</compoundname>
    <includes local="yes">xmc_common.h</includes>
    <includes local="yes">xmc1_usic_map.h</includes>
    <includedby refid="xmc__i2c_8h" local="yes">xmc_i2c.h</includedby>
    <includedby refid="xmc__i2s_8h" local="yes">xmc_i2s.h</includedby>
    <includedby refid="xmc__spi_8h" local="yes">xmc_spi.h</includedby>
    <includedby refid="xmc__uart_8h" local="yes">xmc_uart.h</includedby>
    <incdepgraph>
      <node id="76">
        <label>xmc_common.h</label>
      </node>
      <node id="75">
        <label>xmc_usic.h</label>
        <link refid="xmc__usic_8h"/>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
      </node>
      <node id="77">
        <label>xmc1_usic_map.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="struct_x_m_c___u_s_i_c___c_h__t" prot="public">XMC_USIC_CH_t</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="group___u_s_i_c_1ga857b16f38336b2f0bda76d514c341748" prot="public" static="no">
        <name>USIC_CH_DXCR_CM_Msk</name>
        <initializer>USIC_CH_DX0CR_CM_Msk</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Common mask for CM bitfield mask in DXnCR register </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="175" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="175" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___u_s_i_c_1gac37ea251ee432c469f3ca780f00a0a82" prot="public" static="no">
        <name>USIC_CH_DXCR_CM_Pos</name>
        <initializer>USIC_CH_DX0CR_CM_Pos</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Common mask for CM bitfield position in DXnCR register </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="174" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="174" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___u_s_i_c_1gacd79dd61fa38db0bc2a735c9c2d7e272" prot="public" static="no">
        <name>USIC_CH_DXCR_DFEN_Msk</name>
        <initializer>USIC_CH_DX0CR_DFEN_Msk</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Common mask for DFEN bitfield mask in DXnCR register </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="172" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___u_s_i_c_1gafe4d28d8e09425ff5fd0f2c98ea85e1b" prot="public" static="no">
        <name>USIC_CH_DXCR_DPOL_Msk</name>
        <initializer>USIC_CH_DX0CR_DPOL_Msk</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Common mask for DPOL bitfield mask in DXnCR register </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="171" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="171" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___u_s_i_c_1ga422029f5a94b9e2960a712fb3cb437d0" prot="public" static="no">
        <name>USIC_CH_DXCR_DSEL_Msk</name>
        <initializer>USIC_CH_DX0CR_DSEL_Msk</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Common mask for DSEL bitfield mask in DXnCR register </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="167" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="167" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___u_s_i_c_1gad3fe0ed0b13c04904e25ccee9eeb084c" prot="public" static="no">
        <name>USIC_CH_DXCR_DSEL_Pos</name>
        <initializer>USIC_CH_DX0CR_DSEL_Pos</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Common mask for DSEL bitfield position in DXnCR register </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="168" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="168" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___u_s_i_c_1gaf00a9eaab71452bf3b16b78aa080cb25" prot="public" static="no">
        <name>USIC_CH_DXCR_DSEN_Msk</name>
        <initializer>USIC_CH_DX0CR_DSEN_Msk</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Common mask for DSEN bitfield mask in DXnCR register </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="173" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="173" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___u_s_i_c_1ga9e60cb55d2c3135d5e1fcd317b0bcdbe" prot="public" static="no">
        <name>USIC_CH_DXCR_INSW_Msk</name>
        <initializer>USIC_CH_DX0CR_INSW_Msk</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Common mask for INSW bitfield mask in DXnCR register </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="176" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="176" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___u_s_i_c_1ga65a305fbc3474056c2becf2ae00dd2fd" prot="public" static="no">
        <name>USIC_CH_DXCR_INSW_pos</name>
        <initializer>USIC_CH_DX0CR_INSW_Pos</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Common mask for INSW bitfield position in DXnCR register </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="177" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="177" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___u_s_i_c_1gaa40b6e977acd2290853cfa788ec56dc5" prot="public" static="no">
        <name>USIC_CH_DXCR_SFSEL_Msk</name>
        <initializer>USIC_CH_DX0CR_SFSEL_Msk</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Common mask for SFSEL bitfield mask in DXnCR register </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="170" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="170" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___u_s_i_c_1gad780e0ceed2e148c84ddb0f0e2df2a44" prot="public" static="no">
        <name>USIC_CH_DXCR_SFSEL_Pos</name>
        <initializer>USIC_CH_DX0CR_SFSEL_Pos</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Common mask for SFSEL bitfield position in DXnCR register </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="169" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="169" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___u_s_i_c_1gab5471c5fff228b5b9695356e7d2fc98a" prot="public" static="no">
        <name>XMC_USIC0</name>
        <initializer>((<ref refid="group___u_s_i_c_1ga953ad8cb6043e854f32ab9a53042aedb" kindref="member">XMC_USIC_t</ref> *)USIC0_BASE)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>USIC0 module base address </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="151" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___u_s_i_c_1ga28dd6da4b742e7336b12ae6fa8de5e9f" prot="public" static="no">
        <name>XMC_USIC0_CH0</name>
        <initializer>((<ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> *)USIC0_CH0_BASE)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>USIC0 channel 0 base address </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="152" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="152" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___u_s_i_c_1gab7c9a3765e7d637114fc67951cf20c5b" prot="public" static="no">
        <name>XMC_USIC0_CH1</name>
        <initializer>((<ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> *)USIC0_CH1_BASE)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>USIC0 channel 1 base address </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="153" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___u_s_i_c_1gabeb00ed8ca0740c0b213c6684d636678" prot="public" static="no">
        <name>XMC_USIC1</name>
        <initializer>((<ref refid="group___u_s_i_c_1ga953ad8cb6043e854f32ab9a53042aedb" kindref="member">XMC_USIC_t</ref> *)USIC1_BASE)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>USIC1 module base address </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="156" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___u_s_i_c_1gab3012ea0f6b1dddc5b1c05425e15c4a1" prot="public" static="no">
        <name>XMC_USIC1_CH0</name>
        <initializer>((<ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> *)USIC1_CH0_BASE)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>USIC1 channel 0 base address </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="157" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="157" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___u_s_i_c_1ga8892cec48c6246ff3e470178e4273f99" prot="public" static="no">
        <name>XMC_USIC1_CH1</name>
        <initializer>((<ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> *)USIC1_CH1_BASE)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>USIC1 channel 1 base address </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="158" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="158" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___u_s_i_c_1ga13fa3c2b59871d42c4a0918d1de5e1b3" prot="public" static="no">
        <name>XMC_USIC2</name>
        <initializer>((<ref refid="group___u_s_i_c_1ga953ad8cb6043e854f32ab9a53042aedb" kindref="member">XMC_USIC_t</ref> *)USIC2_BASE)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>USIC2 module base address </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="162" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="162" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___u_s_i_c_1gab79d676f4efb3235bd3d8c977b83b1cf" prot="public" static="no">
        <name>XMC_USIC2_CH0</name>
        <initializer>((<ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> *)USIC2_CH0_BASE)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>USIC2 channel 0 base address </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="163" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___u_s_i_c_1ga6f71692f25917f0dcd77bb77e5518313" prot="public" static="no">
        <name>XMC_USIC2_CH1</name>
        <initializer>((<ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> *)USIC2_CH1_BASE)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>USIC2 channel 1 base address </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="164" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="164" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group___u_s_i_c_1ga5917220b11972dd6f2fdeb20e344f99c" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_t</name>
        <enumvalue id="group___u_s_i_c_1gga5917220b11972dd6f2fdeb20e344f99cab6c56797b2cfa846072e77ed260939b9" prot="public">
          <name>XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_DISABLED</name>
          <initializer>= 0x0UL</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Baudrate generator clock divider: Disabled </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___u_s_i_c_1gga5917220b11972dd6f2fdeb20e344f99ca94521f0e91a523cb28af682c05de59f6" prot="public">
          <name>XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_NORMAL</name>
          <initializer>= 0x1UL &lt;&lt; USIC_CH_FDR_DM_Pos</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Baudrate generator clock divider: Normal mode </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___u_s_i_c_1gga5917220b11972dd6f2fdeb20e344f99cafb8bb99ad350096545bc4e2a14b8812a" prot="public">
          <name>XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_FRACTIONAL</name>
          <initializer>= 0x2UL &lt;&lt; USIC_CH_FDR_DM_Pos</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Baudrate generator clock divider: Fractional mode </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>USIC channel baudrate generator divider mode </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="450" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="449" bodyend="454"/>
      </memberdef>
      <memberdef kind="enum" id="group___u_s_i_c_1ga4a6a3d9ca8a64d7689f25c8c688cbab9" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_USIC_CH_BRG_CLOCK_SOURCE_t</name>
        <enumvalue id="group___u_s_i_c_1gga4a6a3d9ca8a64d7689f25c8c688cbab9ac70865c32728b5c7eb4bfc294887997e" prot="public">
          <name>XMC_USIC_CH_BRG_CLOCK_SOURCE_DIVIDER</name>
          <initializer>= 0x0UL</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Baudrate generator clock source : Source divider. (Internal clock source) </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___u_s_i_c_1gga4a6a3d9ca8a64d7689f25c8c688cbab9aef37beb1ab4b3e3d12108669137c3361" prot="public">
          <name>XMC_USIC_CH_BRG_CLOCK_SOURCE_DX1T</name>
          <initializer>= 0x2UL &lt;&lt; USIC_CH_BRG_CLKSEL_Pos</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Baudrate generator clock source : DX1T. (External clock source) </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___u_s_i_c_1gga4a6a3d9ca8a64d7689f25c8c688cbab9ac7c2b4bc98dc56b3a5055d005e851b13" prot="public">
          <name>XMC_USIC_CH_BRG_CLOCK_SOURCE_DX1S</name>
          <initializer>= 0x3UL &lt;&lt; USIC_CH_BRG_CLKSEL_Pos</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Baudrate generator clock source : DX1S. (External clock source) </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>USIC channel baudrate generator clock source </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="428" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="427" bodyend="432"/>
      </memberdef>
      <memberdef kind="enum" id="group___u_s_i_c_1gabe90ddec74269de0d09a2757aff4b93f" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_USIC_CH_BRG_CTQSEL_t</name>
        <enumvalue id="group___u_s_i_c_1ggabe90ddec74269de0d09a2757aff4b93fa6ec33b2e43b134ed8cc7c9ad7ad9591b" prot="public">
          <name>XMC_USIC_CH_BRG_CTQSEL_PDIV</name>
          <initializer>= 0x0UL</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>fCTQIN = fPDIV </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___u_s_i_c_1ggabe90ddec74269de0d09a2757aff4b93fa1d0fdfd57e666478224d1794936ce8e4" prot="public">
          <name>XMC_USIC_CH_BRG_CTQSEL_PPP</name>
          <initializer>= 0x1UL &lt;&lt; USIC_CH_BRG_CTQSEL_Pos</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>fCTQIN = fPPP </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___u_s_i_c_1ggabe90ddec74269de0d09a2757aff4b93fa9e3d5245837afa180bc5ab891113f309" prot="public">
          <name>XMC_USIC_CH_BRG_CTQSEL_SCLK</name>
          <initializer>= 0x2UL &lt;&lt; USIC_CH_BRG_CTQSEL_Pos</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>fCTQIN = fSCLK </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___u_s_i_c_1ggabe90ddec74269de0d09a2757aff4b93fa5b0ed8b7bb025c72c2c60a00bc998eab" prot="public">
          <name>XMC_USIC_CH_BRG_CTQSEL_MCLK</name>
          <initializer>= 0x3UL &lt;&lt; USIC_CH_BRG_CTQSEL_Pos</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>fCTQIN = fMCLK </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>USIC channel input selection for CTQ </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="438" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="437" bodyend="443"/>
      </memberdef>
      <memberdef kind="enum" id="group___u_s_i_c_1gae9d3fa2244d754db4311c49fb624115e" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_t</name>
        <enumvalue id="group___u_s_i_c_1ggae9d3fa2244d754db4311c49fb624115ea0fac1e2e39d4aa98d32a523e76240106" prot="public">
          <name>XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_0</name>
          <initializer>= 0x0UL</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Baudrate generator master clock passive level(idle mode signal level) 0 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___u_s_i_c_1ggae9d3fa2244d754db4311c49fb624115ea387e03692c7d6b05d34825b4ada8422f" prot="public">
          <name>XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_1</name>
          <initializer>= 0x1UL &lt;&lt; USIC_CH_BRG_MCLKCFG_Pos</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Baudrate generator master clock passive level((idle mode signal level)) 1 </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>USIC channel baudrate generator master clock passive level </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="460" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="459" bodyend="463"/>
      </memberdef>
      <memberdef kind="enum" id="group___u_s_i_c_1ga373c90ba61a8cc0013f395840bc9acfd" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_t</name>
        <enumvalue id="group___u_s_i_c_1gga373c90ba61a8cc0013f395840bc9acfda9491b02e6b95460911ccdbfd916dd28f" prot="public">
          <name>XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_SCLK</name>
          <initializer>= 0x0UL</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Baudrate generator shift clock output: SCL.(Internally generated shift clock) </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___u_s_i_c_1gga373c90ba61a8cc0013f395840bc9acfdabcd84dcb72da7b117900df0eb5c43660" prot="public">
          <name>XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_DX1</name>
          <initializer>= 0x1UL &lt;&lt; USIC_CH_BRG_SCLKOSEL_Pos</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Baudrate generator shift clock output: DX1. (External input shift clock) </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>USIC channel baudrate generator shift clock output </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="480" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="479" bodyend="483"/>
      </memberdef>
      <memberdef kind="enum" id="group___u_s_i_c_1gaabdebf7dc81a008ca887ab0336f9b3de" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_t</name>
        <enumvalue id="group___u_s_i_c_1ggaabdebf7dc81a008ca887ab0336f9b3dea73b5e738a2fbe968b46ea6aae3466956" prot="public">
          <name>XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_DISABLED</name>
          <initializer>= 0x0UL</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Shift clock passive level 0, delay disabled </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___u_s_i_c_1ggaabdebf7dc81a008ca887ab0336f9b3deaf4a7841504a26dfd70873f1962f5ba89" prot="public">
          <name>XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_DISABLED</name>
          <initializer>= 0x1UL &lt;&lt; USIC_CH_BRG_SCLKCFG_Pos</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Shift clock passive level 1, delay disabled </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___u_s_i_c_1ggaabdebf7dc81a008ca887ab0336f9b3deabb31d132a979405f51e7a6ab44071f46" prot="public">
          <name>XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_ENABLED</name>
          <initializer>= (int32_t)(0x2UL &lt;&lt; USIC_CH_BRG_SCLKCFG_Pos)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Shift clock passive level 0, delay enabled </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___u_s_i_c_1ggaabdebf7dc81a008ca887ab0336f9b3deac496300b9f7d9f340bed2bf4dfb1b8d6" prot="public">
          <name>XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_ENABLED</name>
          <initializer>= (int32_t)(0x3UL &lt;&lt; USIC_CH_BRG_SCLKCFG_Pos)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Shift clock passive level 1, delay enabled </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>USIC channel baudrate generator shift clock passive level </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="469" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="468" bodyend="474"/>
      </memberdef>
      <memberdef kind="enum" id="group___u_s_i_c_1gab277976402d3da779839621f911fe89a" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_USIC_CH_DATA_OUTPUT_MODE_t</name>
        <enumvalue id="group___u_s_i_c_1ggab277976402d3da779839621f911fe89aa2ee23e3a426e82d5e9142079a16f00bf" prot="public">
          <name>XMC_USIC_CH_DATA_OUTPUT_MODE_NORMAL</name>
          <initializer>= 0x0UL</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Data output normal mode </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___u_s_i_c_1ggab277976402d3da779839621f911fe89aa984f346629f34906201bbde3a6863ede" prot="public">
          <name>XMC_USIC_CH_DATA_OUTPUT_MODE_INVERTED</name>
          <initializer>= 0x1UL &lt;&lt; USIC_CH_SCTR_DOCFG_Pos</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Data output inverted mode </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>USIC channel data output mode </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="311" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="310" bodyend="314"/>
      </memberdef>
      <memberdef kind="enum" id="group___u_s_i_c_1ga9101f93a9a9c4c5a27f1418e3335b012" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_USIC_CH_EVENT_t</name>
        <enumvalue id="group___u_s_i_c_1gga9101f93a9a9c4c5a27f1418e3335b012ab27889da7076d1a9ab4e249b19b71cb1" prot="public">
          <name>XMC_USIC_CH_EVENT_RECEIVE_START</name>
          <initializer>= USIC_CH_CCR_RSIEN_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Receive start event </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___u_s_i_c_1gga9101f93a9a9c4c5a27f1418e3335b012a948a392bad3aca7de34a4acfd2b5eb7e" prot="public">
          <name>XMC_USIC_CH_EVENT_DATA_LOST</name>
          <initializer>= USIC_CH_CCR_DLIEN_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Data lost event </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___u_s_i_c_1gga9101f93a9a9c4c5a27f1418e3335b012a62c2e30dc6b1f4dc5029bb3769bc54f1" prot="public">
          <name>XMC_USIC_CH_EVENT_TRANSMIT_SHIFT</name>
          <initializer>= USIC_CH_CCR_TSIEN_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Transmit shift event </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___u_s_i_c_1gga9101f93a9a9c4c5a27f1418e3335b012a1c843b5c4cf9d9fe0c0911b1ad73b981" prot="public">
          <name>XMC_USIC_CH_EVENT_TRANSMIT_BUFFER</name>
          <initializer>= USIC_CH_CCR_TBIEN_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Transmit buffer event </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___u_s_i_c_1gga9101f93a9a9c4c5a27f1418e3335b012a990e43a9a742c483efae77fb16689406" prot="public">
          <name>XMC_USIC_CH_EVENT_STANDARD_RECEIVE</name>
          <initializer>= USIC_CH_CCR_RIEN_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Receive event </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___u_s_i_c_1gga9101f93a9a9c4c5a27f1418e3335b012aa3a0511be20785278677eb0699ef924e" prot="public">
          <name>XMC_USIC_CH_EVENT_ALTERNATIVE_RECEIVE</name>
          <initializer>= USIC_CH_CCR_AIEN_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Alternate receive event </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___u_s_i_c_1gga9101f93a9a9c4c5a27f1418e3335b012a0bd21a2c8da9ee272006fe1ec7abb2d9" prot="public">
          <name>XMC_USIC_CH_EVENT_BAUD_RATE_GENERATOR</name>
          <initializer>= USIC_CH_CCR_BRGIEN_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Baudrate generator event </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>USIC channel events </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="287" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="286" bodyend="295"/>
      </memberdef>
      <memberdef kind="enum" id="group___u_s_i_c_1gafdd0a07bee93d72936191b7e8555aefe" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_USIC_CH_FIFO_SIZE_t</name>
        <enumvalue id="group___u_s_i_c_1ggafdd0a07bee93d72936191b7e8555aefea1c189be4c15d2176b740037fa220e4a4" prot="public">
          <name>XMC_USIC_CH_FIFO_DISABLED</name>
          <initializer>= 0x0U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>FIFO Disabled </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___u_s_i_c_1ggafdd0a07bee93d72936191b7e8555aefeac2b3558621719f1d4e64d55a0febb166" prot="public">
          <name>XMC_USIC_CH_FIFO_SIZE_2WORDS</name>
          <initializer>= 0x1U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>FIFO size: 2 words </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___u_s_i_c_1ggafdd0a07bee93d72936191b7e8555aefeaa26264021f8318df9187f0edb55b093e" prot="public">
          <name>XMC_USIC_CH_FIFO_SIZE_4WORDS</name>
          <initializer>= 0x2U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>FIFO size: 4 words </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___u_s_i_c_1ggafdd0a07bee93d72936191b7e8555aefea7eb82cbde316bc34b32a4935719e3485" prot="public">
          <name>XMC_USIC_CH_FIFO_SIZE_8WORDS</name>
          <initializer>= 0x3U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>FIFO size: 8 words </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___u_s_i_c_1ggafdd0a07bee93d72936191b7e8555aefeade956d53b256464afd024854c48f3cdc" prot="public">
          <name>XMC_USIC_CH_FIFO_SIZE_16WORDS</name>
          <initializer>= 0x4U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>FIFO size: 16 words </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___u_s_i_c_1ggafdd0a07bee93d72936191b7e8555aefeaa368b5bf667c1b4ba6bbf1071ff6ebd0" prot="public">
          <name>XMC_USIC_CH_FIFO_SIZE_32WORDS</name>
          <initializer>= 0x5U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>FIFO size: 32 words </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___u_s_i_c_1ggafdd0a07bee93d72936191b7e8555aefead702883ad36b39b6014e45b31f1655e8" prot="public">
          <name>XMC_USIC_CH_FIFO_SIZE_64WORDS</name>
          <initializer>= 0x6U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>FIFO size: 64 words </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>USIC channel receive FIFO size </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="358" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="357" bodyend="366"/>
      </memberdef>
      <memberdef kind="enum" id="group___u_s_i_c_1ga4c50ae5a7f12a5496d82d2bc665e1db2" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_USIC_CH_INPUT_COMBINATION_MODE_t</name>
        <enumvalue id="group___u_s_i_c_1gga4c50ae5a7f12a5496d82d2bc665e1db2a84a7d20ea5095174ad36f6b0569e5746" prot="public">
          <name>XMC_USIC_CH_INPUT_COMBINATION_MODE_TRIGGER_DISABLED</name>
          <initializer>= 0x0UL</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The trigger activation is disabled. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___u_s_i_c_1gga4c50ae5a7f12a5496d82d2bc665e1db2a96738f5f29e01869760b3b303ee5ba5c" prot="public">
          <name>XMC_USIC_CH_INPUT_COMBINATION_MODE_RISING_EDGE</name>
          <initializer>= 0x1UL</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>A rising edge activates DXnT </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___u_s_i_c_1gga4c50ae5a7f12a5496d82d2bc665e1db2a57148dae73908e188f45a14eaabf266d" prot="public">
          <name>XMC_USIC_CH_INPUT_COMBINATION_MODE_FALLING_EDGE</name>
          <initializer>= 0x2UL</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>A falling edge activates DXnT </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___u_s_i_c_1gga4c50ae5a7f12a5496d82d2bc665e1db2aa48b1f45d1c95a5db012305e02c3e2d2" prot="public">
          <name>XMC_USIC_CH_INPUT_COMBINATION_MODE_BOTH_EDGES</name>
          <initializer>= 0x3UL</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Both edges activate DXnT </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>USIC channel input combination mode </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="250" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="249" bodyend="255"/>
      </memberdef>
      <memberdef kind="enum" id="group___u_s_i_c_1ga4eabf4e044ae33972f726f904e788f8a" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_USIC_CH_INPUT_SAMPLING_FREQ_t</name>
        <enumvalue id="group___u_s_i_c_1gga4eabf4e044ae33972f726f904e788f8aa140d9db737218ef374f79f19d16f67e5" prot="public">
          <name>XMC_USIC_CH_INPUT_SAMPLING_FREQ_FPERIPH</name>
          <initializer>= 0x0UL</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Use fperiph frequency for input source sampling </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___u_s_i_c_1gga4eabf4e044ae33972f726f904e788f8aa8ad2708c596461047862f7a3c71c3892" prot="public">
          <name>XMC_USIC_CH_INPUT_SAMPLING_FREQ_FRACTIONAL_DIVIDER</name>
          <initializer>= 0x1UL &lt;&lt;  USIC_CH_DX0CR_SFSEL_Pos</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Common mask for SFSEL bitfield position in DXnCR register Use fFD(fractional divider) frequency for input source sampling </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>USIC channel input source sampling frequency </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="241" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="240" bodyend="244"/>
      </memberdef>
      <memberdef kind="enum" id="group___u_s_i_c_1ga7b7c285b4dfe6c9132f2f478a59b2ac5" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_USIC_CH_INPUT_t</name>
        <enumvalue id="group___u_s_i_c_1gga7b7c285b4dfe6c9132f2f478a59b2ac5a218c2b06596afed7bf9bc41fb6db47ee" prot="public">
          <name>XMC_USIC_CH_INPUT_DX0</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>DX0 input </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___u_s_i_c_1gga7b7c285b4dfe6c9132f2f478a59b2ac5a6925b9516396378ecbe92b01d8d1bcda" prot="public">
          <name>XMC_USIC_CH_INPUT_DX1</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>DX1 input </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___u_s_i_c_1gga7b7c285b4dfe6c9132f2f478a59b2ac5a433047983054df98c04e1dbd974c59ed" prot="public">
          <name>XMC_USIC_CH_INPUT_DX2</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>DX2 input </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___u_s_i_c_1gga7b7c285b4dfe6c9132f2f478a59b2ac5ae6ce0ad774f54bea6c653ce5ffe13132" prot="public">
          <name>XMC_USIC_CH_INPUT_DX3</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>DX3 input </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___u_s_i_c_1gga7b7c285b4dfe6c9132f2f478a59b2ac5a7247770ce9d6895fd69800b89b918a27" prot="public">
          <name>XMC_USIC_CH_INPUT_DX4</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>DX4 input </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___u_s_i_c_1gga7b7c285b4dfe6c9132f2f478a59b2ac5ae3ff15e93aa354e43133246bc552effd" prot="public">
          <name>XMC_USIC_CH_INPUT_DX5</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>DX5 input </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>USIC channel inputs </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="228" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="227" bodyend="235"/>
      </memberdef>
      <memberdef kind="enum" id="group___u_s_i_c_1ga074b5b1abff43f98316c7a5b69523e62" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_USIC_CH_INTERRUPT_NODE_POINTER_t</name>
        <enumvalue id="group___u_s_i_c_1gga074b5b1abff43f98316c7a5b69523e62ac3d37f726e6214704f420586ff8effc3" prot="public">
          <name>XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSMIT_SHIFT</name>
          <initializer>= USIC_CH_INPR_TSINP_Pos</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Node pointer for transmit shift interrupt </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___u_s_i_c_1gga074b5b1abff43f98316c7a5b69523e62a2298fc6a0fcee48a76f0aea1eb95e3a6" prot="public">
          <name>XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSMIT_BUFFER</name>
          <initializer>= USIC_CH_INPR_TBINP_Pos</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Node pointer for transmit buffer interrupt </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___u_s_i_c_1gga074b5b1abff43f98316c7a5b69523e62acd626621eaea679896369d2f9c1b44c8" prot="public">
          <name>XMC_USIC_CH_INTERRUPT_NODE_POINTER_RECEIVE</name>
          <initializer>= USIC_CH_INPR_RINP_Pos</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Node pointer for receive interrupt </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___u_s_i_c_1gga074b5b1abff43f98316c7a5b69523e62a9e0ff35d1ba446c2a1c9bff1b39e5740" prot="public">
          <name>XMC_USIC_CH_INTERRUPT_NODE_POINTER_ALTERNATE_RECEIVE</name>
          <initializer>= USIC_CH_INPR_AINP_Pos</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Node pointer for alternate receive interrupt </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___u_s_i_c_1gga074b5b1abff43f98316c7a5b69523e62a3b99d0d6e93882ea791e8952cc993a7b" prot="public">
          <name>XMC_USIC_CH_INTERRUPT_NODE_POINTER_PROTOCOL</name>
          <initializer>= USIC_CH_INPR_PINP_Pos</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Node pointer for protocol related interrupts </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>USIC channel interrupt node pointers </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="275" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="274" bodyend="281"/>
      </memberdef>
      <memberdef kind="enum" id="group___u_s_i_c_1ga27d9dafa74ddfc6aa6591e2f712eccfe" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_USIC_CH_KERNEL_MODE_t</name>
        <enumvalue id="group___u_s_i_c_1gga27d9dafa74ddfc6aa6591e2f712eccfea893e918851d8065d780e499435292378" prot="public">
          <name>XMC_USIC_CH_KERNEL_MODE_RUN_0</name>
          <initializer>= 0x0UL</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Run mode 0 (transmission and reception possible) </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___u_s_i_c_1gga27d9dafa74ddfc6aa6591e2f712eccfea779d6f7025d6d6bcd0dfdd709af0305e" prot="public">
          <name>XMC_USIC_CH_KERNEL_MODE_RUN_1</name>
          <initializer>= 0x1UL &lt;&lt; USIC_CH_KSCFG_NOMCFG_Pos</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Run mode 1 (transmission and reception possible) </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___u_s_i_c_1gga27d9dafa74ddfc6aa6591e2f712eccfea24c6cfeac1bb9c05c16aa057e591b3c0" prot="public">
          <name>XMC_USIC_CH_KERNEL_MODE_STOP_0</name>
          <initializer>= 0x2UL &lt;&lt; USIC_CH_KSCFG_NOMCFG_Pos</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Stop mode 0 (no transmission, but reception possible) </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___u_s_i_c_1gga27d9dafa74ddfc6aa6591e2f712eccfeab9105c0d985506f426ef2ff0a36983b6" prot="public">
          <name>XMC_USIC_CH_KERNEL_MODE_STOP_1</name>
          <initializer>= 0x3UL &lt;&lt; USIC_CH_KSCFG_NOMCFG_Pos</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Stop mode 1 (both transmission and reception not possible) </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>USIC channel kernel mode </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="205" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="204" bodyend="210"/>
      </memberdef>
      <memberdef kind="enum" id="group___u_s_i_c_1gac052842418ff3dda00900219ebda5de7" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_USIC_CH_OPERATING_MODE_t</name>
        <enumvalue id="group___u_s_i_c_1ggac052842418ff3dda00900219ebda5de7a0f42d929665110fb0a00c7adbaf5a763" prot="public">
          <name>XMC_USIC_CH_OPERATING_MODE_IDLE</name>
          <initializer>= 0x0UL</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>USIC channel idle </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___u_s_i_c_1ggac052842418ff3dda00900219ebda5de7a899e292213839edfb7d88e356cb9d18f" prot="public">
          <name>XMC_USIC_CH_OPERATING_MODE_SPI</name>
          <initializer>= 0x1UL &lt;&lt; USIC_CH_CCR_MODE_Pos</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SPI mode </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___u_s_i_c_1ggac052842418ff3dda00900219ebda5de7a0130416b257e28bf39a388658dd61469" prot="public">
          <name>XMC_USIC_CH_OPERATING_MODE_UART</name>
          <initializer>= 0x2UL &lt;&lt; USIC_CH_CCR_MODE_Pos</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>UART mode </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___u_s_i_c_1ggac052842418ff3dda00900219ebda5de7a567f54d1a3c96472fca5d6039d5e3cbc" prot="public">
          <name>XMC_USIC_CH_OPERATING_MODE_I2S</name>
          <initializer>= 0x3UL &lt;&lt; USIC_CH_CCR_MODE_Pos</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>I2S mode </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___u_s_i_c_1ggac052842418ff3dda00900219ebda5de7a4dad9ad4de2fe7406c1685606a651503" prot="public">
          <name>XMC_USIC_CH_OPERATING_MODE_I2C</name>
          <initializer>= 0x4UL &lt;&lt; USIC_CH_CCR_MODE_Pos</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>I2C mode </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>USIC channel operating mode </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="216" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="215" bodyend="222"/>
      </memberdef>
      <memberdef kind="enum" id="group___u_s_i_c_1ga0a55c03c810078ffc9fa8b512dc57e37" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_USIC_CH_PARITY_MODE_t</name>
        <enumvalue id="group___u_s_i_c_1gga0a55c03c810078ffc9fa8b512dc57e37a41914c3176bcc9f17327bd7195dd39b6" prot="public">
          <name>XMC_USIC_CH_PARITY_MODE_NONE</name>
          <initializer>= 0x0UL</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Disable parity mode </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___u_s_i_c_1gga0a55c03c810078ffc9fa8b512dc57e37a1680b6d1bae664e1479de091cf8c61ea" prot="public">
          <name>XMC_USIC_CH_PARITY_MODE_EVEN</name>
          <initializer>= 0x2UL &lt;&lt; USIC_CH_CCR_PM_Pos</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Enable even parity mode </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___u_s_i_c_1gga0a55c03c810078ffc9fa8b512dc57e37a59e6188e4d02d8d1ac50e8ade251093e" prot="public">
          <name>XMC_USIC_CH_PARITY_MODE_ODD</name>
          <initializer>= 0x3UL &lt;&lt; USIC_CH_CCR_PM_Pos</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Enable odd parity mode </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>USIC channel parity mode </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="301" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="300" bodyend="305"/>
      </memberdef>
      <memberdef kind="enum" id="group___u_s_i_c_1ga352121d35153623dc793f3b59c075eb0" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_USIC_CH_PASSIVE_DATA_LEVEL_t</name>
        <enumvalue id="group___u_s_i_c_1gga352121d35153623dc793f3b59c075eb0a66effdf4e324ee2d69f90126db5fb21d" prot="public">
          <name>XMC_USIC_CH_PASSIVE_DATA_LEVEL0</name>
          <initializer>= 0x0UL</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Passive level(idle mode signal level) 0 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___u_s_i_c_1gga352121d35153623dc793f3b59c075eb0aaf5284d9c00837ad1a2caf6dd72315b5" prot="public">
          <name>XMC_USIC_CH_PASSIVE_DATA_LEVEL1</name>
          <initializer>= 0x1UL &lt;&lt; USIC_CH_SCTR_PDL_Pos</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Passive level(idle mode signal level) 1 </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>USIC channel output signal passive data level </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="349" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="348" bodyend="352"/>
      </memberdef>
      <memberdef kind="enum" id="group___u_s_i_c_1ga9444afb3de969ce1ad5e7d413a9e0148" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_USIC_CH_RBUF_STATUS_t</name>
        <enumvalue id="group___u_s_i_c_1gga9444afb3de969ce1ad5e7d413a9e0148a65f600df2669714e1597f530144a011b" prot="public">
          <name>XMC_USIC_CH_RBUF_STATUS_DATA_VALID0</name>
          <initializer>= USIC_CH_RBUFSR_RDV0_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>RBUF0 data has not yet been read out </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___u_s_i_c_1gga9444afb3de969ce1ad5e7d413a9e0148aa5bc9e75620be0519da1917345a4509e" prot="public">
          <name>XMC_USIC_CH_RBUF_STATUS_DATA_VALID1</name>
          <initializer>= USIC_CH_RBUFSR_RDV1_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>RBUF1 data has not yet been read out </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>USIC channel receive buffer status </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="340" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="339" bodyend="343"/>
      </memberdef>
      <memberdef kind="enum" id="group___u_s_i_c_1ga4b8a7556ad13b0d7540a620c3d067689" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_USIC_CH_RXFIFO_EVENT_CONF_t</name>
        <enumvalue id="group___u_s_i_c_1gga4b8a7556ad13b0d7540a620c3d067689ac9ff6cf12767f7879611f5098732bd99" prot="public">
          <name>XMC_USIC_CH_RXFIFO_EVENT_CONF_STANDARD</name>
          <initializer>= USIC_CH_RBCTR_SRBIEN_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Enable FIFO standard receive interrupt </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___u_s_i_c_1gga4b8a7556ad13b0d7540a620c3d067689ae36c9608a19fddadd13a0dbeb6474709" prot="public">
          <name>XMC_USIC_CH_RXFIFO_EVENT_CONF_ERROR</name>
          <initializer>= (int32_t)USIC_CH_RBCTR_RBERIEN_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Enable receive FIFO error interrupt </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___u_s_i_c_1gga4b8a7556ad13b0d7540a620c3d067689a48a5635b9e02bd166fe93bc2fa6304e6" prot="public">
          <name>XMC_USIC_CH_RXFIFO_EVENT_CONF_ALTERNATE</name>
          <initializer>= USIC_CH_RBCTR_ARBIEN_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Enable FIFO alternative receive interrupt </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>USIC channel receive FIFO event configuration </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="408" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="407" bodyend="412"/>
      </memberdef>
      <memberdef kind="enum" id="group___u_s_i_c_1ga9f69efc0352072596048eca6e3da29c6" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_USIC_CH_RXFIFO_EVENT_t</name>
        <enumvalue id="group___u_s_i_c_1gga9f69efc0352072596048eca6e3da29c6a66c92990f46257208c42d175ccc3533c" prot="public">
          <name>XMC_USIC_CH_RXFIFO_EVENT_STANDARD</name>
          <initializer>= USIC_CH_TRBSR_SRBI_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Receive FIFO status: Standard event </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___u_s_i_c_1gga9f69efc0352072596048eca6e3da29c6a3bf2b90bd5dfa7a2fe3827225e9cda40" prot="public">
          <name>XMC_USIC_CH_RXFIFO_EVENT_ERROR</name>
          <initializer>= USIC_CH_TRBSR_RBERI_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Receive FIFO status: Error event </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___u_s_i_c_1gga9f69efc0352072596048eca6e3da29c6a01cc9c90a0e05d5fa537b76884e20d5c" prot="public">
          <name>XMC_USIC_CH_RXFIFO_EVENT_ALTERNATE</name>
          <initializer>= USIC_CH_TRBSR_ARBI_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Receive FIFO status: Alternative event </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>USIC channel receive FIFO status </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="418" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="417" bodyend="422"/>
      </memberdef>
      <memberdef kind="enum" id="group___u_s_i_c_1ga4b1bb4e4041f310e46c635b007ee2c73" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_t</name>
        <enumvalue id="group___u_s_i_c_1gga4b1bb4e4041f310e46c635b007ee2c73a572414a4e5097bd3b8f6ca8b607e7c1e" prot="public">
          <name>XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_STANDARD</name>
          <initializer>= USIC_CH_RBCTR_SRBINP_Pos</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Node pointer for FIFO standard receive interrupt </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___u_s_i_c_1gga4b1bb4e4041f310e46c635b007ee2c73a393b1acb8b60d2baebbc57ef8b64a718" prot="public">
          <name>XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_ALTERNATE</name>
          <initializer>= USIC_CH_RBCTR_ARBINP_Pos</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Node pointer for FIFO alternative receive interrupt </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>USIC channel receive FIFO interrupt node pointers </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="399" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="398" bodyend="402"/>
      </memberdef>
      <memberdef kind="enum" id="group___u_s_i_c_1ga991fb058d9f1a8bf4fe6faf8aca78ab0" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_USIC_CH_SHIFT_DIRECTION_t</name>
        <enumvalue id="group___u_s_i_c_1gga991fb058d9f1a8bf4fe6faf8aca78ab0ac8aa1525a4deb0dfbb20db75ac4a94fc" prot="public">
          <name>XMC_USIC_CH_SHIFT_DIRECTION_LSB_FIRST</name>
          <initializer>= 0x0UL</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Shift LSB first. The first data bit of a data word is located at bit position 0. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___u_s_i_c_1gga991fb058d9f1a8bf4fe6faf8aca78ab0ab3e66074821991e6d68af458d55dacfe" prot="public">
          <name>XMC_USIC_CH_SHIFT_DIRECTION_MSB_FIRST</name>
          <initializer>= 0x1UL &lt;&lt; USIC_CH_SCTR_SDIR_Pos</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Shift MSB first. The first data bit of a data word is located at the bit position given by the configured word length. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>USIC channel shift direction. Defines the shift direction of the data words for transmission and reception </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="490" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="489" bodyend="493"/>
      </memberdef>
      <memberdef kind="enum" id="group___u_s_i_c_1gae2db2ec4c7c43ae1454373789443b793" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_USIC_CH_START_TRANSMISION_MODE_t</name>
        <enumvalue id="group___u_s_i_c_1ggae2db2ec4c7c43ae1454373789443b793a92234bf742ccdef5a487ab9fc7b7b47e" prot="public">
          <name>XMC_USIC_CH_START_TRANSMISION_DISABLED</name>
          <initializer>= 0x0U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Passive data level is sent out on transmission. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___u_s_i_c_1ggae2db2ec4c7c43ae1454373789443b793a7464a12e43e762ae3809838ed60b0848" prot="public">
          <name>XMC_USIC_CH_START_TRANSMISION_ON_TDV</name>
          <initializer>= 0x1UL &lt;&lt; USIC_CH_TCSR_TDEN_Pos</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Transmission of the data word in TBUF can be started if TDV = 1 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___u_s_i_c_1ggae2db2ec4c7c43ae1454373789443b793ad79ea1b2ea37a89eac8eec9905499589" prot="public">
          <name>XMC_USIC_CH_START_TRANSMISION_ON_TDV_DX2S_0</name>
          <initializer>= 0x2UL &lt;&lt; USIC_CH_TCSR_TDEN_Pos</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Transmission of the data word in TBUF can be started if TDV = 1 while DX2S_0 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___u_s_i_c_1ggae2db2ec4c7c43ae1454373789443b793a21bcda749a5e1eda8108ce39f8b97b7a" prot="public">
          <name>XMC_USIC_CH_START_TRANSMISION_ON_TDV_DX2S_1</name>
          <initializer>= 0x3UL &lt;&lt; USIC_CH_TCSR_TDEN_Pos</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Transmission of the data word in TBUF can be started if TDV = 1 while DX2S_1 </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>USIC channel data transmission start modes. Data shifted out of the transmit pin depends on the value configured for the TDEN bitfield of the TCSR register. Following enum values are used for configuring the TCSR-&gt;TDEN bitfield. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="264" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="263" bodyend="269"/>
      </memberdef>
      <memberdef kind="enum" id="group___u_s_i_c_1gaf0ce1333656386f14f018b400beb9e39" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_USIC_CH_STATUS_t</name>
        <enumvalue id="group___u_s_i_c_1ggaf0ce1333656386f14f018b400beb9e39a7f5eeda6309c7b3a3e8f08380ed47e3c" prot="public">
          <name>XMC_USIC_CH_STATUS_OK</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>USIC driver status : OK </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___u_s_i_c_1ggaf0ce1333656386f14f018b400beb9e39af9cf48d10eb977902d20eeaed491bcf0" prot="public">
          <name>XMC_USIC_CH_STATUS_ERROR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>USIC driver status : ERROR </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___u_s_i_c_1ggaf0ce1333656386f14f018b400beb9e39a512a392025bbc6a006aa9ad088919809" prot="public">
          <name>XMC_USIC_CH_STATUS_BUSY</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>USIC driver status : BUSY </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>USIC channel driver status </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="195" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="194" bodyend="199"/>
      </memberdef>
      <memberdef kind="enum" id="group___u_s_i_c_1ga46769f2474ad4be950bcfc47582f5f87" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_USIC_CH_TBUF_STATUS_SET_t</name>
        <enumvalue id="group___u_s_i_c_1gga46769f2474ad4be950bcfc47582f5f87a8d5a660f1632c9201fc8360b5580d2cf" prot="public">
          <name>XMC_USIC_CH_TBUF_STATUS_SET_BUSY</name>
          <initializer>= 0x1UL</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Set Transfer buffer status to busy </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___u_s_i_c_1gga46769f2474ad4be950bcfc47582f5f87a2b4f44bf752d0b8913f2fa99cc5c28e6" prot="public">
          <name>XMC_USIC_CH_TBUF_STATUS_SET_IDLE</name>
          <initializer>= 0x2UL</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Set Transfer buffer status to idle </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>USIC channel data transmit buffer status modification </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="331" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="330" bodyend="334"/>
      </memberdef>
      <memberdef kind="enum" id="group___u_s_i_c_1ga1139d992c4767497e1ead00f098d7024" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_USIC_CH_TBUF_STATUS_t</name>
        <enumvalue id="group___u_s_i_c_1gga1139d992c4767497e1ead00f098d7024ad797491e36963500982f41247c0edb75" prot="public">
          <name>XMC_USIC_CH_TBUF_STATUS_IDLE</name>
          <initializer>= 0x0UL</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Transfer buffer is currently idle </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___u_s_i_c_1gga1139d992c4767497e1ead00f098d7024ab228b9efcdbf98d83e2e6521883460b5" prot="public">
          <name>XMC_USIC_CH_TBUF_STATUS_BUSY</name>
          <initializer>= USIC_CH_TCSR_TDV_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Transfer buffer is currently busy </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>USIC channel data transmit buffer status </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="320" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="319" bodyend="323"/>
      </memberdef>
      <memberdef kind="enum" id="group___u_s_i_c_1gac7690c669fbca7c9710ba7294df39a6d" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_USIC_CH_TXFIFO_EVENT_CONF_t</name>
        <enumvalue id="group___u_s_i_c_1ggac7690c669fbca7c9710ba7294df39a6da7c276cdb2192352c70a55dbff71fdb83" prot="public">
          <name>XMC_USIC_CH_TXFIFO_EVENT_CONF_STANDARD</name>
          <initializer>= USIC_CH_TBCTR_STBIEN_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Enable FIFO standard transmit interrupt </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___u_s_i_c_1ggac7690c669fbca7c9710ba7294df39a6da3b3243be368a3fe2293e1a8669755c37" prot="public">
          <name>XMC_USIC_CH_TXFIFO_EVENT_CONF_ERROR</name>
          <initializer>= (int32_t)USIC_CH_TBCTR_TBERIEN_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Enable transmit FIFO error interrupt </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>USIC channel transmit FIFO event configuration </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="381" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="380" bodyend="384"/>
      </memberdef>
      <memberdef kind="enum" id="group___u_s_i_c_1ga6e964201594d82a691896a52cbfd5620" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_USIC_CH_TXFIFO_EVENT_t</name>
        <enumvalue id="group___u_s_i_c_1gga6e964201594d82a691896a52cbfd5620a1e44a086ab5e16b5832160e1ce085eac" prot="public">
          <name>XMC_USIC_CH_TXFIFO_EVENT_STANDARD</name>
          <initializer>= USIC_CH_TRBSR_STBI_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Transmit FIFO status: Standard event </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___u_s_i_c_1gga6e964201594d82a691896a52cbfd5620a309215a549219964d0d04ebcc22f6e33" prot="public">
          <name>XMC_USIC_CH_TXFIFO_EVENT_ERROR</name>
          <initializer>= USIC_CH_TRBSR_TBERI_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Transmit FIFO status: Error event </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>USIC channel transmit FIFO status </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="390" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="389" bodyend="393"/>
      </memberdef>
      <memberdef kind="enum" id="group___u_s_i_c_1gaed66b290b2c45854fcd04580fb6349a1" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_t</name>
        <enumvalue id="group___u_s_i_c_1ggaed66b290b2c45854fcd04580fb6349a1a5f3f135726f0f39eb99ab43cfdf699cf" prot="public">
          <name>XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_STANDARD</name>
          <initializer>= USIC_CH_TBCTR_STBINP_Pos</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Node pointer for FIFO standard transmit interrupt </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___u_s_i_c_1ggaed66b290b2c45854fcd04580fb6349a1aef96e8370ec2178615f3a24a04da19fe" prot="public">
          <name>XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_ALTERNATE</name>
          <initializer>= USIC_CH_TBCTR_ATBINP_Pos</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Node pointer for transmit FIFO error interrupt </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>USIC channel transmit FIFO interrupt node pointers </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="372" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="371" bodyend="375"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group___u_s_i_c_1ga953ad8cb6043e854f32ab9a53042aedb" prot="public" static="no">
        <type>USIC_GLOBAL_TypeDef</type>
        <definition>typedef USIC_GLOBAL_TypeDef XMC_USIC_t</definition>
        <argsstring></argsstring>
        <name>XMC_USIC_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>USIC module structure </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="511" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="511" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group___u_s_i_c_1ga00c6419dfc0f8ed4c4eab13ded598144" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_USIC_CH_ConfigExternalInputSignalToBRG</definition>
        <argsstring>(XMC_USIC_CH_t *const channel, const uint16_t pdiv, const uint32_t oversampling, const XMC_USIC_CH_INPUT_COMBINATION_MODE_t combination_mode)</argsstring>
        <name>XMC_USIC_CH_ConfigExternalInputSignalToBRG</name>
        <param>
          <type><ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> *const</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>pdiv</declname>
        </param>
        <param>
          <type>const uint32_t</type>
          <declname>oversampling</declname>
        </param>
        <param>
          <type>const <ref refid="group___u_s_i_c_1ga4c50ae5a7f12a5496d82d2bc665e1db2" kindref="member">XMC_USIC_CH_INPUT_COMBINATION_MODE_t</ref></type>
          <declname>combination_mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to USIC channel handler of type <ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1ga28dd6da4b742e7336b12ae6fa8de5e9f" kindref="member">XMC_USIC0_CH0</ref>, <ref refid="group___u_s_i_c_1gab7c9a3765e7d637114fc67951cf20c5b" kindref="member">XMC_USIC0_CH1</ref> to <ref refid="group___u_s_i_c_1ga6f71692f25917f0dcd77bb77e5518313" kindref="member">XMC_USIC2_CH1</ref> based on device support. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pdiv</parametername>
</parameternamelist>
<parameterdescription>
<para>Desired divider for the external frequency input. <bold>Range:</bold> minimum value = 1, maximum value = 1024 <linebreak/>
</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>oversampling</parametername>
</parameternamelist>
<parameterdescription>
<para>Required oversampling. The value indicates the number of time quanta for one symbol of data. <linebreak/>
 This can be related to the number of samples for each logic state of the data signal. <linebreak/>
 <bold>Range:</bold> 1 to 32. Value should be chosen based on the protocol used. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>combination_mode</parametername>
</parameternamelist>
<parameterdescription>
<para>Selects which edge of the synchronized(and optionally filtered) signal DXnS actives the trigger output DXnT of the input stage.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Enables the external frequency input for the Baudrate Generator and configures the divider, oversampling and the combination mode of the USIC channel. <linebreak/>
<linebreak/>
 </para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___u_s_i_c_1ga2876a325930da4b77ef46ec4e0acda0d" kindref="member">XMC_USIC_CH_SetBRGInputClockSource()</ref>, <ref refid="group___u_s_i_c_1gaeef58e03c1253fce5b8a456f5d8c6da6" kindref="member">XMC_USIC_CH_SetInputTriggerCombinationMode()</ref> <linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="813" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___u_s_i_c_1gaba9a2e95af4e455dddd73f324577c876" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_USIC_CH_ConfigureShiftClockOutput</definition>
        <argsstring>(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_t passive_level, const XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_t clock_output)</argsstring>
        <name>XMC_USIC_CH_ConfigureShiftClockOutput</name>
        <param>
          <type><ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> *const</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>const <ref refid="group___u_s_i_c_1gaabdebf7dc81a008ca887ab0336f9b3de" kindref="member">XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_t</ref></type>
          <declname>passive_level</declname>
        </param>
        <param>
          <type>const <ref refid="group___u_s_i_c_1ga373c90ba61a8cc0013f395840bc9acfd" kindref="member">XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_t</ref></type>
          <declname>clock_output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to USIC channel handler of type <ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1ga28dd6da4b742e7336b12ae6fa8de5e9f" kindref="member">XMC_USIC0_CH0</ref>, <ref refid="group___u_s_i_c_1gab7c9a3765e7d637114fc67951cf20c5b" kindref="member">XMC_USIC0_CH1</ref> to <ref refid="group___u_s_i_c_1ga6f71692f25917f0dcd77bb77e5518313" kindref="member">XMC_USIC2_CH1</ref> based on device support. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>passive_level</parametername>
</parameternamelist>
<parameterdescription>
<para>Passive level for the clock output. <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1ggaabdebf7dc81a008ca887ab0336f9b3dea73b5e738a2fbe968b46ea6aae3466956" kindref="member">XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_DISABLED</ref>, <ref refid="group___u_s_i_c_1ggaabdebf7dc81a008ca887ab0336f9b3deabb31d132a979405f51e7a6ab44071f46" kindref="member">XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_ENABLED</ref>, <ref refid="group___u_s_i_c_1ggaabdebf7dc81a008ca887ab0336f9b3deaf4a7841504a26dfd70873f1962f5ba89" kindref="member">XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_DISABLED</ref>, <ref refid="group___u_s_i_c_1ggaabdebf7dc81a008ca887ab0336f9b3deac496300b9f7d9f340bed2bf4dfb1b8d6" kindref="member">XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_ENABLED</ref>, </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>clock_output</parametername>
</parameternamelist>
<parameterdescription>
<para>Shift clock source selection. <linebreak/>
 <bold>Range:</bold> Use <ref refid="group___u_s_i_c_1gga373c90ba61a8cc0013f395840bc9acfda9491b02e6b95460911ccdbfd916dd28f" kindref="member">XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_SCLK</ref>, <ref refid="group___u_s_i_c_1gga373c90ba61a8cc0013f395840bc9acfdabcd84dcb72da7b117900df0eb5c43660" kindref="member">XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_DX1</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Sets the idle mode shift clock output level and selects the shift clock source. <linebreak/>
<linebreak/>
Shift clock idle mode output level can be set to logic high or low. Shift clock output can be configured to have a delay of half shift clock period. Both the configurations are available as enumeration values defined with type <ref refid="group___u_s_i_c_1gaabdebf7dc81a008ca887ab0336f9b3de" kindref="member">XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_t</ref>. This value should be configured based on the slave device requirement. Shift clock source can be selected between internal clock(master) and external input(slave). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="2309" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="2309" bodyend="2317"/>
      </memberdef>
      <memberdef kind="function" id="group___u_s_i_c_1ga61291bfe08ea6012739d90d7524fa1bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_USIC_CH_ConnectInputDataShiftToDataInput</definition>
        <argsstring>(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_INPUT_t input)</argsstring>
        <name>XMC_USIC_CH_ConnectInputDataShiftToDataInput</name>
        <param>
          <type><ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> *const</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>const <ref refid="group___u_s_i_c_1ga7b7c285b4dfe6c9132f2f478a59b2ac5" kindref="member">XMC_USIC_CH_INPUT_t</ref></type>
          <declname>input</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to USIC channel handler of type <ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1ga28dd6da4b742e7336b12ae6fa8de5e9f" kindref="member">XMC_USIC0_CH0</ref>, <ref refid="group___u_s_i_c_1gab7c9a3765e7d637114fc67951cf20c5b" kindref="member">XMC_USIC0_CH1</ref> to <ref refid="group___u_s_i_c_1ga6f71692f25917f0dcd77bb77e5518313" kindref="member">XMC_USIC2_CH1</ref> based on device support. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>input</parametername>
</parameternamelist>
<parameterdescription>
<para>USIC channel input stage of type <ref refid="group___u_s_i_c_1ga7b7c285b4dfe6c9132f2f478a59b2ac5" kindref="member">XMC_USIC_CH_INPUT_t</ref>. <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1gga7b7c285b4dfe6c9132f2f478a59b2ac5a218c2b06596afed7bf9bc41fb6db47ee" kindref="member">XMC_USIC_CH_INPUT_DX0</ref> to <ref refid="group___u_s_i_c_1gga7b7c285b4dfe6c9132f2f478a59b2ac5ae3ff15e93aa354e43133246bc552effd" kindref="member">XMC_USIC_CH_INPUT_DX5</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>The input of the data shift unit is connected to the selected data input line. <linebreak/>
<linebreak/>
 This setting is used if the signals are directly derived from an input pin without treatment by the protocol preprocessor. </para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___u_s_i_c_1ga1c5aabc85e73a242eea72dd6838ee3e5" kindref="member">XMC_USIC_CH_ConnectInputDataShiftToPPP()</ref><linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
<para>&lt; Common mask for INSW bitfield mask in DXnCR register </para>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="879" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="879" bodyend="882"/>
      </memberdef>
      <memberdef kind="function" id="group___u_s_i_c_1ga1c5aabc85e73a242eea72dd6838ee3e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_USIC_CH_ConnectInputDataShiftToPPP</definition>
        <argsstring>(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_INPUT_t input)</argsstring>
        <name>XMC_USIC_CH_ConnectInputDataShiftToPPP</name>
        <param>
          <type><ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> *const</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>const <ref refid="group___u_s_i_c_1ga7b7c285b4dfe6c9132f2f478a59b2ac5" kindref="member">XMC_USIC_CH_INPUT_t</ref></type>
          <declname>input</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to USIC channel handler of type <ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1ga28dd6da4b742e7336b12ae6fa8de5e9f" kindref="member">XMC_USIC0_CH0</ref>, <ref refid="group___u_s_i_c_1gab7c9a3765e7d637114fc67951cf20c5b" kindref="member">XMC_USIC0_CH1</ref> to <ref refid="group___u_s_i_c_1ga6f71692f25917f0dcd77bb77e5518313" kindref="member">XMC_USIC2_CH1</ref> based on device support. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>input</parametername>
</parameternamelist>
<parameterdescription>
<para>USIC channel input stage of type <ref refid="group___u_s_i_c_1ga7b7c285b4dfe6c9132f2f478a59b2ac5" kindref="member">XMC_USIC_CH_INPUT_t</ref>. <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1gga7b7c285b4dfe6c9132f2f478a59b2ac5a218c2b06596afed7bf9bc41fb6db47ee" kindref="member">XMC_USIC_CH_INPUT_DX0</ref> to <ref refid="group___u_s_i_c_1gga7b7c285b4dfe6c9132f2f478a59b2ac5ae3ff15e93aa354e43133246bc552effd" kindref="member">XMC_USIC_CH_INPUT_DX5</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>The input of the data shift unit is controlled by the protocol pre-processor. <linebreak/>
<linebreak/>
 </para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___u_s_i_c_1ga61291bfe08ea6012739d90d7524fa1bd" kindref="member">XMC_USIC_CH_ConnectInputDataShiftToDataInput()</ref><linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
<para>&lt; Common mask for INSW bitfield mask in DXnCR register </para>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="857" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="857" bodyend="860"/>
      </memberdef>
      <memberdef kind="function" id="group___u_s_i_c_1gaaba8dc6e2fe4c5cf3fd3418d532a9412" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_USIC_CH_Disable</definition>
        <argsstring>(XMC_USIC_CH_t *const channel)</argsstring>
        <name>XMC_USIC_CH_Disable</name>
        <param>
          <type><ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> *const</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to USIC channel handler of type <ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1ga28dd6da4b742e7336b12ae6fa8de5e9f" kindref="member">XMC_USIC0_CH0</ref>, <ref refid="group___u_s_i_c_1gab7c9a3765e7d637114fc67951cf20c5b" kindref="member">XMC_USIC0_CH1</ref> to <ref refid="group___u_s_i_c_1ga6f71692f25917f0dcd77bb77e5518313" kindref="member">XMC_USIC2_CH1</ref> based on device support. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Disables the USIC channel.<linebreak/>
<linebreak/>
USIC channel is disabled by setting the module enable bit(MDEN) to 0 in the register KSCFG.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___u_s_i_c_1ga0567321036170adb335fef9b36dc3b71" kindref="member">XMC_USIC_CH_Enable()</ref>, <ref refid="group___u_s_i_c_1ga5d7f987aa7be2cc8497a0895f2ba3f90" kindref="member">XMC_USIC_Disable()</ref> <linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="677" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___u_s_i_c_1ga9896966f6e2e6109f8a7ca0de03d0b39" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_USIC_CH_DisableDelayCompensation</definition>
        <argsstring>(XMC_USIC_CH_t *const channel)</argsstring>
        <name>XMC_USIC_CH_DisableDelayCompensation</name>
        <param>
          <type><ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> *const</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to USIC channel handler of type <ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1ga28dd6da4b742e7336b12ae6fa8de5e9f" kindref="member">XMC_USIC0_CH0</ref>, <ref refid="group___u_s_i_c_1gab7c9a3765e7d637114fc67951cf20c5b" kindref="member">XMC_USIC0_CH1</ref> to <ref refid="group___u_s_i_c_1ga6f71692f25917f0dcd77bb77e5518313" kindref="member">XMC_USIC2_CH1</ref> based on device support. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Disables delay compensation.. <linebreak/>
<linebreak/>
 </para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___u_s_i_c_1ga1eaad0f90219fa9bb43bfdf932ea2451" kindref="member">XMC_USIC_CH_EnableDelayCompensation()</ref><linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="950" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="950" bodyend="953"/>
      </memberdef>
      <memberdef kind="function" id="group___u_s_i_c_1ga2520619d1b8420b50501c24b2155c02a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_USIC_CH_DisableEvent</definition>
        <argsstring>(XMC_USIC_CH_t *const channel, const uint32_t event)</argsstring>
        <name>XMC_USIC_CH_DisableEvent</name>
        <param>
          <type><ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> *const</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>const uint32_t</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to USIC channel handler of type <ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1ga28dd6da4b742e7336b12ae6fa8de5e9f" kindref="member">XMC_USIC0_CH0</ref>, <ref refid="group___u_s_i_c_1gab7c9a3765e7d637114fc67951cf20c5b" kindref="member">XMC_USIC0_CH1</ref> to <ref refid="group___u_s_i_c_1ga6f71692f25917f0dcd77bb77e5518313" kindref="member">XMC_USIC2_CH1</ref> based on device support. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>Bit mask of the channel events to be disabled. Use <ref refid="group___u_s_i_c_1ga9101f93a9a9c4c5a27f1418e3335b012" kindref="member">XMC_USIC_CH_EVENT_t</ref> for the bit masks. <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1gga9101f93a9a9c4c5a27f1418e3335b012ab27889da7076d1a9ab4e249b19b71cb1" kindref="member">XMC_USIC_CH_EVENT_RECEIVE_START</ref>, <ref refid="group___u_s_i_c_1gga9101f93a9a9c4c5a27f1418e3335b012a948a392bad3aca7de34a4acfd2b5eb7e" kindref="member">XMC_USIC_CH_EVENT_DATA_LOST</ref> etc. Multiple events can be combined using <emphasis>OR</emphasis> operation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Disable the channel interrupt events. <linebreak/>
<linebreak/>
Multiple events can be combined using the bitwise OR operation and configured in one function call. XMC_USIC_CH_EVENT_t enumerates multiple protocol event bitmasks. These enumerations can be used as input to the API.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___u_s_i_c_1ga6f9467a0f290d65f7292b45cc29e32b4" kindref="member">XMC_USIC_CH_EnableEvent()</ref>, <ref refid="group___u_s_i_c_1ga52f9fc18049dbc906b127e1f3662b4b3" kindref="member">XMC_USIC_CH_SetInterruptNodePointer()</ref> <linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="1268" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="1268" bodyend="1271"/>
      </memberdef>
      <memberdef kind="function" id="group___u_s_i_c_1ga923439c666ca95a5d7907c920891c111" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_USIC_CH_DisableFrameLengthControl</definition>
        <argsstring>(XMC_USIC_CH_t *const channel)</argsstring>
        <name>XMC_USIC_CH_DisableFrameLengthControl</name>
        <param>
          <type><ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> *const</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to USIC channel handler of type <ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1ga28dd6da4b742e7336b12ae6fa8de5e9f" kindref="member">XMC_USIC0_CH0</ref>, <ref refid="group___u_s_i_c_1gab7c9a3765e7d637114fc67951cf20c5b" kindref="member">XMC_USIC0_CH1</ref> to <ref refid="group___u_s_i_c_1ga6f71692f25917f0dcd77bb77e5518313" kindref="member">XMC_USIC2_CH1</ref> based on device support. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Disables automatic update of frame length. <linebreak/>
<linebreak/>
When automatic update of frame length is disabled, frame length has to configured explicitly. Frame length remains fixed until it is changed again.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___u_s_i_c_1gaf1d2b03bb1350dfc628f0bfa9fb6ffb0" kindref="member">XMC_USIC_CH_EnableFrameLengthControl()</ref>, <ref refid="group___u_s_i_c_1ga23964f6d982b35388f3a7c82f5634e0f" kindref="member">XMC_USIC_CH_SetFrameLength()</ref> <linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="1447" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="1447" bodyend="1450"/>
      </memberdef>
      <memberdef kind="function" id="group___u_s_i_c_1ga1db3c5e7fe198de01001e0ee43dd4fef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_USIC_CH_DisableInputDigitalFilter</definition>
        <argsstring>(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_INPUT_t input)</argsstring>
        <name>XMC_USIC_CH_DisableInputDigitalFilter</name>
        <param>
          <type><ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> *const</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>const <ref refid="group___u_s_i_c_1ga7b7c285b4dfe6c9132f2f478a59b2ac5" kindref="member">XMC_USIC_CH_INPUT_t</ref></type>
          <declname>input</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to USIC channel handler of type <ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1ga28dd6da4b742e7336b12ae6fa8de5e9f" kindref="member">XMC_USIC0_CH0</ref>, <ref refid="group___u_s_i_c_1gab7c9a3765e7d637114fc67951cf20c5b" kindref="member">XMC_USIC0_CH1</ref> to <ref refid="group___u_s_i_c_1ga6f71692f25917f0dcd77bb77e5518313" kindref="member">XMC_USIC2_CH1</ref> based on device support. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>input</parametername>
</parameternamelist>
<parameterdescription>
<para>USIC channel input stage of type <ref refid="group___u_s_i_c_1ga7b7c285b4dfe6c9132f2f478a59b2ac5" kindref="member">XMC_USIC_CH_INPUT_t</ref>. <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1gga7b7c285b4dfe6c9132f2f478a59b2ac5a218c2b06596afed7bf9bc41fb6db47ee" kindref="member">XMC_USIC_CH_INPUT_DX0</ref> to <ref refid="group___u_s_i_c_1gga7b7c285b4dfe6c9132f2f478a59b2ac5ae3ff15e93aa354e43133246bc552effd" kindref="member">XMC_USIC_CH_INPUT_DX5</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Disables the input digital filter for USIC channel input data signal. <linebreak/>
<linebreak/>
Input data signal from the selected multiplexer will not be digitally filtered.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___u_s_i_c_1ga6a776750022b67a7d4075fb06eac39dc" kindref="member">XMC_USIC_CH_EnableInputDigitalFilter()</ref><linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
<para>&lt; Common mask for DFEN bitfield mask in DXnCR register </para>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="987" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="987" bodyend="990"/>
      </memberdef>
      <memberdef kind="function" id="group___u_s_i_c_1gaa018c766c173f43dbdba8c821a90a645" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_USIC_CH_DisableInputInversion</definition>
        <argsstring>(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_INPUT_t input)</argsstring>
        <name>XMC_USIC_CH_DisableInputInversion</name>
        <param>
          <type><ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> *const</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>const <ref refid="group___u_s_i_c_1ga7b7c285b4dfe6c9132f2f478a59b2ac5" kindref="member">XMC_USIC_CH_INPUT_t</ref></type>
          <declname>input</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to USIC channel handler of type <ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1ga28dd6da4b742e7336b12ae6fa8de5e9f" kindref="member">XMC_USIC0_CH0</ref>, <ref refid="group___u_s_i_c_1gab7c9a3765e7d637114fc67951cf20c5b" kindref="member">XMC_USIC0_CH1</ref> to <ref refid="group___u_s_i_c_1ga6f71692f25917f0dcd77bb77e5518313" kindref="member">XMC_USIC2_CH1</ref> based on device support. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>input</parametername>
</parameternamelist>
<parameterdescription>
<para>USIC channel input stage of type <ref refid="group___u_s_i_c_1ga7b7c285b4dfe6c9132f2f478a59b2ac5" kindref="member">XMC_USIC_CH_INPUT_t</ref>. <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1gga7b7c285b4dfe6c9132f2f478a59b2ac5a218c2b06596afed7bf9bc41fb6db47ee" kindref="member">XMC_USIC_CH_INPUT_DX0</ref> to <ref refid="group___u_s_i_c_1gga7b7c285b4dfe6c9132f2f478a59b2ac5ae3ff15e93aa354e43133246bc552effd" kindref="member">XMC_USIC_CH_INPUT_DX5</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Disables input inversion for USIC channel. <linebreak/>
<linebreak/>
 Resets the input data polarity for the USIC channel input data signal. </para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___u_s_i_c_1gae13b2003ea4d8703a9990d1e90048dc3" kindref="member">XMC_USIC_CH_EnableInputInversion()</ref><linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
<para>&lt; Common mask for DPOL bitfield mask in DXnCR register </para>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="917" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="917" bodyend="920"/>
      </memberdef>
      <memberdef kind="function" id="group___u_s_i_c_1gaad85027beef2c0cf3dd897e889acf939" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_USIC_CH_DisableInputSync</definition>
        <argsstring>(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_INPUT_t input)</argsstring>
        <name>XMC_USIC_CH_DisableInputSync</name>
        <param>
          <type><ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> *const</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>const <ref refid="group___u_s_i_c_1ga7b7c285b4dfe6c9132f2f478a59b2ac5" kindref="member">XMC_USIC_CH_INPUT_t</ref></type>
          <declname>input</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to USIC channel handler of type <ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1ga28dd6da4b742e7336b12ae6fa8de5e9f" kindref="member">XMC_USIC0_CH0</ref>, <ref refid="group___u_s_i_c_1gab7c9a3765e7d637114fc67951cf20c5b" kindref="member">XMC_USIC0_CH1</ref> to <ref refid="group___u_s_i_c_1ga6f71692f25917f0dcd77bb77e5518313" kindref="member">XMC_USIC2_CH1</ref> based on device support. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>input</parametername>
</parameternamelist>
<parameterdescription>
<para>USIC channel input stage of type <ref refid="group___u_s_i_c_1ga7b7c285b4dfe6c9132f2f478a59b2ac5" kindref="member">XMC_USIC_CH_INPUT_t</ref>. <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1gga7b7c285b4dfe6c9132f2f478a59b2ac5a218c2b06596afed7bf9bc41fb6db47ee" kindref="member">XMC_USIC_CH_INPUT_DX0</ref> to <ref refid="group___u_s_i_c_1gga7b7c285b4dfe6c9132f2f478a59b2ac5ae3ff15e93aa354e43133246bc552effd" kindref="member">XMC_USIC_CH_INPUT_DX5</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Disables input synchronization for the USIC channel input data signal. <linebreak/>
<linebreak/>
Input data signal from the selected multiplexer will not be synchronized.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___u_s_i_c_1ga1a5edb9ab8796da1f86be687fab65f32" kindref="member">XMC_USIC_CH_EnableInputSync()</ref>, <ref refid="group___u_s_i_c_1ga1db3c5e7fe198de01001e0ee43dd4fef" kindref="member">XMC_USIC_CH_DisableInputDigitalFilter()</ref> <linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
<para>&lt; Common mask for DSEN bitfield mask in DXnCR register </para>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="1024" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="1024" bodyend="1027"/>
      </memberdef>
      <memberdef kind="function" id="group___u_s_i_c_1ga4227196c29ecd683240b968aa54b7758" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_USIC_CH_DisableTBUFDataValidTrigger</definition>
        <argsstring>(XMC_USIC_CH_t *const channel)</argsstring>
        <name>XMC_USIC_CH_DisableTBUFDataValidTrigger</name>
        <param>
          <type><ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> *const</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to USIC channel handler of type <ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1ga28dd6da4b742e7336b12ae6fa8de5e9f" kindref="member">XMC_USIC0_CH0</ref>, <ref refid="group___u_s_i_c_1gab7c9a3765e7d637114fc67951cf20c5b" kindref="member">XMC_USIC0_CH1</ref> to <ref refid="group___u_s_i_c_1ga6f71692f25917f0dcd77bb77e5518313" kindref="member">XMC_USIC2_CH1</ref> based on device support. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Disables the trigger of TDV depending on DX2T signal. <linebreak/>
<linebreak/>
Bit TCSR.TE is permanently set.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___u_s_i_c_1ga7e8a1fa11993aedfd8d9fb1bf6daf36c" kindref="member">XMC_USIC_CH_EnableTBUFDataValidTrigger()</ref> <linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="1500" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="1500" bodyend="1503"/>
      </memberdef>
      <memberdef kind="function" id="group___u_s_i_c_1gae5a5bbfcfa061c76a12505e4183d832d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_USIC_CH_DisableTimeMeasurement</definition>
        <argsstring>(XMC_USIC_CH_t *const channel)</argsstring>
        <name>XMC_USIC_CH_DisableTimeMeasurement</name>
        <param>
          <type><ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> *const</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to USIC channel handler of type <ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1ga28dd6da4b742e7336b12ae6fa8de5e9f" kindref="member">XMC_USIC0_CH0</ref>, <ref refid="group___u_s_i_c_1gab7c9a3765e7d637114fc67951cf20c5b" kindref="member">XMC_USIC0_CH1</ref> to <ref refid="group___u_s_i_c_1ga6f71692f25917f0dcd77bb77e5518313" kindref="member">XMC_USIC2_CH1</ref> based on device support. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Disables time measurement using the capture mode timer. <linebreak/>
<linebreak/>
Time measurement is disabled by clearing the timer enable flag in BRG register.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___u_s_i_c_1gadb5f590b8867d286b7a9f4e52fd3a6a9" kindref="member">XMC_USIC_CH_EnableTimeMeasurement()</ref> <linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="2267" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="2267" bodyend="2270"/>
      </memberdef>
      <memberdef kind="function" id="group___u_s_i_c_1gabfa8061d06df18f5e6925b33fffea62b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_USIC_CH_DisableWordLengthControl</definition>
        <argsstring>(XMC_USIC_CH_t *const channel)</argsstring>
        <name>XMC_USIC_CH_DisableWordLengthControl</name>
        <param>
          <type><ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> *const</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to USIC channel handler of type <ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1ga28dd6da4b742e7336b12ae6fa8de5e9f" kindref="member">XMC_USIC0_CH0</ref>, <ref refid="group___u_s_i_c_1gab7c9a3765e7d637114fc67951cf20c5b" kindref="member">XMC_USIC0_CH1</ref> to <ref refid="group___u_s_i_c_1ga6f71692f25917f0dcd77bb77e5518313" kindref="member">XMC_USIC2_CH1</ref> based on device support. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Disables automatic update of word length. <linebreak/>
<linebreak/>
When automatic update of word length is disabled, word length has to configured explicitly. Word length remains fixed until it is changed again.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___u_s_i_c_1gaf1d2b03bb1350dfc628f0bfa9fb6ffb0" kindref="member">XMC_USIC_CH_EnableFrameLengthControl()</ref>, <ref refid="group___u_s_i_c_1gabb9d02b8388a03cd28190c976cdb8b78" kindref="member">XMC_USIC_CH_SetWordLength()</ref> <linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="1465" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="1465" bodyend="1468"/>
      </memberdef>
      <memberdef kind="function" id="group___u_s_i_c_1ga0567321036170adb335fef9b36dc3b71" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_USIC_CH_Enable</definition>
        <argsstring>(XMC_USIC_CH_t *const channel)</argsstring>
        <name>XMC_USIC_CH_Enable</name>
        <param>
          <type><ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> *const</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to USIC channel handler of type <ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1ga28dd6da4b742e7336b12ae6fa8de5e9f" kindref="member">XMC_USIC0_CH0</ref>, <ref refid="group___u_s_i_c_1gab7c9a3765e7d637114fc67951cf20c5b" kindref="member">XMC_USIC0_CH1</ref> to <ref refid="group___u_s_i_c_1ga6f71692f25917f0dcd77bb77e5518313" kindref="member">XMC_USIC2_CH1</ref> based on device support. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Enables the USIC channel. <linebreak/>
<linebreak/>
USIC channel is enabled by setting the module enable bit in KSCFG register bitfield MODEN. On enabling, the channel is set to idle mode.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___u_s_i_c_1gaaba8dc6e2fe4c5cf3fd3418d532a9412" kindref="member">XMC_USIC_CH_Disable()</ref>, <ref refid="group___u_s_i_c_1ga48113f030b655f6eaa3b9f6b73474785" kindref="member">XMC_USIC_Enable()</ref> <linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="664" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___u_s_i_c_1ga1eaad0f90219fa9bb43bfdf932ea2451" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_USIC_CH_EnableDelayCompensation</definition>
        <argsstring>(XMC_USIC_CH_t *const channel)</argsstring>
        <name>XMC_USIC_CH_EnableDelayCompensation</name>
        <param>
          <type><ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> *const</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to USIC channel handler of type <ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1ga28dd6da4b742e7336b12ae6fa8de5e9f" kindref="member">XMC_USIC0_CH0</ref>, <ref refid="group___u_s_i_c_1gab7c9a3765e7d637114fc67951cf20c5b" kindref="member">XMC_USIC0_CH1</ref> to <ref refid="group___u_s_i_c_1ga6f71692f25917f0dcd77bb77e5518313" kindref="member">XMC_USIC2_CH1</ref> based on device support. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Enables delay compensation. <linebreak/>
<linebreak/>
 Delay compensation can be applied to the receive path. </para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___u_s_i_c_1ga9896966f6e2e6109f8a7ca0de03d0b39" kindref="member">XMC_USIC_CH_DisableDelayCompensation()</ref><linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="934" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="934" bodyend="937"/>
      </memberdef>
      <memberdef kind="function" id="group___u_s_i_c_1ga6f9467a0f290d65f7292b45cc29e32b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_USIC_CH_EnableEvent</definition>
        <argsstring>(XMC_USIC_CH_t *const channel, const uint32_t event)</argsstring>
        <name>XMC_USIC_CH_EnableEvent</name>
        <param>
          <type><ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> *const</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>const uint32_t</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to USIC channel handler of type <ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1ga28dd6da4b742e7336b12ae6fa8de5e9f" kindref="member">XMC_USIC0_CH0</ref>, <ref refid="group___u_s_i_c_1gab7c9a3765e7d637114fc67951cf20c5b" kindref="member">XMC_USIC0_CH1</ref> to <ref refid="group___u_s_i_c_1ga6f71692f25917f0dcd77bb77e5518313" kindref="member">XMC_USIC2_CH1</ref> based on device support. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>Bit mask of the channel events to be enabled. Use <ref refid="group___u_s_i_c_1ga9101f93a9a9c4c5a27f1418e3335b012" kindref="member">XMC_USIC_CH_EVENT_t</ref> for the bit masks. <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1gga9101f93a9a9c4c5a27f1418e3335b012ab27889da7076d1a9ab4e249b19b71cb1" kindref="member">XMC_USIC_CH_EVENT_RECEIVE_START</ref>, <ref refid="group___u_s_i_c_1gga9101f93a9a9c4c5a27f1418e3335b012a948a392bad3aca7de34a4acfd2b5eb7e" kindref="member">XMC_USIC_CH_EVENT_DATA_LOST</ref> etc. Multiple events can be combined using <emphasis>OR</emphasis> operation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Enable the channel interrupt events.<linebreak/>
<linebreak/>
Common channel events related to serial communication can be configured using this API. Multiple events can be combined using the bitwise OR operation and configured in one function call. XMC_USIC_CH_EVENT_t enumerates multiple protocol event bitmasks. These enumerations can be used as input to the API.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___u_s_i_c_1ga2520619d1b8420b50501c24b2155c02a" kindref="member">XMC_USIC_CH_DisableEvent()</ref>, <ref refid="group___u_s_i_c_1ga52f9fc18049dbc906b127e1f3662b4b3" kindref="member">XMC_USIC_CH_SetInterruptNodePointer()</ref> <linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="1247" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="1247" bodyend="1250"/>
      </memberdef>
      <memberdef kind="function" id="group___u_s_i_c_1gaf1d2b03bb1350dfc628f0bfa9fb6ffb0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_USIC_CH_EnableFrameLengthControl</definition>
        <argsstring>(XMC_USIC_CH_t *const channel)</argsstring>
        <name>XMC_USIC_CH_EnableFrameLengthControl</name>
        <param>
          <type><ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> *const</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to USIC channel handler of type <ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1ga28dd6da4b742e7336b12ae6fa8de5e9f" kindref="member">XMC_USIC0_CH0</ref>, <ref refid="group___u_s_i_c_1gab7c9a3765e7d637114fc67951cf20c5b" kindref="member">XMC_USIC0_CH1</ref> to <ref refid="group___u_s_i_c_1ga6f71692f25917f0dcd77bb77e5518313" kindref="member">XMC_USIC2_CH1</ref> based on device support. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Enables automatic update of frame length. <linebreak/>
<linebreak/>
When the automatic update of frame length is enabled, frame length is configured based on the index of the TBUF[]/IN[] register array. When the data is written to TBUF[x], frame length is configured with the mask value of <emphasis>x</emphasis> at the last 5 bit positions. Same logic is applicable if data is written to IN[x] register.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___u_s_i_c_1ga923439c666ca95a5d7907c920891c111" kindref="member">XMC_USIC_CH_DisableFrameLengthControl()</ref>, <ref refid="group___u_s_i_c_1ga0f14560e863b15c6bd123e534332e9f5" kindref="member">XMC_USIC_CH_TXFIFO_PutDataFLEMode()</ref> <linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="1401" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="1401" bodyend="1408"/>
      </memberdef>
      <memberdef kind="function" id="group___u_s_i_c_1ga6a776750022b67a7d4075fb06eac39dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_USIC_CH_EnableInputDigitalFilter</definition>
        <argsstring>(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_INPUT_t input)</argsstring>
        <name>XMC_USIC_CH_EnableInputDigitalFilter</name>
        <param>
          <type><ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> *const</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>const <ref refid="group___u_s_i_c_1ga7b7c285b4dfe6c9132f2f478a59b2ac5" kindref="member">XMC_USIC_CH_INPUT_t</ref></type>
          <declname>input</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to USIC channel handler of type <ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1ga28dd6da4b742e7336b12ae6fa8de5e9f" kindref="member">XMC_USIC0_CH0</ref>, <ref refid="group___u_s_i_c_1gab7c9a3765e7d637114fc67951cf20c5b" kindref="member">XMC_USIC0_CH1</ref> to <ref refid="group___u_s_i_c_1ga6f71692f25917f0dcd77bb77e5518313" kindref="member">XMC_USIC2_CH1</ref> based on device support. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>input</parametername>
</parameternamelist>
<parameterdescription>
<para>USIC channel input stage of type <ref refid="group___u_s_i_c_1ga7b7c285b4dfe6c9132f2f478a59b2ac5" kindref="member">XMC_USIC_CH_INPUT_t</ref>. <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1gga7b7c285b4dfe6c9132f2f478a59b2ac5a218c2b06596afed7bf9bc41fb6db47ee" kindref="member">XMC_USIC_CH_INPUT_DX0</ref> to <ref refid="group___u_s_i_c_1gga7b7c285b4dfe6c9132f2f478a59b2ac5ae3ff15e93aa354e43133246bc552effd" kindref="member">XMC_USIC_CH_INPUT_DX5</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Enables the input digital filter for USIC channel input data signal. <linebreak/>
<linebreak/>
Input data signal from the selected multiplexer will be digitally filtered.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___u_s_i_c_1ga1db3c5e7fe198de01001e0ee43dd4fef" kindref="member">XMC_USIC_CH_DisableInputDigitalFilter()</ref><linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
<para>&lt; Common mask for DFEN bitfield mask in DXnCR register </para>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="969" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="969" bodyend="972"/>
      </memberdef>
      <memberdef kind="function" id="group___u_s_i_c_1gae13b2003ea4d8703a9990d1e90048dc3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_USIC_CH_EnableInputInversion</definition>
        <argsstring>(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_INPUT_t input)</argsstring>
        <name>XMC_USIC_CH_EnableInputInversion</name>
        <param>
          <type><ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> *const</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>const <ref refid="group___u_s_i_c_1ga7b7c285b4dfe6c9132f2f478a59b2ac5" kindref="member">XMC_USIC_CH_INPUT_t</ref></type>
          <declname>input</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to USIC channel handler of type <ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1ga28dd6da4b742e7336b12ae6fa8de5e9f" kindref="member">XMC_USIC0_CH0</ref>, <ref refid="group___u_s_i_c_1gab7c9a3765e7d637114fc67951cf20c5b" kindref="member">XMC_USIC0_CH1</ref> to <ref refid="group___u_s_i_c_1ga6f71692f25917f0dcd77bb77e5518313" kindref="member">XMC_USIC2_CH1</ref> based on device support. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>input</parametername>
</parameternamelist>
<parameterdescription>
<para>USIC channel input stage of type <ref refid="group___u_s_i_c_1ga7b7c285b4dfe6c9132f2f478a59b2ac5" kindref="member">XMC_USIC_CH_INPUT_t</ref>. <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1gga7b7c285b4dfe6c9132f2f478a59b2ac5a218c2b06596afed7bf9bc41fb6db47ee" kindref="member">XMC_USIC_CH_INPUT_DX0</ref> to <ref refid="group___u_s_i_c_1gga7b7c285b4dfe6c9132f2f478a59b2ac5ae3ff15e93aa354e43133246bc552effd" kindref="member">XMC_USIC_CH_INPUT_DX5</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Enables input inversion for USIC channel input data signal. <linebreak/>
<linebreak/>
 Polarity of the input source can be changed to provide inverted data input. </para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___u_s_i_c_1gaa018c766c173f43dbdba8c821a90a645" kindref="member">XMC_USIC_CH_DisableInputInversion()</ref><linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
<para>&lt; Common mask for DPOL bitfield mask in DXnCR register </para>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="898" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="898" bodyend="901"/>
      </memberdef>
      <memberdef kind="function" id="group___u_s_i_c_1ga1a5edb9ab8796da1f86be687fab65f32" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_USIC_CH_EnableInputSync</definition>
        <argsstring>(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_INPUT_t input)</argsstring>
        <name>XMC_USIC_CH_EnableInputSync</name>
        <param>
          <type><ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> *const</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>const <ref refid="group___u_s_i_c_1ga7b7c285b4dfe6c9132f2f478a59b2ac5" kindref="member">XMC_USIC_CH_INPUT_t</ref></type>
          <declname>input</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to USIC channel handler of type <ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1ga28dd6da4b742e7336b12ae6fa8de5e9f" kindref="member">XMC_USIC0_CH0</ref>, <ref refid="group___u_s_i_c_1gab7c9a3765e7d637114fc67951cf20c5b" kindref="member">XMC_USIC0_CH1</ref> to <ref refid="group___u_s_i_c_1ga6f71692f25917f0dcd77bb77e5518313" kindref="member">XMC_USIC2_CH1</ref> based on device support. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>input</parametername>
</parameternamelist>
<parameterdescription>
<para>USIC channel input stage of type <ref refid="group___u_s_i_c_1ga7b7c285b4dfe6c9132f2f478a59b2ac5" kindref="member">XMC_USIC_CH_INPUT_t</ref>. <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1gga7b7c285b4dfe6c9132f2f478a59b2ac5a218c2b06596afed7bf9bc41fb6db47ee" kindref="member">XMC_USIC_CH_INPUT_DX0</ref> to <ref refid="group___u_s_i_c_1gga7b7c285b4dfe6c9132f2f478a59b2ac5ae3ff15e93aa354e43133246bc552effd" kindref="member">XMC_USIC_CH_INPUT_DX5</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Enables input synchronization for the USIC channel input data signal. <linebreak/>
<linebreak/>
Input data signal from the selected multiplexer will be synchronized with fPERIPH. A noisy signal can be synchronized and filtered by enabling the digital filter.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___u_s_i_c_1gaad85027beef2c0cf3dd897e889acf939" kindref="member">XMC_USIC_CH_DisableInputSync()</ref>, <ref refid="group___u_s_i_c_1ga6a776750022b67a7d4075fb06eac39dc" kindref="member">XMC_USIC_CH_EnableInputDigitalFilter()</ref><linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
<para>&lt; Common mask for DSEN bitfield mask in DXnCR register </para>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="1006" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="1006" bodyend="1009"/>
      </memberdef>
      <memberdef kind="function" id="group___u_s_i_c_1ga7e8a1fa11993aedfd8d9fb1bf6daf36c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_USIC_CH_EnableTBUFDataValidTrigger</definition>
        <argsstring>(XMC_USIC_CH_t *const channel)</argsstring>
        <name>XMC_USIC_CH_EnableTBUFDataValidTrigger</name>
        <param>
          <type><ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> *const</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to USIC channel handler of type <ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1ga28dd6da4b742e7336b12ae6fa8de5e9f" kindref="member">XMC_USIC0_CH0</ref>, <ref refid="group___u_s_i_c_1gab7c9a3765e7d637114fc67951cf20c5b" kindref="member">XMC_USIC0_CH1</ref> to <ref refid="group___u_s_i_c_1ga6f71692f25917f0dcd77bb77e5518313" kindref="member">XMC_USIC2_CH1</ref> based on device support. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Bit TCSR.TE is set if DX2T becomes active while TDV = 1. <linebreak/>
<linebreak/>
Enables the transfer trigger unit to set bit TCSR.TE if the trigger signal DX2T becomes active for event driven transfer starts.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___u_s_i_c_1ga4227196c29ecd683240b968aa54b7758" kindref="member">XMC_USIC_CH_DisableTBUFDataValidTrigger()</ref><linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="1483" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="1483" bodyend="1486"/>
      </memberdef>
      <memberdef kind="function" id="group___u_s_i_c_1gadb5f590b8867d286b7a9f4e52fd3a6a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_USIC_CH_EnableTimeMeasurement</definition>
        <argsstring>(XMC_USIC_CH_t *const channel)</argsstring>
        <name>XMC_USIC_CH_EnableTimeMeasurement</name>
        <param>
          <type><ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> *const</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to USIC channel handler of type <ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1ga28dd6da4b742e7336b12ae6fa8de5e9f" kindref="member">XMC_USIC0_CH0</ref>, <ref refid="group___u_s_i_c_1gab7c9a3765e7d637114fc67951cf20c5b" kindref="member">XMC_USIC0_CH1</ref> to <ref refid="group___u_s_i_c_1ga6f71692f25917f0dcd77bb77e5518313" kindref="member">XMC_USIC2_CH1</ref> based on device support. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Enables time measurement using the capture mode timer. <linebreak/>
<linebreak/>
Time measurement is enabled by setting the timer enable flag in BRG register.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___u_s_i_c_1gae5a5bbfcfa061c76a12505e4183d832d" kindref="member">XMC_USIC_CH_DisableTimeMeasurement()</ref> <linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="2250" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="2250" bodyend="2253"/>
      </memberdef>
      <memberdef kind="function" id="group___u_s_i_c_1gaed632dac3fdb73bee4a6cf4c6cd507e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_USIC_CH_EnableWordLengthControl</definition>
        <argsstring>(XMC_USIC_CH_t *const channel)</argsstring>
        <name>XMC_USIC_CH_EnableWordLengthControl</name>
        <param>
          <type><ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> *const</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to USIC channel handler of type <ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1ga28dd6da4b742e7336b12ae6fa8de5e9f" kindref="member">XMC_USIC0_CH0</ref>, <ref refid="group___u_s_i_c_1gab7c9a3765e7d637114fc67951cf20c5b" kindref="member">XMC_USIC0_CH1</ref> to <ref refid="group___u_s_i_c_1ga6f71692f25917f0dcd77bb77e5518313" kindref="member">XMC_USIC2_CH1</ref> based on device support. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Enables automatic update of word length. <linebreak/>
<linebreak/>
When the automatic update of word length is enabled, word length is configured based on the index of the TBUF[]/IN[] register array. When the data is written to TBUF[x], word length is configured with the mask value of <emphasis>x</emphasis> at the last 5 bit positions. Same logic is applicable if data is written to IN[x] register.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___u_s_i_c_1ga923439c666ca95a5d7907c920891c111" kindref="member">XMC_USIC_CH_DisableFrameLengthControl()</ref>, <ref refid="group___u_s_i_c_1ga0f14560e863b15c6bd123e534332e9f5" kindref="member">XMC_USIC_CH_TXFIFO_PutDataFLEMode()</ref> <linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="1425" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="1425" bodyend="1432"/>
      </memberdef>
      <memberdef kind="function" id="group___u_s_i_c_1gae9092b12f490047882c1bb9897985c0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t XMC_USIC_CH_GetBaudrate</definition>
        <argsstring>(XMC_USIC_CH_t *const channel)</argsstring>
        <name>XMC_USIC_CH_GetBaudrate</name>
        <param>
          <type><ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> *const</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to USIC channel handler of type <ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1ga28dd6da4b742e7336b12ae6fa8de5e9f" kindref="member">XMC_USIC0_CH0</ref>, <ref refid="group___u_s_i_c_1gab7c9a3765e7d637114fc67951cf20c5b" kindref="member">XMC_USIC0_CH1</ref> to <ref refid="group___u_s_i_c_1ga6f71692f25917f0dcd77bb77e5518313" kindref="member">XMC_USIC2_CH1</ref> based on device support. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>baudrate currently used by USIC channel for .<linebreak/>
 </para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Calculates the current used baudrate (fCTQIN) of a USIC channel. <linebreak/>
<linebreak/>
<image type="html" name="usic_brg.png"></image>
 <image type="latex" name="usic_brg.png"></image>
</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para>XMC_USIC_CH_SetBaudrateMode(), <ref refid="group___u_s_i_c_1gac9feec95c73b09889e494ec6d6898f4f" kindref="member">XMC_USIC_CH_SetBaudrate()</ref>, <ref refid="group___u_s_i_c_1gadd190656c8ecf2fbbb5375175e4f6115" kindref="member">XMC_USIC_CH_SetBaudrateEx()</ref> <linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="762" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___u_s_i_c_1ga13d1ba3376be7d2a392f08e5e7237662" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t XMC_USIC_CH_GetCaptureTimerValue</definition>
        <argsstring>(const XMC_USIC_CH_t *const channel)</argsstring>
        <name>XMC_USIC_CH_GetCaptureTimerValue</name>
        <param>
          <type>const <ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> *const</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to USIC channel handler of type <ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1ga28dd6da4b742e7336b12ae6fa8de5e9f" kindref="member">XMC_USIC0_CH0</ref>, <ref refid="group___u_s_i_c_1gab7c9a3765e7d637114fc67951cf20c5b" kindref="member">XMC_USIC0_CH1</ref> to <ref refid="group___u_s_i_c_1ga6f71692f25917f0dcd77bb77e5518313" kindref="member">XMC_USIC2_CH1</ref> based on device support. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Captured counter value</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>The value of the counter is captured if one of the trigger signals DX0T or DX1T are activated by the corresponding input stage. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="1183" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="1183" bodyend="1186"/>
      </memberdef>
      <memberdef kind="function" id="group___u_s_i_c_1gafde46af634c56095ca8acdb56413f4ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t XMC_USIC_CH_GetMCLKFrequency</definition>
        <argsstring>(XMC_USIC_CH_t *const channel)</argsstring>
        <name>XMC_USIC_CH_GetMCLKFrequency</name>
        <param>
          <type><ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> *const</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to USIC channel handler of type <ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1ga28dd6da4b742e7336b12ae6fa8de5e9f" kindref="member">XMC_USIC0_CH0</ref>, <ref refid="group___u_s_i_c_1gab7c9a3765e7d637114fc67951cf20c5b" kindref="member">XMC_USIC0_CH1</ref> to <ref refid="group___u_s_i_c_1ga6f71692f25917f0dcd77bb77e5518313" kindref="member">XMC_USIC2_CH1</ref> based on device support. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>baudrate currently used by USIC channel.<linebreak/>
 </para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Calculates the current used MCLK frequency of a USIC channel. <linebreak/>
<linebreak/>
<image type="html" name="usic_brg.png"></image>
 <image type="latex" name="usic_brg.png"></image>
</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para>XMC_USIC_CH_SetBaudrateMode(), <ref refid="group___u_s_i_c_1gac9feec95c73b09889e494ec6d6898f4f" kindref="member">XMC_USIC_CH_SetBaudrate()</ref>, <ref refid="group___u_s_i_c_1gadd190656c8ecf2fbbb5375175e4f6115" kindref="member">XMC_USIC_CH_SetBaudrateEx()</ref> <linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="792" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___u_s_i_c_1ga6987b85c22a6f6e220042e07f255ca7d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t XMC_USIC_CH_GetReceiveBufferStatus</definition>
        <argsstring>(XMC_USIC_CH_t *const channel)</argsstring>
        <name>XMC_USIC_CH_GetReceiveBufferStatus</name>
        <param>
          <type><ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> *const</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
<para>API to get receive buffer status. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to USIC channel handler of type <ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1ga28dd6da4b742e7336b12ae6fa8de5e9f" kindref="member">XMC_USIC0_CH0</ref>, <ref refid="group___u_s_i_c_1gab7c9a3765e7d637114fc67951cf20c5b" kindref="member">XMC_USIC0_CH1</ref> to <ref refid="group___u_s_i_c_1ga6f71692f25917f0dcd77bb77e5518313" kindref="member">XMC_USIC2_CH1</ref> based on device support. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Status of data validity check for RBUF0 and RBUF1. <linebreak/>
 Returned value should be masked with RDV0 and RDV1 bits to know the status. <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1gga9444afb3de969ce1ad5e7d413a9e0148a65f600df2669714e1597f530144a011b" kindref="member">XMC_USIC_CH_RBUF_STATUS_DATA_VALID0</ref>, <ref refid="group___u_s_i_c_1gga9444afb3de969ce1ad5e7d413a9e0148aa5bc9e75620be0519da1917345a4509e" kindref="member">XMC_USIC_CH_RBUF_STATUS_DATA_VALID1</ref>.</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Checks if RBUF0 and RBUF1 have valid unread data. <linebreak/>
<linebreak/>
It checks the bits RDV0 and RDV1 of the RBUFSR register. Returns the value of RBUFSR masked with bitmasks of RDV0 and RDV1. It can be used to decide whether 2bytes has to be read from RBUF or 1 byte. If both bitmasks XMC_USIC_CH_RBUF_STATUS_DATA_VALID0 and XMC_USIC_CH_RBUF_STATUS_DATA_VALID1 are set, then 2 bytes can be read from RBUF. If only either of them is set, then only one byte can be read from RBUF. </para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___u_s_i_c_1ga091c9637a98727f1dce0d159764aea24" kindref="member">XMC_USIC_CH_GetTransmitBufferStatus()</ref> <linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="1336" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="1336" bodyend="1339"/>
      </memberdef>
      <memberdef kind="function" id="group___u_s_i_c_1gadde84d71507e50a2c49eba8040480abf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t XMC_USIC_CH_GetSCLKFrequency</definition>
        <argsstring>(XMC_USIC_CH_t *const channel)</argsstring>
        <name>XMC_USIC_CH_GetSCLKFrequency</name>
        <param>
          <type><ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> *const</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to USIC channel handler of type <ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1ga28dd6da4b742e7336b12ae6fa8de5e9f" kindref="member">XMC_USIC0_CH0</ref>, <ref refid="group___u_s_i_c_1gab7c9a3765e7d637114fc67951cf20c5b" kindref="member">XMC_USIC0_CH1</ref> to <ref refid="group___u_s_i_c_1ga6f71692f25917f0dcd77bb77e5518313" kindref="member">XMC_USIC2_CH1</ref> based on device support. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>baudrate currently used by USIC channel.<linebreak/>
 </para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Calculates the current used SCLK frequency of a USIC channel. <linebreak/>
<linebreak/>
<image type="html" name="usic_brg.png"></image>
 <image type="latex" name="usic_brg.png"></image>
</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para>XMC_USIC_CH_SetBaudrateMode(), <ref refid="group___u_s_i_c_1gac9feec95c73b09889e494ec6d6898f4f" kindref="member">XMC_USIC_CH_SetBaudrate()</ref>, <ref refid="group___u_s_i_c_1gadd190656c8ecf2fbbb5375175e4f6115" kindref="member">XMC_USIC_CH_SetBaudrateEx()</ref> <linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="777" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___u_s_i_c_1ga091c9637a98727f1dce0d159764aea24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___u_s_i_c_1ga1139d992c4767497e1ead00f098d7024" kindref="member">XMC_USIC_CH_TBUF_STATUS_t</ref></type>
        <definition>XMC_USIC_CH_TBUF_STATUS_t XMC_USIC_CH_GetTransmitBufferStatus</definition>
        <argsstring>(XMC_USIC_CH_t *const channel)</argsstring>
        <name>XMC_USIC_CH_GetTransmitBufferStatus</name>
        <param>
          <type><ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> *const</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to USIC channel handler of type <ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1ga28dd6da4b742e7336b12ae6fa8de5e9f" kindref="member">XMC_USIC0_CH0</ref>, <ref refid="group___u_s_i_c_1gab7c9a3765e7d637114fc67951cf20c5b" kindref="member">XMC_USIC0_CH1</ref> to <ref refid="group___u_s_i_c_1ga6f71692f25917f0dcd77bb77e5518313" kindref="member">XMC_USIC2_CH1</ref> based on device support. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Stataus <ref refid="group___u_s_i_c_1gga1139d992c4767497e1ead00f098d7024ad797491e36963500982f41247c0edb75" kindref="member">XMC_USIC_CH_TBUF_STATUS_IDLE</ref> if transmit buffer is free, <ref refid="group___u_s_i_c_1gga1139d992c4767497e1ead00f098d7024ab228b9efcdbf98d83e2e6521883460b5" kindref="member">XMC_USIC_CH_TBUF_STATUS_BUSY</ref> if transmit buffer is busy.</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Gets transmit buffer status. <linebreak/>
<linebreak/>
Status indicates whether the transmit buffer is free, or busy transmitting data. The status depends on the value of TDV flag in TCSR register. This status can be used while transmitting data. Transmit data when the transmit buffer status is <ref refid="group___u_s_i_c_1gga1139d992c4767497e1ead00f098d7024ad797491e36963500982f41247c0edb75" kindref="member">XMC_USIC_CH_TBUF_STATUS_IDLE</ref>.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___u_s_i_c_1ga920a20a26fbff1aaeb240af921f61ce4" kindref="member">XMC_USIC_CH_SetDataOutputMode()</ref> <linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="1312" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="1312" bodyend="1315"/>
      </memberdef>
      <memberdef kind="function" id="group___u_s_i_c_1gaddc7f0e10ccfe5d73d28d04f2e1455fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_USIC_CH_InvalidateReadData</definition>
        <argsstring>(XMC_USIC_CH_t *const channel)</argsstring>
        <name>XMC_USIC_CH_InvalidateReadData</name>
        <param>
          <type><ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> *const</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to USIC channel handler of type <ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1ga28dd6da4b742e7336b12ae6fa8de5e9f" kindref="member">XMC_USIC0_CH0</ref>, <ref refid="group___u_s_i_c_1gab7c9a3765e7d637114fc67951cf20c5b" kindref="member">XMC_USIC0_CH1</ref> to <ref refid="group___u_s_i_c_1ga6f71692f25917f0dcd77bb77e5518313" kindref="member">XMC_USIC2_CH1</ref> based on device support.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Modify TCSR.TDV and TCSR.TE to control the start of a data word transmission by software.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___u_s_i_c_1ga091c9637a98727f1dce0d159764aea24" kindref="member">XMC_USIC_CH_GetTransmitBufferStatus()</ref> <linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="1556" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="1556" bodyend="1559"/>
      </memberdef>
      <memberdef kind="function" id="group___u_s_i_c_1ga92f2d42836e73b8a200c437e69611474" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_USIC_CH_RXFIFO_ClearEvent</definition>
        <argsstring>(XMC_USIC_CH_t *const channel, const uint32_t event)</argsstring>
        <name>XMC_USIC_CH_RXFIFO_ClearEvent</name>
        <param>
          <type><ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> *const</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>const uint32_t</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to USIC channel handler of type <ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1ga28dd6da4b742e7336b12ae6fa8de5e9f" kindref="member">XMC_USIC0_CH0</ref>, <ref refid="group___u_s_i_c_1gab7c9a3765e7d637114fc67951cf20c5b" kindref="member">XMC_USIC0_CH1</ref> to <ref refid="group___u_s_i_c_1ga6f71692f25917f0dcd77bb77e5518313" kindref="member">XMC_USIC2_CH1</ref> based on device support. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>Receive FIFO events to be cleared. <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1gga9f69efc0352072596048eca6e3da29c6a66c92990f46257208c42d175ccc3533c" kindref="member">XMC_USIC_CH_RXFIFO_EVENT_STANDARD</ref>, <ref refid="group___u_s_i_c_1gga9f69efc0352072596048eca6e3da29c6a3bf2b90bd5dfa7a2fe3827225e9cda40" kindref="member">XMC_USIC_CH_RXFIFO_EVENT_ERROR</ref>, <ref refid="group___u_s_i_c_1gga9f69efc0352072596048eca6e3da29c6a01cc9c90a0e05d5fa537b76884e20d5c" kindref="member">XMC_USIC_CH_RXFIFO_EVENT_ALTERNATE</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Clears the receive FIFO event flags in the status register. <linebreak/>
<linebreak/>
USIC channel peripheral does not clear the event flags after they are read. This API clears the events provided in the <emphasis>mask</emphasis> value. XMC_USIC_CH_RXFIFO_EVENT enumeration can be used as input. Multiple events can be cleared by providing a mask value obtained by bitwise OR operation of multiple event enumerations.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___u_s_i_c_1ga674dcaba8a7a575983ab61b27a580b2d" kindref="member">XMC_USIC_CH_RXFIFO_GetEvent()</ref> <linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="2232" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="2232" bodyend="2236"/>
      </memberdef>
      <memberdef kind="function" id="group___u_s_i_c_1ga4ba419dd17bdb7e7be5f5ca757910a00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_USIC_CH_RXFIFO_Configure</definition>
        <argsstring>(XMC_USIC_CH_t *const channel, const uint32_t data_pointer, const XMC_USIC_CH_FIFO_SIZE_t size, const uint32_t limit)</argsstring>
        <name>XMC_USIC_CH_RXFIFO_Configure</name>
        <param>
          <type><ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> *const</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>const uint32_t</type>
          <declname>data_pointer</declname>
        </param>
        <param>
          <type>const <ref refid="group___u_s_i_c_1gafdd0a07bee93d72936191b7e8555aefe" kindref="member">XMC_USIC_CH_FIFO_SIZE_t</ref></type>
          <declname>size</declname>
        </param>
        <param>
          <type>const uint32_t</type>
          <declname>limit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to USIC channel handler of type <ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1ga28dd6da4b742e7336b12ae6fa8de5e9f" kindref="member">XMC_USIC0_CH0</ref>, <ref refid="group___u_s_i_c_1gab7c9a3765e7d637114fc67951cf20c5b" kindref="member">XMC_USIC0_CH1</ref> to <ref refid="group___u_s_i_c_1ga6f71692f25917f0dcd77bb77e5518313" kindref="member">XMC_USIC2_CH1</ref> based on device support. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data_pointer</parametername>
</parameternamelist>
<parameterdescription>
<para>Start position inside the FIFO buffer. <linebreak/>
 <bold>Range:</bold> 0 to 63. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Required size of the receive FIFO. <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1ggafdd0a07bee93d72936191b7e8555aefea1c189be4c15d2176b740037fa220e4a4" kindref="member">XMC_USIC_CH_FIFO_DISABLED</ref>, <ref refid="group___u_s_i_c_1ggafdd0a07bee93d72936191b7e8555aefeac2b3558621719f1d4e64d55a0febb166" kindref="member">XMC_USIC_CH_FIFO_SIZE_2WORDS</ref>.. <ref refid="group___u_s_i_c_1ggafdd0a07bee93d72936191b7e8555aefead702883ad36b39b6014e45b31f1655e8" kindref="member">XMC_USIC_CH_FIFO_SIZE_64WORDS</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>limit</parametername>
</parameternamelist>
<parameterdescription>
<para>Threshold of receive FIFO filling level to be considered for generating events. <linebreak/>
 <bold>Range:</bold> 0 to <emphasis>size</emphasis> -1. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Configures the receive FIFO. <linebreak/>
<linebreak/>
Receive FIFO is the subset of a common FIFO sized 64 words. This FIFO is shared between 2 channels of the USIC module. Each channel can share the FIFO for transmission and reception. <emphasis>data_pointer</emphasis> represents the start index in the common FIFO, from where received data can be put. <emphasis>size</emphasis> represents the size of receive FIFO as a multiple of 2. Since the FIFO is shared between 2 USIC channels, FIFO size should be carefully selected. A FIFO standard receive buffer event or alternative receive buffer event is generated when the FIFO filling level exceeds the <emphasis>limit</emphasis> value.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___u_s_i_c_1gad4cdb767e1ac3a256b1335a19d2c33ad" kindref="member">XMC_USIC_CH_RXFIFO_EnableEvent()</ref>, <ref refid="group___u_s_i_c_1ga0cce6b36f9c5fc6b9487dcee14a04e1a" kindref="member">XMC_USIC_CH_RXFIFO_SetInterruptNodePointer()</ref> <linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="1968" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___u_s_i_c_1gaf5f963f40c8ab670bffe6ce88cdf462d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_USIC_CH_RXFIFO_DisableEvent</definition>
        <argsstring>(XMC_USIC_CH_t *const channel, const uint32_t event)</argsstring>
        <name>XMC_USIC_CH_RXFIFO_DisableEvent</name>
        <param>
          <type><ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> *const</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>const uint32_t</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to USIC channel handler of type <ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1ga28dd6da4b742e7336b12ae6fa8de5e9f" kindref="member">XMC_USIC0_CH0</ref>, <ref refid="group___u_s_i_c_1gab7c9a3765e7d637114fc67951cf20c5b" kindref="member">XMC_USIC0_CH1</ref> to <ref refid="group___u_s_i_c_1ga6f71692f25917f0dcd77bb77e5518313" kindref="member">XMC_USIC2_CH1</ref> based on device support. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>Events to be disabled. <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1gga4b8a7556ad13b0d7540a620c3d067689ac9ff6cf12767f7879611f5098732bd99" kindref="member">XMC_USIC_CH_RXFIFO_EVENT_CONF_STANDARD</ref>, <ref refid="group___u_s_i_c_1gga4b8a7556ad13b0d7540a620c3d067689ae36c9608a19fddadd13a0dbeb6474709" kindref="member">XMC_USIC_CH_RXFIFO_EVENT_CONF_ERROR</ref>, <ref refid="group___u_s_i_c_1gga4b8a7556ad13b0d7540a620c3d067689a48a5635b9e02bd166fe93bc2fa6304e6" kindref="member">XMC_USIC_CH_RXFIFO_EVENT_CONF_ALTERNATE</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Disables the selected interrupt events related to receive FIFO. <linebreak/>
<linebreak/>
By disabling the interrupt events, generation of interrupt is stopped. User can poll the event flags from the status register using the API <ref refid="group___u_s_i_c_1ga674dcaba8a7a575983ab61b27a580b2d" kindref="member">XMC_USIC_CH_RXFIFO_GetEvent()</ref>. Event bitmasks can be constructed using the enumeration <emphasis>XMC_USIC_CH_RXFIFO_EVENT_CONF</emphasis>. For providing multiple events, combine the events using bitwise OR operation.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___u_s_i_c_1ga674dcaba8a7a575983ab61b27a580b2d" kindref="member">XMC_USIC_CH_RXFIFO_GetEvent()</ref>, <ref refid="group___u_s_i_c_1gad4cdb767e1ac3a256b1335a19d2c33ad" kindref="member">XMC_USIC_CH_RXFIFO_EnableEvent()</ref> <linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="2057" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="2057" bodyend="2060"/>
      </memberdef>
      <memberdef kind="function" id="group___u_s_i_c_1gad4cdb767e1ac3a256b1335a19d2c33ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_USIC_CH_RXFIFO_EnableEvent</definition>
        <argsstring>(XMC_USIC_CH_t *const channel, const uint32_t event)</argsstring>
        <name>XMC_USIC_CH_RXFIFO_EnableEvent</name>
        <param>
          <type><ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> *const</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>const uint32_t</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to USIC channel handler of type <ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1ga28dd6da4b742e7336b12ae6fa8de5e9f" kindref="member">XMC_USIC0_CH0</ref>, <ref refid="group___u_s_i_c_1gab7c9a3765e7d637114fc67951cf20c5b" kindref="member">XMC_USIC0_CH1</ref> to <ref refid="group___u_s_i_c_1ga6f71692f25917f0dcd77bb77e5518313" kindref="member">XMC_USIC2_CH1</ref> based on device support. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>Events to be enabled. Multiple events can be bitwise OR combined. XMC_USIC_CH_RXFIFO_EVENT_CONF_t<linebreak/>
 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Enables the interrupt events related to transmit FIFO. <linebreak/>
<linebreak/>
Event bitmasks can be constructed using the enumeration <ref refid="group___u_s_i_c_1ga4b8a7556ad13b0d7540a620c3d067689" kindref="member">XMC_USIC_CH_RXFIFO_EVENT_CONF_t</ref>. Multiple events can be enabled by providing multiple events in a single call. For providing multiple events, combine the events using bitwise OR operation.<linebreak/>
</para>
</simplesect>
Note: API only enables the events. For interrupt generation, interrupt node must be configured and NVIC node must be enabled.</para>
<para><simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___u_s_i_c_1ga0cce6b36f9c5fc6b9487dcee14a04e1a" kindref="member">XMC_USIC_CH_RXFIFO_SetInterruptNodePointer()</ref> <linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="2033" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="2033" bodyend="2036"/>
      </memberdef>
      <memberdef kind="function" id="group___u_s_i_c_1gab8a59ec35554be7dbf41778888d2b69f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_USIC_CH_RXFIFO_Flush</definition>
        <argsstring>(XMC_USIC_CH_t *const channel)</argsstring>
        <name>XMC_USIC_CH_RXFIFO_Flush</name>
        <param>
          <type><ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> *const</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to USIC channel handler of type <ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1ga28dd6da4b742e7336b12ae6fa8de5e9f" kindref="member">XMC_USIC0_CH0</ref>, <ref refid="group___u_s_i_c_1gab7c9a3765e7d637114fc67951cf20c5b" kindref="member">XMC_USIC0_CH1</ref> to <ref refid="group___u_s_i_c_1ga6f71692f25917f0dcd77bb77e5518313" kindref="member">XMC_USIC2_CH1</ref> based on device support. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Clears the contents of receive FIFO. <linebreak/>
<linebreak/>
Receive FIFO contents will be cleared and the filling level will be reset to 0.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___u_s_i_c_1gac69592a81e495b0adf515547a0e8037e" kindref="member">XMC_USIC_CH_RXFIFO_GetLevel()</ref> <linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="2123" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="2123" bodyend="2126"/>
      </memberdef>
      <memberdef kind="function" id="group___u_s_i_c_1ga661b9482d7cc6b983f178bb6a30a5c76" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t XMC_USIC_CH_RXFIFO_GetData</definition>
        <argsstring>(XMC_USIC_CH_t *const channel)</argsstring>
        <name>XMC_USIC_CH_RXFIFO_GetData</name>
        <param>
          <type><ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> *const</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to USIC channel handler of type <ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1ga28dd6da4b742e7336b12ae6fa8de5e9f" kindref="member">XMC_USIC0_CH0</ref>, <ref refid="group___u_s_i_c_1gab7c9a3765e7d637114fc67951cf20c5b" kindref="member">XMC_USIC0_CH1</ref> to <ref refid="group___u_s_i_c_1ga6f71692f25917f0dcd77bb77e5518313" kindref="member">XMC_USIC2_CH1</ref> based on device support. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Value read from the receive FIFO. <linebreak/>
 <bold>Range:</bold> 16bit data. Length of data depends on the word length configuration.</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Gets data from the receive FIFO. <linebreak/>
<linebreak/>
Receive FIFO should be read only if data is availble in the FIFO. This can be checked using the API <ref refid="group___u_s_i_c_1gaa81c3a8fab62930c291910628a08f575" kindref="member">XMC_USIC_CH_RXFIFO_IsEmpty()</ref>. Receive FIFO error flag will be set if an attempt is made to read from an empty receive FIFO. To read all the received data, user should keep reading data until receive FIFO is empty.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___u_s_i_c_1ga92f2d42836e73b8a200c437e69611474" kindref="member">XMC_USIC_CH_RXFIFO_ClearEvent()</ref> <linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="2106" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="2106" bodyend="2109"/>
      </memberdef>
      <memberdef kind="function" id="group___u_s_i_c_1ga674dcaba8a7a575983ab61b27a580b2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t XMC_USIC_CH_RXFIFO_GetEvent</definition>
        <argsstring>(XMC_USIC_CH_t *const channel)</argsstring>
        <name>XMC_USIC_CH_RXFIFO_GetEvent</name>
        <param>
          <type><ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> *const</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to USIC channel handler of type <ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1ga28dd6da4b742e7336b12ae6fa8de5e9f" kindref="member">XMC_USIC0_CH0</ref>, <ref refid="group___u_s_i_c_1gab7c9a3765e7d637114fc67951cf20c5b" kindref="member">XMC_USIC0_CH1</ref> to <ref refid="group___u_s_i_c_1ga6f71692f25917f0dcd77bb77e5518313" kindref="member">XMC_USIC2_CH1</ref> based on device support. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Status of standard receive buffer, alternative receive buffer and receive buffer error events. <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1gga9f69efc0352072596048eca6e3da29c6a66c92990f46257208c42d175ccc3533c" kindref="member">XMC_USIC_CH_RXFIFO_EVENT_STANDARD</ref>, <ref refid="group___u_s_i_c_1gga9f69efc0352072596048eca6e3da29c6a3bf2b90bd5dfa7a2fe3827225e9cda40" kindref="member">XMC_USIC_CH_RXFIFO_EVENT_ERROR</ref>, <ref refid="group___u_s_i_c_1gga9f69efc0352072596048eca6e3da29c6a01cc9c90a0e05d5fa537b76884e20d5c" kindref="member">XMC_USIC_CH_RXFIFO_EVENT_ALTERNATE</ref>.</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Gets the receive FIFO events&apos; status. <linebreak/>
<linebreak/>
Gives the status of receive FIFO standard receive buffer event, alternative receive buffer event and receive buffer error event. The status bits are located at their bitpositions in the TRBSR register in the returned value. User can make use of the XMC_USIC_CH_RXFIFO_EVENT enumeration for checking the status of return value. The status can be found by using the bitwise AND operation on the returned value with the enumerated value.<linebreak/>
</para>
</simplesect>
Note: Event status flags should be cleared by the user explicitly.</para>
<para><simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___u_s_i_c_1ga92f2d42836e73b8a200c437e69611474" kindref="member">XMC_USIC_CH_RXFIFO_ClearEvent()</ref><linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="2206" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="2206" bodyend="2211"/>
      </memberdef>
      <memberdef kind="function" id="group___u_s_i_c_1gac69592a81e495b0adf515547a0e8037e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t XMC_USIC_CH_RXFIFO_GetLevel</definition>
        <argsstring>(XMC_USIC_CH_t *const channel)</argsstring>
        <name>XMC_USIC_CH_RXFIFO_GetLevel</name>
        <param>
          <type><ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> *const</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to USIC channel handler of type <ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1ga28dd6da4b742e7336b12ae6fa8de5e9f" kindref="member">XMC_USIC0_CH0</ref>, <ref refid="group___u_s_i_c_1gab7c9a3765e7d637114fc67951cf20c5b" kindref="member">XMC_USIC0_CH1</ref> to <ref refid="group___u_s_i_c_1ga6f71692f25917f0dcd77bb77e5518313" kindref="member">XMC_USIC2_CH1</ref> based on device support. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint32_t Receive FIFO filling level. <linebreak/>
 <bold>Range:</bold> minimum= 0(FIFO empty), maximum= receive FIFO size.</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Gets the receive FIFO filling level. <linebreak/>
<linebreak/>
For every word received, the filling level is incremented. The API gives the value of this filling level. The filling level is decremented when the data is read out of the receive FIFO.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___u_s_i_c_1gab8a59ec35554be7dbf41778888d2b69f" kindref="member">XMC_USIC_CH_RXFIFO_Flush()</ref>, XMC_USIC_CH_RXFIFO_PutData() <linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="2182" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="2182" bodyend="2185"/>
      </memberdef>
      <memberdef kind="function" id="group___u_s_i_c_1gaa81c3a8fab62930c291910628a08f575" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool XMC_USIC_CH_RXFIFO_IsEmpty</definition>
        <argsstring>(XMC_USIC_CH_t *const channel)</argsstring>
        <name>XMC_USIC_CH_RXFIFO_IsEmpty</name>
        <param>
          <type><ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> *const</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to USIC channel handler of type <ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1ga28dd6da4b742e7336b12ae6fa8de5e9f" kindref="member">XMC_USIC0_CH0</ref>, <ref refid="group___u_s_i_c_1gab7c9a3765e7d637114fc67951cf20c5b" kindref="member">XMC_USIC0_CH1</ref> to <ref refid="group___u_s_i_c_1ga6f71692f25917f0dcd77bb77e5518313" kindref="member">XMC_USIC2_CH1</ref> based on device support. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Status <emphasis>true</emphasis> if receive FIFO is empty, <emphasis>false</emphasis> if receive FIFO has some data.</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Checks if receive FIFO is empty. <linebreak/>
<linebreak/>
When the receive FIFO is empty, received data will be put in receive FIFO. When the last received word in the FIFO is read, FIFO empty flag is set. Any attempt to read from an empty receive FIFO will set the receive FIFO error flag.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___u_s_i_c_1gab8a59ec35554be7dbf41778888d2b69f" kindref="member">XMC_USIC_CH_RXFIFO_Flush()</ref>, XMC_USIC_CH_RXFIFO_PutData() <linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="2162" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="2162" bodyend="2165"/>
      </memberdef>
      <memberdef kind="function" id="group___u_s_i_c_1ga23338f848d35ee56a38af652e4a9db6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool XMC_USIC_CH_RXFIFO_IsFull</definition>
        <argsstring>(XMC_USIC_CH_t *const channel)</argsstring>
        <name>XMC_USIC_CH_RXFIFO_IsFull</name>
        <param>
          <type><ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> *const</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to USIC channel handler of type <ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1ga28dd6da4b742e7336b12ae6fa8de5e9f" kindref="member">XMC_USIC0_CH0</ref>, <ref refid="group___u_s_i_c_1gab7c9a3765e7d637114fc67951cf20c5b" kindref="member">XMC_USIC0_CH1</ref> to <ref refid="group___u_s_i_c_1ga6f71692f25917f0dcd77bb77e5518313" kindref="member">XMC_USIC2_CH1</ref> based on device support. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Status <emphasis>true</emphasis> if receive FIFO is full <emphasis>false</emphasis> if receive FIFO is not full.</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Checks if receive FIFO is full. <linebreak/>
<linebreak/>
When the receive FIFO filling level reaches the configured size, FIFO full flag is set. Any data received when the receive FIFO is full, is lost.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___u_s_i_c_1gaa81c3a8fab62930c291910628a08f575" kindref="member">XMC_USIC_CH_RXFIFO_IsEmpty()</ref>, <ref refid="group___u_s_i_c_1gab8a59ec35554be7dbf41778888d2b69f" kindref="member">XMC_USIC_CH_RXFIFO_Flush()</ref> <linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="2142" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="2142" bodyend="2145"/>
      </memberdef>
      <memberdef kind="function" id="group___u_s_i_c_1ga0cce6b36f9c5fc6b9487dcee14a04e1a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_USIC_CH_RXFIFO_SetInterruptNodePointer</definition>
        <argsstring>(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_t interrupt_node, const uint32_t service_request)</argsstring>
        <name>XMC_USIC_CH_RXFIFO_SetInterruptNodePointer</name>
        <param>
          <type><ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> *const</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>const <ref refid="group___u_s_i_c_1ga4b1bb4e4041f310e46c635b007ee2c73" kindref="member">XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_t</ref></type>
          <declname>interrupt_node</declname>
        </param>
        <param>
          <type>const uint32_t</type>
          <declname>service_request</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to USIC channel handler of type <ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1ga28dd6da4b742e7336b12ae6fa8de5e9f" kindref="member">XMC_USIC0_CH0</ref>, <ref refid="group___u_s_i_c_1gab7c9a3765e7d637114fc67951cf20c5b" kindref="member">XMC_USIC0_CH1</ref> to <ref refid="group___u_s_i_c_1ga6f71692f25917f0dcd77bb77e5518313" kindref="member">XMC_USIC2_CH1</ref> based on device support. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>interrupt_node</parametername>
</parameternamelist>
<parameterdescription>
<para>Node pointer representing the receive FIFO events. <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1gga4b1bb4e4041f310e46c635b007ee2c73a572414a4e5097bd3b8f6ca8b607e7c1e" kindref="member">XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_STANDARD</ref>, <ref refid="group___u_s_i_c_1gga4b1bb4e4041f310e46c635b007ee2c73a393b1acb8b60d2baebbc57ef8b64a718" kindref="member">XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_ALTERNATE</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>service_request</parametername>
</parameternamelist>
<parameterdescription>
<para>The service request to be used for interrupt generation.<linebreak/>
 <bold>Range:</bold> 0 to 5. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Sets an interrupt node for the receive FIFO events. <linebreak/>
<linebreak/>
A node pointer represents one or more interrupt events. Service request represents the interrupt node to be used among the 6 interrupt nodes available for USIC module. API configures the service request to be used for interrupt generation for the events selected. A receive FIFO event can generate an interrupt only if the interrupt node is configured for the event and the interrupt generation is enabled for the event. For example, transmit FIFO standard transmit buffer interrupt is generated if the interrupt node for the same is set and interrupt is enabled.<linebreak/>
</para>
</simplesect>
Note: NVIC node should be explicitly enabled for the interrupt generation.</para>
<para><simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___u_s_i_c_1gad4cdb767e1ac3a256b1335a19d2c33ad" kindref="member">XMC_USIC_CH_RXFIFO_EnableEvent()</ref> <linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="2086" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___u_s_i_c_1gae9984f496fe787c05b84dc6d1d65ee2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit</definition>
        <argsstring>(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_FIFO_SIZE_t size, const uint32_t limit)</argsstring>
        <name>XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit</name>
        <param>
          <type><ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> *const</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>const <ref refid="group___u_s_i_c_1gafdd0a07bee93d72936191b7e8555aefe" kindref="member">XMC_USIC_CH_FIFO_SIZE_t</ref></type>
          <declname>size</declname>
        </param>
        <param>
          <type>const uint32_t</type>
          <declname>limit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to USIC channel handler of type <ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1ga28dd6da4b742e7336b12ae6fa8de5e9f" kindref="member">XMC_USIC0_CH0</ref>, <ref refid="group___u_s_i_c_1gab7c9a3765e7d637114fc67951cf20c5b" kindref="member">XMC_USIC0_CH1</ref> to <ref refid="group___u_s_i_c_1ga6f71692f25917f0dcd77bb77e5518313" kindref="member">XMC_USIC2_CH1</ref> based on device support. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Required size of the receive FIFO. <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1ggafdd0a07bee93d72936191b7e8555aefea1c189be4c15d2176b740037fa220e4a4" kindref="member">XMC_USIC_CH_FIFO_DISABLED</ref>, <ref refid="group___u_s_i_c_1ggafdd0a07bee93d72936191b7e8555aefeac2b3558621719f1d4e64d55a0febb166" kindref="member">XMC_USIC_CH_FIFO_SIZE_2WORDS</ref>.. <ref refid="group___u_s_i_c_1ggafdd0a07bee93d72936191b7e8555aefead702883ad36b39b6014e45b31f1655e8" kindref="member">XMC_USIC_CH_FIFO_SIZE_64WORDS</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>limit</parametername>
</parameternamelist>
<parameterdescription>
<para>Threshold for receive FIFO filling level to be considered for generating events. <linebreak/>
 <bold>Range:</bold> 0 to <emphasis>size</emphasis> -1. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<xrefsect id="deprecated_1_deprecated000002"><xreftitle>Deprecated</xreftitle><xrefdescription><para>{ Use <ref refid="group___u_s_i_c_1ga3c05c804d8323d18d02d3bd30e3523ea" kindref="member">XMC_USIC_CH_RXFIFO_SetTriggerLimit()</ref> }</para>
</xrefdescription></xrefsect></para>
<para><simplesect kind="par"><title>Description</title><para>Sets the size and trigger limit for the receive FIFO. <linebreak/>
<linebreak/>
The API is not to be called for initializing the receive FIFO. The API shall be used for the runtime change of receive FIFO trigger limit. FIFO start position will not be affected on execution.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___u_s_i_c_1ga6f77f046f48083e3e86735636e86490b" kindref="member">XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit()</ref>\ n<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="1992" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___u_s_i_c_1ga3c05c804d8323d18d02d3bd30e3523ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_USIC_CH_RXFIFO_SetTriggerLimit</definition>
        <argsstring>(XMC_USIC_CH_t *const channel, const uint32_t limit)</argsstring>
        <name>XMC_USIC_CH_RXFIFO_SetTriggerLimit</name>
        <param>
          <type><ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> *const</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>const uint32_t</type>
          <declname>limit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to USIC channel handler of type <ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1ga28dd6da4b742e7336b12ae6fa8de5e9f" kindref="member">XMC_USIC0_CH0</ref>, <ref refid="group___u_s_i_c_1gab7c9a3765e7d637114fc67951cf20c5b" kindref="member">XMC_USIC0_CH1</ref> to <ref refid="group___u_s_i_c_1ga6f71692f25917f0dcd77bb77e5518313" kindref="member">XMC_USIC2_CH1</ref> based on device support. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>limit</parametername>
</parameternamelist>
<parameterdescription>
<para>Threshold for transmit FIFO filling level to be considered for generating events. <linebreak/>
 <bold>Range:</bold> 0 to <emphasis>fifo</emphasis> size -1. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Sets the trigger limit for the TX FIFO. <linebreak/>
<linebreak/>
 </para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___u_s_i_c_1ga6f77f046f48083e3e86735636e86490b" kindref="member">XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit()</ref> <linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="2009" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="2009" bodyend="2013"/>
      </memberdef>
      <memberdef kind="function" id="group___u_s_i_c_1gac9feec95c73b09889e494ec6d6898f4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___u_s_i_c_1gaf0ce1333656386f14f018b400beb9e39" kindref="member">XMC_USIC_CH_STATUS_t</ref></type>
        <definition>XMC_USIC_CH_STATUS_t XMC_USIC_CH_SetBaudrate</definition>
        <argsstring>(XMC_USIC_CH_t *const channel, uint32_t rate, uint32_t oversampling)</argsstring>
        <name>XMC_USIC_CH_SetBaudrate</name>
        <param>
          <type><ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> *const</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>rate</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>oversampling</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to USIC channel handler of type <ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1ga28dd6da4b742e7336b12ae6fa8de5e9f" kindref="member">XMC_USIC0_CH0</ref>, <ref refid="group___u_s_i_c_1gab7c9a3765e7d637114fc67951cf20c5b" kindref="member">XMC_USIC0_CH1</ref> to <ref refid="group___u_s_i_c_1ga6f71692f25917f0dcd77bb77e5518313" kindref="member">XMC_USIC2_CH1</ref> based on device support. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rate</parametername>
</parameternamelist>
<parameterdescription>
<para>Desired baudrate. <bold>Range:</bold> minimum value = 100, maximum value depends on the peripheral clock frequency <linebreak/>
 and <emphasis>oversampling</emphasis>. Maximum baudrate can be derived using the formula: (fperiph * 1023)/(1024 * oversampling) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>oversampling</parametername>
</parameternamelist>
<parameterdescription>
<para>Required oversampling. The value indicates the number of time quanta for one symbol of data. <linebreak/>
 This can be related to the number of samples for each logic state of the data signal. <linebreak/>
 <bold>Range:</bold> 1 to 32. Value should be chosen based on the protocol used. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Status indicating the baudrate configuration.<linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1ggaf0ce1333656386f14f018b400beb9e39a7f5eeda6309c7b3a3e8f08380ed47e3c" kindref="member">XMC_USIC_CH_STATUS_OK</ref> if baudrate is successfully configured, <ref refid="group___u_s_i_c_1ggaf0ce1333656386f14f018b400beb9e39af9cf48d10eb977902d20eeaed491bcf0" kindref="member">XMC_USIC_CH_STATUS_ERROR</ref> if desired baudrate or oversampling is invalid.</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Configures the baudrate of the USIC channel. <linebreak/>
<linebreak/>
Baudrate is configured by considering the peripheral frequency and the desired baudrate. Optimum values of FDR-&gt;STEP and BRG-&gt;PDIV are calulated and used for generating the desired baudrate.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___u_s_i_c_1ga3b02352ba5e94e8f79751dea304084e0" kindref="member">XMC_USIC_CH_SetStartTransmisionMode()</ref>, <ref refid="group___u_s_i_c_1ga7986fcfe3fd6bf9982e43b1eaabb02c2" kindref="member">XMC_USIC_CH_SetInputSource()</ref> <linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="700" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___u_s_i_c_1ga9ed19f59954ac846d36f0de9a2a99ba1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_USIC_CH_SetBaudrateDivider</definition>
        <argsstring>(XMC_USIC_CH_t *const channel, XMC_USIC_CH_BRG_CLOCK_SOURCE_t clksel, bool pppen, uint32_t pdiv, XMC_USIC_CH_BRG_CTQSEL_t ctqsel, uint32_t pctq, uint32_t dctq)</argsstring>
        <name>XMC_USIC_CH_SetBaudrateDivider</name>
        <param>
          <type><ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> *const</type>
          <declname>channel</declname>
        </param>
        <param>
          <type><ref refid="group___u_s_i_c_1ga4a6a3d9ca8a64d7689f25c8c688cbab9" kindref="member">XMC_USIC_CH_BRG_CLOCK_SOURCE_t</ref></type>
          <declname>clksel</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>pppen</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>pdiv</declname>
        </param>
        <param>
          <type><ref refid="group___u_s_i_c_1gabe90ddec74269de0d09a2757aff4b93f" kindref="member">XMC_USIC_CH_BRG_CTQSEL_t</ref></type>
          <declname>ctqsel</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>pctq</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>dctq</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to USIC channel handler of type <ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1ga28dd6da4b742e7336b12ae6fa8de5e9f" kindref="member">XMC_USIC0_CH0</ref>, <ref refid="group___u_s_i_c_1gab7c9a3765e7d637114fc67951cf20c5b" kindref="member">XMC_USIC0_CH1</ref> to <ref refid="group___u_s_i_c_1ga6f71692f25917f0dcd77bb77e5518313" kindref="member">XMC_USIC2_CH1</ref> based on device support. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>clksel</parametername>
</parameternamelist>
<parameterdescription>
<para>Baudrate generator clock source. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pppen</parametername>
</parameternamelist>
<parameterdescription>
<para>Enable 2:1 Divider for fPPP. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pdiv</parametername>
</parameternamelist>
<parameterdescription>
<para>Divider Factor to generate fPDIV = fPPP / (pDIV + 1) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ctqsel</parametername>
</parameternamelist>
<parameterdescription>
<para>Input selection for CTQ. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pctq</parametername>
</parameternamelist>
<parameterdescription>
<para>Pre-Divider for Time Quanta Counter. fCTQIN / (PCQT + 1) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dctq</parametername>
</parameternamelist>
<parameterdescription>
<para>Denominator for Time Quanta Counter. fTQ / (DCTQ + 1) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Configures the baudrate generator of the USIC channel.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___u_s_i_c_1gab97e3b358aaf1e4524420c8fada1bd92" kindref="member">XMC_USIC_CH_SetFractionalDivider()</ref> <linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="741" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___u_s_i_c_1gadd190656c8ecf2fbbb5375175e4f6115" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___u_s_i_c_1gaf0ce1333656386f14f018b400beb9e39" kindref="member">XMC_USIC_CH_STATUS_t</ref></type>
        <definition>XMC_USIC_CH_STATUS_t XMC_USIC_CH_SetBaudrateEx</definition>
        <argsstring>(XMC_USIC_CH_t *const channel, int32_t rate, int32_t oversampling)</argsstring>
        <name>XMC_USIC_CH_SetBaudrateEx</name>
        <param>
          <type><ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> *const</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>rate</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>oversampling</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to USIC channel handler of type <ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1ga28dd6da4b742e7336b12ae6fa8de5e9f" kindref="member">XMC_USIC0_CH0</ref>, <ref refid="group___u_s_i_c_1gab7c9a3765e7d637114fc67951cf20c5b" kindref="member">XMC_USIC0_CH1</ref> to <ref refid="group___u_s_i_c_1ga6f71692f25917f0dcd77bb77e5518313" kindref="member">XMC_USIC2_CH1</ref> based on device support. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rate</parametername>
</parameternamelist>
<parameterdescription>
<para>Desired baudrate. Only integer dividers of peripheral clock are achievable </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>oversampling</parametername>
</parameternamelist>
<parameterdescription>
<para>Required oversampling. The value indicates the number of time quanta for one symbol of data. <linebreak/>
 This can be related to the number of samples for each logic state of the data signal. <linebreak/>
 <bold>Range:</bold> 1 to 32. Value should be chosen based on the protocol used. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Status indicating the baudrate configuration.<linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1ggaf0ce1333656386f14f018b400beb9e39a7f5eeda6309c7b3a3e8f08380ed47e3c" kindref="member">XMC_USIC_CH_STATUS_OK</ref> if baudrate is successfully configured, <ref refid="group___u_s_i_c_1ggaf0ce1333656386f14f018b400beb9e39af9cf48d10eb977902d20eeaed491bcf0" kindref="member">XMC_USIC_CH_STATUS_ERROR</ref> if desired baudrate or oversampling is invalid.</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Configures the baudrate of the USIC channel using the integer divider which restrics the achievable baudrate but decreses jitter. <linebreak/>
<linebreak/>
Baudrate is configured by considering the peripheral frequency and the desired baudrate. Optimum values of FDR-&gt;STEP and BRG-&gt;PDIV are calulated and used for generating the desired baudrate.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___u_s_i_c_1ga3b02352ba5e94e8f79751dea304084e0" kindref="member">XMC_USIC_CH_SetStartTransmisionMode()</ref>, <ref refid="group___u_s_i_c_1ga7986fcfe3fd6bf9982e43b1eaabb02c2" kindref="member">XMC_USIC_CH_SetInputSource()</ref> <linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="722" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___u_s_i_c_1ga2876a325930da4b77ef46ec4e0acda0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_USIC_CH_SetBRGInputClockSource</definition>
        <argsstring>(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_BRG_CLOCK_SOURCE_t clock_source)</argsstring>
        <name>XMC_USIC_CH_SetBRGInputClockSource</name>
        <param>
          <type><ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> *const</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>const <ref refid="group___u_s_i_c_1ga4a6a3d9ca8a64d7689f25c8c688cbab9" kindref="member">XMC_USIC_CH_BRG_CLOCK_SOURCE_t</ref></type>
          <declname>clock_source</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to USIC channel handler of type <ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1ga28dd6da4b742e7336b12ae6fa8de5e9f" kindref="member">XMC_USIC0_CH0</ref>, <ref refid="group___u_s_i_c_1gab7c9a3765e7d637114fc67951cf20c5b" kindref="member">XMC_USIC0_CH1</ref> to <ref refid="group___u_s_i_c_1ga6f71692f25917f0dcd77bb77e5518313" kindref="member">XMC_USIC2_CH1</ref> based on device support. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>clock_source</parametername>
</parameternamelist>
<parameterdescription>
<para>clock source for the BRG. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Sets the clock source for the BRG. <linebreak/>
<linebreak/>
 </para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___u_s_i_c_1gaeef58e03c1253fce5b8a456f5d8c6da6" kindref="member">XMC_USIC_CH_SetInputTriggerCombinationMode()</ref>, XMC_USIC_CH_SetExternalClockBRGDivider()<linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="1084" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="1084" bodyend="1087"/>
      </memberdef>
      <memberdef kind="function" id="group___u_s_i_c_1ga920a20a26fbff1aaeb240af921f61ce4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_USIC_CH_SetDataOutputMode</definition>
        <argsstring>(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_DATA_OUTPUT_MODE_t data_output_mode)</argsstring>
        <name>XMC_USIC_CH_SetDataOutputMode</name>
        <param>
          <type><ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> *const</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>const <ref refid="group___u_s_i_c_1gab277976402d3da779839621f911fe89a" kindref="member">XMC_USIC_CH_DATA_OUTPUT_MODE_t</ref></type>
          <declname>data_output_mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to USIC channel handler of type <ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1ga28dd6da4b742e7336b12ae6fa8de5e9f" kindref="member">XMC_USIC0_CH0</ref>, <ref refid="group___u_s_i_c_1gab7c9a3765e7d637114fc67951cf20c5b" kindref="member">XMC_USIC0_CH1</ref> to <ref refid="group___u_s_i_c_1ga6f71692f25917f0dcd77bb77e5518313" kindref="member">XMC_USIC2_CH1</ref> based on device support. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data_output_mode</parametername>
</parameternamelist>
<parameterdescription>
<para>Data output mode. <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1ggab277976402d3da779839621f911fe89aa2ee23e3a426e82d5e9142079a16f00bf" kindref="member">XMC_USIC_CH_DATA_OUTPUT_MODE_NORMAL</ref>, <ref refid="group___u_s_i_c_1ggab277976402d3da779839621f911fe89aa984f346629f34906201bbde3a6863ede" kindref="member">XMC_USIC_CH_DATA_OUTPUT_MODE_INVERTED</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Configures the mode for data output. <linebreak/>
<linebreak/>
USIC channel can be configured to shift inverted data or direct data based on the input to the API.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___u_s_i_c_1ga3b02352ba5e94e8f79751dea304084e0" kindref="member">XMC_USIC_CH_SetStartTransmisionMode()</ref> <linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="1380" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="1380" bodyend="1384"/>
      </memberdef>
      <memberdef kind="function" id="group___u_s_i_c_1gab97e3b358aaf1e4524420c8fada1bd92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_USIC_CH_SetFractionalDivider</definition>
        <argsstring>(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_t mode, const uint16_t step)</argsstring>
        <name>XMC_USIC_CH_SetFractionalDivider</name>
        <param>
          <type><ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> *const</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>const <ref refid="group___u_s_i_c_1ga5917220b11972dd6f2fdeb20e344f99c" kindref="member">XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_t</ref></type>
          <declname>mode</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>step</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to USIC channel handler of type <ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1ga28dd6da4b742e7336b12ae6fa8de5e9f" kindref="member">XMC_USIC0_CH0</ref>, <ref refid="group___u_s_i_c_1gab7c9a3765e7d637114fc67951cf20c5b" kindref="member">XMC_USIC0_CH1</ref> to <ref refid="group___u_s_i_c_1ga6f71692f25917f0dcd77bb77e5518313" kindref="member">XMC_USIC2_CH1</ref> based on device support. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mode</parametername>
</parameternamelist>
<parameterdescription>
<para>divider mode <ref refid="group___u_s_i_c_1ga5917220b11972dd6f2fdeb20e344f99c" kindref="member">XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_t</ref> <linebreak/>
</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>step</parametername>
</parameternamelist>
<parameterdescription>
<para>divider <linebreak/>
 <bold>XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_NORMAL</bold> resulting divider = 1023 - step <linebreak/>
 <bold>XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_FRACTIONAL</bold> resulting divider = 1023 / step <linebreak/>
 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>The fractional divider generates its output frequency fFD by either dividing the input frequency fPERIPH by an integer factor n or by multiplication of n/1024. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="1202" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="1202" bodyend="1205"/>
      </memberdef>
      <memberdef kind="function" id="group___u_s_i_c_1ga23964f6d982b35388f3a7c82f5634e0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_USIC_CH_SetFrameLength</definition>
        <argsstring>(XMC_USIC_CH_t *const channel, const uint8_t frame_length)</argsstring>
        <name>XMC_USIC_CH_SetFrameLength</name>
        <param>
          <type><ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> *const</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>const uint8_t</type>
          <declname>frame_length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to USIC channel handler of type <ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1ga28dd6da4b742e7336b12ae6fa8de5e9f" kindref="member">XMC_USIC0_CH0</ref>, <ref refid="group___u_s_i_c_1gab7c9a3765e7d637114fc67951cf20c5b" kindref="member">XMC_USIC0_CH1</ref> to <ref refid="group___u_s_i_c_1ga6f71692f25917f0dcd77bb77e5518313" kindref="member">XMC_USIC2_CH1</ref> based on device support. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>frame_length</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of bits in a frame. <linebreak/>
 <bold>Range:</bold> minimum= 1, maximum= 0x3f. The maximum value for fixed frame size is 0x3f. <linebreak/>
 e.g: For a frame length of 16, <emphasis>frame_length</emphasis> should be provided as 16. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Define the data frame length.<linebreak/>
<linebreak/>
Set the number of bits to be serially transmitted in a frame. The frame length should be multiples of word length. If the value is set to 0x40, the frame length has to be controlled explicitly.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___u_s_i_c_1gabb9d02b8388a03cd28190c976cdb8b78" kindref="member">XMC_USIC_CH_SetWordLength()</ref>, <ref refid="group___u_s_i_c_1gaf1d2b03bb1350dfc628f0bfa9fb6ffb0" kindref="member">XMC_USIC_CH_EnableFrameLengthControl()</ref> <linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="1224" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="1224" bodyend="1228"/>
      </memberdef>
      <memberdef kind="function" id="group___u_s_i_c_1ga77ed1338593c1492f35321494aedfa48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_USIC_CH_SetInputSamplingFreq</definition>
        <argsstring>(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_INPUT_t input, const XMC_USIC_CH_INPUT_SAMPLING_FREQ_t sampling_freq)</argsstring>
        <name>XMC_USIC_CH_SetInputSamplingFreq</name>
        <param>
          <type><ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> *const</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>const <ref refid="group___u_s_i_c_1ga7b7c285b4dfe6c9132f2f478a59b2ac5" kindref="member">XMC_USIC_CH_INPUT_t</ref></type>
          <declname>input</declname>
        </param>
        <param>
          <type>const <ref refid="group___u_s_i_c_1ga4eabf4e044ae33972f726f904e788f8a" kindref="member">XMC_USIC_CH_INPUT_SAMPLING_FREQ_t</ref></type>
          <declname>sampling_freq</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to USIC channel handler of type <ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1ga28dd6da4b742e7336b12ae6fa8de5e9f" kindref="member">XMC_USIC0_CH0</ref>, <ref refid="group___u_s_i_c_1gab7c9a3765e7d637114fc67951cf20c5b" kindref="member">XMC_USIC0_CH1</ref> to <ref refid="group___u_s_i_c_1ga6f71692f25917f0dcd77bb77e5518313" kindref="member">XMC_USIC2_CH1</ref> based on device support.. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>input</parametername>
</parameternamelist>
<parameterdescription>
<para>USIC channel input stage of type <ref refid="group___u_s_i_c_1ga7b7c285b4dfe6c9132f2f478a59b2ac5" kindref="member">XMC_USIC_CH_INPUT_t</ref>. <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1gga7b7c285b4dfe6c9132f2f478a59b2ac5a218c2b06596afed7bf9bc41fb6db47ee" kindref="member">XMC_USIC_CH_INPUT_DX0</ref> to <ref refid="group___u_s_i_c_1gga7b7c285b4dfe6c9132f2f478a59b2ac5ae3ff15e93aa354e43133246bc552effd" kindref="member">XMC_USIC_CH_INPUT_DX5</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sampling_freq</parametername>
</parameternamelist>
<parameterdescription>
<para>Sampling frequency value of type <emphasis>XMC_USIC_CH_INPUT_SAMPLING_FREQ_t</emphasis>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Sets sampling frequency for USIC channel input data signal. <linebreak/>
<linebreak/>
 </para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___u_s_i_c_1ga7986fcfe3fd6bf9982e43b1eaabb02c2" kindref="member">XMC_USIC_CH_SetInputSource()</ref>, <ref refid="group___u_s_i_c_1ga1a5edb9ab8796da1f86be687fab65f32" kindref="member">XMC_USIC_CH_EnableInputSync()</ref>, <ref refid="group___u_s_i_c_1ga6a776750022b67a7d4075fb06eac39dc" kindref="member">XMC_USIC_CH_EnableInputDigitalFilter()</ref> <linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
<para>&lt; Common mask for SFSEL bitfield mask in DXnCR register </para>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="1042" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="1042" bodyend="1048"/>
      </memberdef>
      <memberdef kind="function" id="group___u_s_i_c_1ga7986fcfe3fd6bf9982e43b1eaabb02c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_USIC_CH_SetInputSource</definition>
        <argsstring>(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_INPUT_t input, const uint8_t source)</argsstring>
        <name>XMC_USIC_CH_SetInputSource</name>
        <param>
          <type><ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> *const</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>const <ref refid="group___u_s_i_c_1ga7b7c285b4dfe6c9132f2f478a59b2ac5" kindref="member">XMC_USIC_CH_INPUT_t</ref></type>
          <declname>input</declname>
        </param>
        <param>
          <type>const uint8_t</type>
          <declname>source</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to USIC channel handler of type <ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1ga28dd6da4b742e7336b12ae6fa8de5e9f" kindref="member">XMC_USIC0_CH0</ref>, <ref refid="group___u_s_i_c_1gab7c9a3765e7d637114fc67951cf20c5b" kindref="member">XMC_USIC0_CH1</ref> to <ref refid="group___u_s_i_c_1ga6f71692f25917f0dcd77bb77e5518313" kindref="member">XMC_USIC2_CH1</ref> based on device support. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>input</parametername>
</parameternamelist>
<parameterdescription>
<para>USIC channel input stage of type <ref refid="group___u_s_i_c_1ga7b7c285b4dfe6c9132f2f478a59b2ac5" kindref="member">XMC_USIC_CH_INPUT_t</ref>. <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1gga7b7c285b4dfe6c9132f2f478a59b2ac5a218c2b06596afed7bf9bc41fb6db47ee" kindref="member">XMC_USIC_CH_INPUT_DX0</ref> to <ref refid="group___u_s_i_c_1gga7b7c285b4dfe6c9132f2f478a59b2ac5ae3ff15e93aa354e43133246bc552effd" kindref="member">XMC_USIC_CH_INPUT_DX5</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>source</parametername>
</parameternamelist>
<parameterdescription>
<para>Input source select for the input stage. The table below maps the enum value with the input channel. <table rows="8" cols="2"><row>
<entry thead="no"><para>0</para>
</entry><entry thead="no"><para>DXnA</para>
</entry></row>
<row>
<entry thead="no"><para>1</para>
</entry><entry thead="no"><para>DXnB</para>
</entry></row>
<row>
<entry thead="no"><para>2</para>
</entry><entry thead="no"><para>DXnC</para>
</entry></row>
<row>
<entry thead="no"><para>3</para>
</entry><entry thead="no"><para>DXnD </para>
</entry></row>
<row>
<entry thead="no"><para>4</para>
</entry><entry thead="no"><para>DXnE</para>
</entry></row>
<row>
<entry thead="no"><para>5</para>
</entry><entry thead="no"><para>DXnF</para>
</entry></row>
<row>
<entry thead="no"><para>6</para>
</entry><entry thead="no"><para>DXnG</para>
</entry></row>
<row>
<entry thead="no"><para>7</para>
</entry><entry thead="no"><para>Always 1 </para>
</entry></row>
</table>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Selects the data source for USIC input stage.<linebreak/>
<linebreak/>
Selects the input data signal source among DXnA, DXnB.. DXnG for the input stage. The API can be used for all the input stages like DX0CR, DX1CR etc.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___u_s_i_c_1gae13b2003ea4d8703a9990d1e90048dc3" kindref="member">XMC_USIC_CH_EnableInputInversion()</ref>, <ref refid="group___u_s_i_c_1ga6a776750022b67a7d4075fb06eac39dc" kindref="member">XMC_USIC_CH_EnableInputDigitalFilter()</ref>, <ref refid="group___u_s_i_c_1ga1a5edb9ab8796da1f86be687fab65f32" kindref="member">XMC_USIC_CH_EnableInputSync()</ref>, <ref refid="group___u_s_i_c_1ga77ed1338593c1492f35321494aedfa48" kindref="member">XMC_USIC_CH_SetInputSamplingFreq()</ref><linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
<para>&lt; Common mask for DSEL bitfield mask in DXnCR register</para>
<para>&lt; Common mask for DSEL bitfield position in DXnCR register </para>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="838" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="838" bodyend="842"/>
      </memberdef>
      <memberdef kind="function" id="group___u_s_i_c_1gaeef58e03c1253fce5b8a456f5d8c6da6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_USIC_CH_SetInputTriggerCombinationMode</definition>
        <argsstring>(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_INPUT_t input, const XMC_USIC_CH_INPUT_COMBINATION_MODE_t combination_mode)</argsstring>
        <name>XMC_USIC_CH_SetInputTriggerCombinationMode</name>
        <param>
          <type><ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> *const</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>const <ref refid="group___u_s_i_c_1ga7b7c285b4dfe6c9132f2f478a59b2ac5" kindref="member">XMC_USIC_CH_INPUT_t</ref></type>
          <declname>input</declname>
        </param>
        <param>
          <type>const <ref refid="group___u_s_i_c_1ga4c50ae5a7f12a5496d82d2bc665e1db2" kindref="member">XMC_USIC_CH_INPUT_COMBINATION_MODE_t</ref></type>
          <declname>combination_mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to USIC channel handler of type <ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1ga28dd6da4b742e7336b12ae6fa8de5e9f" kindref="member">XMC_USIC0_CH0</ref>, <ref refid="group___u_s_i_c_1gab7c9a3765e7d637114fc67951cf20c5b" kindref="member">XMC_USIC0_CH1</ref> to <ref refid="group___u_s_i_c_1ga6f71692f25917f0dcd77bb77e5518313" kindref="member">XMC_USIC2_CH1</ref> based on device support.. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>input</parametername>
</parameternamelist>
<parameterdescription>
<para>USIC channel input stage of type <ref refid="group___u_s_i_c_1ga7b7c285b4dfe6c9132f2f478a59b2ac5" kindref="member">XMC_USIC_CH_INPUT_t</ref>. <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1gga7b7c285b4dfe6c9132f2f478a59b2ac5a218c2b06596afed7bf9bc41fb6db47ee" kindref="member">XMC_USIC_CH_INPUT_DX0</ref> to <ref refid="group___u_s_i_c_1gga7b7c285b4dfe6c9132f2f478a59b2ac5ae3ff15e93aa354e43133246bc552effd" kindref="member">XMC_USIC_CH_INPUT_DX5</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>combination_mode</parametername>
</parameternamelist>
<parameterdescription>
<para>Combination mode value of type <emphasis>XMC_USIC_CH_INPUT_COMBINATION_MODE_t</emphasis>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Selects which edge of the synchronized signal DXnS activates the trigger output DXnT of the input stage. <linebreak/>
<linebreak/>
 </para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___u_s_i_c_1ga7986fcfe3fd6bf9982e43b1eaabb02c2" kindref="member">XMC_USIC_CH_SetInputSource()</ref>, <ref refid="group___u_s_i_c_1ga1a5edb9ab8796da1f86be687fab65f32" kindref="member">XMC_USIC_CH_EnableInputSync()</ref>, <ref refid="group___u_s_i_c_1ga6a776750022b67a7d4075fb06eac39dc" kindref="member">XMC_USIC_CH_EnableInputDigitalFilter()</ref> <linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
<para>&lt; Common mask for CM bitfield mask in DXnCR register</para>
<para>&lt; Common mask for CM bitfield position in DXnCR register </para>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="1064" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="1064" bodyend="1070"/>
      </memberdef>
      <memberdef kind="function" id="group___u_s_i_c_1ga52f9fc18049dbc906b127e1f3662b4b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_USIC_CH_SetInterruptNodePointer</definition>
        <argsstring>(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_INTERRUPT_NODE_POINTER_t interrupt_node, const uint32_t service_request)</argsstring>
        <name>XMC_USIC_CH_SetInterruptNodePointer</name>
        <param>
          <type><ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> *const</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>const <ref refid="group___u_s_i_c_1ga074b5b1abff43f98316c7a5b69523e62" kindref="member">XMC_USIC_CH_INTERRUPT_NODE_POINTER_t</ref></type>
          <declname>interrupt_node</declname>
        </param>
        <param>
          <type>const uint32_t</type>
          <declname>service_request</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to USIC channel handler of type <ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1ga28dd6da4b742e7336b12ae6fa8de5e9f" kindref="member">XMC_USIC0_CH0</ref>, <ref refid="group___u_s_i_c_1gab7c9a3765e7d637114fc67951cf20c5b" kindref="member">XMC_USIC0_CH1</ref> to <ref refid="group___u_s_i_c_1ga6f71692f25917f0dcd77bb77e5518313" kindref="member">XMC_USIC2_CH1</ref> based on device support. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>interrupt_node</parametername>
</parameternamelist>
<parameterdescription>
<para>Interrupt node pointer to be configured. <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1gga074b5b1abff43f98316c7a5b69523e62ac3d37f726e6214704f420586ff8effc3" kindref="member">XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSMIT_SHIFT</ref>, <ref refid="group___u_s_i_c_1gga074b5b1abff43f98316c7a5b69523e62a2298fc6a0fcee48a76f0aea1eb95e3a6" kindref="member">XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSMIT_BUFFER</ref> etc. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>service_request</parametername>
</parameternamelist>
<parameterdescription>
<para>Service request number.<linebreak/>
 <bold>Range:</bold> 0 to 5. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Sets the interrupt node for USIC channel events. <linebreak/>
<linebreak/>
For an event to generate interrupt, node pointer should be configured with service request(SR0, SR1..SR5). The NVIC node gets linked to the interrupt event by doing so.<linebreak/>
 Note: NVIC node should be separately enabled to generate the interrupt.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___u_s_i_c_1ga6f9467a0f290d65f7292b45cc29e32b4" kindref="member">XMC_USIC_CH_EnableEvent()</ref> <linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="1292" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___u_s_i_c_1gaf9deda88e97525978786d4711aa75067" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_USIC_CH_SetMclkOutputPassiveLevel</definition>
        <argsstring>(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_t passive_level)</argsstring>
        <name>XMC_USIC_CH_SetMclkOutputPassiveLevel</name>
        <param>
          <type><ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> *const</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>const <ref refid="group___u_s_i_c_1gae9d3fa2244d754db4311c49fb624115e" kindref="member">XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_t</ref></type>
          <declname>passive_level</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to USIC channel handler of type <ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1ga28dd6da4b742e7336b12ae6fa8de5e9f" kindref="member">XMC_USIC0_CH0</ref>, <ref refid="group___u_s_i_c_1gab7c9a3765e7d637114fc67951cf20c5b" kindref="member">XMC_USIC0_CH1</ref> to <ref refid="group___u_s_i_c_1ga6f71692f25917f0dcd77bb77e5518313" kindref="member">XMC_USIC2_CH1</ref> based on device support. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>passive_level</parametername>
</parameternamelist>
<parameterdescription>
<para>Passive level for the master clock output. <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1ggae9d3fa2244d754db4311c49fb624115ea0fac1e2e39d4aa98d32a523e76240106" kindref="member">XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_0</ref>, <ref refid="group___u_s_i_c_1ggae9d3fa2244d754db4311c49fb624115ea387e03692c7d6b05d34825b4ada8422f" kindref="member">XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_1</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Sets the idle mode pin level for the master clock output. <linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="2282" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="2282" bodyend="2286"/>
      </memberdef>
      <memberdef kind="function" id="group___u_s_i_c_1ga8c04c213fd44c14b1bed871bb658683c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_USIC_CH_SetMode</definition>
        <argsstring>(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_OPERATING_MODE_t mode)</argsstring>
        <name>XMC_USIC_CH_SetMode</name>
        <param>
          <type><ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> *const</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>const <ref refid="group___u_s_i_c_1gac052842418ff3dda00900219ebda5de7" kindref="member">XMC_USIC_CH_OPERATING_MODE_t</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to USIC channel handler of type <ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1ga28dd6da4b742e7336b12ae6fa8de5e9f" kindref="member">XMC_USIC0_CH0</ref>, <ref refid="group___u_s_i_c_1gab7c9a3765e7d637114fc67951cf20c5b" kindref="member">XMC_USIC0_CH1</ref> to <ref refid="group___u_s_i_c_1ga6f71692f25917f0dcd77bb77e5518313" kindref="member">XMC_USIC2_CH1</ref> based on device support. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mode</parametername>
</parameternamelist>
<parameterdescription>
<para>USIC channel operation mode. <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1ggac052842418ff3dda00900219ebda5de7a0f42d929665110fb0a00c7adbaf5a763" kindref="member">XMC_USIC_CH_OPERATING_MODE_IDLE</ref>, <ref refid="group___u_s_i_c_1ggac052842418ff3dda00900219ebda5de7a899e292213839edfb7d88e356cb9d18f" kindref="member">XMC_USIC_CH_OPERATING_MODE_SPI</ref>, <ref refid="group___u_s_i_c_1ggac052842418ff3dda00900219ebda5de7a0130416b257e28bf39a388658dd61469" kindref="member">XMC_USIC_CH_OPERATING_MODE_UART</ref>, <ref refid="group___u_s_i_c_1ggac052842418ff3dda00900219ebda5de7a567f54d1a3c96472fca5d6039d5e3cbc" kindref="member">XMC_USIC_CH_OPERATING_MODE_I2S</ref>, <ref refid="group___u_s_i_c_1ggac052842418ff3dda00900219ebda5de7a4dad9ad4de2fe7406c1685606a651503" kindref="member">XMC_USIC_CH_OPERATING_MODE_I2C</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Sets the USIC channel operation mode.<linebreak/>
<linebreak/>
A USIC channel can support multiple serial communication protocols like UART, SPI, I2C and I2S. The API sets the input operation mode to the USIC channel.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___u_s_i_c_1ga48113f030b655f6eaa3b9f6b73474785" kindref="member">XMC_USIC_Enable()</ref>, <ref refid="group___u_s_i_c_1ga0567321036170adb335fef9b36dc3b71" kindref="member">XMC_USIC_CH_Enable()</ref> <linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="2336" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="2336" bodyend="2339"/>
      </memberdef>
      <memberdef kind="function" id="group___u_s_i_c_1ga46806897ccf781fb6289a8e12c11f9bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_USIC_CH_SetPassiveDataLevel</definition>
        <argsstring>(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_PASSIVE_DATA_LEVEL_t passive_level)</argsstring>
        <name>XMC_USIC_CH_SetPassiveDataLevel</name>
        <param>
          <type><ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> *const</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>const <ref refid="group___u_s_i_c_1ga352121d35153623dc793f3b59c075eb0" kindref="member">XMC_USIC_CH_PASSIVE_DATA_LEVEL_t</ref></type>
          <declname>passive_level</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to USIC channel handler of type <ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1ga28dd6da4b742e7336b12ae6fa8de5e9f" kindref="member">XMC_USIC0_CH0</ref>, <ref refid="group___u_s_i_c_1gab7c9a3765e7d637114fc67951cf20c5b" kindref="member">XMC_USIC0_CH1</ref> to <ref refid="group___u_s_i_c_1ga6f71692f25917f0dcd77bb77e5518313" kindref="member">XMC_USIC2_CH1</ref> based on device support. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>passive_level</parametername>
</parameternamelist>
<parameterdescription>
<para>Value of passive level for the channel. <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1gga352121d35153623dc793f3b59c075eb0a66effdf4e324ee2d69f90126db5fb21d" kindref="member">XMC_USIC_CH_PASSIVE_DATA_LEVEL0</ref>, <ref refid="group___u_s_i_c_1gga352121d35153623dc793f3b59c075eb0aaf5284d9c00837ad1a2caf6dd72315b5" kindref="member">XMC_USIC_CH_PASSIVE_DATA_LEVEL1</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Set the passive data level of the output signal. <linebreak/>
<linebreak/>
When the USIC channel transmit stage is idle, the output signal level stays at the configured passive level.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___u_s_i_c_1ga091c9637a98727f1dce0d159764aea24" kindref="member">XMC_USIC_CH_GetTransmitBufferStatus()</ref>, <ref refid="group___u_s_i_c_1ga3b02352ba5e94e8f79751dea304084e0" kindref="member">XMC_USIC_CH_SetStartTransmisionMode()</ref> <linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="1577" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="1577" bodyend="1582"/>
      </memberdef>
      <memberdef kind="function" id="group___u_s_i_c_1ga32297e60b34c5e69c4837909847add8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_USIC_CH_SetShiftDirection</definition>
        <argsstring>(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_SHIFT_DIRECTION_t shift_direction)</argsstring>
        <name>XMC_USIC_CH_SetShiftDirection</name>
        <param>
          <type><ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> *const</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>const <ref refid="group___u_s_i_c_1ga991fb058d9f1a8bf4fe6faf8aca78ab0" kindref="member">XMC_USIC_CH_SHIFT_DIRECTION_t</ref></type>
          <declname>shift_direction</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to USIC channel handler of type <ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1ga28dd6da4b742e7336b12ae6fa8de5e9f" kindref="member">XMC_USIC0_CH0</ref>, <ref refid="group___u_s_i_c_1gab7c9a3765e7d637114fc67951cf20c5b" kindref="member">XMC_USIC0_CH1</ref> to <ref refid="group___u_s_i_c_1ga6f71692f25917f0dcd77bb77e5518313" kindref="member">XMC_USIC2_CH1</ref> based on device support. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>word_length</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of bits to be configured for a data word. <linebreak/>
 <bold>Range:</bold> minimum= 1, maximum= 16. <linebreak/>
 e.g: For word length of 8, <emphasis>word_length</emphasis> should be provided as 8. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Sets the data word length in number of bits. <linebreak/>
<linebreak/>
Sets the number of bits to represent a data word. Frame length should be a multiple of word length.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___u_s_i_c_1ga23964f6d982b35388f3a7c82f5634e0f" kindref="member">XMC_USIC_CH_SetFrameLength()</ref><linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="1168" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="1168" bodyend="1171"/>
      </memberdef>
      <memberdef kind="function" id="group___u_s_i_c_1ga3b02352ba5e94e8f79751dea304084e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_USIC_CH_SetStartTransmisionMode</definition>
        <argsstring>(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_START_TRANSMISION_MODE_t start_transmision_mode)</argsstring>
        <name>XMC_USIC_CH_SetStartTransmisionMode</name>
        <param>
          <type><ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> *const</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>const <ref refid="group___u_s_i_c_1gae2db2ec4c7c43ae1454373789443b793" kindref="member">XMC_USIC_CH_START_TRANSMISION_MODE_t</ref></type>
          <declname>start_transmision_mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to USIC channel handler of type <ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1ga28dd6da4b742e7336b12ae6fa8de5e9f" kindref="member">XMC_USIC0_CH0</ref>, <ref refid="group___u_s_i_c_1gab7c9a3765e7d637114fc67951cf20c5b" kindref="member">XMC_USIC0_CH1</ref> to <ref refid="group___u_s_i_c_1ga6f71692f25917f0dcd77bb77e5518313" kindref="member">XMC_USIC2_CH1</ref> based on device support. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>start_transmision_mode</parametername>
</parameternamelist>
<parameterdescription>
<para>Transmission mode to be enabled. <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1ggae2db2ec4c7c43ae1454373789443b793a92234bf742ccdef5a487ab9fc7b7b47e" kindref="member">XMC_USIC_CH_START_TRANSMISION_DISABLED</ref>, <ref refid="group___u_s_i_c_1ggae2db2ec4c7c43ae1454373789443b793a7464a12e43e762ae3809838ed60b0848" kindref="member">XMC_USIC_CH_START_TRANSMISION_ON_TDV</ref>, <ref refid="group___u_s_i_c_1ggae2db2ec4c7c43ae1454373789443b793ad79ea1b2ea37a89eac8eec9905499589" kindref="member">XMC_USIC_CH_START_TRANSMISION_ON_TDV_DX2S_0</ref>, <ref refid="group___u_s_i_c_1ggae2db2ec4c7c43ae1454373789443b793a21bcda749a5e1eda8108ce39f8b97b7a" kindref="member">XMC_USIC_CH_START_TRANSMISION_ON_TDV_DX2S_1</ref></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Configures data transmission. <linebreak/>
<linebreak/>
The configuration affects the data shifted on the DOUT0 pin.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___u_s_i_c_1ga091c9637a98727f1dce0d159764aea24" kindref="member">XMC_USIC_CH_GetTransmitBufferStatus()</ref>, <ref refid="group___u_s_i_c_1ga920a20a26fbff1aaeb240af921f61ce4" kindref="member">XMC_USIC_CH_SetDataOutputMode()</ref> <linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="1359" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="1359" bodyend="1363"/>
      </memberdef>
      <memberdef kind="function" id="group___u_s_i_c_1ga2d92409ce4c718ecee4f9498d06346c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_USIC_CH_SetTransmitBufferStatus</definition>
        <argsstring>(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_TBUF_STATUS_SET_t transmit_buffer_status)</argsstring>
        <name>XMC_USIC_CH_SetTransmitBufferStatus</name>
        <param>
          <type><ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> *const</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>const <ref refid="group___u_s_i_c_1ga46769f2474ad4be950bcfc47582f5f87" kindref="member">XMC_USIC_CH_TBUF_STATUS_SET_t</ref></type>
          <declname>transmit_buffer_status</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to USIC channel handler of type <ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1ga28dd6da4b742e7336b12ae6fa8de5e9f" kindref="member">XMC_USIC0_CH0</ref>, <ref refid="group___u_s_i_c_1gab7c9a3765e7d637114fc67951cf20c5b" kindref="member">XMC_USIC0_CH1</ref> to <ref refid="group___u_s_i_c_1ga6f71692f25917f0dcd77bb77e5518313" kindref="member">XMC_USIC2_CH1</ref> based on device support. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>transmit_buffer_status</parametername>
</parameternamelist>
<parameterdescription>
<para>clearing or setting the TDV flag. <linebreak/>
 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Modify TCSR.TDV and TCSR.TE to control the start of a data word transmission by software.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___u_s_i_c_1ga091c9637a98727f1dce0d159764aea24" kindref="member">XMC_USIC_CH_GetTransmitBufferStatus()</ref> <linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="1538" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="1538" bodyend="1542"/>
      </memberdef>
      <memberdef kind="function" id="group___u_s_i_c_1gabb9d02b8388a03cd28190c976cdb8b78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_USIC_CH_SetWordLength</definition>
        <argsstring>(XMC_USIC_CH_t *const channel, const uint8_t word_length)</argsstring>
        <name>XMC_USIC_CH_SetWordLength</name>
        <param>
          <type><ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> *const</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>const uint8_t</type>
          <declname>word_length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to USIC channel handler of type <ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1ga28dd6da4b742e7336b12ae6fa8de5e9f" kindref="member">XMC_USIC0_CH0</ref>, <ref refid="group___u_s_i_c_1gab7c9a3765e7d637114fc67951cf20c5b" kindref="member">XMC_USIC0_CH1</ref> to <ref refid="group___u_s_i_c_1ga6f71692f25917f0dcd77bb77e5518313" kindref="member">XMC_USIC2_CH1</ref> based on device support. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>word_length</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of bits to be configured for a data word. <linebreak/>
 <bold>Range:</bold> minimum= 1, maximum= 16. <linebreak/>
 e.g: For word length of 8, <emphasis>word_length</emphasis> should be provided as 8. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Sets the data word length in number of bits. <linebreak/>
<linebreak/>
Sets the number of bits to represent a data word. Frame length should be a multiple of word length.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___u_s_i_c_1ga23964f6d982b35388f3a7c82f5634e0f" kindref="member">XMC_USIC_CH_SetFrameLength()</ref><linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="1147" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="1147" bodyend="1151"/>
      </memberdef>
      <memberdef kind="function" id="group___u_s_i_c_1ga6fa0313a4dfcade23a7098631edefc50" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_USIC_CH_TriggerServiceRequest</definition>
        <argsstring>(XMC_USIC_CH_t *const channel, const uint32_t service_request_line)</argsstring>
        <name>XMC_USIC_CH_TriggerServiceRequest</name>
        <param>
          <type><ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> *const</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>const uint32_t</type>
          <declname>service_request_line</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to USIC channel handler of type <ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1ga28dd6da4b742e7336b12ae6fa8de5e9f" kindref="member">XMC_USIC0_CH0</ref>, <ref refid="group___u_s_i_c_1gab7c9a3765e7d637114fc67951cf20c5b" kindref="member">XMC_USIC0_CH1</ref> to <ref refid="group___u_s_i_c_1ga6f71692f25917f0dcd77bb77e5518313" kindref="member">XMC_USIC2_CH1</ref> based on device support. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>service_request_line</parametername>
</parameternamelist>
<parameterdescription>
<para>service request number of the event to be triggered. <linebreak/>
 <bold>Range:</bold> 0 to 5. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Trigger a USIC interrupt service request.<linebreak/>
<linebreak/>
When the USIC service request is triggered, the NVIC interrupt associated with it will be generated if enabled.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___u_s_i_c_1ga52f9fc18049dbc906b127e1f3662b4b3" kindref="member">XMC_USIC_CH_SetInterruptNodePointer()</ref> <linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="1520" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="1520" bodyend="1523"/>
      </memberdef>
      <memberdef kind="function" id="group___u_s_i_c_1gaf6c7228b9e6c44332c077acf720f12b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_USIC_CH_TXFIFO_ClearEvent</definition>
        <argsstring>(XMC_USIC_CH_t *const channel, const uint32_t event)</argsstring>
        <name>XMC_USIC_CH_TXFIFO_ClearEvent</name>
        <param>
          <type><ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> *const</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>const uint32_t</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to USIC channel handler of type <ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1ga28dd6da4b742e7336b12ae6fa8de5e9f" kindref="member">XMC_USIC0_CH0</ref>, <ref refid="group___u_s_i_c_1gab7c9a3765e7d637114fc67951cf20c5b" kindref="member">XMC_USIC0_CH1</ref> to <ref refid="group___u_s_i_c_1ga6f71692f25917f0dcd77bb77e5518313" kindref="member">XMC_USIC2_CH1</ref> based on device support. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>Transmit FIFO events to be cleared. <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1gga6e964201594d82a691896a52cbfd5620a1e44a086ab5e16b5832160e1ce085eac" kindref="member">XMC_USIC_CH_TXFIFO_EVENT_STANDARD</ref>, <ref refid="group___u_s_i_c_1gga6e964201594d82a691896a52cbfd5620a309215a549219964d0d04ebcc22f6e33" kindref="member">XMC_USIC_CH_TXFIFO_EVENT_ERROR</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Clears the transmit FIFO event flags in the status register. <linebreak/>
<linebreak/>
USIC channel peripheral does not clear the event flags after they are read. This API clears the events provided in the <emphasis>mask</emphasis> value. XMC_USIC_CH_TXFIFO_EVENT enumeration can be used as input. Multiple events can be cleared by providing a mask value obtained by bitwise OR operation of multiple event enumerations.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___u_s_i_c_1gadad2288d7f198fbc582dc4af7d1386c5" kindref="member">XMC_USIC_CH_TXFIFO_GetEvent()</ref> <linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="1940" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="1940" bodyend="1944"/>
      </memberdef>
      <memberdef kind="function" id="group___u_s_i_c_1ga7cfe52daa733ba40e9b93fec60b04406" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_USIC_CH_TXFIFO_Configure</definition>
        <argsstring>(XMC_USIC_CH_t *const channel, const uint32_t data_pointer, const XMC_USIC_CH_FIFO_SIZE_t size, const uint32_t limit)</argsstring>
        <name>XMC_USIC_CH_TXFIFO_Configure</name>
        <param>
          <type><ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> *const</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>const uint32_t</type>
          <declname>data_pointer</declname>
        </param>
        <param>
          <type>const <ref refid="group___u_s_i_c_1gafdd0a07bee93d72936191b7e8555aefe" kindref="member">XMC_USIC_CH_FIFO_SIZE_t</ref></type>
          <declname>size</declname>
        </param>
        <param>
          <type>const uint32_t</type>
          <declname>limit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to USIC channel handler of type <ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1ga28dd6da4b742e7336b12ae6fa8de5e9f" kindref="member">XMC_USIC0_CH0</ref>, <ref refid="group___u_s_i_c_1gab7c9a3765e7d637114fc67951cf20c5b" kindref="member">XMC_USIC0_CH1</ref> to <ref refid="group___u_s_i_c_1ga6f71692f25917f0dcd77bb77e5518313" kindref="member">XMC_USIC2_CH1</ref> based on device support. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data_pointer</parametername>
</parameternamelist>
<parameterdescription>
<para>Start position inside the FIFO buffer. <linebreak/>
 <bold>Range:</bold> 0 to 63. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Required size of the transmit FIFO. <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1ggafdd0a07bee93d72936191b7e8555aefea1c189be4c15d2176b740037fa220e4a4" kindref="member">XMC_USIC_CH_FIFO_DISABLED</ref>, <ref refid="group___u_s_i_c_1ggafdd0a07bee93d72936191b7e8555aefeac2b3558621719f1d4e64d55a0febb166" kindref="member">XMC_USIC_CH_FIFO_SIZE_2WORDS</ref>.. <ref refid="group___u_s_i_c_1ggafdd0a07bee93d72936191b7e8555aefead702883ad36b39b6014e45b31f1655e8" kindref="member">XMC_USIC_CH_FIFO_SIZE_64WORDS</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>limit</parametername>
</parameternamelist>
<parameterdescription>
<para>Threshold of transmit FIFO filling level to be considered for generating events. <linebreak/>
 <bold>Range:</bold> 0 to <emphasis>size</emphasis> -1. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Initializes the transmit FIFO. <linebreak/>
<linebreak/>
Transmit FIFO is a subset of a common FIFO sized 64 words. This FIFO is shared between 2 channels of the USIC module. Each channel can share the FIFO for transmission and reception. <emphasis>data_pointer</emphasis> represents the start index in the common FIFO, from where transmit data can be put, for the selected USIC channel. <emphasis>size</emphasis> represents the size of transmit FIFO as a multiple of<orderedlist>
<listitem><para>Since the FIFO is shared between 2 USIC channels, FIFO size should be carefully selected. A FIFO standard transmit buffer event is generated when the FIFO filling level falls below the <emphasis>limit</emphasis> value.</para>
</listitem></orderedlist>
</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___u_s_i_c_1ga4688634fee0d7fbdefca290999ca7b49" kindref="member">XMC_USIC_CH_TXFIFO_EnableEvent()</ref>, <ref refid="group___u_s_i_c_1ga63e10af0afcde1c73c39cd6522ac0614" kindref="member">XMC_USIC_CH_TXFIFO_SetInterruptNodePointer()</ref> <linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="1607" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___u_s_i_c_1ga11e72155477de1a0495e4f85362fad86" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_USIC_CH_TXFIFO_DisableEvent</definition>
        <argsstring>(XMC_USIC_CH_t *const channel, const uint32_t event)</argsstring>
        <name>XMC_USIC_CH_TXFIFO_DisableEvent</name>
        <param>
          <type><ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> *const</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>const uint32_t</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to USIC channel handler of type <ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1ga28dd6da4b742e7336b12ae6fa8de5e9f" kindref="member">XMC_USIC0_CH0</ref>, <ref refid="group___u_s_i_c_1gab7c9a3765e7d637114fc67951cf20c5b" kindref="member">XMC_USIC0_CH1</ref> to <ref refid="group___u_s_i_c_1ga6f71692f25917f0dcd77bb77e5518313" kindref="member">XMC_USIC2_CH1</ref> based on device support. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>Events to be disabled. <ref refid="group___u_s_i_c_1gac7690c669fbca7c9710ba7294df39a6d" kindref="member">XMC_USIC_CH_TXFIFO_EVENT_CONF_t</ref> <linebreak/>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Disables the interrupt events related to transmit FIFO. <linebreak/>
<linebreak/>
By disabling the interrupt events, generation of interrupt is stopped. User can poll the event flags from the status register using the API <ref refid="group___u_s_i_c_1gadad2288d7f198fbc582dc4af7d1386c5" kindref="member">XMC_USIC_CH_TXFIFO_GetEvent()</ref>. Event bitmasks can be constructed using the enumeration <ref refid="group___u_s_i_c_1gac7690c669fbca7c9710ba7294df39a6d" kindref="member">XMC_USIC_CH_TXFIFO_EVENT_CONF_t</ref>. For providing multiple events, combine the events using bitwise OR operation.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___u_s_i_c_1gadad2288d7f198fbc582dc4af7d1386c5" kindref="member">XMC_USIC_CH_TXFIFO_GetEvent()</ref>, <ref refid="group___u_s_i_c_1ga4688634fee0d7fbdefca290999ca7b49" kindref="member">XMC_USIC_CH_TXFIFO_EnableEvent()</ref> <linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="1697" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="1697" bodyend="1700"/>
      </memberdef>
      <memberdef kind="function" id="group___u_s_i_c_1ga4688634fee0d7fbdefca290999ca7b49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_USIC_CH_TXFIFO_EnableEvent</definition>
        <argsstring>(XMC_USIC_CH_t *const channel, const uint32_t event)</argsstring>
        <name>XMC_USIC_CH_TXFIFO_EnableEvent</name>
        <param>
          <type><ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> *const</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>const uint32_t</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to USIC channel handler of type <ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1ga28dd6da4b742e7336b12ae6fa8de5e9f" kindref="member">XMC_USIC0_CH0</ref>, <ref refid="group___u_s_i_c_1gab7c9a3765e7d637114fc67951cf20c5b" kindref="member">XMC_USIC0_CH1</ref> to <ref refid="group___u_s_i_c_1ga6f71692f25917f0dcd77bb77e5518313" kindref="member">XMC_USIC2_CH1</ref> based on device support. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>Events to be enabled. Multiple events can be bitwise OR combined. <ref refid="group___u_s_i_c_1gac7690c669fbca7c9710ba7294df39a6d" kindref="member">XMC_USIC_CH_TXFIFO_EVENT_CONF_t</ref> <linebreak/>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Enables the interrupt events related to transmit FIFO. <linebreak/>
<linebreak/>
Event bitmasks can be constructed using the enumeration <ref refid="group___u_s_i_c_1gac7690c669fbca7c9710ba7294df39a6d" kindref="member">XMC_USIC_CH_TXFIFO_EVENT_CONF_t</ref>. Multiple events can be enabled by providing multiple events in a single call. For providing multiple events, combine the events using bitwise OR operation. Events are configured in the TBCTR register.<linebreak/>
</para>
</simplesect>
Note: API only enables the events. For interrupt generation, interrupt node must be configured and NVIC node must be enabled.</para>
<para><simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___u_s_i_c_1ga63e10af0afcde1c73c39cd6522ac0614" kindref="member">XMC_USIC_CH_TXFIFO_SetInterruptNodePointer()</ref> <linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="1675" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="1675" bodyend="1678"/>
      </memberdef>
      <memberdef kind="function" id="group___u_s_i_c_1gab075189d6283b3cff45bb4f38d1bd4aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_USIC_CH_TXFIFO_Flush</definition>
        <argsstring>(XMC_USIC_CH_t *const channel)</argsstring>
        <name>XMC_USIC_CH_TXFIFO_Flush</name>
        <param>
          <type><ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> *const</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to USIC channel handler of type <ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1ga28dd6da4b742e7336b12ae6fa8de5e9f" kindref="member">XMC_USIC0_CH0</ref>, <ref refid="group___u_s_i_c_1gab7c9a3765e7d637114fc67951cf20c5b" kindref="member">XMC_USIC0_CH1</ref> to <ref refid="group___u_s_i_c_1ga6f71692f25917f0dcd77bb77e5518313" kindref="member">XMC_USIC2_CH1</ref> based on device support. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Clears the contents of transmit FIFO. <linebreak/>
<linebreak/>
Transmit FIFO contents will be cleared and the filling level will be reset to 0.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___u_s_i_c_1ga8724f831f2fc77366ece9f4b91bc095f" kindref="member">XMC_USIC_CH_TXFIFO_GetLevel()</ref> <linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="1836" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="1836" bodyend="1839"/>
      </memberdef>
      <memberdef kind="function" id="group___u_s_i_c_1gadad2288d7f198fbc582dc4af7d1386c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t XMC_USIC_CH_TXFIFO_GetEvent</definition>
        <argsstring>(XMC_USIC_CH_t *const channel)</argsstring>
        <name>XMC_USIC_CH_TXFIFO_GetEvent</name>
        <param>
          <type><ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> *const</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to USIC channel handler of type <ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1ga28dd6da4b742e7336b12ae6fa8de5e9f" kindref="member">XMC_USIC0_CH0</ref>, <ref refid="group___u_s_i_c_1gab7c9a3765e7d637114fc67951cf20c5b" kindref="member">XMC_USIC0_CH1</ref> to <ref refid="group___u_s_i_c_1ga6f71692f25917f0dcd77bb77e5518313" kindref="member">XMC_USIC2_CH1</ref> based on device support. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Status of standard transmit and transmit buffer error events. <ref refid="group___u_s_i_c_1ga6e964201594d82a691896a52cbfd5620" kindref="member">XMC_USIC_CH_TXFIFO_EVENT_t</ref> <linebreak/>
 </para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Gets the transmit FIFO event status. <linebreak/>
<linebreak/>
Gives the status of transmit FIFO standard transmit buffer event and transmit buffer error event. The status bits are located at their bit positions in the TRBSR register in the returned value. User can make use of the <ref refid="group___u_s_i_c_1ga6e964201594d82a691896a52cbfd5620" kindref="member">XMC_USIC_CH_TXFIFO_EVENT_t</ref> enumeration for checking the status of return value. The status can be found by using the bitwise AND operation on the returned value with the enumerated value.<linebreak/>
</para>
</simplesect>
Note: Event status flags should be cleared by the user explicitly.</para>
<para><simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___u_s_i_c_1gaf6c7228b9e6c44332c077acf720f12b9" kindref="member">XMC_USIC_CH_TXFIFO_ClearEvent()</ref> <linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="1916" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="1916" bodyend="1920"/>
      </memberdef>
      <memberdef kind="function" id="group___u_s_i_c_1ga8724f831f2fc77366ece9f4b91bc095f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t XMC_USIC_CH_TXFIFO_GetLevel</definition>
        <argsstring>(XMC_USIC_CH_t *const channel)</argsstring>
        <name>XMC_USIC_CH_TXFIFO_GetLevel</name>
        <param>
          <type><ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> *const</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to USIC channel handler of type <ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1ga28dd6da4b742e7336b12ae6fa8de5e9f" kindref="member">XMC_USIC0_CH0</ref>, <ref refid="group___u_s_i_c_1gab7c9a3765e7d637114fc67951cf20c5b" kindref="member">XMC_USIC0_CH1</ref> to <ref refid="group___u_s_i_c_1ga6f71692f25917f0dcd77bb77e5518313" kindref="member">XMC_USIC2_CH1</ref> based on device support. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Transmit FIFO filling level. <linebreak/>
 <bold>Range:</bold> minimum= 0(FIFO empty), maximum= transmit FIFO size.</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Gets the transmit FIFO filling level. <linebreak/>
<linebreak/>
For every word written to the FIFO, filling level is updated. The API gives the value of this filling level.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___u_s_i_c_1gab075189d6283b3cff45bb4f38d1bd4aa" kindref="member">XMC_USIC_CH_TXFIFO_Flush()</ref>, <ref refid="group___u_s_i_c_1gae96e9afeaefe2585b687e36f6227727f" kindref="member">XMC_USIC_CH_TXFIFO_PutData()</ref> <linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="1894" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="1894" bodyend="1897"/>
      </memberdef>
      <memberdef kind="function" id="group___u_s_i_c_1ga0cb5c1c2623ce6281ed8683007da127b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool XMC_USIC_CH_TXFIFO_IsEmpty</definition>
        <argsstring>(XMC_USIC_CH_t *const channel)</argsstring>
        <name>XMC_USIC_CH_TXFIFO_IsEmpty</name>
        <param>
          <type><ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> *const</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to USIC channel handler of type <ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1ga28dd6da4b742e7336b12ae6fa8de5e9f" kindref="member">XMC_USIC0_CH0</ref>, <ref refid="group___u_s_i_c_1gab7c9a3765e7d637114fc67951cf20c5b" kindref="member">XMC_USIC0_CH1</ref> to <ref refid="group___u_s_i_c_1ga6f71692f25917f0dcd77bb77e5518313" kindref="member">XMC_USIC2_CH1</ref> based on device support. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Status <emphasis>true</emphasis> if transmit FIFO is empty <emphasis>false</emphasis> if transmit FIFO has some data.</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Checks if transmit FIFO is empty. <linebreak/>
<linebreak/>
When the transmit FIFO is empty, data can be written to FIFO. When the last written word to the transmit FIFO is transmitted out of the FIFO, FIFO empty flag is set.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___u_s_i_c_1gab075189d6283b3cff45bb4f38d1bd4aa" kindref="member">XMC_USIC_CH_TXFIFO_Flush()</ref>, <ref refid="group___u_s_i_c_1gae96e9afeaefe2585b687e36f6227727f" kindref="member">XMC_USIC_CH_TXFIFO_PutData()</ref> <linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="1875" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="1875" bodyend="1878"/>
      </memberdef>
      <memberdef kind="function" id="group___u_s_i_c_1gaaee9b8efb56290224bfe1d5ac9b273a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool XMC_USIC_CH_TXFIFO_IsFull</definition>
        <argsstring>(XMC_USIC_CH_t *const channel)</argsstring>
        <name>XMC_USIC_CH_TXFIFO_IsFull</name>
        <param>
          <type><ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> *const</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to USIC channel handler of type <ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1ga28dd6da4b742e7336b12ae6fa8de5e9f" kindref="member">XMC_USIC0_CH0</ref>, <ref refid="group___u_s_i_c_1gab7c9a3765e7d637114fc67951cf20c5b" kindref="member">XMC_USIC0_CH1</ref> to <ref refid="group___u_s_i_c_1ga6f71692f25917f0dcd77bb77e5518313" kindref="member">XMC_USIC2_CH1</ref> based on device support. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Status <emphasis>true</emphasis> if transmit FIFO is full <emphasis>false</emphasis> if transmit FIFO is not full.</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Checks if transmit FIFO is full. <linebreak/>
<linebreak/>
When the transmit FIFO filling level reaches the configured size, FIFO full flag is set. User should not write to the FIFO when the transmit FIFO is full.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___u_s_i_c_1ga0cb5c1c2623ce6281ed8683007da127b" kindref="member">XMC_USIC_CH_TXFIFO_IsEmpty()</ref>, <ref refid="group___u_s_i_c_1gab075189d6283b3cff45bb4f38d1bd4aa" kindref="member">XMC_USIC_CH_TXFIFO_Flush()</ref> <linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="1855" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="1855" bodyend="1858"/>
      </memberdef>
      <memberdef kind="function" id="group___u_s_i_c_1gae96e9afeaefe2585b687e36f6227727f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_USIC_CH_TXFIFO_PutData</definition>
        <argsstring>(XMC_USIC_CH_t *const channel, const uint16_t data)</argsstring>
        <name>XMC_USIC_CH_TXFIFO_PutData</name>
        <param>
          <type><ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> *const</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to USIC channel handler of type <ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1ga28dd6da4b742e7336b12ae6fa8de5e9f" kindref="member">XMC_USIC0_CH0</ref>, <ref refid="group___u_s_i_c_1gab7c9a3765e7d637114fc67951cf20c5b" kindref="member">XMC_USIC0_CH1</ref> to <ref refid="group___u_s_i_c_1ga6f71692f25917f0dcd77bb77e5518313" kindref="member">XMC_USIC2_CH1</ref> based on device support. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Data to be transmitted. <linebreak/>
 <bold>Range:</bold> 16bit unsigned data. minimum= 0, maximum= 65535 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Writes data into the transmit FIFO. <linebreak/>
<linebreak/>
The data provided is placed in the transmit FIFO. The transmit FIFO should be configured before calling this API.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___u_s_i_c_1ga4688634fee0d7fbdefca290999ca7b49" kindref="member">XMC_USIC_CH_TXFIFO_EnableEvent()</ref> <linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="1745" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="1745" bodyend="1748"/>
      </memberdef>
      <memberdef kind="function" id="group___u_s_i_c_1gacd104b83180de6dba78ae2b2a3213a8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_USIC_CH_TXFIFO_PutDataEx</definition>
        <argsstring>(XMC_USIC_CH_t *const channel, const uint16_t data, uint8_t loc)</argsstring>
        <name>XMC_USIC_CH_TXFIFO_PutDataEx</name>
        <param>
          <type><ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> *const</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>data</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>loc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to USIC channel handler of type <ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1ga28dd6da4b742e7336b12ae6fa8de5e9f" kindref="member">XMC_USIC0_CH0</ref>, <ref refid="group___u_s_i_c_1gab7c9a3765e7d637114fc67951cf20c5b" kindref="member">XMC_USIC0_CH1</ref> to <ref refid="group___u_s_i_c_1ga6f71692f25917f0dcd77bb77e5518313" kindref="member">XMC_USIC2_CH1</ref> based on device support. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Data to be transmitted. <linebreak/>
 <bold>Range:</bold> 16bit unsigned data. minimum= 0, maximum= 65535 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>loc</parametername>
</parameternamelist>
<parameterdescription>
<para>Input location. <linebreak/>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Transmit data can be loaded to TBUF by software by writing to the transmit buffer input locations TBUFx (x = 00-31), consisting of 32 consecutive addresses. The data written to one of these input locations is stored in the transmit buffer TBUF. Additionally, the address of the written location is evaluated and can be used for additional control purposes. This 5-bit wide information (named Transmit Control Information TCI) can be used for different purposes in different protocols.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___u_s_i_c_1gaed632dac3fdb73bee4a6cf4c6cd507e1" kindref="member">XMC_USIC_CH_EnableWordLengthControl()</ref> <linebreak/>
<ref refid="group___u_s_i_c_1gaf1d2b03bb1350dfc628f0bfa9fb6ffb0" kindref="member">XMC_USIC_CH_EnableFrameLengthControl()</ref> <linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="1770" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="1770" bodyend="1773"/>
      </memberdef>
      <memberdef kind="function" id="group___u_s_i_c_1ga0f14560e863b15c6bd123e534332e9f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_USIC_CH_TXFIFO_PutDataFLEMode</definition>
        <argsstring>(XMC_USIC_CH_t *const channel, const uint16_t data, const uint32_t frame_length)</argsstring>
        <name>XMC_USIC_CH_TXFIFO_PutDataFLEMode</name>
        <param>
          <type><ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> *const</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const uint32_t</type>
          <declname>frame_length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to USIC channel handler of type <ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1ga28dd6da4b742e7336b12ae6fa8de5e9f" kindref="member">XMC_USIC0_CH0</ref>, <ref refid="group___u_s_i_c_1gab7c9a3765e7d637114fc67951cf20c5b" kindref="member">XMC_USIC0_CH1</ref> to <ref refid="group___u_s_i_c_1ga6f71692f25917f0dcd77bb77e5518313" kindref="member">XMC_USIC2_CH1</ref> based on device support. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Data to be transmitted. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>frame_length</parametername>
</parameternamelist>
<parameterdescription>
<para>Frame length to be configured while transmitting the data. <linebreak/>
 <bold>Range:</bold> minimum= 0, maximum= 31. e.g: For a frame length of 16, set <emphasis>frame_length</emphasis> as 15. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Writes data to the transmit FIFO in frame length control mode. <linebreak/>
<linebreak/>
When frame length control is enabled for dynamic update of frame length, this API can be used. <emphasis>frame_length</emphasis> represents the frame length to be updated by the peripheral. <emphasis>frame_length</emphasis> is used as index for the IN[] register array.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___u_s_i_c_1gacd104b83180de6dba78ae2b2a3213a8c" kindref="member">XMC_USIC_CH_TXFIFO_PutDataEx()</ref> <linebreak/>
<ref refid="group___u_s_i_c_1gaf1d2b03bb1350dfc628f0bfa9fb6ffb0" kindref="member">XMC_USIC_CH_EnableFrameLengthControl()</ref> <linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="1793" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="1793" bodyend="1798"/>
      </memberdef>
      <memberdef kind="function" id="group___u_s_i_c_1ga9ff4e6996ea2318ceea8294be1d40c30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_USIC_CH_TXFIFO_PutDataHPCMode</definition>
        <argsstring>(XMC_USIC_CH_t *const channel, const uint16_t data, const uint32_t frame_length)</argsstring>
        <name>XMC_USIC_CH_TXFIFO_PutDataHPCMode</name>
        <param>
          <type><ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> *const</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const uint32_t</type>
          <declname>frame_length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to USIC channel handler of type <ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1ga28dd6da4b742e7336b12ae6fa8de5e9f" kindref="member">XMC_USIC0_CH0</ref>, <ref refid="group___u_s_i_c_1gab7c9a3765e7d637114fc67951cf20c5b" kindref="member">XMC_USIC0_CH1</ref> to <ref refid="group___u_s_i_c_1ga6f71692f25917f0dcd77bb77e5518313" kindref="member">XMC_USIC2_CH1</ref> based on device support. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Data to be transmitted. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>frame_length</parametername>
</parameternamelist>
<parameterdescription>
<para>Frame length to be configured while transmitting the data. <linebreak/>
 <bold>Range:</bold> minimum= 0, maximum= 31. e.g: For a frame length of 16, set <emphasis>frame_length</emphasis> as 15. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Writes data to the transmit FIFO in hardware port control mode. <linebreak/>
<linebreak/>
When hardware port control is enabled for dynamic update of frame length, this API can be used. <emphasis>frame_length</emphasis> represents the frame length to be updated by the peripheral. <emphasis>frame_length</emphasis> is used as index for the IN[] register array.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___u_s_i_c_1gaf1d2b03bb1350dfc628f0bfa9fb6ffb0" kindref="member">XMC_USIC_CH_EnableFrameLengthControl()</ref> <linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="1817" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="1817" bodyend="1822"/>
      </memberdef>
      <memberdef kind="function" id="group___u_s_i_c_1ga63e10af0afcde1c73c39cd6522ac0614" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_USIC_CH_TXFIFO_SetInterruptNodePointer</definition>
        <argsstring>(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_t interrupt_node, const uint32_t service_request)</argsstring>
        <name>XMC_USIC_CH_TXFIFO_SetInterruptNodePointer</name>
        <param>
          <type><ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> *const</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>const <ref refid="group___u_s_i_c_1gaed66b290b2c45854fcd04580fb6349a1" kindref="member">XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_t</ref></type>
          <declname>interrupt_node</declname>
        </param>
        <param>
          <type>const uint32_t</type>
          <declname>service_request</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to USIC channel handler of type <ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1ga28dd6da4b742e7336b12ae6fa8de5e9f" kindref="member">XMC_USIC0_CH0</ref>, <ref refid="group___u_s_i_c_1gab7c9a3765e7d637114fc67951cf20c5b" kindref="member">XMC_USIC0_CH1</ref> to <ref refid="group___u_s_i_c_1ga6f71692f25917f0dcd77bb77e5518313" kindref="member">XMC_USIC2_CH1</ref> based on device support. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>interrupt_node</parametername>
</parameternamelist>
<parameterdescription>
<para>Node pointer representing the transmit FIFO events. <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1ggaed66b290b2c45854fcd04580fb6349a1a5f3f135726f0f39eb99ab43cfdf699cf" kindref="member">XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_STANDARD</ref>, <ref refid="group___u_s_i_c_1ggaed66b290b2c45854fcd04580fb6349a1aef96e8370ec2178615f3a24a04da19fe" kindref="member">XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_ALTERNATE</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>service_request</parametername>
</parameternamelist>
<parameterdescription>
<para>The service request to be used for interrupt generation. <linebreak/>
 <bold>Range:</bold> 0 to 5. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Sets an interrupt node for the transmit FIFO events.<linebreak/>
<linebreak/>
A node pointer represents one or more interrupt events. Service request represents the interrupt node to be used among the 6 interrupt nodes available for USIC module. API configures the service request to be used for interrupt generation for the events selected. A transmit FIFO event can generate an interrupt only if the interrupt node is configured for the event and the interrupt generation is enabled for the event. For example, transmit FIFO standard transmit buffer interrupt is generated if the interrupt node for the same is set and interrupt is enabled.<linebreak/>
</para>
</simplesect>
Note: NVIC node should be explicitly enabled for the interrupt generation.</para>
<para><simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___u_s_i_c_1ga4688634fee0d7fbdefca290999ca7b49" kindref="member">XMC_USIC_CH_TXFIFO_EnableEvent()</ref> <linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="1726" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___u_s_i_c_1ga6f77f046f48083e3e86735636e86490b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit</definition>
        <argsstring>(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_FIFO_SIZE_t size, const uint32_t limit)</argsstring>
        <name>XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit</name>
        <param>
          <type><ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> *const</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>const <ref refid="group___u_s_i_c_1gafdd0a07bee93d72936191b7e8555aefe" kindref="member">XMC_USIC_CH_FIFO_SIZE_t</ref></type>
          <declname>size</declname>
        </param>
        <param>
          <type>const uint32_t</type>
          <declname>limit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to USIC channel handler of type <ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1ga28dd6da4b742e7336b12ae6fa8de5e9f" kindref="member">XMC_USIC0_CH0</ref>, <ref refid="group___u_s_i_c_1gab7c9a3765e7d637114fc67951cf20c5b" kindref="member">XMC_USIC0_CH1</ref> to <ref refid="group___u_s_i_c_1ga6f71692f25917f0dcd77bb77e5518313" kindref="member">XMC_USIC2_CH1</ref> based on device support. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Required size of the transmit FIFO. <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1ggafdd0a07bee93d72936191b7e8555aefea1c189be4c15d2176b740037fa220e4a4" kindref="member">XMC_USIC_CH_FIFO_DISABLED</ref>, <ref refid="group___u_s_i_c_1ggafdd0a07bee93d72936191b7e8555aefeac2b3558621719f1d4e64d55a0febb166" kindref="member">XMC_USIC_CH_FIFO_SIZE_2WORDS</ref>.. <ref refid="group___u_s_i_c_1ggafdd0a07bee93d72936191b7e8555aefead702883ad36b39b6014e45b31f1655e8" kindref="member">XMC_USIC_CH_FIFO_SIZE_64WORDS</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>limit</parametername>
</parameternamelist>
<parameterdescription>
<para>Threshold for transmit FIFO filling level to be considered for generating events. <linebreak/>
 <bold>Range:</bold> 0 to <emphasis>size</emphasis> -1. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<xrefsect id="deprecated_1_deprecated000001"><xreftitle>Deprecated</xreftitle><xrefdescription><para>{ Use <ref refid="group___u_s_i_c_1ga38937a6f31ca7d8b4ec880910fdf8925" kindref="member">XMC_USIC_CH_TXFIFO_SetTriggerLimit()</ref> }</para>
</xrefdescription></xrefsect></para>
<para><simplesect kind="par"><title>Description</title><para>Sets the size and trigger limit for the transmit FIFO. <linebreak/>
<linebreak/>
The API is not to be called for initializing the transmit FIFO. The API shall be used for the runtime change of transmit FIFO trigger limit. FIFO start position will not be affected on execution.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___u_s_i_c_1gae9984f496fe787c05b84dc6d1d65ee2e" kindref="member">XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit()</ref> <linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="1631" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___u_s_i_c_1ga38937a6f31ca7d8b4ec880910fdf8925" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_USIC_CH_TXFIFO_SetTriggerLimit</definition>
        <argsstring>(XMC_USIC_CH_t *const channel, const uint32_t limit)</argsstring>
        <name>XMC_USIC_CH_TXFIFO_SetTriggerLimit</name>
        <param>
          <type><ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> *const</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>const uint32_t</type>
          <declname>limit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to USIC channel handler of type <ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1ga28dd6da4b742e7336b12ae6fa8de5e9f" kindref="member">XMC_USIC0_CH0</ref>, <ref refid="group___u_s_i_c_1gab7c9a3765e7d637114fc67951cf20c5b" kindref="member">XMC_USIC0_CH1</ref> to <ref refid="group___u_s_i_c_1ga6f71692f25917f0dcd77bb77e5518313" kindref="member">XMC_USIC2_CH1</ref> based on device support. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>limit</parametername>
</parameternamelist>
<parameterdescription>
<para>Threshold for transmit FIFO filling level to be considered for generating events. <linebreak/>
 <bold>Range:</bold> 0 to <emphasis>fifo</emphasis> size -1. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Sets the trigger limit for the TX FIFO. <linebreak/>
<linebreak/>
 </para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___u_s_i_c_1gae9984f496fe787c05b84dc6d1d65ee2e" kindref="member">XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit()</ref> <linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="1649" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="1649" bodyend="1653"/>
      </memberdef>
      <memberdef kind="function" id="group___u_s_i_c_1ga90d18508eb69fc4254bd0c3774d16150" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_USIC_CH_WriteToTBUF</definition>
        <argsstring>(XMC_USIC_CH_t *const channel, const uint16_t data)</argsstring>
        <name>XMC_USIC_CH_WriteToTBUF</name>
        <param>
          <type><ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> *const</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to USIC channel handler of type <ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1ga28dd6da4b742e7336b12ae6fa8de5e9f" kindref="member">XMC_USIC0_CH0</ref>, <ref refid="group___u_s_i_c_1gab7c9a3765e7d637114fc67951cf20c5b" kindref="member">XMC_USIC0_CH1</ref> to <ref refid="group___u_s_i_c_1ga6f71692f25917f0dcd77bb77e5518313" kindref="member">XMC_USIC2_CH1</ref> based on device support. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Data to be transmitted. <linebreak/>
 <bold>Range:</bold> 16bit unsigned data. minimum= 0, maximum= 65535 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Writes data into the transmit buffer. <linebreak/>
<linebreak/>
The data provided is placed in TBUF[0U].</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___u_s_i_c_1ga40eb0199fd41ec5993971dad8a0e2d40" kindref="member">XMC_USIC_CH_WriteToTBUFTCI()</ref> <linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="1104" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="1104" bodyend="1107"/>
      </memberdef>
      <memberdef kind="function" id="group___u_s_i_c_1ga40eb0199fd41ec5993971dad8a0e2d40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_USIC_CH_WriteToTBUFTCI</definition>
        <argsstring>(XMC_USIC_CH_t *const channel, const uint16_t data, const uint32_t transmit_control_information)</argsstring>
        <name>XMC_USIC_CH_WriteToTBUFTCI</name>
        <param>
          <type><ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> *const</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const uint32_t</type>
          <declname>transmit_control_information</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to USIC channel handler of type <ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> <linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1ga28dd6da4b742e7336b12ae6fa8de5e9f" kindref="member">XMC_USIC0_CH0</ref>, <ref refid="group___u_s_i_c_1gab7c9a3765e7d637114fc67951cf20c5b" kindref="member">XMC_USIC0_CH1</ref> to <ref refid="group___u_s_i_c_1ga6f71692f25917f0dcd77bb77e5518313" kindref="member">XMC_USIC2_CH1</ref> based on device support. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Data to be transmitted. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>transmit_control_information</parametername>
</parameternamelist>
<parameterdescription>
<para>transmit control information to be configured while transmitting the data. <linebreak/>
 <bold>Range:</bold> minimum= 0, maximum= 31. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Writes data to the transmit buffer in a control mode. <linebreak/>
<linebreak/>
When the respective control mode is enabled , this API can be used.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___u_s_i_c_1ga90d18508eb69fc4254bd0c3774d16150" kindref="member">XMC_USIC_CH_WriteToTBUF()</ref> <linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="1125" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="1125" bodyend="1130"/>
      </memberdef>
      <memberdef kind="function" id="group___u_s_i_c_1ga5d7f987aa7be2cc8497a0895f2ba3f90" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_USIC_Disable</definition>
        <argsstring>(XMC_USIC_t *const usic)</argsstring>
        <name>XMC_USIC_Disable</name>
        <param>
          <type><ref refid="group___u_s_i_c_1ga953ad8cb6043e854f32ab9a53042aedb" kindref="member">XMC_USIC_t</ref> *const</type>
          <declname>usic</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>usic</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to USIC module handler of type XMC_USIC_t.<linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1gab5471c5fff228b5b9695356e7d2fc98a" kindref="member">XMC_USIC0</ref> to <ref refid="group___u_s_i_c_1ga13fa3c2b59871d42c4a0918d1de5e1b3" kindref="member">XMC_USIC2</ref> based on device support. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Disables the USIC module.<linebreak/>
<linebreak/>
Disables the clock for the USIC module by following the clock disabling sequence for the selected device.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___u_s_i_c_1gaaba8dc6e2fe4c5cf3fd3418d532a9412" kindref="member">XMC_USIC_CH_Disable()</ref>, <ref refid="group___u_s_i_c_1ga48113f030b655f6eaa3b9f6b73474785" kindref="member">XMC_USIC_Enable()</ref> <linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="650" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___u_s_i_c_1ga48113f030b655f6eaa3b9f6b73474785" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_USIC_Enable</definition>
        <argsstring>(XMC_USIC_t *const usic)</argsstring>
        <name>XMC_USIC_Enable</name>
        <param>
          <type><ref refid="group___u_s_i_c_1ga953ad8cb6043e854f32ab9a53042aedb" kindref="member">XMC_USIC_t</ref> *const</type>
          <declname>usic</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>usic</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to USIC module handler of type XMC_USIC_t.<linebreak/>
 <bold>Range:</bold> <ref refid="group___u_s_i_c_1gab5471c5fff228b5b9695356e7d2fc98a" kindref="member">XMC_USIC0</ref> to <ref refid="group___u_s_i_c_1ga13fa3c2b59871d42c4a0918d1de5e1b3" kindref="member">XMC_USIC2</ref> based on device support. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Enables the USIC module.<linebreak/>
<linebreak/>
Enables the clock for the USIC module by following the clock enabling sequence for the selected device.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___u_s_i_c_1ga0567321036170adb335fef9b36dc3b71" kindref="member">XMC_USIC_CH_Enable()</ref>, <ref refid="group___u_s_i_c_1ga5d7f987aa7be2cc8497a0895f2ba3f90" kindref="member">XMC_USIC_Disable()</ref> <linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="636" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___u_s_i_c_1ga175c3f24ef75607b827888bc8b84fff5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool XMC_USIC_IsChannelValid</definition>
        <argsstring>(const XMC_USIC_CH_t *const channel)</argsstring>
        <name>XMC_USIC_IsChannelValid</name>
        <param>
          <type>const <ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref> *const</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>&lt; USIC0 channel 0 base address</para>
<para>&lt; USIC0 channel 1 base address</para>
<para>&lt; USIC1 channel 0 base address</para>
<para>&lt; USIC1 channel 1 base address</para>
<para>&lt; USIC2 channel 0 base address</para>
<para>&lt; USIC2 channel 1 base address </para>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="606" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="606" bodyend="619"/>
      </memberdef>
      <memberdef kind="function" id="group___u_s_i_c_1gaa7e00ca6654c493f25076f002c48dad6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool XMC_USIC_IsModuleValid</definition>
        <argsstring>(const XMC_USIC_t *const module)</argsstring>
        <name>XMC_USIC_IsModuleValid</name>
        <param>
          <type>const <ref refid="group___u_s_i_c_1ga953ad8cb6043e854f32ab9a53042aedb" kindref="member">XMC_USIC_t</ref> *const</type>
          <declname>module</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>&lt; USIC0 module base address</para>
<para>&lt; USIC1 module base address</para>
<para>&lt; USIC2 module base address </para>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" line="591" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h" bodystart="591" bodyend="604"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="date"><para>2020-12-05 </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="115"><highlight class="preprocessor">#ifndef<sp/>XMC_USIC_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>XMC_USIC_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="118"><highlight class="comment"><sp/>*<sp/>HEADER<sp/>FILES</highlight></codeline>
<codeline lineno="119"><highlight class="comment"><sp/>*******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xmc_common.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="148"><highlight class="comment"><sp/>*<sp/>MACROS</highlight></codeline>
<codeline lineno="149"><highlight class="comment"><sp/>*******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>XMC_USIC0<sp/>((XMC_USIC_t<sp/>*)USIC0_BASE)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="152"><highlight class="preprocessor">#define<sp/>XMC_USIC0_CH0<sp/>((XMC_USIC_CH_t<sp/>*)USIC0_CH0_BASE)<sp/></highlight></codeline>
<codeline lineno="153"><highlight class="preprocessor">#define<sp/>XMC_USIC0_CH1<sp/>((XMC_USIC_CH_t<sp/>*)USIC0_CH1_BASE)<sp/></highlight></codeline>
<codeline lineno="155"><highlight class="preprocessor">#if<sp/>defined(USIC1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>XMC_USIC1<sp/>((XMC_USIC_t<sp/>*)USIC1_BASE)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="157"><highlight class="preprocessor">#define<sp/>XMC_USIC1_CH0<sp/>((XMC_USIC_CH_t<sp/>*)USIC1_CH0_BASE)<sp/></highlight></codeline>
<codeline lineno="158"><highlight class="preprocessor">#define<sp/>XMC_USIC1_CH1<sp/>((XMC_USIC_CH_t<sp/>*)USIC1_CH1_BASE)<sp/></highlight></codeline>
<codeline lineno="159"><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(USIC2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>XMC_USIC2<sp/>((XMC_USIC_t<sp/>*)USIC2_BASE)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="163"><highlight class="preprocessor">#define<sp/>XMC_USIC2_CH0<sp/>((XMC_USIC_CH_t<sp/>*)USIC2_CH0_BASE)<sp/></highlight></codeline>
<codeline lineno="164"><highlight class="preprocessor">#define<sp/>XMC_USIC2_CH1<sp/>((XMC_USIC_CH_t<sp/>*)USIC2_CH1_BASE)<sp/></highlight></codeline>
<codeline lineno="165"><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>USIC_CH_DXCR_DSEL_Msk<sp/><sp/>USIC_CH_DX0CR_DSEL_Msk<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="168"><highlight class="preprocessor">#define<sp/>USIC_CH_DXCR_DSEL_Pos<sp/><sp/>USIC_CH_DX0CR_DSEL_Pos<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="169"><highlight class="preprocessor">#define<sp/>USIC_CH_DXCR_SFSEL_Pos<sp/>USIC_CH_DX0CR_SFSEL_Pos<sp/><sp/></highlight></codeline>
<codeline lineno="170"><highlight class="preprocessor">#define<sp/>USIC_CH_DXCR_SFSEL_Msk<sp/>USIC_CH_DX0CR_SFSEL_Msk<sp/><sp/></highlight></codeline>
<codeline lineno="171"><highlight class="preprocessor">#define<sp/>USIC_CH_DXCR_DPOL_Msk<sp/><sp/>USIC_CH_DX0CR_DPOL_Msk<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="172"><highlight class="preprocessor">#define<sp/>USIC_CH_DXCR_DFEN_Msk<sp/><sp/>USIC_CH_DX0CR_DFEN_Msk<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="173"><highlight class="preprocessor">#define<sp/>USIC_CH_DXCR_DSEN_Msk<sp/><sp/>USIC_CH_DX0CR_DSEN_Msk<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="174"><highlight class="preprocessor">#define<sp/>USIC_CH_DXCR_CM_Pos<sp/><sp/><sp/><sp/>USIC_CH_DX0CR_CM_Pos<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="175"><highlight class="preprocessor">#define<sp/>USIC_CH_DXCR_CM_Msk<sp/><sp/><sp/><sp/>USIC_CH_DX0CR_CM_Msk<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="176"><highlight class="preprocessor">#define<sp/>USIC_CH_DXCR_INSW_Msk<sp/><sp/>USIC_CH_DX0CR_INSW_Msk<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="177"><highlight class="preprocessor">#define<sp/>USIC_CH_DXCR_INSW_pos<sp/><sp/>USIC_CH_DX0CR_INSW_Pos<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="179"><highlight class="preprocessor">#if<sp/>UC_FAMILY<sp/>==<sp/>XMC1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xmc1_usic_map.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>UC_FAMILY<sp/>==<sp/>XMC4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xmc4_usic_map.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="188"><highlight class="comment"><sp/>*<sp/>ENUMS</highlight></codeline>
<codeline lineno="189"><highlight class="comment"><sp/>*******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>XMC_USIC_CH_STATUS</highlight></codeline>
<codeline lineno="195"><highlight class="normal">{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><ref refid="group___u_s_i_c_1ggaf0ce1333656386f14f018b400beb9e39a7f5eeda6309c7b3a3e8f08380ed47e3c" kindref="member">XMC_USIC_CH_STATUS_OK</ref>,<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><ref refid="group___u_s_i_c_1ggaf0ce1333656386f14f018b400beb9e39af9cf48d10eb977902d20eeaed491bcf0" kindref="member">XMC_USIC_CH_STATUS_ERROR</ref>,<sp/></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><ref refid="group___u_s_i_c_1ggaf0ce1333656386f14f018b400beb9e39a512a392025bbc6a006aa9ad088919809" kindref="member">XMC_USIC_CH_STATUS_BUSY</ref><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="199"><highlight class="normal">}<sp/><ref refid="group___u_s_i_c_1gaf0ce1333656386f14f018b400beb9e39" kindref="member">XMC_USIC_CH_STATUS_t</ref>;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>XMC_USIC_CH_KERNEL_MODE</highlight></codeline>
<codeline lineno="205"><highlight class="normal">{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><ref refid="group___u_s_i_c_1gga27d9dafa74ddfc6aa6591e2f712eccfea893e918851d8065d780e499435292378" kindref="member">XMC_USIC_CH_KERNEL_MODE_RUN_0</ref><sp/><sp/>=<sp/>0x0UL,<sp/><sp/></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><ref refid="group___u_s_i_c_1gga27d9dafa74ddfc6aa6591e2f712eccfea779d6f7025d6d6bcd0dfdd709af0305e" kindref="member">XMC_USIC_CH_KERNEL_MODE_RUN_1</ref><sp/><sp/>=<sp/>0x1UL<sp/>&lt;&lt;<sp/>USIC_CH_KSCFG_NOMCFG_Pos,<sp/><sp/></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><ref refid="group___u_s_i_c_1gga27d9dafa74ddfc6aa6591e2f712eccfea24c6cfeac1bb9c05c16aa057e591b3c0" kindref="member">XMC_USIC_CH_KERNEL_MODE_STOP_0</ref><sp/>=<sp/>0x2UL<sp/>&lt;&lt;<sp/>USIC_CH_KSCFG_NOMCFG_Pos,<sp/><sp/></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><ref refid="group___u_s_i_c_1gga27d9dafa74ddfc6aa6591e2f712eccfeab9105c0d985506f426ef2ff0a36983b6" kindref="member">XMC_USIC_CH_KERNEL_MODE_STOP_1</ref><sp/>=<sp/>0x3UL<sp/>&lt;&lt;<sp/>USIC_CH_KSCFG_NOMCFG_Pos<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="210"><highlight class="normal">}<sp/><ref refid="group___u_s_i_c_1ga27d9dafa74ddfc6aa6591e2f712eccfe" kindref="member">XMC_USIC_CH_KERNEL_MODE_t</ref>;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>XMC_USIC_CH_OPERATING_MODE</highlight></codeline>
<codeline lineno="216"><highlight class="normal">{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><ref refid="group___u_s_i_c_1ggac052842418ff3dda00900219ebda5de7a0f42d929665110fb0a00c7adbaf5a763" kindref="member">XMC_USIC_CH_OPERATING_MODE_IDLE</ref><sp/>=<sp/>0x0UL,<sp/></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><ref refid="group___u_s_i_c_1ggac052842418ff3dda00900219ebda5de7a899e292213839edfb7d88e356cb9d18f" kindref="member">XMC_USIC_CH_OPERATING_MODE_SPI</ref><sp/><sp/>=<sp/>0x1UL<sp/>&lt;&lt;<sp/>USIC_CH_CCR_MODE_Pos,<sp/></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><ref refid="group___u_s_i_c_1ggac052842418ff3dda00900219ebda5de7a0130416b257e28bf39a388658dd61469" kindref="member">XMC_USIC_CH_OPERATING_MODE_UART</ref><sp/>=<sp/>0x2UL<sp/>&lt;&lt;<sp/>USIC_CH_CCR_MODE_Pos,<sp/></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><ref refid="group___u_s_i_c_1ggac052842418ff3dda00900219ebda5de7a567f54d1a3c96472fca5d6039d5e3cbc" kindref="member">XMC_USIC_CH_OPERATING_MODE_I2S</ref><sp/><sp/>=<sp/>0x3UL<sp/>&lt;&lt;<sp/>USIC_CH_CCR_MODE_Pos,<sp/></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><ref refid="group___u_s_i_c_1ggac052842418ff3dda00900219ebda5de7a4dad9ad4de2fe7406c1685606a651503" kindref="member">XMC_USIC_CH_OPERATING_MODE_I2C</ref><sp/><sp/>=<sp/>0x4UL<sp/>&lt;&lt;<sp/>USIC_CH_CCR_MODE_Pos<sp/><sp/></highlight></codeline>
<codeline lineno="222"><highlight class="normal">}<sp/><ref refid="group___u_s_i_c_1gac052842418ff3dda00900219ebda5de7" kindref="member">XMC_USIC_CH_OPERATING_MODE_t</ref>;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>XMC_USIC_CH_INPUT</highlight></codeline>
<codeline lineno="228"><highlight class="normal">{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><ref refid="group___u_s_i_c_1gga7b7c285b4dfe6c9132f2f478a59b2ac5a218c2b06596afed7bf9bc41fb6db47ee" kindref="member">XMC_USIC_CH_INPUT_DX0</ref>,<sp/></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><ref refid="group___u_s_i_c_1gga7b7c285b4dfe6c9132f2f478a59b2ac5a6925b9516396378ecbe92b01d8d1bcda" kindref="member">XMC_USIC_CH_INPUT_DX1</ref>,<sp/></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><ref refid="group___u_s_i_c_1gga7b7c285b4dfe6c9132f2f478a59b2ac5a433047983054df98c04e1dbd974c59ed" kindref="member">XMC_USIC_CH_INPUT_DX2</ref>,<sp/></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><ref refid="group___u_s_i_c_1gga7b7c285b4dfe6c9132f2f478a59b2ac5ae6ce0ad774f54bea6c653ce5ffe13132" kindref="member">XMC_USIC_CH_INPUT_DX3</ref>,<sp/></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><ref refid="group___u_s_i_c_1gga7b7c285b4dfe6c9132f2f478a59b2ac5a7247770ce9d6895fd69800b89b918a27" kindref="member">XMC_USIC_CH_INPUT_DX4</ref>,<sp/></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><ref refid="group___u_s_i_c_1gga7b7c285b4dfe6c9132f2f478a59b2ac5ae3ff15e93aa354e43133246bc552effd" kindref="member">XMC_USIC_CH_INPUT_DX5</ref><sp/><sp/></highlight></codeline>
<codeline lineno="235"><highlight class="normal">}<sp/><ref refid="group___u_s_i_c_1ga7b7c285b4dfe6c9132f2f478a59b2ac5" kindref="member">XMC_USIC_CH_INPUT_t</ref>;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>XMC_USIC_CH_INPUT_SAMPLING_FREQ</highlight></codeline>
<codeline lineno="241"><highlight class="normal">{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><ref refid="group___u_s_i_c_1gga4eabf4e044ae33972f726f904e788f8aa140d9db737218ef374f79f19d16f67e5" kindref="member">XMC_USIC_CH_INPUT_SAMPLING_FREQ_FPERIPH</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x0UL,<sp/></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><ref refid="group___u_s_i_c_1gga4eabf4e044ae33972f726f904e788f8aa8ad2708c596461047862f7a3c71c3892" kindref="member">XMC_USIC_CH_INPUT_SAMPLING_FREQ_FRACTIONAL_DIVIDER</ref><sp/>=<sp/>0x1UL<sp/>&lt;&lt;<sp/><ref refid="group___u_s_i_c_1gad780e0ceed2e148c84ddb0f0e2df2a44" kindref="member">USIC_CH_DXCR_SFSEL_Pos</ref><sp/><sp/></highlight></codeline>
<codeline lineno="244"><highlight class="normal">}<sp/><ref refid="group___u_s_i_c_1ga4eabf4e044ae33972f726f904e788f8a" kindref="member">XMC_USIC_CH_INPUT_SAMPLING_FREQ_t</ref>;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>XMC_USIC_CH_INPUT_COMBINATION_MODE</highlight></codeline>
<codeline lineno="250"><highlight class="normal">{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><ref refid="group___u_s_i_c_1gga4c50ae5a7f12a5496d82d2bc665e1db2a84a7d20ea5095174ad36f6b0569e5746" kindref="member">XMC_USIC_CH_INPUT_COMBINATION_MODE_TRIGGER_DISABLED</ref><sp/>=<sp/>0x0UL,<sp/></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><ref refid="group___u_s_i_c_1gga4c50ae5a7f12a5496d82d2bc665e1db2a96738f5f29e01869760b3b303ee5ba5c" kindref="member">XMC_USIC_CH_INPUT_COMBINATION_MODE_RISING_EDGE</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x1UL,<sp/></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><ref refid="group___u_s_i_c_1gga4c50ae5a7f12a5496d82d2bc665e1db2a57148dae73908e188f45a14eaabf266d" kindref="member">XMC_USIC_CH_INPUT_COMBINATION_MODE_FALLING_EDGE</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>0x2UL,<sp/></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><ref refid="group___u_s_i_c_1gga4c50ae5a7f12a5496d82d2bc665e1db2aa48b1f45d1c95a5db012305e02c3e2d2" kindref="member">XMC_USIC_CH_INPUT_COMBINATION_MODE_BOTH_EDGES</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x3UL,<sp/></highlight></codeline>
<codeline lineno="255"><highlight class="normal">}<sp/><ref refid="group___u_s_i_c_1ga4c50ae5a7f12a5496d82d2bc665e1db2" kindref="member">XMC_USIC_CH_INPUT_COMBINATION_MODE_t</ref>;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>XMC_USIC_CH_START_TRANSMISION_MODE</highlight></codeline>
<codeline lineno="264"><highlight class="normal">{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><ref refid="group___u_s_i_c_1ggae2db2ec4c7c43ae1454373789443b793a92234bf742ccdef5a487ab9fc7b7b47e" kindref="member">XMC_USIC_CH_START_TRANSMISION_DISABLED</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x0U,<sp/></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><ref refid="group___u_s_i_c_1ggae2db2ec4c7c43ae1454373789443b793a7464a12e43e762ae3809838ed60b0848" kindref="member">XMC_USIC_CH_START_TRANSMISION_ON_TDV</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x1UL<sp/>&lt;&lt;<sp/>USIC_CH_TCSR_TDEN_Pos,<sp/></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><ref refid="group___u_s_i_c_1ggae2db2ec4c7c43ae1454373789443b793ad79ea1b2ea37a89eac8eec9905499589" kindref="member">XMC_USIC_CH_START_TRANSMISION_ON_TDV_DX2S_0</ref><sp/>=<sp/>0x2UL<sp/>&lt;&lt;<sp/>USIC_CH_TCSR_TDEN_Pos,<sp/></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><ref refid="group___u_s_i_c_1ggae2db2ec4c7c43ae1454373789443b793a21bcda749a5e1eda8108ce39f8b97b7a" kindref="member">XMC_USIC_CH_START_TRANSMISION_ON_TDV_DX2S_1</ref><sp/>=<sp/>0x3UL<sp/>&lt;&lt;<sp/>USIC_CH_TCSR_TDEN_Pos<sp/><sp/></highlight></codeline>
<codeline lineno="269"><highlight class="normal">}<sp/><ref refid="group___u_s_i_c_1gae2db2ec4c7c43ae1454373789443b793" kindref="member">XMC_USIC_CH_START_TRANSMISION_MODE_t</ref>;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>XMC_USIC_CH_INTERRUPT_NODE_POINTER</highlight></codeline>
<codeline lineno="275"><highlight class="normal">{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><ref refid="group___u_s_i_c_1gga074b5b1abff43f98316c7a5b69523e62ac3d37f726e6214704f420586ff8effc3" kindref="member">XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSMIT_SHIFT</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>USIC_CH_INPR_TSINP_Pos,<sp/></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><ref refid="group___u_s_i_c_1gga074b5b1abff43f98316c7a5b69523e62a2298fc6a0fcee48a76f0aea1eb95e3a6" kindref="member">XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSMIT_BUFFER</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>USIC_CH_INPR_TBINP_Pos,<sp/></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><ref refid="group___u_s_i_c_1gga074b5b1abff43f98316c7a5b69523e62acd626621eaea679896369d2f9c1b44c8" kindref="member">XMC_USIC_CH_INTERRUPT_NODE_POINTER_RECEIVE</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>USIC_CH_INPR_RINP_Pos,<sp/><sp/></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><ref refid="group___u_s_i_c_1gga074b5b1abff43f98316c7a5b69523e62a9e0ff35d1ba446c2a1c9bff1b39e5740" kindref="member">XMC_USIC_CH_INTERRUPT_NODE_POINTER_ALTERNATE_RECEIVE</ref><sp/><sp/><sp/>=<sp/>USIC_CH_INPR_AINP_Pos,<sp/><sp/></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><ref refid="group___u_s_i_c_1gga074b5b1abff43f98316c7a5b69523e62a3b99d0d6e93882ea791e8952cc993a7b" kindref="member">XMC_USIC_CH_INTERRUPT_NODE_POINTER_PROTOCOL</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>USIC_CH_INPR_PINP_Pos<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="281"><highlight class="normal">}<sp/><ref refid="group___u_s_i_c_1ga074b5b1abff43f98316c7a5b69523e62" kindref="member">XMC_USIC_CH_INTERRUPT_NODE_POINTER_t</ref>;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>XMC_USIC_CH_EVENT</highlight></codeline>
<codeline lineno="287"><highlight class="normal">{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><ref refid="group___u_s_i_c_1gga9101f93a9a9c4c5a27f1418e3335b012ab27889da7076d1a9ab4e249b19b71cb1" kindref="member">XMC_USIC_CH_EVENT_RECEIVE_START</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>USIC_CH_CCR_RSIEN_Msk,<sp/></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><ref refid="group___u_s_i_c_1gga9101f93a9a9c4c5a27f1418e3335b012a948a392bad3aca7de34a4acfd2b5eb7e" kindref="member">XMC_USIC_CH_EVENT_DATA_LOST</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>USIC_CH_CCR_DLIEN_Msk,<sp/></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><ref refid="group___u_s_i_c_1gga9101f93a9a9c4c5a27f1418e3335b012a62c2e30dc6b1f4dc5029bb3769bc54f1" kindref="member">XMC_USIC_CH_EVENT_TRANSMIT_SHIFT</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>USIC_CH_CCR_TSIEN_Msk,<sp/></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><ref refid="group___u_s_i_c_1gga9101f93a9a9c4c5a27f1418e3335b012a1c843b5c4cf9d9fe0c0911b1ad73b981" kindref="member">XMC_USIC_CH_EVENT_TRANSMIT_BUFFER</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>USIC_CH_CCR_TBIEN_Msk,<sp/></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><ref refid="group___u_s_i_c_1gga9101f93a9a9c4c5a27f1418e3335b012a990e43a9a742c483efae77fb16689406" kindref="member">XMC_USIC_CH_EVENT_STANDARD_RECEIVE</ref><sp/><sp/><sp/><sp/>=<sp/>USIC_CH_CCR_RIEN_Msk,<sp/><sp/></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><ref refid="group___u_s_i_c_1gga9101f93a9a9c4c5a27f1418e3335b012aa3a0511be20785278677eb0699ef924e" kindref="member">XMC_USIC_CH_EVENT_ALTERNATIVE_RECEIVE</ref><sp/>=<sp/>USIC_CH_CCR_AIEN_Msk,<sp/><sp/></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><ref refid="group___u_s_i_c_1gga9101f93a9a9c4c5a27f1418e3335b012a0bd21a2c8da9ee272006fe1ec7abb2d9" kindref="member">XMC_USIC_CH_EVENT_BAUD_RATE_GENERATOR</ref><sp/>=<sp/>USIC_CH_CCR_BRGIEN_Msk<sp/></highlight></codeline>
<codeline lineno="295"><highlight class="normal">}<sp/><ref refid="group___u_s_i_c_1ga9101f93a9a9c4c5a27f1418e3335b012" kindref="member">XMC_USIC_CH_EVENT_t</ref>;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>XMC_USIC_CH_PARITY_MODE</highlight></codeline>
<codeline lineno="301"><highlight class="normal">{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><ref refid="group___u_s_i_c_1gga0a55c03c810078ffc9fa8b512dc57e37a41914c3176bcc9f17327bd7195dd39b6" kindref="member">XMC_USIC_CH_PARITY_MODE_NONE</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>0x0UL,<sp/><sp/></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><ref refid="group___u_s_i_c_1gga0a55c03c810078ffc9fa8b512dc57e37a1680b6d1bae664e1479de091cf8c61ea" kindref="member">XMC_USIC_CH_PARITY_MODE_EVEN</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>0x2UL<sp/>&lt;&lt;<sp/>USIC_CH_CCR_PM_Pos,<sp/><sp/></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><ref refid="group___u_s_i_c_1gga0a55c03c810078ffc9fa8b512dc57e37a59e6188e4d02d8d1ac50e8ade251093e" kindref="member">XMC_USIC_CH_PARITY_MODE_ODD</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x3UL<sp/>&lt;&lt;<sp/>USIC_CH_CCR_PM_Pos<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="305"><highlight class="normal">}<sp/><ref refid="group___u_s_i_c_1ga0a55c03c810078ffc9fa8b512dc57e37" kindref="member">XMC_USIC_CH_PARITY_MODE_t</ref>;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>XMC_USIC_CH_DATA_OUTPUT_MODE</highlight></codeline>
<codeline lineno="311"><highlight class="normal">{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><ref refid="group___u_s_i_c_1ggab277976402d3da779839621f911fe89aa2ee23e3a426e82d5e9142079a16f00bf" kindref="member">XMC_USIC_CH_DATA_OUTPUT_MODE_NORMAL</ref><sp/><sp/><sp/>=<sp/>0x0UL,<sp/><sp/></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><ref refid="group___u_s_i_c_1ggab277976402d3da779839621f911fe89aa984f346629f34906201bbde3a6863ede" kindref="member">XMC_USIC_CH_DATA_OUTPUT_MODE_INVERTED</ref><sp/>=<sp/>0x1UL<sp/>&lt;&lt;<sp/>USIC_CH_SCTR_DOCFG_Pos<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="314"><highlight class="normal">}<sp/><ref refid="group___u_s_i_c_1gab277976402d3da779839621f911fe89a" kindref="member">XMC_USIC_CH_DATA_OUTPUT_MODE_t</ref>;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>XMC_USIC_CH_TBUF_STATUS</highlight></codeline>
<codeline lineno="320"><highlight class="normal">{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><ref refid="group___u_s_i_c_1gga1139d992c4767497e1ead00f098d7024ad797491e36963500982f41247c0edb75" kindref="member">XMC_USIC_CH_TBUF_STATUS_IDLE</ref><sp/>=<sp/>0x0UL,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><ref refid="group___u_s_i_c_1gga1139d992c4767497e1ead00f098d7024ab228b9efcdbf98d83e2e6521883460b5" kindref="member">XMC_USIC_CH_TBUF_STATUS_BUSY</ref><sp/>=<sp/>USIC_CH_TCSR_TDV_Msk<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="323"><highlight class="normal">}<sp/><ref refid="group___u_s_i_c_1ga1139d992c4767497e1ead00f098d7024" kindref="member">XMC_USIC_CH_TBUF_STATUS_t</ref>;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>XMC_USIC_CH_TBUF_STATUS_SET</highlight></codeline>
<codeline lineno="331"><highlight class="normal">{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><ref refid="group___u_s_i_c_1gga46769f2474ad4be950bcfc47582f5f87a8d5a660f1632c9201fc8360b5580d2cf" kindref="member">XMC_USIC_CH_TBUF_STATUS_SET_BUSY</ref><sp/><sp/><sp/>=<sp/>0x1UL,<sp/></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><ref refid="group___u_s_i_c_1gga46769f2474ad4be950bcfc47582f5f87a2b4f44bf752d0b8913f2fa99cc5c28e6" kindref="member">XMC_USIC_CH_TBUF_STATUS_SET_IDLE</ref><sp/><sp/><sp/>=<sp/>0x2UL<sp/><sp/></highlight></codeline>
<codeline lineno="334"><highlight class="normal">}<sp/><ref refid="group___u_s_i_c_1ga46769f2474ad4be950bcfc47582f5f87" kindref="member">XMC_USIC_CH_TBUF_STATUS_SET_t</ref>;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>XMC_USIC_CH_RBUF_STATUS</highlight></codeline>
<codeline lineno="340"><highlight class="normal">{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><ref refid="group___u_s_i_c_1gga9444afb3de969ce1ad5e7d413a9e0148a65f600df2669714e1597f530144a011b" kindref="member">XMC_USIC_CH_RBUF_STATUS_DATA_VALID0</ref><sp/>=<sp/>USIC_CH_RBUFSR_RDV0_Msk,<sp/></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><ref refid="group___u_s_i_c_1gga9444afb3de969ce1ad5e7d413a9e0148aa5bc9e75620be0519da1917345a4509e" kindref="member">XMC_USIC_CH_RBUF_STATUS_DATA_VALID1</ref><sp/>=<sp/>USIC_CH_RBUFSR_RDV1_Msk<sp/><sp/></highlight></codeline>
<codeline lineno="343"><highlight class="normal">}<sp/><ref refid="group___u_s_i_c_1ga9444afb3de969ce1ad5e7d413a9e0148" kindref="member">XMC_USIC_CH_RBUF_STATUS_t</ref>;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>XMC_USCI_CH_PASSIVE_DATA_LEVEL</highlight></codeline>
<codeline lineno="349"><highlight class="normal">{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><ref refid="group___u_s_i_c_1gga352121d35153623dc793f3b59c075eb0a66effdf4e324ee2d69f90126db5fb21d" kindref="member">XMC_USIC_CH_PASSIVE_DATA_LEVEL0</ref><sp/>=<sp/>0x0UL,<sp/></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><ref refid="group___u_s_i_c_1gga352121d35153623dc793f3b59c075eb0aaf5284d9c00837ad1a2caf6dd72315b5" kindref="member">XMC_USIC_CH_PASSIVE_DATA_LEVEL1</ref><sp/>=<sp/>0x1UL<sp/>&lt;&lt;<sp/>USIC_CH_SCTR_PDL_Pos<sp/><sp/></highlight></codeline>
<codeline lineno="352"><highlight class="normal">}<sp/><ref refid="group___u_s_i_c_1ga352121d35153623dc793f3b59c075eb0" kindref="member">XMC_USIC_CH_PASSIVE_DATA_LEVEL_t</ref>;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>XMC_USIC_CH_FIFO_SIZE</highlight></codeline>
<codeline lineno="358"><highlight class="normal">{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><ref refid="group___u_s_i_c_1ggafdd0a07bee93d72936191b7e8555aefea1c189be4c15d2176b740037fa220e4a4" kindref="member">XMC_USIC_CH_FIFO_DISABLED</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>0x0U,<sp/><sp/></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><ref refid="group___u_s_i_c_1ggafdd0a07bee93d72936191b7e8555aefeac2b3558621719f1d4e64d55a0febb166" kindref="member">XMC_USIC_CH_FIFO_SIZE_2WORDS</ref><sp/><sp/>=<sp/>0x1U,<sp/><sp/></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><ref refid="group___u_s_i_c_1ggafdd0a07bee93d72936191b7e8555aefeaa26264021f8318df9187f0edb55b093e" kindref="member">XMC_USIC_CH_FIFO_SIZE_4WORDS</ref><sp/><sp/>=<sp/>0x2U,<sp/><sp/></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><ref refid="group___u_s_i_c_1ggafdd0a07bee93d72936191b7e8555aefea7eb82cbde316bc34b32a4935719e3485" kindref="member">XMC_USIC_CH_FIFO_SIZE_8WORDS</ref><sp/><sp/>=<sp/>0x3U,<sp/><sp/></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><ref refid="group___u_s_i_c_1ggafdd0a07bee93d72936191b7e8555aefeade956d53b256464afd024854c48f3cdc" kindref="member">XMC_USIC_CH_FIFO_SIZE_16WORDS</ref><sp/>=<sp/>0x4U,<sp/><sp/></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><ref refid="group___u_s_i_c_1ggafdd0a07bee93d72936191b7e8555aefeaa368b5bf667c1b4ba6bbf1071ff6ebd0" kindref="member">XMC_USIC_CH_FIFO_SIZE_32WORDS</ref><sp/>=<sp/>0x5U,<sp/><sp/></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><ref refid="group___u_s_i_c_1ggafdd0a07bee93d72936191b7e8555aefead702883ad36b39b6014e45b31f1655e8" kindref="member">XMC_USIC_CH_FIFO_SIZE_64WORDS</ref><sp/>=<sp/>0x6U<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="366"><highlight class="normal">}<sp/><ref refid="group___u_s_i_c_1gafdd0a07bee93d72936191b7e8555aefe" kindref="member">XMC_USIC_CH_FIFO_SIZE_t</ref>;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER</highlight></codeline>
<codeline lineno="372"><highlight class="normal">{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><ref refid="group___u_s_i_c_1ggaed66b290b2c45854fcd04580fb6349a1a5f3f135726f0f39eb99ab43cfdf699cf" kindref="member">XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_STANDARD</ref><sp/><sp/>=<sp/>USIC_CH_TBCTR_STBINP_Pos,<sp/><sp/></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><ref refid="group___u_s_i_c_1ggaed66b290b2c45854fcd04580fb6349a1aef96e8370ec2178615f3a24a04da19fe" kindref="member">XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_ALTERNATE</ref><sp/>=<sp/>USIC_CH_TBCTR_ATBINP_Pos<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="375"><highlight class="normal">}<sp/><ref refid="group___u_s_i_c_1gaed66b290b2c45854fcd04580fb6349a1" kindref="member">XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_t</ref>;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>XMC_USIC_CH_TXFIFO_EVENT_CONF</highlight></codeline>
<codeline lineno="381"><highlight class="normal">{</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><ref refid="group___u_s_i_c_1ggac7690c669fbca7c9710ba7294df39a6da7c276cdb2192352c70a55dbff71fdb83" kindref="member">XMC_USIC_CH_TXFIFO_EVENT_CONF_STANDARD</ref><sp/><sp/>=<sp/>USIC_CH_TBCTR_STBIEN_Msk,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><ref refid="group___u_s_i_c_1ggac7690c669fbca7c9710ba7294df39a6da3b3243be368a3fe2293e1a8669755c37" kindref="member">XMC_USIC_CH_TXFIFO_EVENT_CONF_ERROR</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>(int32_t)USIC_CH_TBCTR_TBERIEN_Msk<sp/><sp/></highlight></codeline>
<codeline lineno="384"><highlight class="normal">}<sp/><ref refid="group___u_s_i_c_1gac7690c669fbca7c9710ba7294df39a6d" kindref="member">XMC_USIC_CH_TXFIFO_EVENT_CONF_t</ref>;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>XMC_USIC_CH_TXFIFO_EVENT</highlight></codeline>
<codeline lineno="390"><highlight class="normal">{</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><ref refid="group___u_s_i_c_1gga6e964201594d82a691896a52cbfd5620a1e44a086ab5e16b5832160e1ce085eac" kindref="member">XMC_USIC_CH_TXFIFO_EVENT_STANDARD</ref><sp/>=<sp/>USIC_CH_TRBSR_STBI_Msk,<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><ref refid="group___u_s_i_c_1gga6e964201594d82a691896a52cbfd5620a309215a549219964d0d04ebcc22f6e33" kindref="member">XMC_USIC_CH_TXFIFO_EVENT_ERROR</ref><sp/><sp/><sp/><sp/>=<sp/>USIC_CH_TRBSR_TBERI_Msk<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="393"><highlight class="normal">}<sp/><ref refid="group___u_s_i_c_1ga6e964201594d82a691896a52cbfd5620" kindref="member">XMC_USIC_CH_TXFIFO_EVENT_t</ref>;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER</highlight></codeline>
<codeline lineno="399"><highlight class="normal">{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><ref refid="group___u_s_i_c_1gga4b1bb4e4041f310e46c635b007ee2c73a572414a4e5097bd3b8f6ca8b607e7c1e" kindref="member">XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_STANDARD</ref><sp/><sp/>=<sp/>USIC_CH_RBCTR_SRBINP_Pos,<sp/></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><ref refid="group___u_s_i_c_1gga4b1bb4e4041f310e46c635b007ee2c73a393b1acb8b60d2baebbc57ef8b64a718" kindref="member">XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_ALTERNATE</ref><sp/>=<sp/>USIC_CH_RBCTR_ARBINP_Pos<sp/><sp/></highlight></codeline>
<codeline lineno="402"><highlight class="normal">}<sp/><ref refid="group___u_s_i_c_1ga4b1bb4e4041f310e46c635b007ee2c73" kindref="member">XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_t</ref>;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>XMC_USIC_CH_RXFIFO_EVENT_CONF</highlight></codeline>
<codeline lineno="408"><highlight class="normal">{</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><ref refid="group___u_s_i_c_1gga4b8a7556ad13b0d7540a620c3d067689ac9ff6cf12767f7879611f5098732bd99" kindref="member">XMC_USIC_CH_RXFIFO_EVENT_CONF_STANDARD</ref><sp/><sp/>=<sp/>USIC_CH_RBCTR_SRBIEN_Msk,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><ref refid="group___u_s_i_c_1gga4b8a7556ad13b0d7540a620c3d067689ae36c9608a19fddadd13a0dbeb6474709" kindref="member">XMC_USIC_CH_RXFIFO_EVENT_CONF_ERROR</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>(int32_t)USIC_CH_RBCTR_RBERIEN_Msk,<sp/><sp/></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><ref refid="group___u_s_i_c_1gga4b8a7556ad13b0d7540a620c3d067689a48a5635b9e02bd166fe93bc2fa6304e6" kindref="member">XMC_USIC_CH_RXFIFO_EVENT_CONF_ALTERNATE</ref><sp/>=<sp/>USIC_CH_RBCTR_ARBIEN_Msk<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="412"><highlight class="normal">}<sp/><ref refid="group___u_s_i_c_1ga4b8a7556ad13b0d7540a620c3d067689" kindref="member">XMC_USIC_CH_RXFIFO_EVENT_CONF_t</ref>;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>XMC_USIC_CH_RXFIFO_EVENT</highlight></codeline>
<codeline lineno="418"><highlight class="normal">{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><ref refid="group___u_s_i_c_1gga9f69efc0352072596048eca6e3da29c6a66c92990f46257208c42d175ccc3533c" kindref="member">XMC_USIC_CH_RXFIFO_EVENT_STANDARD</ref><sp/><sp/>=<sp/>USIC_CH_TRBSR_SRBI_Msk,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><ref refid="group___u_s_i_c_1gga9f69efc0352072596048eca6e3da29c6a3bf2b90bd5dfa7a2fe3827225e9cda40" kindref="member">XMC_USIC_CH_RXFIFO_EVENT_ERROR</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>USIC_CH_TRBSR_RBERI_Msk,<sp/><sp/></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><ref refid="group___u_s_i_c_1gga9f69efc0352072596048eca6e3da29c6a01cc9c90a0e05d5fa537b76884e20d5c" kindref="member">XMC_USIC_CH_RXFIFO_EVENT_ALTERNATE</ref><sp/>=<sp/>USIC_CH_TRBSR_ARBI_Msk<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="422"><highlight class="normal">}<sp/><ref refid="group___u_s_i_c_1ga9f69efc0352072596048eca6e3da29c6" kindref="member">XMC_USIC_CH_RXFIFO_EVENT_t</ref>;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>XMC_USIC_CH_BRG_CLOCK_SOURCE</highlight></codeline>
<codeline lineno="428"><highlight class="normal">{</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><ref refid="group___u_s_i_c_1gga4a6a3d9ca8a64d7689f25c8c688cbab9ac70865c32728b5c7eb4bfc294887997e" kindref="member">XMC_USIC_CH_BRG_CLOCK_SOURCE_DIVIDER</ref><sp/>=<sp/>0x0UL,<sp/></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><ref refid="group___u_s_i_c_1gga4a6a3d9ca8a64d7689f25c8c688cbab9aef37beb1ab4b3e3d12108669137c3361" kindref="member">XMC_USIC_CH_BRG_CLOCK_SOURCE_DX1T</ref><sp/><sp/><sp/><sp/>=<sp/>0x2UL<sp/>&lt;&lt;<sp/>USIC_CH_BRG_CLKSEL_Pos,<sp/><sp/></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><ref refid="group___u_s_i_c_1gga4a6a3d9ca8a64d7689f25c8c688cbab9ac7c2b4bc98dc56b3a5055d005e851b13" kindref="member">XMC_USIC_CH_BRG_CLOCK_SOURCE_DX1S</ref><sp/><sp/><sp/><sp/>=<sp/>0x3UL<sp/>&lt;&lt;<sp/>USIC_CH_BRG_CLKSEL_Pos<sp/><sp/></highlight></codeline>
<codeline lineno="432"><highlight class="normal">}<sp/><ref refid="group___u_s_i_c_1ga4a6a3d9ca8a64d7689f25c8c688cbab9" kindref="member">XMC_USIC_CH_BRG_CLOCK_SOURCE_t</ref>;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>XMC_USIC_CH_BRG_CTQSEL</highlight></codeline>
<codeline lineno="438"><highlight class="normal">{</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><ref refid="group___u_s_i_c_1ggabe90ddec74269de0d09a2757aff4b93fa6ec33b2e43b134ed8cc7c9ad7ad9591b" kindref="member">XMC_USIC_CH_BRG_CTQSEL_PDIV</ref><sp/>=<sp/>0x0UL,<sp/></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><ref refid="group___u_s_i_c_1ggabe90ddec74269de0d09a2757aff4b93fa1d0fdfd57e666478224d1794936ce8e4" kindref="member">XMC_USIC_CH_BRG_CTQSEL_PPP</ref><sp/><sp/>=<sp/>0x1UL<sp/>&lt;&lt;<sp/>USIC_CH_BRG_CTQSEL_Pos,<sp/><sp/></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><ref refid="group___u_s_i_c_1ggabe90ddec74269de0d09a2757aff4b93fa9e3d5245837afa180bc5ab891113f309" kindref="member">XMC_USIC_CH_BRG_CTQSEL_SCLK</ref><sp/>=<sp/>0x2UL<sp/>&lt;&lt;<sp/>USIC_CH_BRG_CTQSEL_Pos,<sp/><sp/></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><ref refid="group___u_s_i_c_1ggabe90ddec74269de0d09a2757aff4b93fa5b0ed8b7bb025c72c2c60a00bc998eab" kindref="member">XMC_USIC_CH_BRG_CTQSEL_MCLK</ref><sp/>=<sp/>0x3UL<sp/>&lt;&lt;<sp/>USIC_CH_BRG_CTQSEL_Pos<sp/><sp/></highlight></codeline>
<codeline lineno="443"><highlight class="normal">}<sp/><ref refid="group___u_s_i_c_1gabe90ddec74269de0d09a2757aff4b93f" kindref="member">XMC_USIC_CH_BRG_CTQSEL_t</ref>;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE</highlight></codeline>
<codeline lineno="450"><highlight class="normal">{</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><ref refid="group___u_s_i_c_1gga5917220b11972dd6f2fdeb20e344f99cab6c56797b2cfa846072e77ed260939b9" kindref="member">XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_DISABLED</ref><sp/><sp/><sp/>=<sp/>0x0UL,<sp/></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><ref refid="group___u_s_i_c_1gga5917220b11972dd6f2fdeb20e344f99ca94521f0e91a523cb28af682c05de59f6" kindref="member">XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_NORMAL</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>0x1UL<sp/>&lt;&lt;<sp/>USIC_CH_FDR_DM_Pos,<sp/></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><ref refid="group___u_s_i_c_1gga5917220b11972dd6f2fdeb20e344f99cafb8bb99ad350096545bc4e2a14b8812a" kindref="member">XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_FRACTIONAL</ref><sp/>=<sp/>0x2UL<sp/>&lt;&lt;<sp/>USIC_CH_FDR_DM_Pos<sp/><sp/></highlight></codeline>
<codeline lineno="454"><highlight class="normal">}<sp/><ref refid="group___u_s_i_c_1ga5917220b11972dd6f2fdeb20e344f99c" kindref="member">XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_t</ref>;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL</highlight></codeline>
<codeline lineno="460"><highlight class="normal">{</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><ref refid="group___u_s_i_c_1ggae9d3fa2244d754db4311c49fb624115ea0fac1e2e39d4aa98d32a523e76240106" kindref="member">XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_0</ref><sp/>=<sp/>0x0UL,<sp/></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><ref refid="group___u_s_i_c_1ggae9d3fa2244d754db4311c49fb624115ea387e03692c7d6b05d34825b4ada8422f" kindref="member">XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_1</ref><sp/>=<sp/>0x1UL<sp/>&lt;&lt;<sp/>USIC_CH_BRG_MCLKCFG_Pos<sp/><sp/></highlight></codeline>
<codeline lineno="463"><highlight class="normal">}<sp/><ref refid="group___u_s_i_c_1gae9d3fa2244d754db4311c49fb624115e" kindref="member">XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_t</ref>;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL</highlight></codeline>
<codeline lineno="469"><highlight class="normal">{</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><ref refid="group___u_s_i_c_1ggaabdebf7dc81a008ca887ab0336f9b3dea73b5e738a2fbe968b46ea6aae3466956" kindref="member">XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_DISABLED</ref><sp/>=<sp/>0x0UL,<sp/></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><ref refid="group___u_s_i_c_1ggaabdebf7dc81a008ca887ab0336f9b3deaf4a7841504a26dfd70873f1962f5ba89" kindref="member">XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_DISABLED</ref><sp/>=<sp/>0x1UL<sp/>&lt;&lt;<sp/>USIC_CH_BRG_SCLKCFG_Pos,<sp/></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><ref refid="group___u_s_i_c_1ggaabdebf7dc81a008ca887ab0336f9b3deabb31d132a979405f51e7a6ab44071f46" kindref="member">XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_ENABLED</ref><sp/><sp/>=<sp/>(int32_t)(0x2UL<sp/>&lt;&lt;<sp/>USIC_CH_BRG_SCLKCFG_Pos),<sp/></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><ref refid="group___u_s_i_c_1ggaabdebf7dc81a008ca887ab0336f9b3deac496300b9f7d9f340bed2bf4dfb1b8d6" kindref="member">XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_ENABLED</ref><sp/><sp/>=<sp/>(int32_t)(0x3UL<sp/>&lt;&lt;<sp/>USIC_CH_BRG_SCLKCFG_Pos)<sp/><sp/></highlight></codeline>
<codeline lineno="474"><highlight class="normal">}<sp/><ref refid="group___u_s_i_c_1gaabdebf7dc81a008ca887ab0336f9b3de" kindref="member">XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_t</ref>;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT</highlight></codeline>
<codeline lineno="480"><highlight class="normal">{</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><ref refid="group___u_s_i_c_1gga373c90ba61a8cc0013f395840bc9acfda9491b02e6b95460911ccdbfd916dd28f" kindref="member">XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_SCLK</ref><sp/>=<sp/>0x0UL,<sp/></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><ref refid="group___u_s_i_c_1gga373c90ba61a8cc0013f395840bc9acfdabcd84dcb72da7b117900df0eb5c43660" kindref="member">XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_DX1</ref><sp/>=<sp/>0x1UL<sp/>&lt;&lt;<sp/>USIC_CH_BRG_SCLKOSEL_Pos<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="483"><highlight class="normal">}<sp/><ref refid="group___u_s_i_c_1ga373c90ba61a8cc0013f395840bc9acfd" kindref="member">XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_t</ref>;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>XMC_USIC_CH_SHIFT_DIRECTION</highlight></codeline>
<codeline lineno="490"><highlight class="normal">{</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><ref refid="group___u_s_i_c_1gga991fb058d9f1a8bf4fe6faf8aca78ab0ac8aa1525a4deb0dfbb20db75ac4a94fc" kindref="member">XMC_USIC_CH_SHIFT_DIRECTION_LSB_FIRST</ref><sp/>=<sp/>0x0UL,<sp/></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><ref refid="group___u_s_i_c_1gga991fb058d9f1a8bf4fe6faf8aca78ab0ab3e66074821991e6d68af458d55dacfe" kindref="member">XMC_USIC_CH_SHIFT_DIRECTION_MSB_FIRST</ref><sp/>=<sp/>0x1UL<sp/>&lt;&lt;<sp/>USIC_CH_SCTR_SDIR_Pos<sp/></highlight></codeline>
<codeline lineno="493"><highlight class="normal">}<sp/><ref refid="group___u_s_i_c_1ga991fb058d9f1a8bf4fe6faf8aca78ab0" kindref="member">XMC_USIC_CH_SHIFT_DIRECTION_t</ref>;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="497"><highlight class="comment"><sp/>*<sp/>DATA<sp/>STRUCTURES</highlight></codeline>
<codeline lineno="498"><highlight class="comment"><sp/>*******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight><highlight class="comment">/*Anonymous<sp/>structure/union<sp/>guard<sp/>start*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__CC_ARM)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>push</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>anon_unions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(__TASKING__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>warning<sp/>586</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>USIC_GLOBAL_TypeDef<sp/><ref refid="group___u_s_i_c_1ga953ad8cb6043e854f32ab9a53042aedb" kindref="member">XMC_USIC_t</ref>;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="520" refid="struct_x_m_c___u_s_i_c___c_h__t" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">XMC_USIC_CH</highlight></codeline>
<codeline lineno="521"><highlight class="normal">{</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/>__I<sp/><sp/>uint32_t<sp/><sp/>RESERVED0;</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/>__I<sp/><sp/>uint32_t<sp/><sp/>CCFG;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/>__I<sp/><sp/>uint32_t<sp/><sp/>RESERVED1;</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/>__IO<sp/>uint32_t<sp/><sp/>KSCFG;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/>__IO<sp/>uint32_t<sp/><sp/>FDR;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/>__IO<sp/>uint32_t<sp/><sp/>BRG;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/>__IO<sp/>uint32_t<sp/><sp/>INPR;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/>__IO<sp/>uint32_t<sp/><sp/>DXCR[6];<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/>__IO<sp/>uint32_t<sp/><sp/>SCTR;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/>__IO<sp/>uint32_t<sp/><sp/>TCSR;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">union</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/>__IO<sp/>uint32_t<sp/><sp/>PCR_IICMode;<sp/></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/>__IO<sp/>uint32_t<sp/><sp/>PCR_IISMode;<sp/></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/>__IO<sp/>uint32_t<sp/><sp/>PCR_SSCMode;<sp/></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/>__IO<sp/>uint32_t<sp/><sp/>PCR;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/>__IO<sp/>uint32_t<sp/><sp/>PCR_ASCMode;<sp/></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/>__IO<sp/>uint32_t<sp/><sp/>CCR;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/>__IO<sp/>uint32_t<sp/><sp/>CMTR;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">union</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/>__IO<sp/>uint32_t<sp/><sp/>PSR_IICMode;<sp/></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/>__IO<sp/>uint32_t<sp/><sp/>PSR_IISMode;<sp/></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/>__IO<sp/>uint32_t<sp/><sp/>PSR_SSCMode;<sp/></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/>__IO<sp/>uint32_t<sp/><sp/>PSR;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/>__IO<sp/>uint32_t<sp/><sp/>PSR_ASCMode;<sp/></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/>__O<sp/><sp/>uint32_t<sp/><sp/>PSCR;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/>__I<sp/><sp/>uint32_t<sp/><sp/>RBUFSR;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/>__I<sp/><sp/>uint32_t<sp/><sp/>RBUF;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/>__I<sp/><sp/>uint32_t<sp/><sp/>RBUFD;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/>__I<sp/><sp/>uint32_t<sp/><sp/>RBUF0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/>__I<sp/><sp/>uint32_t<sp/><sp/>RBUF1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/>__I<sp/><sp/>uint32_t<sp/><sp/>RBUF01SR;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/>__O<sp/><sp/>uint32_t<sp/><sp/>FMR;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/>__I<sp/><sp/>uint32_t<sp/><sp/>RESERVED2[5];</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/>__IO<sp/>uint32_t<sp/><sp/>TBUF[32];<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/>__IO<sp/>uint32_t<sp/><sp/>BYP;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/>__IO<sp/>uint32_t<sp/><sp/>BYPCR;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/>__IO<sp/>uint32_t<sp/><sp/>TBCTR;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/>__IO<sp/>uint32_t<sp/><sp/>RBCTR;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/>__I<sp/><sp/>uint32_t<sp/><sp/>TRBPTR;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/>__IO<sp/>uint32_t<sp/><sp/>TRBSR;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/>__O<sp/><sp/>uint32_t<sp/><sp/>TRBSCR;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/>__I<sp/><sp/>uint32_t<sp/><sp/>OUTR;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/>__I<sp/><sp/>uint32_t<sp/><sp/>OUTDR;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/>__I<sp/><sp/>uint32_t<sp/><sp/>RESERVED3[23];</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/>__O<sp/><sp/>uint32_t<sp/><sp/>IN[32];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="573"><highlight class="normal">}<sp/><ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref>;</highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight><highlight class="comment">/*Anonymous<sp/>structure/union<sp/>guard<sp/>end*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__CC_ARM)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>pop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(__TASKING__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>warning<sp/>restore</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="584"><highlight class="comment"><sp/>*<sp/>API<sp/>PROTOTYPES</highlight></codeline>
<codeline lineno="585"><highlight class="comment"><sp/>******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group___u_s_i_c_1gaa7e00ca6654c493f25076f002c48dad6" kindref="member">XMC_USIC_IsModuleValid</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group___u_s_i_c_1ga953ad8cb6043e854f32ab9a53042aedb" kindref="member">XMC_USIC_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>module)</highlight></codeline>
<codeline lineno="592"><highlight class="normal">{</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>tmp;</highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/>tmp<sp/>=<sp/>(module<sp/>==<sp/><ref refid="group___u_s_i_c_1gab5471c5fff228b5b9695356e7d2fc98a" kindref="member">XMC_USIC0</ref>);</highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(XMC_USIC1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/>tmp<sp/>=<sp/>tmp<sp/>||<sp/>(module<sp/>==<sp/><ref refid="group___u_s_i_c_1gabeb00ed8ca0740c0b213c6684d636678" kindref="member">XMC_USIC1</ref>);</highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(XMC_USIC2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/>tmp<sp/>=<sp/>tmp<sp/>||<sp/>(module<sp/>==<sp/><ref refid="group___u_s_i_c_1ga13fa3c2b59871d42c4a0918d1de5e1b3" kindref="member">XMC_USIC2</ref>);</highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tmp;</highlight></codeline>
<codeline lineno="604"><highlight class="normal">}</highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group___u_s_i_c_1ga175c3f24ef75607b827888bc8b84fff5" kindref="member">XMC_USIC_IsChannelValid</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>channel)</highlight></codeline>
<codeline lineno="607"><highlight class="normal">{</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>tmp;</highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/>tmp<sp/>=<sp/>((channel<sp/>==<sp/><ref refid="group___u_s_i_c_1ga28dd6da4b742e7336b12ae6fa8de5e9f" kindref="member">XMC_USIC0_CH0</ref>)<sp/>||<sp/>(channel<sp/>==<sp/><ref refid="group___u_s_i_c_1gab7c9a3765e7d637114fc67951cf20c5b" kindref="member">XMC_USIC0_CH1</ref>));</highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(XMC_USIC1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/>tmp<sp/>=<sp/>tmp<sp/>||<sp/>((channel<sp/>==<sp/><ref refid="group___u_s_i_c_1gab3012ea0f6b1dddc5b1c05425e15c4a1" kindref="member">XMC_USIC1_CH0</ref>)<sp/>||<sp/>(channel<sp/>==<sp/><ref refid="group___u_s_i_c_1ga8892cec48c6246ff3e470178e4273f99" kindref="member">XMC_USIC1_CH1</ref>));</highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(XMC_USIC2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/>tmp<sp/>=<sp/>tmp<sp/>||<sp/>((channel<sp/>==<sp/><ref refid="group___u_s_i_c_1gab79d676f4efb3235bd3d8c977b83b1cf" kindref="member">XMC_USIC2_CH0</ref>)<sp/>||<sp/>(channel<sp/>==<sp/><ref refid="group___u_s_i_c_1ga6f71692f25917f0dcd77bb77e5518313" kindref="member">XMC_USIC2_CH1</ref>));</highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tmp;</highlight></codeline>
<codeline lineno="619"><highlight class="normal">}</highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Common<sp/>APIs<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_s_i_c_1ga48113f030b655f6eaa3b9f6b73474785" kindref="member">XMC_USIC_Enable</ref>(<ref refid="group___u_s_i_c_1ga953ad8cb6043e854f32ab9a53042aedb" kindref="member">XMC_USIC_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>usic);</highlight></codeline>
<codeline lineno="650"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_s_i_c_1ga5d7f987aa7be2cc8497a0895f2ba3f90" kindref="member">XMC_USIC_Disable</ref>(<ref refid="group___u_s_i_c_1ga953ad8cb6043e854f32ab9a53042aedb" kindref="member">XMC_USIC_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>usic);</highlight></codeline>
<codeline lineno="664"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_s_i_c_1ga0567321036170adb335fef9b36dc3b71" kindref="member">XMC_USIC_CH_Enable</ref>(<ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>channel);</highlight></codeline>
<codeline lineno="677"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_s_i_c_1gaaba8dc6e2fe4c5cf3fd3418d532a9412" kindref="member">XMC_USIC_CH_Disable</ref>(<ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>channel);</highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"><ref refid="group___u_s_i_c_1gaf0ce1333656386f14f018b400beb9e39" kindref="member">XMC_USIC_CH_STATUS_t</ref><sp/><ref refid="group___u_s_i_c_1gac9feec95c73b09889e494ec6d6898f4f" kindref="member">XMC_USIC_CH_SetBaudrate</ref>(<ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>channel,<sp/>uint32_t<sp/>rate,<sp/>uint32_t<sp/>oversampling);</highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"><ref refid="group___u_s_i_c_1gaf0ce1333656386f14f018b400beb9e39" kindref="member">XMC_USIC_CH_STATUS_t</ref><sp/><ref refid="group___u_s_i_c_1gadd190656c8ecf2fbbb5375175e4f6115" kindref="member">XMC_USIC_CH_SetBaudrateEx</ref>(<ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>channel,<sp/>int32_t<sp/>rate,<sp/>int32_t<sp/>oversampling);</highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_s_i_c_1ga9ed19f59954ac846d36f0de9a2a99ba1" kindref="member">XMC_USIC_CH_SetBaudrateDivider</ref>(<ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>channel,</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___u_s_i_c_1ga4a6a3d9ca8a64d7689f25c8c688cbab9" kindref="member">XMC_USIC_CH_BRG_CLOCK_SOURCE_t</ref><sp/>clksel,</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pppen,</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>pdiv,</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___u_s_i_c_1gabe90ddec74269de0d09a2757aff4b93f" kindref="member">XMC_USIC_CH_BRG_CTQSEL_t</ref><sp/>ctqsel,</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>pctq,</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>dctq);</highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="normal">uint32_t<sp/><ref refid="group___u_s_i_c_1gae9092b12f490047882c1bb9897985c0e" kindref="member">XMC_USIC_CH_GetBaudrate</ref>(<ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>channel);</highlight></codeline>
<codeline lineno="763"><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal">uint32_t<sp/><ref refid="group___u_s_i_c_1gadde84d71507e50a2c49eba8040480abf" kindref="member">XMC_USIC_CH_GetSCLKFrequency</ref>(<ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>channel);</highlight></codeline>
<codeline lineno="778"><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal">uint32_t<sp/><ref refid="group___u_s_i_c_1gafde46af634c56095ca8acdb56413f4ed" kindref="member">XMC_USIC_CH_GetMCLKFrequency</ref>(<ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>channel);</highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_s_i_c_1ga00c6419dfc0f8ed4c4eab13ded598144" kindref="member">XMC_USIC_CH_ConfigExternalInputSignalToBRG</ref>(<ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>channel,</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pdiv,</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>oversampling,</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group___u_s_i_c_1ga4c50ae5a7f12a5496d82d2bc665e1db2" kindref="member">XMC_USIC_CH_INPUT_COMBINATION_MODE_t</ref><sp/>combination_mode);</highlight></codeline>
<codeline lineno="817"><highlight class="normal"></highlight></codeline>
<codeline lineno="838"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_s_i_c_1ga7986fcfe3fd6bf9982e43b1eaabb02c2" kindref="member">XMC_USIC_CH_SetInputSource</ref>(<ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>channel,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group___u_s_i_c_1ga7b7c285b4dfe6c9132f2f478a59b2ac5" kindref="member">XMC_USIC_CH_INPUT_t</ref><sp/>input,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>source)</highlight></codeline>
<codeline lineno="839"><highlight class="normal">{</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/>channel-&gt;<ref refid="struct_x_m_c___u_s_i_c___c_h__t_1a2572b0472db52f72c68f523f48c35620" kindref="member">DXCR</ref>[input]<sp/>=<sp/>(uint32_t)((channel-&gt;<ref refid="struct_x_m_c___u_s_i_c___c_h__t_1a2572b0472db52f72c68f523f48c35620" kindref="member">DXCR</ref>[input]<sp/>&amp;<sp/>(uint32_t)(~<ref refid="group___u_s_i_c_1ga422029f5a94b9e2960a712fb3cb437d0" kindref="member">USIC_CH_DXCR_DSEL_Msk</ref>))<sp/>|</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)source<sp/>&lt;&lt;<sp/><ref refid="group___u_s_i_c_1gad3fe0ed0b13c04904e25ccee9eeb084c" kindref="member">USIC_CH_DXCR_DSEL_Pos</ref>));</highlight></codeline>
<codeline lineno="842"><highlight class="normal">}</highlight></codeline>
<codeline lineno="857"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_s_i_c_1ga1c5aabc85e73a242eea72dd6838ee3e5" kindref="member">XMC_USIC_CH_ConnectInputDataShiftToPPP</ref>(<ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>channel,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group___u_s_i_c_1ga7b7c285b4dfe6c9132f2f478a59b2ac5" kindref="member">XMC_USIC_CH_INPUT_t</ref><sp/>input)</highlight></codeline>
<codeline lineno="858"><highlight class="normal">{</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/>channel-&gt;<ref refid="struct_x_m_c___u_s_i_c___c_h__t_1a2572b0472db52f72c68f523f48c35620" kindref="member">DXCR</ref>[input]<sp/>&amp;=<sp/>(uint32_t)~<ref refid="group___u_s_i_c_1ga9e60cb55d2c3135d5e1fcd317b0bcdbe" kindref="member">USIC_CH_DXCR_INSW_Msk</ref>;</highlight></codeline>
<codeline lineno="860"><highlight class="normal">}</highlight></codeline>
<codeline lineno="861"><highlight class="normal"></highlight></codeline>
<codeline lineno="879"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_s_i_c_1ga61291bfe08ea6012739d90d7524fa1bd" kindref="member">XMC_USIC_CH_ConnectInputDataShiftToDataInput</ref>(<ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>channel,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group___u_s_i_c_1ga7b7c285b4dfe6c9132f2f478a59b2ac5" kindref="member">XMC_USIC_CH_INPUT_t</ref><sp/>input)</highlight></codeline>
<codeline lineno="880"><highlight class="normal">{</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/>channel-&gt;<ref refid="struct_x_m_c___u_s_i_c___c_h__t_1a2572b0472db52f72c68f523f48c35620" kindref="member">DXCR</ref>[input]<sp/>|=<sp/><ref refid="group___u_s_i_c_1ga9e60cb55d2c3135d5e1fcd317b0bcdbe" kindref="member">USIC_CH_DXCR_INSW_Msk</ref>;</highlight></codeline>
<codeline lineno="882"><highlight class="normal">}</highlight></codeline>
<codeline lineno="883"><highlight class="normal"></highlight></codeline>
<codeline lineno="898"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_s_i_c_1gae13b2003ea4d8703a9990d1e90048dc3" kindref="member">XMC_USIC_CH_EnableInputInversion</ref>(<ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>channel,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group___u_s_i_c_1ga7b7c285b4dfe6c9132f2f478a59b2ac5" kindref="member">XMC_USIC_CH_INPUT_t</ref><sp/>input)</highlight></codeline>
<codeline lineno="899"><highlight class="normal">{</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/>channel-&gt;<ref refid="struct_x_m_c___u_s_i_c___c_h__t_1a2572b0472db52f72c68f523f48c35620" kindref="member">DXCR</ref>[input]<sp/>|=<sp/><ref refid="group___u_s_i_c_1gafe4d28d8e09425ff5fd0f2c98ea85e1b" kindref="member">USIC_CH_DXCR_DPOL_Msk</ref>;</highlight></codeline>
<codeline lineno="901"><highlight class="normal">}</highlight></codeline>
<codeline lineno="902"><highlight class="normal"></highlight></codeline>
<codeline lineno="917"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_s_i_c_1gaa018c766c173f43dbdba8c821a90a645" kindref="member">XMC_USIC_CH_DisableInputInversion</ref>(<ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>channel,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group___u_s_i_c_1ga7b7c285b4dfe6c9132f2f478a59b2ac5" kindref="member">XMC_USIC_CH_INPUT_t</ref><sp/>input)</highlight></codeline>
<codeline lineno="918"><highlight class="normal">{</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/>channel-&gt;<ref refid="struct_x_m_c___u_s_i_c___c_h__t_1a2572b0472db52f72c68f523f48c35620" kindref="member">DXCR</ref>[input]<sp/>&amp;=<sp/>(uint32_t)~<ref refid="group___u_s_i_c_1gafe4d28d8e09425ff5fd0f2c98ea85e1b" kindref="member">USIC_CH_DXCR_DPOL_Msk</ref>;</highlight></codeline>
<codeline lineno="920"><highlight class="normal">}</highlight></codeline>
<codeline lineno="921"><highlight class="normal"></highlight></codeline>
<codeline lineno="934"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_s_i_c_1ga1eaad0f90219fa9bb43bfdf932ea2451" kindref="member">XMC_USIC_CH_EnableDelayCompensation</ref>(<ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>channel)</highlight></codeline>
<codeline lineno="935"><highlight class="normal">{</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/>channel-&gt;<ref refid="struct_x_m_c___u_s_i_c___c_h__t_1a2572b0472db52f72c68f523f48c35620" kindref="member">DXCR</ref>[1U]<sp/>|=<sp/>USIC_CH_DX1CR_DCEN_Msk;</highlight></codeline>
<codeline lineno="937"><highlight class="normal">}</highlight></codeline>
<codeline lineno="938"><highlight class="normal"></highlight></codeline>
<codeline lineno="950"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_s_i_c_1ga9896966f6e2e6109f8a7ca0de03d0b39" kindref="member">XMC_USIC_CH_DisableDelayCompensation</ref>(<ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>channel)</highlight></codeline>
<codeline lineno="951"><highlight class="normal">{</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/>channel-&gt;<ref refid="struct_x_m_c___u_s_i_c___c_h__t_1a2572b0472db52f72c68f523f48c35620" kindref="member">DXCR</ref>[1U]<sp/>&amp;=<sp/>(uint32_t)~USIC_CH_DX1CR_DCEN_Msk;</highlight></codeline>
<codeline lineno="953"><highlight class="normal">}</highlight></codeline>
<codeline lineno="954"><highlight class="normal"></highlight></codeline>
<codeline lineno="969"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_s_i_c_1ga6a776750022b67a7d4075fb06eac39dc" kindref="member">XMC_USIC_CH_EnableInputDigitalFilter</ref>(<ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>channel,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group___u_s_i_c_1ga7b7c285b4dfe6c9132f2f478a59b2ac5" kindref="member">XMC_USIC_CH_INPUT_t</ref><sp/>input)</highlight></codeline>
<codeline lineno="970"><highlight class="normal">{</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/>channel-&gt;<ref refid="struct_x_m_c___u_s_i_c___c_h__t_1a2572b0472db52f72c68f523f48c35620" kindref="member">DXCR</ref>[input]<sp/>|=<sp/>(uint32_t)<ref refid="group___u_s_i_c_1gacd79dd61fa38db0bc2a735c9c2d7e272" kindref="member">USIC_CH_DXCR_DFEN_Msk</ref>;</highlight></codeline>
<codeline lineno="972"><highlight class="normal">}</highlight></codeline>
<codeline lineno="987"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_s_i_c_1ga1db3c5e7fe198de01001e0ee43dd4fef" kindref="member">XMC_USIC_CH_DisableInputDigitalFilter</ref>(<ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>channel,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group___u_s_i_c_1ga7b7c285b4dfe6c9132f2f478a59b2ac5" kindref="member">XMC_USIC_CH_INPUT_t</ref><sp/>input)</highlight></codeline>
<codeline lineno="988"><highlight class="normal">{</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/>channel-&gt;<ref refid="struct_x_m_c___u_s_i_c___c_h__t_1a2572b0472db52f72c68f523f48c35620" kindref="member">DXCR</ref>[input]<sp/>&amp;=<sp/>(uint32_t)~<ref refid="group___u_s_i_c_1gacd79dd61fa38db0bc2a735c9c2d7e272" kindref="member">USIC_CH_DXCR_DFEN_Msk</ref>;</highlight></codeline>
<codeline lineno="990"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1006"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_s_i_c_1ga1a5edb9ab8796da1f86be687fab65f32" kindref="member">XMC_USIC_CH_EnableInputSync</ref>(<ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>channel,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group___u_s_i_c_1ga7b7c285b4dfe6c9132f2f478a59b2ac5" kindref="member">XMC_USIC_CH_INPUT_t</ref><sp/>input)</highlight></codeline>
<codeline lineno="1007"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/>channel-&gt;<ref refid="struct_x_m_c___u_s_i_c___c_h__t_1a2572b0472db52f72c68f523f48c35620" kindref="member">DXCR</ref>[input]<sp/>|=<sp/>(uint32_t)<ref refid="group___u_s_i_c_1gaf00a9eaab71452bf3b16b78aa080cb25" kindref="member">USIC_CH_DXCR_DSEN_Msk</ref>;</highlight></codeline>
<codeline lineno="1009"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1024"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_s_i_c_1gaad85027beef2c0cf3dd897e889acf939" kindref="member">XMC_USIC_CH_DisableInputSync</ref>(<ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>channel,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group___u_s_i_c_1ga7b7c285b4dfe6c9132f2f478a59b2ac5" kindref="member">XMC_USIC_CH_INPUT_t</ref><sp/>input)</highlight></codeline>
<codeline lineno="1025"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/>channel-&gt;<ref refid="struct_x_m_c___u_s_i_c___c_h__t_1a2572b0472db52f72c68f523f48c35620" kindref="member">DXCR</ref>[input]<sp/>&amp;=<sp/>(uint32_t)~<ref refid="group___u_s_i_c_1gaf00a9eaab71452bf3b16b78aa080cb25" kindref="member">USIC_CH_DXCR_DSEN_Msk</ref>;</highlight></codeline>
<codeline lineno="1027"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1042"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_s_i_c_1ga77ed1338593c1492f35321494aedfa48" kindref="member">XMC_USIC_CH_SetInputSamplingFreq</ref>(<ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>channel,</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group___u_s_i_c_1ga7b7c285b4dfe6c9132f2f478a59b2ac5" kindref="member">XMC_USIC_CH_INPUT_t</ref><sp/>input,</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group___u_s_i_c_1ga4eabf4e044ae33972f726f904e788f8a" kindref="member">XMC_USIC_CH_INPUT_SAMPLING_FREQ_t</ref><sp/>sampling_freq)</highlight></codeline>
<codeline lineno="1045"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/>channel-&gt;<ref refid="struct_x_m_c___u_s_i_c___c_h__t_1a2572b0472db52f72c68f523f48c35620" kindref="member">DXCR</ref>[input]<sp/>=<sp/>(uint32_t)(channel-&gt;<ref refid="struct_x_m_c___u_s_i_c___c_h__t_1a2572b0472db52f72c68f523f48c35620" kindref="member">DXCR</ref>[input]<sp/>&amp;<sp/>(~<ref refid="group___u_s_i_c_1gaa40b6e977acd2290853cfa788ec56dc5" kindref="member">USIC_CH_DXCR_SFSEL_Msk</ref>))<sp/>|</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)sampling_freq);</highlight></codeline>
<codeline lineno="1048"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"></highlight></codeline>
<codeline lineno="1064"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_s_i_c_1gaeef58e03c1253fce5b8a456f5d8c6da6" kindref="member">XMC_USIC_CH_SetInputTriggerCombinationMode</ref>(<ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>channel,</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group___u_s_i_c_1ga7b7c285b4dfe6c9132f2f478a59b2ac5" kindref="member">XMC_USIC_CH_INPUT_t</ref><sp/>input,</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group___u_s_i_c_1ga4c50ae5a7f12a5496d82d2bc665e1db2" kindref="member">XMC_USIC_CH_INPUT_COMBINATION_MODE_t</ref><sp/>combination_mode)</highlight></codeline>
<codeline lineno="1067"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/>channel-&gt;<ref refid="struct_x_m_c___u_s_i_c___c_h__t_1a2572b0472db52f72c68f523f48c35620" kindref="member">DXCR</ref>[input]<sp/>=<sp/>(uint32_t)(channel-&gt;<ref refid="struct_x_m_c___u_s_i_c___c_h__t_1a2572b0472db52f72c68f523f48c35620" kindref="member">DXCR</ref>[input]<sp/>&amp;<sp/>(~<ref refid="group___u_s_i_c_1ga857b16f38336b2f0bda76d514c341748" kindref="member">USIC_CH_DXCR_CM_Msk</ref>))<sp/>|</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)combination_mode<sp/>&lt;&lt;<sp/><ref refid="group___u_s_i_c_1gac37ea251ee432c469f3ca780f00a0a82" kindref="member">USIC_CH_DXCR_CM_Pos</ref>);</highlight></codeline>
<codeline lineno="1070"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"></highlight></codeline>
<codeline lineno="1084"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_s_i_c_1ga2876a325930da4b77ef46ec4e0acda0d" kindref="member">XMC_USIC_CH_SetBRGInputClockSource</ref>(<ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>channel,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group___u_s_i_c_1ga4a6a3d9ca8a64d7689f25c8c688cbab9" kindref="member">XMC_USIC_CH_BRG_CLOCK_SOURCE_t</ref><sp/>clock_source)</highlight></codeline>
<codeline lineno="1085"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/>channel-&gt;<ref refid="struct_x_m_c___u_s_i_c___c_h__t_1a60442d8bed2e194af31a7bedbabf0c16" kindref="member">BRG</ref><sp/>=<sp/>(uint32_t)(channel-&gt;<ref refid="struct_x_m_c___u_s_i_c___c_h__t_1a60442d8bed2e194af31a7bedbabf0c16" kindref="member">BRG</ref><sp/>&amp;<sp/>(~USIC_CH_BRG_CLKSEL_Msk))<sp/>|<sp/>(uint32_t)(clock_source);</highlight></codeline>
<codeline lineno="1087"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"></highlight></codeline>
<codeline lineno="1104"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_s_i_c_1ga90d18508eb69fc4254bd0c3774d16150" kindref="member">XMC_USIC_CH_WriteToTBUF</ref>(<ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>channel,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>data)</highlight></codeline>
<codeline lineno="1105"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/>channel-&gt;<ref refid="struct_x_m_c___u_s_i_c___c_h__t_1abcb6aeeb845eea4d2035fb8efeb5f490" kindref="member">TBUF</ref>[0U]<sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="1107"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"></highlight></codeline>
<codeline lineno="1125"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_s_i_c_1ga40eb0199fd41ec5993971dad8a0e2d40" kindref="member">XMC_USIC_CH_WriteToTBUFTCI</ref>(<ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>channel,</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>data,</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>transmit_control_information)</highlight></codeline>
<codeline lineno="1128"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/>channel-&gt;<ref refid="struct_x_m_c___u_s_i_c___c_h__t_1abcb6aeeb845eea4d2035fb8efeb5f490" kindref="member">TBUF</ref>[transmit_control_information]<sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="1130"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"></highlight></codeline>
<codeline lineno="1147"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_s_i_c_1gabb9d02b8388a03cd28190c976cdb8b78" kindref="member">XMC_USIC_CH_SetWordLength</ref>(<ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>channel,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>word_length)</highlight></codeline>
<codeline lineno="1148"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/>channel-&gt;<ref refid="struct_x_m_c___u_s_i_c___c_h__t_1ac005cdf6a4e1350830161ee7ef88b9a2" kindref="member">SCTR</ref><sp/>=<sp/>(uint32_t)(channel-&gt;<ref refid="struct_x_m_c___u_s_i_c___c_h__t_1ac005cdf6a4e1350830161ee7ef88b9a2" kindref="member">SCTR</ref><sp/>&amp;<sp/>(~USIC_CH_SCTR_WLE_Msk))<sp/>|</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(uint32_t)(((uint32_t)word_length<sp/>-<sp/>1UL)<sp/><sp/>&lt;&lt;<sp/>USIC_CH_SCTR_WLE_Pos);</highlight></codeline>
<codeline lineno="1151"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"></highlight></codeline>
<codeline lineno="1168"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_s_i_c_1ga32297e60b34c5e69c4837909847add8c" kindref="member">XMC_USIC_CH_SetShiftDirection</ref>(<ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>channel,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group___u_s_i_c_1ga991fb058d9f1a8bf4fe6faf8aca78ab0" kindref="member">XMC_USIC_CH_SHIFT_DIRECTION_t</ref><sp/>shift_direction)</highlight></codeline>
<codeline lineno="1169"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/>channel-&gt;<ref refid="struct_x_m_c___u_s_i_c___c_h__t_1ac005cdf6a4e1350830161ee7ef88b9a2" kindref="member">SCTR</ref><sp/>=<sp/>(uint32_t)(channel-&gt;<ref refid="struct_x_m_c___u_s_i_c___c_h__t_1ac005cdf6a4e1350830161ee7ef88b9a2" kindref="member">SCTR</ref><sp/>&amp;<sp/>(~USIC_CH_SCTR_SDIR_Msk))<sp/>|<sp/>(uint32_t)shift_direction;</highlight></codeline>
<codeline lineno="1171"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"></highlight></codeline>
<codeline lineno="1173"><highlight class="normal"></highlight></codeline>
<codeline lineno="1183"><highlight class="normal">__STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group___u_s_i_c_1ga13d1ba3376be7d2a392f08e5e7237662" kindref="member">XMC_USIC_CH_GetCaptureTimerValue</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>channel)</highlight></codeline>
<codeline lineno="1184"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>channel-&gt;<ref refid="struct_x_m_c___u_s_i_c___c_h__t_1ac089b55932d7ec9c7f5d3c440fd282b9" kindref="member">CMTR</ref>;</highlight></codeline>
<codeline lineno="1186"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"></highlight></codeline>
<codeline lineno="1202"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_s_i_c_1gab97e3b358aaf1e4524420c8fada1bd92" kindref="member">XMC_USIC_CH_SetFractionalDivider</ref>(<ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>channel,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group___u_s_i_c_1ga5917220b11972dd6f2fdeb20e344f99c" kindref="member">XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_t</ref><sp/>mode,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>step)</highlight></codeline>
<codeline lineno="1203"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/>channel-&gt;<ref refid="struct_x_m_c___u_s_i_c___c_h__t_1a616cc6e68c464708de180402999a93d6" kindref="member">FDR</ref><sp/>=<sp/>mode<sp/>|<sp/>step;</highlight></codeline>
<codeline lineno="1205"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"></highlight></codeline>
<codeline lineno="1224"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_s_i_c_1ga23964f6d982b35388f3a7c82f5634e0f" kindref="member">XMC_USIC_CH_SetFrameLength</ref>(<ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>channel,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>frame_length)</highlight></codeline>
<codeline lineno="1225"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/>channel-&gt;<ref refid="struct_x_m_c___u_s_i_c___c_h__t_1ac005cdf6a4e1350830161ee7ef88b9a2" kindref="member">SCTR</ref><sp/>=<sp/>(uint32_t)(channel-&gt;<ref refid="struct_x_m_c___u_s_i_c___c_h__t_1ac005cdf6a4e1350830161ee7ef88b9a2" kindref="member">SCTR</ref><sp/>&amp;<sp/>(~USIC_CH_SCTR_FLE_Msk))<sp/>|</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((uint32_t)frame_length<sp/>-<sp/>0x1U)<sp/><sp/>&lt;&lt;<sp/>USIC_CH_SCTR_FLE_Pos);</highlight></codeline>
<codeline lineno="1228"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"></highlight></codeline>
<codeline lineno="1247"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_s_i_c_1ga6f9467a0f290d65f7292b45cc29e32b4" kindref="member">XMC_USIC_CH_EnableEvent</ref>(<ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>channel,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>event)</highlight></codeline>
<codeline lineno="1248"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/>channel-&gt;<ref refid="struct_x_m_c___u_s_i_c___c_h__t_1a5e1322e27c40bf91d172f9673f205c97" kindref="member">CCR</ref><sp/>|=<sp/>event;</highlight></codeline>
<codeline lineno="1250"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"></highlight></codeline>
<codeline lineno="1268"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_s_i_c_1ga2520619d1b8420b50501c24b2155c02a" kindref="member">XMC_USIC_CH_DisableEvent</ref>(<ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>channel,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>event)</highlight></codeline>
<codeline lineno="1269"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/>channel-&gt;<ref refid="struct_x_m_c___u_s_i_c___c_h__t_1a5e1322e27c40bf91d172f9673f205c97" kindref="member">CCR</ref><sp/>&amp;=<sp/>(uint32_t)~event;</highlight></codeline>
<codeline lineno="1271"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"></highlight></codeline>
<codeline lineno="1292"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_s_i_c_1ga52f9fc18049dbc906b127e1f3662b4b3" kindref="member">XMC_USIC_CH_SetInterruptNodePointer</ref>(<ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>channel,</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group___u_s_i_c_1ga074b5b1abff43f98316c7a5b69523e62" kindref="member">XMC_USIC_CH_INTERRUPT_NODE_POINTER_t</ref><sp/>interrupt_node,</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>service_request);</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"></highlight></codeline>
<codeline lineno="1312"><highlight class="normal">__STATIC_INLINE<sp/><ref refid="group___u_s_i_c_1ga1139d992c4767497e1ead00f098d7024" kindref="member">XMC_USIC_CH_TBUF_STATUS_t</ref><sp/><ref refid="group___u_s_i_c_1ga091c9637a98727f1dce0d159764aea24" kindref="member">XMC_USIC_CH_GetTransmitBufferStatus</ref>(<ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>channel)</highlight></codeline>
<codeline lineno="1313"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="group___u_s_i_c_1ga1139d992c4767497e1ead00f098d7024" kindref="member">XMC_USIC_CH_TBUF_STATUS_t</ref>)(channel-&gt;TCSR<sp/>&amp;<sp/>USIC_CH_TCSR_TDV_Msk);</highlight></codeline>
<codeline lineno="1315"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"></highlight></codeline>
<codeline lineno="1336"><highlight class="normal">__STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group___u_s_i_c_1ga6987b85c22a6f6e220042e07f255ca7d" kindref="member">XMC_USIC_CH_GetReceiveBufferStatus</ref>(<ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>channel)</highlight></codeline>
<codeline lineno="1337"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((uint32_t)<sp/>(channel-&gt;<ref refid="struct_x_m_c___u_s_i_c___c_h__t_1a53e4f754cd62e00d1aec53dd408336c6" kindref="member">RBUFSR</ref><sp/>&amp;<sp/>(USIC_CH_RBUFSR_RDV0_Msk<sp/>|<sp/>USIC_CH_RBUFSR_RDV1_Msk)));</highlight></codeline>
<codeline lineno="1339"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"></highlight></codeline>
<codeline lineno="1341"><highlight class="normal"></highlight></codeline>
<codeline lineno="1359"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_s_i_c_1ga3b02352ba5e94e8f79751dea304084e0" kindref="member">XMC_USIC_CH_SetStartTransmisionMode</ref>(<ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>channel,</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group___u_s_i_c_1gae2db2ec4c7c43ae1454373789443b793" kindref="member">XMC_USIC_CH_START_TRANSMISION_MODE_t</ref><sp/>start_transmision_mode)</highlight></codeline>
<codeline lineno="1361"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/>channel-&gt;TCSR<sp/>=<sp/>(uint32_t)(channel-&gt;TCSR<sp/>&amp;<sp/>(~USIC_CH_TCSR_TDEN_Msk))<sp/>|<sp/>(uint32_t)start_transmision_mode;</highlight></codeline>
<codeline lineno="1363"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"></highlight></codeline>
<codeline lineno="1365"><highlight class="normal"></highlight></codeline>
<codeline lineno="1380"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_s_i_c_1ga920a20a26fbff1aaeb240af921f61ce4" kindref="member">XMC_USIC_CH_SetDataOutputMode</ref>(<ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>channel,</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group___u_s_i_c_1gab277976402d3da779839621f911fe89a" kindref="member">XMC_USIC_CH_DATA_OUTPUT_MODE_t</ref><sp/>data_output_mode)</highlight></codeline>
<codeline lineno="1382"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/>channel-&gt;<ref refid="struct_x_m_c___u_s_i_c___c_h__t_1ac005cdf6a4e1350830161ee7ef88b9a2" kindref="member">SCTR</ref><sp/>=<sp/>(uint32_t)(channel-&gt;<ref refid="struct_x_m_c___u_s_i_c___c_h__t_1ac005cdf6a4e1350830161ee7ef88b9a2" kindref="member">SCTR</ref><sp/>&amp;<sp/>(~USIC_CH_SCTR_DOCFG_Msk))<sp/>|<sp/>(uint32_t)data_output_mode;</highlight></codeline>
<codeline lineno="1384"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"></highlight></codeline>
<codeline lineno="1401"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_s_i_c_1gaf1d2b03bb1350dfc628f0bfa9fb6ffb0" kindref="member">XMC_USIC_CH_EnableFrameLengthControl</ref>(<ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>channel)</highlight></codeline>
<codeline lineno="1402"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/>channel-&gt;TCSR<sp/>=<sp/>(uint32_t)(channel-&gt;TCSR<sp/>&amp;<sp/>(~(USIC_CH_TCSR_WLEMD_Msk<sp/>|</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>USIC_CH_TCSR_SELMD_Msk<sp/>|</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>USIC_CH_TCSR_WAMD_Msk<sp/>|</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>USIC_CH_TCSR_HPCMD_Msk)))<sp/>|</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(uint32_t)USIC_CH_TCSR_FLEMD_Msk;</highlight></codeline>
<codeline lineno="1408"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"></highlight></codeline>
<codeline lineno="1425"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_s_i_c_1gaed632dac3fdb73bee4a6cf4c6cd507e1" kindref="member">XMC_USIC_CH_EnableWordLengthControl</ref>(<ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>channel)</highlight></codeline>
<codeline lineno="1426"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/>channel-&gt;TCSR<sp/>=<sp/>(uint32_t)(channel-&gt;TCSR<sp/>&amp;<sp/>(~(USIC_CH_TCSR_WLEMD_Msk<sp/>|</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>USIC_CH_TCSR_SELMD_Msk<sp/>|</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>USIC_CH_TCSR_WAMD_Msk<sp/>|</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>USIC_CH_TCSR_HPCMD_Msk)))<sp/>|</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(uint32_t)USIC_CH_TCSR_WLEMD_Msk;</highlight></codeline>
<codeline lineno="1432"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"></highlight></codeline>
<codeline lineno="1447"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_s_i_c_1ga923439c666ca95a5d7907c920891c111" kindref="member">XMC_USIC_CH_DisableFrameLengthControl</ref>(<ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>channel)</highlight></codeline>
<codeline lineno="1448"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/>channel-&gt;TCSR<sp/>&amp;=<sp/>(uint32_t)~USIC_CH_TCSR_FLEMD_Msk;</highlight></codeline>
<codeline lineno="1450"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"></highlight></codeline>
<codeline lineno="1465"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_s_i_c_1gabfa8061d06df18f5e6925b33fffea62b" kindref="member">XMC_USIC_CH_DisableWordLengthControl</ref>(<ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>channel)</highlight></codeline>
<codeline lineno="1466"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/>channel-&gt;TCSR<sp/>&amp;=<sp/>(uint32_t)~USIC_CH_TCSR_WLEMD_Msk;</highlight></codeline>
<codeline lineno="1468"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"></highlight></codeline>
<codeline lineno="1483"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_s_i_c_1ga7e8a1fa11993aedfd8d9fb1bf6daf36c" kindref="member">XMC_USIC_CH_EnableTBUFDataValidTrigger</ref>(<ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>channel)</highlight></codeline>
<codeline lineno="1484"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/>channel-&gt;TCSR<sp/>|=<sp/>(uint32_t)USIC_CH_TCSR_TDVTR_Msk;</highlight></codeline>
<codeline lineno="1486"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"></highlight></codeline>
<codeline lineno="1500"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_s_i_c_1ga4227196c29ecd683240b968aa54b7758" kindref="member">XMC_USIC_CH_DisableTBUFDataValidTrigger</ref>(<ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>channel)</highlight></codeline>
<codeline lineno="1501"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/>channel-&gt;TCSR<sp/>&amp;=<sp/>(uint32_t)~USIC_CH_TCSR_TDVTR_Msk;</highlight></codeline>
<codeline lineno="1503"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"></highlight></codeline>
<codeline lineno="1520"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_s_i_c_1ga6fa0313a4dfcade23a7098631edefc50" kindref="member">XMC_USIC_CH_TriggerServiceRequest</ref>(<ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>channel,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>service_request_line)</highlight></codeline>
<codeline lineno="1521"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/>channel-&gt;<ref refid="struct_x_m_c___u_s_i_c___c_h__t_1a4f306d0f14e17555e82b55f6782be566" kindref="member">FMR</ref><sp/>=<sp/>(uint32_t)(USIC_CH_FMR_SIO0_Msk<sp/>&lt;&lt;<sp/>service_request_line);</highlight></codeline>
<codeline lineno="1523"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"></highlight></codeline>
<codeline lineno="1538"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_s_i_c_1ga2d92409ce4c718ecee4f9498d06346c6" kindref="member">XMC_USIC_CH_SetTransmitBufferStatus</ref>(<ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>channel,</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group___u_s_i_c_1ga46769f2474ad4be950bcfc47582f5f87" kindref="member">XMC_USIC_CH_TBUF_STATUS_SET_t</ref><sp/>transmit_buffer_status)</highlight></codeline>
<codeline lineno="1540"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/>channel-&gt;<ref refid="struct_x_m_c___u_s_i_c___c_h__t_1a4f306d0f14e17555e82b55f6782be566" kindref="member">FMR</ref><sp/>=<sp/>(uint32_t)transmit_buffer_status;</highlight></codeline>
<codeline lineno="1542"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"></highlight></codeline>
<codeline lineno="1556"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_s_i_c_1gaddc7f0e10ccfe5d73d28d04f2e1455fe" kindref="member">XMC_USIC_CH_InvalidateReadData</ref>(<ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>channel)</highlight></codeline>
<codeline lineno="1557"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/>channel-&gt;<ref refid="struct_x_m_c___u_s_i_c___c_h__t_1a4f306d0f14e17555e82b55f6782be566" kindref="member">FMR</ref><sp/>=<sp/>USIC_CH_FMR_CRDV0_Msk<sp/>|<sp/>USIC_CH_FMR_CRDV1_Msk;</highlight></codeline>
<codeline lineno="1559"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"></highlight></codeline>
<codeline lineno="1561"><highlight class="normal"></highlight></codeline>
<codeline lineno="1577"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_s_i_c_1ga46806897ccf781fb6289a8e12c11f9bf" kindref="member">XMC_USIC_CH_SetPassiveDataLevel</ref>(<ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>channel,</highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group___u_s_i_c_1ga352121d35153623dc793f3b59c075eb0" kindref="member">XMC_USIC_CH_PASSIVE_DATA_LEVEL_t</ref><sp/>passive_level)</highlight></codeline>
<codeline lineno="1579"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/>channel-&gt;<ref refid="struct_x_m_c___u_s_i_c___c_h__t_1ac005cdf6a4e1350830161ee7ef88b9a2" kindref="member">SCTR</ref><sp/>&amp;=<sp/>(~USIC_CH_SCTR_PDL_Msk);</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/>channel-&gt;<ref refid="struct_x_m_c___u_s_i_c___c_h__t_1ac005cdf6a4e1350830161ee7ef88b9a2" kindref="member">SCTR</ref><sp/>|=<sp/>(uint32_t)passive_level;</highlight></codeline>
<codeline lineno="1582"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"></highlight></codeline>
<codeline lineno="1584"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>TX<sp/>FIFO<sp/>APIs<sp/>*/</highlight></codeline>
<codeline lineno="1607"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_s_i_c_1ga7cfe52daa733ba40e9b93fec60b04406" kindref="member">XMC_USIC_CH_TXFIFO_Configure</ref>(<ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>channel,</highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>data_pointer,</highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group___u_s_i_c_1gafdd0a07bee93d72936191b7e8555aefe" kindref="member">XMC_USIC_CH_FIFO_SIZE_t</ref><sp/>size,</highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>limit);</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"></highlight></codeline>
<codeline lineno="1631"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_s_i_c_1ga6f77f046f48083e3e86735636e86490b" kindref="member">XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit</ref>(<ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>channel,</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group___u_s_i_c_1gafdd0a07bee93d72936191b7e8555aefe" kindref="member">XMC_USIC_CH_FIFO_SIZE_t</ref><sp/>size,</highlight></codeline>
<codeline lineno="1633"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>limit);</highlight></codeline>
<codeline lineno="1634"><highlight class="normal"></highlight></codeline>
<codeline lineno="1635"><highlight class="normal"></highlight></codeline>
<codeline lineno="1649"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_s_i_c_1ga38937a6f31ca7d8b4ec880910fdf8925" kindref="member">XMC_USIC_CH_TXFIFO_SetTriggerLimit</ref>(<ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>channel,</highlight></codeline>
<codeline lineno="1650"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>limit)</highlight></codeline>
<codeline lineno="1651"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1652"><highlight class="normal"><sp/><sp/>channel-&gt;<ref refid="struct_x_m_c___u_s_i_c___c_h__t_1a296a4090d20090679ec849b77af2ad5b" kindref="member">TBCTR</ref><sp/>=<sp/>(channel-&gt;<ref refid="struct_x_m_c___u_s_i_c___c_h__t_1a296a4090d20090679ec849b77af2ad5b" kindref="member">TBCTR</ref><sp/>&amp;<sp/>(uint32_t)~USIC_CH_TBCTR_LIMIT_Msk)<sp/>|<sp/>((limit<sp/>&lt;&lt;<sp/>USIC_CH_TBCTR_LIMIT_Pos)<sp/>&amp;<sp/>USIC_CH_TBCTR_LIMIT_Msk);</highlight></codeline>
<codeline lineno="1653"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"></highlight></codeline>
<codeline lineno="1655"><highlight class="normal"></highlight></codeline>
<codeline lineno="1656"><highlight class="normal"></highlight></codeline>
<codeline lineno="1675"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_s_i_c_1ga4688634fee0d7fbdefca290999ca7b49" kindref="member">XMC_USIC_CH_TXFIFO_EnableEvent</ref>(<ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>channel,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>event)</highlight></codeline>
<codeline lineno="1676"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"><sp/><sp/>channel-&gt;<ref refid="struct_x_m_c___u_s_i_c___c_h__t_1a296a4090d20090679ec849b77af2ad5b" kindref="member">TBCTR</ref><sp/>|=<sp/>event;</highlight></codeline>
<codeline lineno="1678"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1679"><highlight class="normal"></highlight></codeline>
<codeline lineno="1680"><highlight class="normal"></highlight></codeline>
<codeline lineno="1697"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_s_i_c_1ga11e72155477de1a0495e4f85362fad86" kindref="member">XMC_USIC_CH_TXFIFO_DisableEvent</ref>(<ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>channel,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>event)</highlight></codeline>
<codeline lineno="1698"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/>channel-&gt;<ref refid="struct_x_m_c___u_s_i_c___c_h__t_1a296a4090d20090679ec849b77af2ad5b" kindref="member">TBCTR</ref><sp/>&amp;=<sp/>(uint32_t)~event;</highlight></codeline>
<codeline lineno="1700"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1701"><highlight class="normal"></highlight></codeline>
<codeline lineno="1726"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_s_i_c_1ga63e10af0afcde1c73c39cd6522ac0614" kindref="member">XMC_USIC_CH_TXFIFO_SetInterruptNodePointer</ref>(<ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>channel,</highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group___u_s_i_c_1gaed66b290b2c45854fcd04580fb6349a1" kindref="member">XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_t</ref><sp/>interrupt_node,</highlight></codeline>
<codeline lineno="1728"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>service_request);</highlight></codeline>
<codeline lineno="1729"><highlight class="normal"></highlight></codeline>
<codeline lineno="1745"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_s_i_c_1gae96e9afeaefe2585b687e36f6227727f" kindref="member">XMC_USIC_CH_TXFIFO_PutData</ref>(<ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>channel,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>data)</highlight></codeline>
<codeline lineno="1746"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1747"><highlight class="normal"><sp/><sp/>channel-&gt;<ref refid="struct_x_m_c___u_s_i_c___c_h__t_1aa7baca4bb2ca5b8e9a3ab21a8c248a6d" kindref="member">IN</ref>[0]<sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="1748"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1749"><highlight class="normal"></highlight></codeline>
<codeline lineno="1770"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_s_i_c_1gacd104b83180de6dba78ae2b2a3213a8c" kindref="member">XMC_USIC_CH_TXFIFO_PutDataEx</ref>(<ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>channel,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>data,<sp/>uint8_t<sp/>loc)</highlight></codeline>
<codeline lineno="1771"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1772"><highlight class="normal"><sp/><sp/>channel-&gt;<ref refid="struct_x_m_c___u_s_i_c___c_h__t_1aa7baca4bb2ca5b8e9a3ab21a8c248a6d" kindref="member">IN</ref>[loc]<sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="1773"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1774"><highlight class="normal"></highlight></codeline>
<codeline lineno="1793"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_s_i_c_1ga0f14560e863b15c6bd123e534332e9f5" kindref="member">XMC_USIC_CH_TXFIFO_PutDataFLEMode</ref>(<ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>channel,</highlight></codeline>
<codeline lineno="1794"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>data,</highlight></codeline>
<codeline lineno="1795"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>frame_length)</highlight></codeline>
<codeline lineno="1796"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1797"><highlight class="normal"><sp/><sp/>channel-&gt;<ref refid="struct_x_m_c___u_s_i_c___c_h__t_1aa7baca4bb2ca5b8e9a3ab21a8c248a6d" kindref="member">IN</ref>[frame_length]<sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="1798"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1799"><highlight class="normal"></highlight></codeline>
<codeline lineno="1817"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_s_i_c_1ga9ff4e6996ea2318ceea8294be1d40c30" kindref="member">XMC_USIC_CH_TXFIFO_PutDataHPCMode</ref>(<ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>channel,</highlight></codeline>
<codeline lineno="1818"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>data,</highlight></codeline>
<codeline lineno="1819"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>frame_length)</highlight></codeline>
<codeline lineno="1820"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1821"><highlight class="normal"><sp/><sp/>channel-&gt;<ref refid="struct_x_m_c___u_s_i_c___c_h__t_1aa7baca4bb2ca5b8e9a3ab21a8c248a6d" kindref="member">IN</ref>[frame_length]<sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="1822"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1823"><highlight class="normal"></highlight></codeline>
<codeline lineno="1836"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_s_i_c_1gab075189d6283b3cff45bb4f38d1bd4aa" kindref="member">XMC_USIC_CH_TXFIFO_Flush</ref>(<ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>channel)</highlight></codeline>
<codeline lineno="1837"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1838"><highlight class="normal"><sp/><sp/>channel-&gt;<ref refid="struct_x_m_c___u_s_i_c___c_h__t_1aa4ebd1cc49417ade270040dd5ae90a76" kindref="member">TRBSCR</ref><sp/>=<sp/>(uint32_t)USIC_CH_TRBSCR_FLUSHTB_Msk;</highlight></codeline>
<codeline lineno="1839"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1840"><highlight class="normal"></highlight></codeline>
<codeline lineno="1855"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group___u_s_i_c_1gaaee9b8efb56290224bfe1d5ac9b273a3" kindref="member">XMC_USIC_CH_TXFIFO_IsFull</ref>(<ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>channel)</highlight></codeline>
<codeline lineno="1856"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1857"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">)(channel-&gt;<ref refid="struct_x_m_c___u_s_i_c___c_h__t_1a9c79cb9e505b1157be614ba619b3d545" kindref="member">TRBSR</ref><sp/>&amp;<sp/>USIC_CH_TRBSR_TFULL_Msk);</highlight></codeline>
<codeline lineno="1858"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1859"><highlight class="normal"></highlight></codeline>
<codeline lineno="1875"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group___u_s_i_c_1ga0cb5c1c2623ce6281ed8683007da127b" kindref="member">XMC_USIC_CH_TXFIFO_IsEmpty</ref>(<ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>channel)</highlight></codeline>
<codeline lineno="1876"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1877"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">)(channel-&gt;<ref refid="struct_x_m_c___u_s_i_c___c_h__t_1a9c79cb9e505b1157be614ba619b3d545" kindref="member">TRBSR</ref><sp/>&amp;<sp/>USIC_CH_TRBSR_TEMPTY_Msk);</highlight></codeline>
<codeline lineno="1878"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1879"><highlight class="normal"></highlight></codeline>
<codeline lineno="1894"><highlight class="normal">__STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group___u_s_i_c_1ga8724f831f2fc77366ece9f4b91bc095f" kindref="member">XMC_USIC_CH_TXFIFO_GetLevel</ref>(<ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>channel)</highlight></codeline>
<codeline lineno="1895"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1896"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((uint32_t)(channel-&gt;<ref refid="struct_x_m_c___u_s_i_c___c_h__t_1a9c79cb9e505b1157be614ba619b3d545" kindref="member">TRBSR</ref><sp/>&amp;<sp/>USIC_CH_TRBSR_TBFLVL_Msk)<sp/>&gt;&gt;<sp/>USIC_CH_TRBSR_TBFLVL_Pos);</highlight></codeline>
<codeline lineno="1897"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1898"><highlight class="normal"></highlight></codeline>
<codeline lineno="1916"><highlight class="normal">__STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group___u_s_i_c_1gadad2288d7f198fbc582dc4af7d1386c5" kindref="member">XMC_USIC_CH_TXFIFO_GetEvent</ref>(<ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>channel)</highlight></codeline>
<codeline lineno="1917"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1918"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(uint32_t)((channel-&gt;<ref refid="struct_x_m_c___u_s_i_c___c_h__t_1a9c79cb9e505b1157be614ba619b3d545" kindref="member">TRBSR</ref>)<sp/>&amp;<sp/>(USIC_CH_TRBSR_STBI_Msk<sp/>|</highlight></codeline>
<codeline lineno="1919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>USIC_CH_TRBSR_TBERI_Msk));</highlight></codeline>
<codeline lineno="1920"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1921"><highlight class="normal"></highlight></codeline>
<codeline lineno="1940"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_s_i_c_1gaf6c7228b9e6c44332c077acf720f12b9" kindref="member">XMC_USIC_CH_TXFIFO_ClearEvent</ref>(<ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>channel,</highlight></codeline>
<codeline lineno="1941"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>event)</highlight></codeline>
<codeline lineno="1942"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1943"><highlight class="normal"><sp/><sp/>channel-&gt;<ref refid="struct_x_m_c___u_s_i_c___c_h__t_1aa4ebd1cc49417ade270040dd5ae90a76" kindref="member">TRBSCR</ref><sp/>=<sp/>event;</highlight></codeline>
<codeline lineno="1944"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1945"><highlight class="normal"></highlight></codeline>
<codeline lineno="1968"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_s_i_c_1ga4ba419dd17bdb7e7be5f5ca757910a00" kindref="member">XMC_USIC_CH_RXFIFO_Configure</ref>(<ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>channel,</highlight></codeline>
<codeline lineno="1969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>data_pointer,</highlight></codeline>
<codeline lineno="1970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group___u_s_i_c_1gafdd0a07bee93d72936191b7e8555aefe" kindref="member">XMC_USIC_CH_FIFO_SIZE_t</ref><sp/>size,</highlight></codeline>
<codeline lineno="1971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>limit);</highlight></codeline>
<codeline lineno="1972"><highlight class="normal"></highlight></codeline>
<codeline lineno="1992"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_s_i_c_1gae9984f496fe787c05b84dc6d1d65ee2e" kindref="member">XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit</ref>(<ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>channel,</highlight></codeline>
<codeline lineno="1993"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group___u_s_i_c_1gafdd0a07bee93d72936191b7e8555aefe" kindref="member">XMC_USIC_CH_FIFO_SIZE_t</ref><sp/>size,</highlight></codeline>
<codeline lineno="1994"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>limit);</highlight></codeline>
<codeline lineno="1995"><highlight class="normal"></highlight></codeline>
<codeline lineno="2009"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_s_i_c_1ga3c05c804d8323d18d02d3bd30e3523ea" kindref="member">XMC_USIC_CH_RXFIFO_SetTriggerLimit</ref>(<ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>channel,</highlight></codeline>
<codeline lineno="2010"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>limit)</highlight></codeline>
<codeline lineno="2011"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2012"><highlight class="normal"><sp/><sp/>channel-&gt;<ref refid="struct_x_m_c___u_s_i_c___c_h__t_1a85045a6d4b52fe95abdb1aa23479f348" kindref="member">RBCTR</ref><sp/>=<sp/>(channel-&gt;<ref refid="struct_x_m_c___u_s_i_c___c_h__t_1a85045a6d4b52fe95abdb1aa23479f348" kindref="member">RBCTR</ref><sp/>&amp;<sp/>(uint32_t)~USIC_CH_RBCTR_LIMIT_Msk)<sp/>|<sp/>((limit<sp/>&lt;&lt;<sp/>USIC_CH_RBCTR_LIMIT_Pos)<sp/>&amp;<sp/>USIC_CH_RBCTR_LIMIT_Msk);</highlight></codeline>
<codeline lineno="2013"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2014"><highlight class="normal"></highlight></codeline>
<codeline lineno="2033"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_s_i_c_1gad4cdb767e1ac3a256b1335a19d2c33ad" kindref="member">XMC_USIC_CH_RXFIFO_EnableEvent</ref>(<ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>channel,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>event)</highlight></codeline>
<codeline lineno="2034"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2035"><highlight class="normal"><sp/><sp/>channel-&gt;<ref refid="struct_x_m_c___u_s_i_c___c_h__t_1a85045a6d4b52fe95abdb1aa23479f348" kindref="member">RBCTR</ref><sp/>|=<sp/>event;</highlight></codeline>
<codeline lineno="2036"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2037"><highlight class="normal"></highlight></codeline>
<codeline lineno="2038"><highlight class="normal"></highlight></codeline>
<codeline lineno="2057"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_s_i_c_1gaf5f963f40c8ab670bffe6ce88cdf462d" kindref="member">XMC_USIC_CH_RXFIFO_DisableEvent</ref>(<ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>channel,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>event)</highlight></codeline>
<codeline lineno="2058"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2059"><highlight class="normal"><sp/><sp/>channel-&gt;<ref refid="struct_x_m_c___u_s_i_c___c_h__t_1a85045a6d4b52fe95abdb1aa23479f348" kindref="member">RBCTR</ref><sp/>&amp;=<sp/>(uint32_t)~event;</highlight></codeline>
<codeline lineno="2060"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2061"><highlight class="normal"></highlight></codeline>
<codeline lineno="2086"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_s_i_c_1ga0cce6b36f9c5fc6b9487dcee14a04e1a" kindref="member">XMC_USIC_CH_RXFIFO_SetInterruptNodePointer</ref>(<ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>channel,</highlight></codeline>
<codeline lineno="2087"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group___u_s_i_c_1ga4b1bb4e4041f310e46c635b007ee2c73" kindref="member">XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_t</ref><sp/>interrupt_node,</highlight></codeline>
<codeline lineno="2088"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>service_request);</highlight></codeline>
<codeline lineno="2089"><highlight class="normal"></highlight></codeline>
<codeline lineno="2106"><highlight class="normal">__STATIC_INLINE<sp/>uint16_t<sp/><ref refid="group___u_s_i_c_1ga661b9482d7cc6b983f178bb6a30a5c76" kindref="member">XMC_USIC_CH_RXFIFO_GetData</ref>(<ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>channel)</highlight></codeline>
<codeline lineno="2107"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(uint16_t)(channel-&gt;<ref refid="struct_x_m_c___u_s_i_c___c_h__t_1ae703f8c37a21dd534cac2e0aedf8359f" kindref="member">OUTR</ref>);</highlight></codeline>
<codeline lineno="2109"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2110"><highlight class="normal"></highlight></codeline>
<codeline lineno="2123"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_s_i_c_1gab8a59ec35554be7dbf41778888d2b69f" kindref="member">XMC_USIC_CH_RXFIFO_Flush</ref>(<ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>channel)</highlight></codeline>
<codeline lineno="2124"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2125"><highlight class="normal"><sp/><sp/>channel-&gt;<ref refid="struct_x_m_c___u_s_i_c___c_h__t_1aa4ebd1cc49417ade270040dd5ae90a76" kindref="member">TRBSCR</ref><sp/>=<sp/>(uint32_t)USIC_CH_TRBSCR_FLUSHRB_Msk;</highlight></codeline>
<codeline lineno="2126"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2127"><highlight class="normal"></highlight></codeline>
<codeline lineno="2142"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group___u_s_i_c_1ga23338f848d35ee56a38af652e4a9db6a" kindref="member">XMC_USIC_CH_RXFIFO_IsFull</ref>(<ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>channel)</highlight></codeline>
<codeline lineno="2143"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2144"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">)(channel-&gt;<ref refid="struct_x_m_c___u_s_i_c___c_h__t_1a9c79cb9e505b1157be614ba619b3d545" kindref="member">TRBSR</ref><sp/>&amp;<sp/>USIC_CH_TRBSR_RFULL_Msk);</highlight></codeline>
<codeline lineno="2145"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2146"><highlight class="normal"></highlight></codeline>
<codeline lineno="2162"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group___u_s_i_c_1gaa81c3a8fab62930c291910628a08f575" kindref="member">XMC_USIC_CH_RXFIFO_IsEmpty</ref>(<ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>channel)</highlight></codeline>
<codeline lineno="2163"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2164"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">)(channel-&gt;<ref refid="struct_x_m_c___u_s_i_c___c_h__t_1a9c79cb9e505b1157be614ba619b3d545" kindref="member">TRBSR</ref><sp/>&amp;<sp/>USIC_CH_TRBSR_REMPTY_Msk);</highlight></codeline>
<codeline lineno="2165"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2166"><highlight class="normal"></highlight></codeline>
<codeline lineno="2182"><highlight class="normal">__STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group___u_s_i_c_1gac69592a81e495b0adf515547a0e8037e" kindref="member">XMC_USIC_CH_RXFIFO_GetLevel</ref>(<ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>channel)</highlight></codeline>
<codeline lineno="2183"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2184"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((uint32_t)(channel-&gt;<ref refid="struct_x_m_c___u_s_i_c___c_h__t_1a9c79cb9e505b1157be614ba619b3d545" kindref="member">TRBSR</ref><sp/>&amp;<sp/>USIC_CH_TRBSR_RBFLVL_Msk)<sp/>&gt;&gt;<sp/>USIC_CH_TRBSR_RBFLVL_Pos);</highlight></codeline>
<codeline lineno="2185"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2186"><highlight class="normal"></highlight></codeline>
<codeline lineno="2206"><highlight class="normal">__STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group___u_s_i_c_1ga674dcaba8a7a575983ab61b27a580b2d" kindref="member">XMC_USIC_CH_RXFIFO_GetEvent</ref>(<ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>channel)</highlight></codeline>
<codeline lineno="2207"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2208"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(uint32_t)((channel-&gt;<ref refid="struct_x_m_c___u_s_i_c___c_h__t_1a9c79cb9e505b1157be614ba619b3d545" kindref="member">TRBSR</ref>)<sp/>&amp;<sp/>(USIC_CH_TRBSR_SRBI_Msk<sp/>|</highlight></codeline>
<codeline lineno="2209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>USIC_CH_TRBSR_RBERI_Msk<sp/>|</highlight></codeline>
<codeline lineno="2210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>USIC_CH_TRBSR_ARBI_Msk));</highlight></codeline>
<codeline lineno="2211"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2212"><highlight class="normal"></highlight></codeline>
<codeline lineno="2232"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_s_i_c_1ga92f2d42836e73b8a200c437e69611474" kindref="member">XMC_USIC_CH_RXFIFO_ClearEvent</ref>(<ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>channel,</highlight></codeline>
<codeline lineno="2233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>event)</highlight></codeline>
<codeline lineno="2234"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2235"><highlight class="normal"><sp/><sp/>channel-&gt;<ref refid="struct_x_m_c___u_s_i_c___c_h__t_1aa4ebd1cc49417ade270040dd5ae90a76" kindref="member">TRBSCR</ref><sp/>=<sp/>event;</highlight></codeline>
<codeline lineno="2236"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2237"><highlight class="normal"></highlight></codeline>
<codeline lineno="2250"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_s_i_c_1gadb5f590b8867d286b7a9f4e52fd3a6a9" kindref="member">XMC_USIC_CH_EnableTimeMeasurement</ref>(<ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>channel)</highlight></codeline>
<codeline lineno="2251"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2252"><highlight class="normal"><sp/><sp/>channel-&gt;<ref refid="struct_x_m_c___u_s_i_c___c_h__t_1a60442d8bed2e194af31a7bedbabf0c16" kindref="member">BRG</ref><sp/>|=<sp/>(uint32_t)USIC_CH_BRG_TMEN_Msk;</highlight></codeline>
<codeline lineno="2253"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2254"><highlight class="normal"></highlight></codeline>
<codeline lineno="2267"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_s_i_c_1gae5a5bbfcfa061c76a12505e4183d832d" kindref="member">XMC_USIC_CH_DisableTimeMeasurement</ref>(<ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>channel)</highlight></codeline>
<codeline lineno="2268"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2269"><highlight class="normal"><sp/><sp/>channel-&gt;<ref refid="struct_x_m_c___u_s_i_c___c_h__t_1a60442d8bed2e194af31a7bedbabf0c16" kindref="member">BRG</ref><sp/>&amp;=<sp/>(uint32_t)~USIC_CH_BRG_TMEN_Msk;</highlight></codeline>
<codeline lineno="2270"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2271"><highlight class="normal"></highlight></codeline>
<codeline lineno="2282"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_s_i_c_1gaf9deda88e97525978786d4711aa75067" kindref="member">XMC_USIC_CH_SetMclkOutputPassiveLevel</ref>(<ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>channel,</highlight></codeline>
<codeline lineno="2283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group___u_s_i_c_1gae9d3fa2244d754db4311c49fb624115e" kindref="member">XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_t</ref><sp/>passive_level)</highlight></codeline>
<codeline lineno="2284"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2285"><highlight class="normal"><sp/><sp/>channel-&gt;<ref refid="struct_x_m_c___u_s_i_c___c_h__t_1a60442d8bed2e194af31a7bedbabf0c16" kindref="member">BRG</ref><sp/>=<sp/>(uint32_t)(channel-&gt;<ref refid="struct_x_m_c___u_s_i_c___c_h__t_1a60442d8bed2e194af31a7bedbabf0c16" kindref="member">BRG</ref><sp/>&amp;<sp/>(~USIC_CH_BRG_MCLKCFG_Msk))<sp/>|<sp/>(uint32_t)passive_level;</highlight></codeline>
<codeline lineno="2286"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2309"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_s_i_c_1gaba9a2e95af4e455dddd73f324577c876" kindref="member">XMC_USIC_CH_ConfigureShiftClockOutput</ref>(<ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>channel,</highlight></codeline>
<codeline lineno="2310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group___u_s_i_c_1gaabdebf7dc81a008ca887ab0336f9b3de" kindref="member">XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_t</ref><sp/>passive_level,</highlight></codeline>
<codeline lineno="2311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group___u_s_i_c_1ga373c90ba61a8cc0013f395840bc9acfd" kindref="member">XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_t</ref><sp/>clock_output)</highlight></codeline>
<codeline lineno="2312"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2313"><highlight class="normal"><sp/><sp/>channel-&gt;<ref refid="struct_x_m_c___u_s_i_c___c_h__t_1a60442d8bed2e194af31a7bedbabf0c16" kindref="member">BRG</ref><sp/>=<sp/>(uint32_t)(channel-&gt;<ref refid="struct_x_m_c___u_s_i_c___c_h__t_1a60442d8bed2e194af31a7bedbabf0c16" kindref="member">BRG</ref><sp/>&amp;<sp/>(~(USIC_CH_BRG_SCLKCFG_Msk<sp/>|</highlight></codeline>
<codeline lineno="2314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>USIC_CH_BRG_SCLKOSEL_Msk)))<sp/>|</highlight></codeline>
<codeline lineno="2315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(uint32_t)passive_level<sp/>|</highlight></codeline>
<codeline lineno="2316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(uint32_t)clock_output;</highlight></codeline>
<codeline lineno="2317"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2318"><highlight class="normal"></highlight></codeline>
<codeline lineno="2336"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_s_i_c_1ga8c04c213fd44c14b1bed871bb658683c" kindref="member">XMC_USIC_CH_SetMode</ref>(<ref refid="struct_x_m_c___u_s_i_c___c_h__t" kindref="compound">XMC_USIC_CH_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>channel,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group___u_s_i_c_1gac052842418ff3dda00900219ebda5de7" kindref="member">XMC_USIC_CH_OPERATING_MODE_t</ref><sp/>mode)</highlight></codeline>
<codeline lineno="2337"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2338"><highlight class="normal"><sp/><sp/>channel-&gt;<ref refid="struct_x_m_c___u_s_i_c___c_h__t_1a5e1322e27c40bf91d172f9673f205c97" kindref="member">CCR</ref><sp/>=<sp/>(uint32_t)(channel-&gt;<ref refid="struct_x_m_c___u_s_i_c___c_h__t_1a5e1322e27c40bf91d172f9673f205c97" kindref="member">CCR</ref><sp/>&amp;<sp/>(~(USIC_CH_CCR_MODE_Msk)))<sp/>|<sp/>(uint32_t)mode;</highlight></codeline>
<codeline lineno="2339"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2340"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2341"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2342"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2343"><highlight class="normal"></highlight></codeline>
<codeline lineno="2349"><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_usic.h"/>
  </compounddef>
</doxygen>
