<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="group___s_c_u" kind="group">
    <compoundname>SCU</compoundname>
    <title>System Control Unit(SCU)</title>
    <innerclass refid="struct_x_m_c___s_c_u___c_l_o_c_k___c_o_n_f_i_g__t" prot="public">XMC_SCU_CLOCK_CONFIG_t</innerclass>
    <innerclass refid="struct_x_m_c___s_c_u___s_u_p_p_l_y_m_o_n_i_t_o_r__t" prot="public">XMC_SCU_SUPPLYMONITOR_t</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group___s_c_u_1ga51850699f03c906a5fefcc4f04c6b2c1" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_SCU_CCU_TRIGGER_t</name>
        <enumvalue id="group___s_c_u_1gga51850699f03c906a5fefcc4f04c6b2c1ab9e67fe77a9a1219bd0d4594c3f7a0ea" prot="public">
          <name>XMC_SCU_CCU_TRIGGER_CCU40</name>
          <initializer>= SCU_GENERAL_CCUCON_GSC40_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trigger CCU40 peripheral. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1gga51850699f03c906a5fefcc4f04c6b2c1ae5aa55222489a096c454eb0ce95e1bf2" prot="public">
          <name>XMC_SCU_CCU_TRIGGER_CCU80</name>
          <initializer>= SCU_GENERAL_CCUCON_GSC80_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trigger CCU80 peripheral. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1gga51850699f03c906a5fefcc4f04c6b2c1aa247a6e6177fb8baf1b9b1c50f7652d1" prot="public">
          <name>XMC_SCU_CCU_TRIGGER_CCU41</name>
          <initializer>= SCU_GENERAL_CCUCON_GSC41_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trigger CCU40 peripheral. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1gga51850699f03c906a5fefcc4f04c6b2c1a283d83cce4146c37511e1a8a8ac1a54b" prot="public">
          <name>XMC_SCU_CCU_TRIGGER_CCU81</name>
          <initializer>= SCU_GENERAL_CCUCON_GSC81_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trigger CCU80 peripheral. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Defines options for Capture/Compare unit timer slice trigger that enables synchronous start function available on the <emphasis>SCU</emphasis>, <emphasis>CCUCON</emphasis> register. Use type <emphasis>XMC_SCU_CCU_TRIGGER_t</emphasis> for accessing these enum parameters. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="394" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" bodystart="393" bodyend="405"/>
      </memberdef>
      <memberdef kind="enum" id="group___s_c_u_1ga353883c8a243d54487bb5cc8edc20a32" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_SCU_CLOCK_ADCCLKSRC_t</name>
        <enumvalue id="group___s_c_u_1gga353883c8a243d54487bb5cc8edc20a32ac4326ac9cab781cf12f53f6901879fd2" prot="public">
          <name>XMC_SCU_CLOCK_ADCCLKSRC_48MHZ</name>
          <initializer>= 0UL &lt;&lt; SCU_CLK_CLKCR1_ADCCLKSEL_Pos</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Internal oscillator DCO1 (48MHz) </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1gga353883c8a243d54487bb5cc8edc20a32a660788de8c6b105e41a76ab8e0aeee8c" prot="public">
          <name>XMC_SCU_CLOCK_ADCCLKSRC_32MHZ</name>
          <initializer>= 1UL &lt;&lt; SCU_CLK_CLKCR1_ADCCLKSEL_Pos</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Internal oscillator DCO1 (48MHz) divided by 1.5 </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>ADC clock source selection <simplesect kind="note"><para>Only available in XMC1400 series </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="292" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" bodystart="291" bodyend="295"/>
      </memberdef>
      <memberdef kind="enum" id="group___s_c_u_1gaa23b0a26e39703fa5dd32dc275fb4f12" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_SCU_CLOCK_DCLKSRC_t</name>
        <enumvalue id="group___s_c_u_1ggaa23b0a26e39703fa5dd32dc275fb4f12a9a1224f2164635157989f7f15b46d1c9" prot="public">
          <name>XMC_SCU_CLOCK_DCLKSRC_DCO1</name>
          <initializer>= 0UL &lt;&lt; SCU_CLK_CLKCR1_DCLKSEL_Pos</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Internal oscillator DCO1 (48MHz) </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggaa23b0a26e39703fa5dd32dc275fb4f12a818faff3197a02732cce678cc6aaf0e9" prot="public">
          <name>XMC_SCU_CLOCK_DCLKSRC_EXT_XTAL</name>
          <initializer>= 1UL &lt;&lt; SCU_CLK_CLKCR1_DCLKSEL_Pos</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>External crystal oscillator </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>DCLK clock source selection <simplesect kind="note"><para>Only available in XMC1400 series </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="282" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" bodystart="281" bodyend="285"/>
      </memberdef>
      <memberdef kind="enum" id="group___s_c_u_1ga48301d5a516ffd248e062d8f98bb8148" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_SCU_CLOCK_OSCHP_MODE_t</name>
        <enumvalue id="group___s_c_u_1gga48301d5a516ffd248e062d8f98bb8148ac342e04de860ad8d166b9fb10e92163d" prot="public">
          <name>XMC_SCU_CLOCK_OSCHP_MODE_OSC</name>
          <initializer>= 0UL &lt;&lt; SCU_ANALOG_ANAOSCHPCTRL_MODE_Pos</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Oscillator is enabled and in active power mode with shaper enabled </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1gga48301d5a516ffd248e062d8f98bb8148a5973a8a04d3f804c808fd1751f39a9c2" prot="public">
          <name>XMC_SCU_CLOCK_OSCHP_MODE_DIRECT</name>
          <initializer>= 1UL &lt;&lt; SCU_ANALOG_ANAOSCHPCTRL_MODE_Pos</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Oscillator in power down mode with shaper enabled </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1gga48301d5a516ffd248e062d8f98bb8148a45d0117c4bcf14330b02309938efa07a" prot="public">
          <name>XMC_SCU_CLOCK_OSCHP_MODE_DISABLED</name>
          <initializer>= 3UL &lt;&lt; SCU_ANALOG_ANAOSCHPCTRL_MODE_Pos</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Oscillator in power down mode with shaper enabled </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>OSCHP mode <simplesect kind="note"><para>Only available in XMC1400 series </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="302" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" bodystart="301" bodyend="306"/>
      </memberdef>
      <memberdef kind="enum" id="group___s_c_u_1gad5bf98e9ea7d145180ad029ea3560d8d" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_SCU_CLOCK_OSCLP_MODE_t</name>
        <enumvalue id="group___s_c_u_1ggad5bf98e9ea7d145180ad029ea3560d8dabba44053922460bd51b848758b68652c" prot="public">
          <name>XMC_SCU_CLOCK_OSCLP_MODE_OSC</name>
          <initializer>= 0UL &lt;&lt; SCU_ANALOG_ANAOSCLPCTRL_MODE_Pos</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Oscillator is enabled and in active power mode with shaper enabled </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad5bf98e9ea7d145180ad029ea3560d8da2aa0726d469344af68cf72f8ed3b1841" prot="public">
          <name>XMC_SCU_CLOCK_OSCLP_MODE_DISABLED</name>
          <initializer>= 3UL &lt;&lt; SCU_ANALOG_ANAOSCLPCTRL_MODE_Pos</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Oscillator in power down mode with shaper enabled </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>OSCLP mode <simplesect kind="note"><para>Only available in XMC1400 series </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="313" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" bodystart="312" bodyend="316"/>
      </memberdef>
      <memberdef kind="enum" id="group___s_c_u_1gad4ef17eaabe7b13c5c159ba6b24c6a2c" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_SCU_CLOCK_PCLKSRC_t</name>
        <enumvalue id="group___s_c_u_1ggad4ef17eaabe7b13c5c159ba6b24c6a2ca68981ef360c0c5bd355918858a72c3f3" prot="public">
          <name>XMC_SCU_CLOCK_PCLKSRC_MCLK</name>
          <initializer>= (0UL &lt;&lt; SCU_CLK_CLKCR_PCLKSEL_Pos)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>MCLK as the source for PCLK. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad4ef17eaabe7b13c5c159ba6b24c6a2cac5e87eeb279a280a096fccee739e1cc1" prot="public">
          <name>XMC_SCU_CLOCK_PCLKSRC_DOUBLE_MCLK</name>
          <initializer>= (1UL &lt;&lt; SCU_CLK_CLKCR_PCLKSEL_Pos)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Source of PCLK is twice the MCLK. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Defines possible sources of peripheral clock (PCLK). These enums can be used to configure <emphasis>PCLKSEL</emphasis> bits of <emphasis>CLKCR</emphasis> Clock Control Register. Use type <emphasis>XMC_SCU_CLOCK_PCLKSRC_t</emphasis> for accessing these enum parameters. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="271" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" bodystart="270" bodyend="274"/>
      </memberdef>
      <memberdef kind="enum" id="group___s_c_u_1ga6cf5c338f64adfc26ef8c49e826cd752" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_SCU_CLOCK_RTCCLKSRC_t</name>
        <enumvalue id="group___s_c_u_1gga6cf5c338f64adfc26ef8c49e826cd752a53e45cffbefd82a99a6b3823ac158007" prot="public">
          <name>XMC_SCU_CLOCK_RTCCLKSRC_DCO2</name>
          <initializer>= (0x0UL &lt;&lt; SCU_CLK_CLKCR_RTCCLKSEL_Pos)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>RTC clock source is standby clock. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1gga6cf5c338f64adfc26ef8c49e826cd752a73ebf57da51c953f94ac117429da1728" prot="public">
          <name>XMC_SCU_CLOCK_RTCCLKSRC_ERU_IOUT0</name>
          <initializer>= (0x1UL &lt;&lt; SCU_CLK_CLKCR_RTCCLKSEL_Pos)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>RTC clock source is external clock from ERU0.IOUT0. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1gga6cf5c338f64adfc26ef8c49e826cd752a41b802a680db96bfed5bb865e665101b" prot="public">
          <name>XMC_SCU_CLOCK_RTCCLKSRC_ACMP0_OUT</name>
          <initializer>= (0x2UL &lt;&lt; SCU_CLK_CLKCR_RTCCLKSEL_Pos)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>RTC clock source is external clock from ACMP0.OUT. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1gga6cf5c338f64adfc26ef8c49e826cd752a1c9bca4660e4084fe22e2b5f8025ccf5" prot="public">
          <name>XMC_SCU_CLOCK_RTCCLKSRC_ACMP1_OUT</name>
          <initializer>= (0x3UL &lt;&lt; SCU_CLK_CLKCR_RTCCLKSEL_Pos)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>RTC clock source is external clock from ACMP1.OUT. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1gga6cf5c338f64adfc26ef8c49e826cd752a2fe29d440be9a7d055d919a602ed86c8" prot="public">
          <name>XMC_SCU_CLOCK_RTCCLKSRC_ACMP2_OUT</name>
          <initializer>= (0x4UL &lt;&lt; SCU_CLK_CLKCR_RTCCLKSEL_Pos)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>RTC clock source is external clock from ACMP2.OUT. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1gga6cf5c338f64adfc26ef8c49e826cd752a58dac8adf80251961dae7f44f12e4819" prot="public">
          <name>XMC_SCU_CLOCK_RTCCLKSRC_OSCLP</name>
          <initializer>= (0x5UL &lt;&lt; SCU_CLK_CLKCR_RTCCLKSEL_Pos)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>32.768kHz XTAL clock via OSC_LP. <simplesect kind="note"><para>Only available for XMC1400 series </para>
</simplesect>
</para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Defines possible sources of RTC clock. These enums can be used to configure <emphasis>RTCCLKSEL</emphasis> bits of <emphasis>CLKCR</emphasis> Clock Control Register. Use type <emphasis>XMC_SCU_CLOCK_RTCCLKSRC_t</emphasis> for accessing these enum parameters. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="251" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" bodystart="250" bodyend="264"/>
      </memberdef>
      <memberdef kind="enum" id="group___s_c_u_1ga26cbc15f43439603ed5976e7be9b6212" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_SCU_CLOCK_SYNC_CLKSRC_t</name>
        <enumvalue id="group___s_c_u_1gga26cbc15f43439603ed5976e7be9b6212a18d4d65c0eb6a67d3b6922fecf1158d1" prot="public">
          <name>XMC_SCU_CLOCK_SYNC_CLKSRC_OSCLP</name>
          <initializer>= 0U &lt;&lt; SCU_ANALOG_ANASYNC1_XTAL_SEL_Pos</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1gga26cbc15f43439603ed5976e7be9b6212ae445eb0340e63bfee25aee31e976e69e" prot="public">
          <name>XMC_SCU_CLOCK_SYNC_CLKSRC_OSCHP</name>
          <initializer>= 1U &lt;&lt; SCU_ANALOG_ANASYNC1_XTAL_SEL_Pos</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Clock source for synchronization <simplesect kind="note"><para>Only available in XMC1400 series </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="323" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" bodystart="322" bodyend="326"/>
      </memberdef>
      <memberdef kind="enum" id="group___s_c_u_1gad54a1c90f3b35f4c49d62ac204678487" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_SCU_IRQCTRL_t</name>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487ab1be359c25b9ee5e1cd77625752f88f6" prot="public">
          <name>XMC_SCU_IRQCTRL_SCU_SR0_IRQ0</name>
          <initializer>= (0U &lt;&lt; 8U) | 0U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SCU_SR0 connected to IRQ0 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487a1744de354138e96d9c18e8db6e3dde0e" prot="public">
          <name>XMC_SCU_IRQCTRL_CAN0_SR0_IRQ0</name>
          <initializer>= (0U &lt;&lt; 8U) | 1U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>CAN0_SR0 connected to IRQ0 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487a4e8d1706cedff9e187ab2caa45eb3c24" prot="public">
          <name>XMC_SCU_IRQCTRL_CCU40_SR0_IRQ0</name>
          <initializer>= (0U &lt;&lt; 8U) | 2U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>CCU40_SR0 connected to IRQ0 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487a919c57326c65f967a4f068e2e61191b6" prot="public">
          <name>XMC_SCU_IRQCTRL_SCU_SR0_OR_CAN0_SR0_IRQ0</name>
          <initializer>= (0U &lt;&lt; 8U) | 3U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SCU_SR0 and CAN_SR0 are both connected to IRQ0 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487a3503a4df9fd7656de16783863adaf145" prot="public">
          <name>XMC_SCU_IRQCTRL_SCU_SR1_IRQ1</name>
          <initializer>= (1U &lt;&lt; 8U) | 0U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SCU_SR1 connected to IRQ1 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487a575c54815d2e530313280a6d6da4ad8c" prot="public">
          <name>XMC_SCU_IRQCTRL_CAN0_SR1_IRQ1</name>
          <initializer>= (1U &lt;&lt; 8U) | 1U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>CAN0_SR1 connected to IRQ1 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487aaf752f48d20a35f36d6296bdd6ec198d" prot="public">
          <name>XMC_SCU_IRQCTRL_CCU80_SR0_IRQ1</name>
          <initializer>= (1U &lt;&lt; 8U) | 2U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>CCU80_SR0 connected to IRQ1 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487a4bd21bd938ac670ad202dbd04d39dfc5" prot="public">
          <name>XMC_SCU_IRQCTRL_SCU_SR1_OR_CAN0_SR1_IRQ1</name>
          <initializer>= (1U &lt;&lt; 8U) | 3U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SCU_SR1 and CAN0_SR1 connected to IRQ1 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487ab623c552b1a92626f5f065e4564ab076" prot="public">
          <name>XMC_SCU_IRQCTRL_SCU_SR2_IRQ2</name>
          <initializer>= (2U &lt;&lt; 8U) | 0U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SCU_SR2 connected to IRQ2 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487a7055efec30fe6b77780f10729e6ccdd3" prot="public">
          <name>XMC_SCU_IRQCTRL_CAN0_SR2_IRQ2</name>
          <initializer>= (2U &lt;&lt; 8U) | 1U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>CAN0_SR2 connected to IRQ2 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487a4ec7109975079964c5af452061e376ba" prot="public">
          <name>XMC_SCU_IRQCTRL_CCU80_SR1_IRQ2</name>
          <initializer>= (2U &lt;&lt; 8U) | 2U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>CCU80_SR1 connected to IRQ2 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487af90f457ea27729d6dd66910f4feec1c8" prot="public">
          <name>XMC_SCU_IRQCTRL_SCU_SR2_OR_CAN0_SR2_IRQ2</name>
          <initializer>= (2U &lt;&lt; 8U) | 3U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SCU_SR2 and CAN0_SR2 connected to IRQ2 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487aebda6657ba02109dcd9594fb39517350" prot="public">
          <name>XMC_SCU_IRQCTRL_ERU0_SR0_IRQ3</name>
          <initializer>= (3U &lt;&lt; 8U) | 0U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>ERU0_SR0 connected to IRQ3 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487ae7e19b40961c05a1a39f150a3d530ea5" prot="public">
          <name>XMC_SCU_IRQCTRL_ERU1_SR0_IRQ3</name>
          <initializer>= (3U &lt;&lt; 8U) | 1U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>ERU1_SR0 connected to IRQ3 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487add9f667f5da28b7b0b353b10c57798ff" prot="public">
          <name>XMC_SCU_IRQCTRL_CAN0_SR0_IRQ3</name>
          <initializer>= (3U &lt;&lt; 8U) | 2U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>CAN0_SR0 connected to IRQ3 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487a8f30ea448697223320ed95b114326604" prot="public">
          <name>XMC_SCU_IRQCTRL_ERU0_SR0_OR_ERU1_SR0_IRQ3</name>
          <initializer>= (3U &lt;&lt; 8U) | 3U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>ERU0_SR0 and ERU1_SR0 connected to IRQ3 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487ac68238fef35855b64d29c302591fdd51" prot="public">
          <name>XMC_SCU_IRQCTRL_ERU0_SR1_IRQ4</name>
          <initializer>= (4U &lt;&lt; 8U) | 0U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>ERU0_SR1 connected to IRQ4 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487a6994100b7c761b15ad8766d4375e78c5" prot="public">
          <name>XMC_SCU_IRQCTRL_ERU1_SR1_IRQ4</name>
          <initializer>= (4U &lt;&lt; 8U) | 1U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>ERU1_SR1 connected to IRQ4 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487a5d57f3d50c270203e904d986a819db32" prot="public">
          <name>XMC_SCU_IRQCTRL_CAN0_SR1_IRQ4</name>
          <initializer>= (4U &lt;&lt; 8U) | 2U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>CAN0_SR1 connected to IRQ4 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487a70ab9a6c4c3019e3bc8ce18392cea454" prot="public">
          <name>XMC_SCU_IRQCTRL_ERU0_SR1_OR_ERU1_SR1_IRQ4</name>
          <initializer>= (4U &lt;&lt; 8U) | 3U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>ERU0_SR1 and ERU1_SR1 connected to IRQ4 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487a06a7523a0ef54aeacfc3bfcc74afdc27" prot="public">
          <name>XMC_SCU_IRQCTRL_ERU0_SR2_IRQ5</name>
          <initializer>= (5U &lt;&lt; 8U) | 0U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>ERU0_SR2 connected to IRQ5 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487ae983faf01a2deae6864b0650d4d246ed" prot="public">
          <name>XMC_SCU_IRQCTRL_ERU1_SR2_IRQ5</name>
          <initializer>= (5U &lt;&lt; 8U) | 1U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>ERU1_SR2 connected to IRQ5 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487a11c05b03a927b95afe128d7b7b014648" prot="public">
          <name>XMC_SCU_IRQCTRL_CAN0_SR2_IRQ5</name>
          <initializer>= (5U &lt;&lt; 8U) | 2U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>CAN0_SR2 connected to IRQ5 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487adb769033bc3c3d376ae4f813a944ca22" prot="public">
          <name>XMC_SCU_IRQCTRL_ERU0_SR2_OR_ERU1_SR2_IRQ5</name>
          <initializer>= (5U &lt;&lt; 8U) | 3U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>ERU0_SR2 and ERU1_SR2 connected to IRQ5 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487a05319a726da644ae8f4014fc6100f769" prot="public">
          <name>XMC_SCU_IRQCTRL_ERU0_SR3_IRQ6</name>
          <initializer>= (6U &lt;&lt; 8U) | 0U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>ERU0_SR3 connected to IRQ6 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487a66fbb751d3e51be99e2786e7ecb92f63" prot="public">
          <name>XMC_SCU_IRQCTRL_ERU1_SR3_IRQ6</name>
          <initializer>= (6U &lt;&lt; 8U) | 1U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>ERU1_SR3 connected to IRQ6 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487a981a9c9010cf08bcec62512700bf46fb" prot="public">
          <name>XMC_SCU_IRQCTRL_CAN0_SR3_IRQ6</name>
          <initializer>= (6U &lt;&lt; 8U) | 2U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>CAN0_SR3 connected to IRQ6 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487a9606144931f452469a46f5e694333b2a" prot="public">
          <name>XMC_SCU_IRQCTRL_ERU0_SR3_OR_ERU1_SR3_IRQ6</name>
          <initializer>= (6U &lt;&lt; 8U) | 3U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>ERU0_SR3 and ERU1_SR3 connected to IRQ6 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487a38aafd96c4252a8a8e60075c9959fab4" prot="public">
          <name>XMC_SCU_IRQCTRL_MATH_SR0_IRQ7</name>
          <initializer>= (7U &lt;&lt; 8U) | 0U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>MATH_SR0 connected to IRQ7 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487a93da91d7d87dae525f5054648daf0318" prot="public">
          <name>XMC_SCU_IRQCTRL_CAN0_SR3_IRQ7</name>
          <initializer>= (7U &lt;&lt; 8U) | 1U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>CAN0_SR3 connected to IRQ7 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487a9e0f2e1b5eda81c5a90d03bd91a417a5" prot="public">
          <name>XMC_SCU_IRQCTRL_CCU40_SR1_IRQ7</name>
          <initializer>= (7U &lt;&lt; 8U) | 2U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>CCU40_SR1 connected to IRQ7 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487a65883869e7537e2584b5ec9ffd4f1c3a" prot="public">
          <name>XMC_SCU_IRQCTRL_MATH_SR0_OR_CAN0_SR3_IRQ7</name>
          <initializer>= (7U &lt;&lt; 8U) | 3U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>MATH_SR0 and CAN0_SR3 connected to IRQ7 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487ac8cffdcac35b278cb0283b0293819e75" prot="public">
          <name>XMC_SCU_IRQCTRL_LEDTS2_SR0_IRQ8</name>
          <initializer>= (8U &lt;&lt; 8U) | 0U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>LEDTS2_SR0 connected to IRQ8 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487ae55ca402502427e40fab2bc90ad60ca6" prot="public">
          <name>XMC_SCU_IRQCTRL_CCU40_SR0_IRQ8</name>
          <initializer>= (8U &lt;&lt; 8U) | 1U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>CCU40_SR0 connected to IRQ8 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487aad1595526dbdaf7661a8938c0cbe5676" prot="public">
          <name>XMC_SCU_IRQCTRL_CCU80_SR0_IRQ8</name>
          <initializer>= (8U &lt;&lt; 8U) | 2U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>CCU80_SR0 connected to IRQ8 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487a3076625d59271dbbdc84ef71f0024211" prot="public">
          <name>XMC_SCU_IRQCTRL_LEDTS2_SR0_OR_CCU40_SR0_IRQ8</name>
          <initializer>= (8U &lt;&lt; 8U) | 3U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>LEDTS2_SR0 and CCU40_SR0 connected to IRQ8 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487a9189904698eabda9528b8a9b8fa58f22" prot="public">
          <name>XMC_SCU_IRQCTRL_USIC0_SR0_IRQ9</name>
          <initializer>= (9U &lt;&lt; 8U) | 0U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>USIC0_SR0 connected to IRQ9 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487a4ceef8589ce433dc0edaa0999125d167" prot="public">
          <name>XMC_SCU_IRQCTRL_USIC1_SR0_IRQ9</name>
          <initializer>= (9U &lt;&lt; 8U) | 1U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>USIC1_SR0 connected to IRQ9 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487aee0ba725d1bdfba388240d01fe3eb046" prot="public">
          <name>XMC_SCU_IRQCTRL_ERU0_SR0_IRQ9</name>
          <initializer>= (9U &lt;&lt; 8U) | 2U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>ERU0_SR0 connected to IRQ9 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487a6033d30fbdbaee43faaf1ea106f4f2f6" prot="public">
          <name>XMC_SCU_IRQCTRL_USIC0_SR0_OR_USIC1_SR0_IRQ9</name>
          <initializer>= (9U &lt;&lt; 8U) | 3U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>USIC0_SR0 and USIC1_SR0 connected to IRQ9 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487a08ce26ed33b17e866283d82d4fb54a5b" prot="public">
          <name>XMC_SCU_IRQCTRL_USIC0_SR1_IRQ10</name>
          <initializer>= (10U &lt;&lt; 8U) | 0U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>USIC0_SR1 connected to IRQ10 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487afa2a49255c585e257f08bf2771c9f5c8" prot="public">
          <name>XMC_SCU_IRQCTRL_USIC1_SR1_IRQ10</name>
          <initializer>= (10U &lt;&lt; 8U) | 1U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>USIC1_SR1 connected to IRQ10 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487aeb405a90e207a9b13c0b6c9788aa1e13" prot="public">
          <name>XMC_SCU_IRQCTRL_ERU0_SR1_IRQ10</name>
          <initializer>= (10U &lt;&lt; 8U) | 2U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>ERU0_SR1 connected to IRQ10 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487aaea3f81a42c2d68fe942b45d8fa99574" prot="public">
          <name>XMC_SCU_IRQCTRL_USIC0_SR1_OR_USIC1_SR1_IRQ10</name>
          <initializer>= (10U &lt;&lt; 8U) | 3U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>USIC0_SR1 and USIC1_SR1 connected to IRQ10 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487a47ef0f2233fa669d704d862a44de7506" prot="public">
          <name>XMC_SCU_IRQCTRL_USIC0_SR2_IRQ11</name>
          <initializer>= (11U &lt;&lt; 8U) | 0U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>USIC0_SR2 connected to IRQ11 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487ab708686ee3dfb9ac95634ccadcd8e71c" prot="public">
          <name>XMC_SCU_IRQCTRL_USIC1_SR2_IRQ11</name>
          <initializer>= (11U &lt;&lt; 8U) | 1U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>USIC1_SR2 connected to IRQ11 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487a1a65532e07b826b1bc0f34a857bb4118" prot="public">
          <name>XMC_SCU_IRQCTRL_ERU0_SR2_IRQ11</name>
          <initializer>= (11U &lt;&lt; 8U) | 2U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>ERU0_SR2 connected to IRQ11 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487a8445a27dd1ee5241853d8eea69db36a1" prot="public">
          <name>XMC_SCU_IRQCTRL_USIC0_SR2_OR_USIC1_SR2_IRQ11</name>
          <initializer>= (11U &lt;&lt; 8U) | 3U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>USIC0_SR2 and USIC1_SR2 connected to IRQ11 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487a4f658f6a02d06f8009dc9966949d40ac" prot="public">
          <name>XMC_SCU_IRQCTRL_USIC0_SR3_IRQ12</name>
          <initializer>= (12U &lt;&lt; 8U) | 0U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>USIC0_SR3 connected to IRQ12 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487a2dae2e55845c2d03679d4af66561b246" prot="public">
          <name>XMC_SCU_IRQCTRL_USIC1_SR3_IRQ12</name>
          <initializer>= (12U &lt;&lt; 8U) | 1U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>USIC1_SR3 connected to IRQ12 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487a07e2523568d98a296e1ef5a849be0ec4" prot="public">
          <name>XMC_SCU_IRQCTRL_ERU0_SR3_IRQ12</name>
          <initializer>= (12U &lt;&lt; 8U) | 2U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>ERU0_SR3 connected to IRQ12 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487ae00c5659bc7d9bc922a90f3eed32299e" prot="public">
          <name>XMC_SCU_IRQCTRL_USIC0_SR3_OR_USIC1_SR3_IRQ12</name>
          <initializer>= (12U &lt;&lt; 8U) | 3U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>USIC0_SR3 and USIC1_SR3 connected to IRQ12 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487a765463e45a5f0893bf21be42e40866ff" prot="public">
          <name>XMC_SCU_IRQCTRL_USIC0_SR4_IRQ13</name>
          <initializer>= (13U &lt;&lt; 8U) | 0U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>USIC0_SR4 connected to IRQ13 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487ab952f9c88de828afce16223d30735b5d" prot="public">
          <name>XMC_SCU_IRQCTRL_USIC1_SR4_IRQ13</name>
          <initializer>= (13U &lt;&lt; 8U) | 1U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>USIC1_SR4 connected to IRQ13 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487a60f7f438d5ac7e730035696530c175d6" prot="public">
          <name>XMC_SCU_IRQCTRL_CCU80_SR1_IRQ13</name>
          <initializer>= (13U &lt;&lt; 8U) | 2U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>CCU80_SR1 connected to IRQ13 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487aed4ef906abd76ecd762f27435bf6f8f5" prot="public">
          <name>XMC_SCU_IRQCTRL_USIC0_SR4_OR_USIC1_SR4_IRQ13</name>
          <initializer>= (13U &lt;&lt; 8U) | 3U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>USIC0_SR4 and USIC1_SR4 connected to IRQ13 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487ab5e90c490a8ea3102a2bd516e9d01806" prot="public">
          <name>XMC_SCU_IRQCTRL_USIC0_SR5_IRQ14</name>
          <initializer>= (14U &lt;&lt; 8U) | 0U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>USIC0_SR5 connected to IRQ14 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487a0bc69b6ee1e377b3d300a7bf07455a1a" prot="public">
          <name>XMC_SCU_IRQCTRL_USIC1_SR5_IRQ14</name>
          <initializer>= (14U &lt;&lt; 8U) | 1U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>USIC1_SR5 connected to IRQ14 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487a748c3f4888b6d7b09d09aaabbe6ac224" prot="public">
          <name>XMC_SCU_IRQCTRL_POSIF0_SR0_IRQ14</name>
          <initializer>= (14U &lt;&lt; 8U) | 2U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>POSIF0_SR0 connected to IRQ14 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487a4ca14c7313a8fd76d03d4e53c20e2834" prot="public">
          <name>XMC_SCU_IRQCTRL_USIC0_SR5_OR_USIC1_SR5_IRQ14</name>
          <initializer>= (14U &lt;&lt; 8U) | 3U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>USIC0_SR5 and USIC1_SR5 connected to IRQ14 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487a94e93b78bdd037d4a1284208b85cd229" prot="public">
          <name>XMC_SCU_IRQCTRL_VADC0_C0SR0_IRQ15</name>
          <initializer>= (15U &lt;&lt; 8U) | 0U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>VADC0_C0SR0 connected to IRQ15 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487a48f1bef1e243db79368b3269fdfd4563" prot="public">
          <name>XMC_SCU_IRQCTRL_USIC0_SR0_IRQ15</name>
          <initializer>= (15U &lt;&lt; 8U) | 1U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>USIC0_SR0 connected to IRQ15 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487a57d9be78e17dcd335f2f997976be6dc8" prot="public">
          <name>XMC_SCU_IRQCTRL_POSIF0_SR1_IRQ15</name>
          <initializer>= (15U &lt;&lt; 8U) | 2U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>POSIF0_SR1 connected to IRQ15 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487a907c8a80aeed03a3fdc89d3cb7fec76c" prot="public">
          <name>XMC_SCU_IRQCTRL_VADC0_C0SR0_OR_USIC0_SR0_IRQ15</name>
          <initializer>= (15U &lt;&lt; 8U) | 3U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>VADC0_C0SR0 and USIC0_SR0 connected to IRQ15 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487a465bbff5c1426edb87da7f6b2d8f7184" prot="public">
          <name>XMC_SCU_IRQCTRL_VADC0_C0SR1_IRQ16</name>
          <initializer>= (16U &lt;&lt; 8U) | 0U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>VADC0_C0SR1 connected to IRQ16 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487aa1ad57ab3d01e0e3c524831d3e0adf45" prot="public">
          <name>XMC_SCU_IRQCTRL_USIC0_SR1_IRQ16</name>
          <initializer>= (16U &lt;&lt; 8U) | 1U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>USIC0_SR1 connected to IRQ16 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487a6af1b76f88f1a4358315e889f25d4df1" prot="public">
          <name>XMC_SCU_IRQCTRL_CCU40_SR2_IRQ16</name>
          <initializer>= (16U &lt;&lt; 8U) | 2U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>CCU40_SR2 connected to IRQ16 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487aa3fee73223d9ffd5415de1b5e53f9d29" prot="public">
          <name>XMC_SCU_IRQCTRL_VADC0_C0SR1_OR_USIC0_SR1_IRQ16</name>
          <initializer>= (16U &lt;&lt; 8U) | 3U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>VADC0_C0SR1 and USIC0_SR1 connected to IRQ16 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487a90bfff1848a2b557a7aaeff2845ac14d" prot="public">
          <name>XMC_SCU_IRQCTRL_VADC0_G0SR0_IRQ17</name>
          <initializer>= (17U &lt;&lt; 8U) | 0U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>VADC0_G0SR0 connected to IRQ17 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487a6d1e56fca660d3d79eb98cb0bed52548" prot="public">
          <name>XMC_SCU_IRQCTRL_USIC0_SR2_IRQ17</name>
          <initializer>= (17U &lt;&lt; 8U) | 1U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>USIC0_SR2 connected to IRQ17 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487a7b5b7b647e2b3e7174de8fad10a88463" prot="public">
          <name>XMC_SCU_IRQCTRL_CAN0_SR0_IRQ17</name>
          <initializer>= (17U &lt;&lt; 8U) | 2U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>CAN0_SR0 connected to IRQ17 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487ad9f4b3cff2f6a5b9eda4b9399e1a8ace" prot="public">
          <name>XMC_SCU_IRQCTRL_VADC0_G0SR0_OR_USIC0_SR2_IRQ17</name>
          <initializer>= (17U &lt;&lt; 8U) | 3U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>VADC0_G0SR0 and USIC0_SR2 connected to IRQ17 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487a0061d150fb4a068d86781f6a8e2830b7" prot="public">
          <name>XMC_SCU_IRQCTRL_VADC0_G0SR1_IRQ18</name>
          <initializer>= (18U &lt;&lt; 8U) | 0U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>VADC0_G0SR1 connected to IRQ18 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487a41724a6af82d90953a59ba7ecb0b30aa" prot="public">
          <name>XMC_SCU_IRQCTRL_USIC0_SR3_IRQ18</name>
          <initializer>= (18U &lt;&lt; 8U) | 1U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>USIC0_SR3 connected to IRQ18 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487afe71fd3f565d4350553be8cc53cf5198" prot="public">
          <name>XMC_SCU_IRQCTRL_CAN0_SR1_IRQ18</name>
          <initializer>= (18U &lt;&lt; 8U) | 2U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>CAN0_SR1 connected to IRQ18 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487ab67dcfd5c191bab2a5874731571cbaad" prot="public">
          <name>XMC_SCU_IRQCTRL_VADC0_G0SR1_OR_USIC0_SR3_IRQ18</name>
          <initializer>= (18U &lt;&lt; 8U) | 3U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>VADC0_G0SR1 and USIC0_SR3 connected to IRQ18 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487ae781ff0ccedcf3cab18b86288e0518f6" prot="public">
          <name>XMC_SCU_IRQCTRL_VADC0_G1SR0_IRQ19</name>
          <initializer>= (19U &lt;&lt; 8U) | 0U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>VADC0_G1SR0 connected to IRQ19 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487ab5da0a2ba63155a33f86f6efd66d6a20" prot="public">
          <name>XMC_SCU_IRQCTRL_USIC0_SR4_IRQ19</name>
          <initializer>= (19U &lt;&lt; 8U) | 1U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>USIC0_SR4 connected to IRQ19 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487a7f36c1b64f73cc04b3ec2ede26a601cc" prot="public">
          <name>XMC_SCU_IRQCTRL_CAN0_SR2_IRQ19</name>
          <initializer>= (19U &lt;&lt; 8U) | 2U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>CAN0_SR2 connected to IRQ19 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487a0b330cf4649e3bc20fae4e0a3026a15d" prot="public">
          <name>XMC_SCU_IRQCTRL_VADC0_G1SR0_OR_USIC0_SR4_IRQ19</name>
          <initializer>= (19U &lt;&lt; 8U) | 3U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>VADC0_G1SR0 and USIC0_SR4 connected to IRQ19 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487a903c8990aa86851399acefd9d030eb1a" prot="public">
          <name>XMC_SCU_IRQCTRL_VADC0_G1SR1_IRQ20</name>
          <initializer>= (20U &lt;&lt; 8U) | 0U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>VADC0_G1SR1 connected to IRQ20 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487ae401eb81ffad416816e43f205527dd59" prot="public">
          <name>XMC_SCU_IRQCTRL_USIC0_SR5_IRQ20</name>
          <initializer>= (20U &lt;&lt; 8U) | 1U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>USIC0_SR5 connected to IRQ20 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487afa8c9fc2605fee21aed7363a4f596f56" prot="public">
          <name>XMC_SCU_IRQCTRL_CAN0_SR3_IRQ20</name>
          <initializer>= (20U &lt;&lt; 8U) | 2U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>CAN0_SR3 connected to IRQ20 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487a31781eadd9e14fa8061d3d2e7d7d5b90" prot="public">
          <name>XMC_SCU_IRQCTRL_CAN0_SR4_IRQ20</name>
          <initializer>= (20U &lt;&lt; 8U) | 2U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000003"><xreftitle>Deprecated</xreftitle><xrefdescription><para>use instead XMC_SCU_IRQCTRL_CAN0_SR3_IRQ20 </para>
</xrefdescription></xrefsect></para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487abe456b050e3ed637c034067bfd8e754e" prot="public">
          <name>XMC_SCU_IRQCTRL_VADC0_G1SR1_OR_USIC0_SR5_IRQ20</name>
          <initializer>= (20U &lt;&lt; 8U) | 3U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>VADC0_G1SR1 and USIC0_SR5 connected to IRQ20 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487ae74bffd8b6012a5f09ea9104c7500f1a" prot="public">
          <name>XMC_SCU_IRQCTRL_CCU40_SR0_IRQ21</name>
          <initializer>= (21U &lt;&lt; 8U) | 0U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>CCU40_SR0 connected to IRQ21 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487a53589ccabe281e70c0139809f7b9b9eb" prot="public">
          <name>XMC_SCU_IRQCTRL_CCU41_SR0_IRQ21</name>
          <initializer>= (21U &lt;&lt; 8U) | 1U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>CCU41_SR0 connected to IRQ21 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487a4daded2e6d3faab4cc7b0ddb712c3650" prot="public">
          <name>XMC_SCU_IRQCTRL_USIC0_SR0_IRQ21</name>
          <initializer>= (21U &lt;&lt; 8U) | 2U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>USIC0_SR0 connected to IRQ21 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487add96da5af4b3f6fb2d015c7557ee01ee" prot="public">
          <name>XMC_SCU_IRQCTRL_CCU40_SR0_OR_CCU41_SR0_IRQ21</name>
          <initializer>= (21U &lt;&lt; 8U) | 3U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>CCU40_SR0 and CCU41_SR0 connected to IRQ21 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487a45d0af7974161839adf9501af8e1f7d6" prot="public">
          <name>XMC_SCU_IRQCTRL_CCU40_SR1_IRQ22</name>
          <initializer>= (22U &lt;&lt; 8U) | 0U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>CCU40_SR1 connected to IRQ22 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487ac27ee9dffe128becd26ea837a08b736c" prot="public">
          <name>XMC_SCU_IRQCTRL_CCU41_SR1_IRQ22</name>
          <initializer>= (22U &lt;&lt; 8U) | 1U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>CCU41_SR1 connected to IRQ22 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487af09d9e948383e50db35eb0f8e3edca6c" prot="public">
          <name>XMC_SCU_IRQCTRL_USIC0_SR1_IRQ22</name>
          <initializer>= (22U &lt;&lt; 8U) | 2U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>USIC0_SR1 connected to IRQ22 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487ae84bcdb66bfe212d675d0dfbc53c8bdf" prot="public">
          <name>XMC_SCU_IRQCTRL_CCU40_SR0_OR_CCU41_SR0_IRQ22</name>
          <initializer>= (22U &lt;&lt; 8U) | 3U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>CCU40_SR0 and CCU41_SR0 connected to IRQ22 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487afbdb8c2f25d94f8e330cccf0141043db" prot="public">
          <name>XMC_SCU_IRQCTRL_CCU40_SR2_IRQ23</name>
          <initializer>= (23U &lt;&lt; 8U) | 0U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>CCU40_SR2 connected to IRQ23 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487a5c49ad1d64be477f8ee29f8e2f776a56" prot="public">
          <name>XMC_SCU_IRQCTRL_CCU41_SR2_IRQ23</name>
          <initializer>= (23U &lt;&lt; 8U) | 1U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>CCU41_SR2 connected to IRQ23 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487a69c46671c2f044e070c7bb7c7eb7b403" prot="public">
          <name>XMC_SCU_IRQCTRL_USIC0_SR2_IRQ23</name>
          <initializer>= (23U &lt;&lt; 8U) | 2U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>USIC0_SR2 connected to IRQ23 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487a5db7f53061b476a69fdd8dd4d6476cc7" prot="public">
          <name>XMC_SCU_IRQCTRL_CCU40_SR2_OR_CCU41_SR2_IRQ23</name>
          <initializer>= (23U &lt;&lt; 8U) | 3U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>CCU40_SR2 and CCU41_SR2 connected to IRQ23 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487ad952aa6d09a65d9f8e301e64fbfbeadd" prot="public">
          <name>XMC_SCU_IRQCTRL_CCU40_SR3_IRQ24</name>
          <initializer>= (24U &lt;&lt; 8U) | 0U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>CCU40_SR3 connected to IRQ24 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487aeeb3b1751509edc22635f09660e3ecd0" prot="public">
          <name>XMC_SCU_IRQCTRL_CCU41_SR3_IRQ24</name>
          <initializer>= (24U &lt;&lt; 8U) | 1U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>CCU41_SR3 connected to IRQ24 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487a774000bc8ed15d88e8ae6dafd243ba9d" prot="public">
          <name>XMC_SCU_IRQCTRL_USIC0_SR3_IRQ24</name>
          <initializer>= (24U &lt;&lt; 8U) | 2U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>USIC0_SR3 connected to IRQ24 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487a7c1898b2456b991cf7d097429373fb34" prot="public">
          <name>XMC_SCU_IRQCTRL_CCU40_SR3_OR_CCU41_SR3_IRQ24</name>
          <initializer>= (24U &lt;&lt; 8U) | 3U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>CCU40_SR3 and CCU41_SR3 connected to IRQ24 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487ab5b6fea127f6e88d90523b4f1c3e36aa" prot="public">
          <name>XMC_SCU_IRQCTRL_CCU80_SR0_IRQ25</name>
          <initializer>= (25U &lt;&lt; 8U) | 0U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>CCU80_SR0 connected to IRQ25 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487a8febf5082c634874f8a18b9818f5a1f4" prot="public">
          <name>XMC_SCU_IRQCTRL_CCU81_SR0_IRQ25</name>
          <initializer>= (25U &lt;&lt; 8U) | 1U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>CCU81_SR0 connected to IRQ25 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487ad945c0350977bcaa63a92fef4ab71535" prot="public">
          <name>XMC_SCU_IRQCTRL_USIC0_SR4_IRQ25</name>
          <initializer>= (25U &lt;&lt; 8U) | 2U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>USIC0_SR4 connected to IRQ25 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487a2ad937077b3af70a0eb69be9e9c8a2c4" prot="public">
          <name>XMC_SCU_IRQCTRL_CCU80_SR0_OR_CCU81_SR0_IRQ25</name>
          <initializer>= (25U &lt;&lt; 8U) | 3U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>CCU80_SR0 and CCU81_SR0 connected to IRQ25 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487a080768080aee7028c680471f1bcbbf57" prot="public">
          <name>XMC_SCU_IRQCTRL_CCU80_SR1_IRQ26</name>
          <initializer>= (26U &lt;&lt; 8U) | 0U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>CCU80_SR1 connected to IRQ26 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487a9d425c6de940d472d45a71815d49c6ed" prot="public">
          <name>XMC_SCU_IRQCTRL_CCU81_SR1_IRQ26</name>
          <initializer>= (26U &lt;&lt; 8U) | 1U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>CCU81_SR1 connected to IRQ26 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487a50332444818b9e10dd845ef94c127e7a" prot="public">
          <name>XMC_SCU_IRQCTRL_USIC0_SR5_IRQ26</name>
          <initializer>= (26U &lt;&lt; 8U) | 2U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>USIC0_SR5 connected to IRQ26 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487ab22342e8fd2533cb71c74e290dbc6028" prot="public">
          <name>XMC_SCU_IRQCTRL_CCU80_SR1_OR_CCU81_SR1_IRQ26</name>
          <initializer>= (26U &lt;&lt; 8U) | 3U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>CCU80_SR1 and CCU81_SR1 connected to IRQ26 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487a8f2a9b764dd039fa23bf8b10c713fc52" prot="public">
          <name>XMC_SCU_IRQCTRL_POSIF0_SR0_IRQ27</name>
          <initializer>= (27U &lt;&lt; 8U) | 0U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>POSIF0_SR0 connected to IRQ27 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487ab94cf1ca85eb5f2df25454271a530103" prot="public">
          <name>XMC_SCU_IRQCTRL_POSIF1_SR0_IRQ27</name>
          <initializer>= (27U &lt;&lt; 8U) | 1U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>POSIF1_SR0 connected to IRQ27 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487aa9eabac16ee2f77d4a866d799f661ae8" prot="public">
          <name>XMC_SCU_IRQCTRL_CCU40_SR3_IRQ27</name>
          <initializer>= (27U &lt;&lt; 8U) | 2U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>CCU40_SR3 connected to IRQ27 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487ad21c1ad6b0b73ee76b06a6e6cde41ac8" prot="public">
          <name>XMC_SCU_IRQCTRL_POSIF0_SR0_OR_POSIF1_SR0_IRQ27</name>
          <initializer>= (27U &lt;&lt; 8U) | 3U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>POSIF0_SR0 and POSIF1_SR0 connected to IRQ27 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487ae896410e0f5c5575737457b8d2b35112" prot="public">
          <name>XMC_SCU_IRQCTRL_POSIF0_SR1_IRQ28</name>
          <initializer>= (28U &lt;&lt; 8U) | 0U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>POSIF0_SR1 connected to IRQ28 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487accb2090aeab29489530ae8705cdd8540" prot="public">
          <name>XMC_SCU_IRQCTRL_POSIF1_SR1_IRQ28</name>
          <initializer>= (28U &lt;&lt; 8U) | 1U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>POSIF1_SR1 connected to IRQ28 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487aa46886530c76776e6f481da1f5fb0645" prot="public">
          <name>XMC_SCU_IRQCTRL_ERU0_SR0_IRQ28</name>
          <initializer>= (28U &lt;&lt; 8U) | 2U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>ERU0_SR0 connected to IRQ28 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487abfbae1dc5496d31df11dff2e628a5314" prot="public">
          <name>XMC_SCU_IRQCTRL_POSIF0_SR1_OR_POSIF1_SR1_IRQ28</name>
          <initializer>= (28U &lt;&lt; 8U) | 3U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>POSIF0_SR1 and POSIF1_SR1 connected to IRQ28 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487ad08774b555828acc8d42a801cb10578a" prot="public">
          <name>XMC_SCU_IRQCTRL_LEDTS0_SR0_IRQ29</name>
          <initializer>= (29U &lt;&lt; 8U) | 0U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>LEDTS0_SR0 connected to IRQ29 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487ad8829fd344aba45cef944038a5a865be" prot="public">
          <name>XMC_SCU_IRQCTRL_CCU40_SR1_IRQ29</name>
          <initializer>= (29U &lt;&lt; 8U) | 1U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>CCU40_SR1 connected to IRQ29 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487a54c813d81e501dea34f08ea70d1749f6" prot="public">
          <name>XMC_SCU_IRQCTRL_ERU0_SR1_IRQ29</name>
          <initializer>= (29U &lt;&lt; 8U) | 2U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>ERU0_SR1 connected to IRQ29 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487a1f6e05987e426cc6a7f279582565b7b7" prot="public">
          <name>XMC_SCU_IRQCTRL_LEDTS0_SR0_OR_CCU40_SR1_IRQ29</name>
          <initializer>= (29U &lt;&lt; 8U) | 3U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>LEDTS0_SR0 and CCU40_SR1 connected to IRQ29 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487ac7b7d2db575e6cb8fb45bed40353477e" prot="public">
          <name>XMC_SCU_IRQCTRL_LEDTS1_SR0_IRQ30</name>
          <initializer>= (30U &lt;&lt; 8U) | 0U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>LEDTS1_SR0 connected to IRQ30 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487ab33a29b2399b855e4e68a0b5e494d4d6" prot="public">
          <name>XMC_SCU_IRQCTRL_CCU40_SR2_IRQ30</name>
          <initializer>= (30U &lt;&lt; 8U) | 1U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>CCU40_SR2 connected to IRQ30 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487afffa939ee67090ac8f6cbb4d90d49d5b" prot="public">
          <name>XMC_SCU_IRQCTRL_ERU0_SR2_IRQ30</name>
          <initializer>= (30U &lt;&lt; 8U) | 2U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>ERU0_SR2 connected to IRQ30 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487a858eb58c2db680dcc40a68e56c3121e1" prot="public">
          <name>XMC_SCU_IRQCTRL_LEDTS0_SR0_OR_CCU40_SR1_IRQ30</name>
          <initializer>= (30U &lt;&lt; 8U) | 3U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>LEDTS0_SR0 and CCU40_SR1 connected to IRQ30 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487a99a7d773dcb096dce98893c1d1ee9317" prot="public">
          <name>XMC_SCU_IRQCTRL_BCCU0_SR0_IRQ31</name>
          <initializer>= (31U &lt;&lt; 8U) | 0U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>BCCU0_SR0 connected to IRQ31 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487aeb0fb2957c372f43ebaefd2613673f14" prot="public">
          <name>XMC_SCU_IRQCTRL_CCU40_SR3_IRQ31</name>
          <initializer>= (31U &lt;&lt; 8U) | 1U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>CCU40_SR3 connected to IRQ31 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487a6b56c02001068a4345bf1f6d9db93584" prot="public">
          <name>XMC_SCU_IRQCTRL_ERU0_SR3_IRQ31</name>
          <initializer>= (31U &lt;&lt; 8U) | 2U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>ERU0_SR3 connected to IRQ31 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggad54a1c90f3b35f4c49d62ac204678487a1691b22a07cf9d49299c891d5e447b53" prot="public">
          <name>XMC_SCU_IRQCTRL_BCCU0_SR0_OR_CCU40_SR3_IRQ31</name>
          <initializer>= (31U &lt;&lt; 8U) | 3U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>BCCU0_SR0 and CCU40_SR3 connected to IRQ31 </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Selects the service request connected to the interrupt node. <image type="html" name="xmc1400_irqmux.png"></image>
 <simplesect kind="note"><para>Only available for XMC1400 series </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="414" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" bodystart="413" bodyend="701"/>
      </memberdef>
      <memberdef kind="enum" id="group___s_c_u_1ga29713150fdafc3c88f3c73f621410239" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_SCU_PERIPHERAL_CLOCK_t</name>
        <enumvalue id="group___s_c_u_1gga29713150fdafc3c88f3c73f621410239a0bb88ac36dfd3545282123f56c5c2374" prot="public">
          <name>XMC_SCU_PERIPHERAL_CLOCK_CCU80</name>
          <initializer>= SCU_CLK_CGATSTAT0_CCU80_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>CCU80 peripheral clock gate. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1gga29713150fdafc3c88f3c73f621410239a346af75d76735810851f4175e0aa7510" prot="public">
          <name>XMC_SCU_PERIPHERAL_CLOCK_CCU40</name>
          <initializer>= SCU_CLK_CGATSTAT0_CCU40_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>CCU40 peripheral clock gate. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1gga29713150fdafc3c88f3c73f621410239a3b7bdfee77b9c35016b8c8367fa19cc2" prot="public">
          <name>XMC_SCU_PERIPHERAL_CLOCK_USIC0</name>
          <initializer>= SCU_CLK_CGATSTAT0_USIC0_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>USIC0 peripheral clock gate. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1gga29713150fdafc3c88f3c73f621410239ad9f67751fcf7facbbf4cd2a5b36e38f0" prot="public">
          <name>XMC_SCU_PERIPHERAL_CLOCK_BCCU0</name>
          <initializer>= SCU_CLK_CGATSTAT0_BCCU0_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>BCCU0 peripheral clock gate. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1gga29713150fdafc3c88f3c73f621410239a2cdc8717b252a95151639d5f95c5d0a2" prot="public">
          <name>XMC_SCU_PERIPHERAL_CLOCK_LEDTS0</name>
          <initializer>= SCU_CLK_CGATSTAT0_LEDTS0_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>LEDTS0 peripheral clock gate. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1gga29713150fdafc3c88f3c73f621410239a9979deef2f645ef5335292f656b301b8" prot="public">
          <name>XMC_SCU_PERIPHERAL_CLOCK_LEDTS1</name>
          <initializer>= SCU_CLK_CGATSTAT0_LEDTS1_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>LEDTS1 peripheral clock gate. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1gga29713150fdafc3c88f3c73f621410239a7d81755a02791cef84e36351a4e21ca5" prot="public">
          <name>XMC_SCU_PERIPHERAL_CLOCK_POSIF0</name>
          <initializer>= SCU_CLK_CGATSTAT0_POSIF0_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>POSIF0 peripheral clock gate. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1gga29713150fdafc3c88f3c73f621410239abd383e07c1966b805eabc208362baefd" prot="public">
          <name>XMC_SCU_PERIPHERAL_CLOCK_MATH</name>
          <initializer>= SCU_CLK_CGATSTAT0_MATH_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>MATH peripheral clock gate. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1gga29713150fdafc3c88f3c73f621410239a94022ad63fa2dbbbf514709a230956ea" prot="public">
          <name>XMC_SCU_PERIPHERAL_CLOCK_WDT</name>
          <initializer>= SCU_CLK_CGATSTAT0_WDT_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>WDT peripheral clock gate. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1gga29713150fdafc3c88f3c73f621410239a274fa98fa526d3ea003785ecbcba9e36" prot="public">
          <name>XMC_SCU_PERIPHERAL_CLOCK_RTC</name>
          <initializer>= SCU_CLK_CGATSTAT0_RTC_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>RTC peripheral clock gate. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1gga29713150fdafc3c88f3c73f621410239aef9ea70d04e1bea868c12afb6652c2e6" prot="public">
          <name>XMC_SCU_PERIPHERAL_CLOCK_CCU81</name>
          <initializer>= SCU_CLK_CGATSTAT0_CCU81_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>CCU80 peripheral clock gate. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1gga29713150fdafc3c88f3c73f621410239acd9123d275104ad16e58a1eed3e3a8de" prot="public">
          <name>XMC_SCU_PERIPHERAL_CLOCK_CCU41</name>
          <initializer>= SCU_CLK_CGATSTAT0_CCU41_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>CCU80 peripheral clock gate. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1gga29713150fdafc3c88f3c73f621410239a37d2702a725dfc9bf6093e324a530ffb" prot="public">
          <name>XMC_SCU_PERIPHERAL_CLOCK_USIC1</name>
          <initializer>= SCU_CLK_CGATSTAT0_USIC1_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>USIC0 peripheral clock gate. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1gga29713150fdafc3c88f3c73f621410239a596167ddbcaed12bfe7ae0dcfe6d3a3f" prot="public">
          <name>XMC_SCU_PERIPHERAL_CLOCK_LEDTS2</name>
          <initializer>= SCU_CLK_CGATSTAT0_LEDTS2_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>LEDTS1 peripheral clock gate. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1gga29713150fdafc3c88f3c73f621410239aae87aa0eeb15734f1d6681258f2e1db3" prot="public">
          <name>XMC_SCU_PERIPHERAL_CLOCK_POSIF1</name>
          <initializer>= SCU_CLK_CGATSTAT0_POSIF1_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>POSIF0 peripheral clock gate. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1gga29713150fdafc3c88f3c73f621410239ab6ee98017bc789b6642e875cd7918c0f" prot="public">
          <name>XMC_SCU_PERIPHERAL_CLOCK_MCAN</name>
          <initializer>= SCU_CLK_CGATSTAT0_MCAN0_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>POSIF0 peripheral clock gate. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Defines the list of peripherals that support clock gating. After a master reset, only core, memories, SCU and PORT peripheral are not clock gated. The rest of the peripherals are by default clock gated. All the enum items are tabulated as per bits present in <emphasis>CGATSTAT0</emphasis> register. Use type <emphasis>XMC_SCU_PERIPHERAL_CLOCK_t</emphasis> for accessing these enum parameters. <simplesect kind="note"><para>Peripherals availability depends on device </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="338" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" bodystart="337" bodyend="386"/>
      </memberdef>
      <memberdef kind="enum" id="group___s_c_u_1gaae067899a6cfa605f5ebfef2c1f8d393" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_SCU_POWER_MONITOR_DELAY_t</name>
        <enumvalue id="group___s_c_u_1ggaae067899a6cfa605f5ebfef2c1f8d393a37d896884f1c702a6ea6391e24719096" prot="public">
          <name>XMC_SCU_POWER_MONITOR_DELAY_1US</name>
          <initializer>= 0U &lt;&lt; SCU_ANALOG_ANAVDEL_VDEL_TIM_ADJ_Pos</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggaae067899a6cfa605f5ebfef2c1f8d393a75aaa519618deea4a004d4f8812c8556" prot="public">
          <name>XMC_SCU_POWER_MONITOR_DELAY_500NS</name>
          <initializer>= 1U &lt;&lt; SCU_ANALOG_ANAVDEL_VDEL_TIM_ADJ_Pos</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggaae067899a6cfa605f5ebfef2c1f8d393a3fd315e616edd08c899f4ba0d5b1f572" prot="public">
          <name>XMC_SCU_POWER_MONITOR_DELAY_250NS</name>
          <initializer>= 2U &lt;&lt; SCU_ANALOG_ANAVDEL_VDEL_TIM_ADJ_Pos</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggaae067899a6cfa605f5ebfef2c1f8d393a7b6030ef083b7ed94d1b80443b1060db" prot="public">
          <name>XMC_SCU_POWER_MONITOR_DELAY_NONE</name>
          <initializer>= 3U &lt;&lt; SCU_ANALOG_ANAVDEL_VDEL_TIM_ADJ_Pos</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>TODO </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="718" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" bodystart="717" bodyend="723"/>
      </memberdef>
      <memberdef kind="enum" id="group___s_c_u_1ga985038b59c5bc1d8341db06c6c7cbfdc" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_SCU_POWER_MONITOR_RANGE_t</name>
        <enumvalue id="group___s_c_u_1gga985038b59c5bc1d8341db06c6c7cbfdcad865173d1e422e43cb2ae04fc766ad94" prot="public">
          <name>XMC_SCU_POWER_MONITOR_RANGE_2_25V</name>
          <initializer>= 0U &lt;&lt; SCU_ANALOG_ANAVDEL_VDEL_SELECT_Pos</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1gga985038b59c5bc1d8341db06c6c7cbfdca92c3929ea7e31db38d62d75fa714f386" prot="public">
          <name>XMC_SCU_POWER_MONITOR_RANGE_3_00V</name>
          <initializer>= 1U &lt;&lt; SCU_ANALOG_ANAVDEL_VDEL_SELECT_Pos</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1gga985038b59c5bc1d8341db06c6c7cbfdca1c83745e049b294a66d993e3a1b0ee2a" prot="public">
          <name>XMC_SCU_POWER_MONITOR_RANGE_4_40V</name>
          <initializer>= 2U &lt;&lt; SCU_ANALOG_ANAVDEL_VDEL_SELECT_Pos</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>TODO </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="708" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" bodystart="707" bodyend="712"/>
      </memberdef>
      <memberdef kind="enum" id="group___s_c_u_1gae01c08f5d524dadbc6e0c4128b348dc3" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_SCU_RESET_REASON_t</name>
        <enumvalue id="group___s_c_u_1ggae01c08f5d524dadbc6e0c4128b348dc3ae8bea77e364f87d9c74afb215da65273" prot="public">
          <name>XMC_SCU_RESET_REASON_PORST</name>
          <initializer>= (1UL &lt;&lt; SCU_RESET_RSTSTAT_RSTSTAT_Pos)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Reset due to Power On reset. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggae01c08f5d524dadbc6e0c4128b348dc3a1742c1894d91860d7541385f3f0c4fe1" prot="public">
          <name>XMC_SCU_RESET_REASON_MASTER</name>
          <initializer>= (2UL &lt;&lt; SCU_RESET_RSTSTAT_RSTSTAT_Pos)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Reset due to Master reset. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggae01c08f5d524dadbc6e0c4128b348dc3aa6d2a43d58beebfabf3897c2ed65bd03" prot="public">
          <name>XMC_SCU_RESET_REASON_SW</name>
          <initializer>= (4UL &lt;&lt; SCU_RESET_RSTSTAT_RSTSTAT_Pos)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Reset due to Software initiated reset. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggae01c08f5d524dadbc6e0c4128b348dc3aa147b82fa48ea09fe9137601ce28b6c9" prot="public">
          <name>XMC_SCU_RESET_REASON_LOCKUP</name>
          <initializer>= (8UL &lt;&lt; SCU_RESET_RSTSTAT_RSTSTAT_Pos)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Reset due to CPU lockup. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggae01c08f5d524dadbc6e0c4128b348dc3a5b52d4b8f8aa89a37e05e865ffaef900" prot="public">
          <name>XMC_SCU_RESET_REASON_FLASH</name>
          <initializer>= (16UL &lt;&lt; SCU_RESET_RSTSTAT_RSTSTAT_Pos)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Reset due to flash error. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggae01c08f5d524dadbc6e0c4128b348dc3acd2ed3c6d9ade72259637c7c80a840cb" prot="public">
          <name>XMC_SCU_RESET_REASON_WATCHDOG</name>
          <initializer>= (32UL &lt;&lt; SCU_RESET_RSTSTAT_RSTSTAT_Pos)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Reset due to watchdog. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggae01c08f5d524dadbc6e0c4128b348dc3a0e3a7d9ed387fd8d11576c4f63d61cb2" prot="public">
          <name>XMC_SCU_RESET_REASON_CLOCK_LOSS</name>
          <initializer>= (64UL &lt;&lt; SCU_RESET_RSTSTAT_RSTSTAT_Pos)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Reset due to clock loss. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggae01c08f5d524dadbc6e0c4128b348dc3a9d34595d39facbd7b114462d5cc5b0c8" prot="public">
          <name>XMC_SCU_RESET_REASON_PARITY_ERROR</name>
          <initializer>= (128UL &lt;&lt; SCU_RESET_RSTSTAT_RSTSTAT_Pos)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Reset due to RAM parity error. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Defines the cause of last reset. The cause of last reset gets automatically stored in the <emphasis>SCU_RSTSTAT</emphasis> register and can be checked by user software to determine the state of the system and for debug purpose. All the enum items are tabulated as per bits present in <emphasis>SCU_RSTSTAT</emphasis> register. Use type <emphasis>XMC_SCU_RESET_REASON_t</emphasis> for accessing these enum parameters. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="209" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" bodystart="208" bodyend="218"/>
      </memberdef>
      <memberdef kind="enum" id="group___s_c_u_1gaff029b1575acc0712d494932d8ca6d60" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_SCU_STATUS_t</name>
        <enumvalue id="group___s_c_u_1ggaff029b1575acc0712d494932d8ca6d60a764eaaa84d169b3222ae9174d1fa6855" prot="public">
          <name>XMC_SCU_STATUS_OK</name>
          <initializer>= 0UL</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SCU related operation successfully completed. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggaff029b1575acc0712d494932d8ca6d60aaf8f778e9be5e754dcaa0c1cf83e1e4b" prot="public">
          <name>XMC_SCU_STATUS_ERROR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SCU related operation failed. When API cannot fulfill request, this value is returned. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1ggaff029b1575acc0712d494932d8ca6d60a6f6a43bd2a61be2a1b0b57601d58bd77" prot="public">
          <name>XMC_SCU_STATUS_BUSY</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Cannot execute the SCU related operation request because another operation is in progress. <emphasis>XMC_SCU_STATUS_BUSY</emphasis> is returned when API is busy processing another request. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Defines the status of SCU API execution, used to verify the SCU related API calls. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_scu.h" line="175" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_scu.h" bodystart="174" bodyend="181"/>
      </memberdef>
      <memberdef kind="enum" id="group___s_c_u_1ga4988413b7da85ed020b8d1a8243e28aa" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_SCU_SYSTEM_RESET_REQUEST_t</name>
        <enumvalue id="group___s_c_u_1gga4988413b7da85ed020b8d1a8243e28aaa97383dd0b2c36dbb082441a879289a0d" prot="public">
          <name>XMC_SCU_RESET_REQUEST_FLASH_ECC_ERROR</name>
          <initializer>= SCU_RESET_RSTCON_ECCRSTEN_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Reset when ECC double bit error occurs. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1gga4988413b7da85ed020b8d1a8243e28aaa4e8060a113c0650c5c1ef3f200ce4e39" prot="public">
          <name>XMC_SCU_RESET_REQUEST_CLOCK_LOSS</name>
          <initializer>= SCU_RESET_RSTCON_LOCRSTEN_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Reset when loss of clock occurs. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1gga4988413b7da85ed020b8d1a8243e28aaaa2c6d4ddc9c83f71bf47d2b39ef25e83" prot="public">
          <name>XMC_SCU_RESET_REQUEST_SRAM_PARITY_ERROR</name>
          <initializer>= SCU_RESET_RSTCON_SPERSTEN_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Reset when SRAM parity error occurs. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_c_u_1gga4988413b7da85ed020b8d1a8243e28aaa50dee8709c1bc2b69bcf3e90ca52ce90" prot="public">
          <name>XMC_SCU_RESET_REQUEST_USIC_SRAM_PARITY_ERROR</name>
          <initializer>= SCU_RESET_RSTCON_U0PERSTEN_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Reset when USIC0 memory parity error occurs. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Defines the reset sources that can cause device reset. These enums can be used to configure reset source in reset control <emphasis>RSTCON</emphasis> register which enables different reset sources to identify the reset cause. The <emphasis>SCU_RSTSTAT</emphasis> register can be checked by user software to determine the state of the system and for debug purpose. Use type <emphasis>XMC_SCU_SYSTEM_RESET_REQUEST_t</emphasis> for accessing these enum parameters. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="227" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" bodystart="226" bodyend="232"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group___s_c_u_1ga4b50170c441fb21833c07a27b814a581" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* XMC_SCU_INTERRUPT_EVENT_HANDLER_t) (void)</definition>
        <argsstring>)(void)</argsstring>
        <name>XMC_SCU_INTERRUPT_EVENT_HANDLER_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function pointer type used for registering callback functions on SCU event occurrence. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_scu.h" line="191" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_scu.h" bodystart="191" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___s_c_u_1ga18e68742408210603bed8d0806ce1573" prot="public" static="no">
        <type>uint32_t</type>
        <definition>typedef uint32_t XMC_SCU_INTERRUPT_EVENT_t</definition>
        <argsstring></argsstring>
        <name>XMC_SCU_INTERRUPT_EVENT_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Defines list of events that can generate SCU interrupt. These enums can be used to configure events in <emphasis>SRMSK</emphasis> register for assertion of interrupt. All the enum items are tabulated as per bits present in <emphasis>SRMSK</emphasis> register. Use type <emphasis>XMC_SCU_INTERRUPT_EVENT_t</emphasis> for accessing these enum parameters. These enums can also be used for checking the status of events from the <emphasis>SRSTAT</emphasis> register. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="243" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" bodystart="243" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group___s_c_u_1gae175b564557503258d534719100f899d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t XMC_SCU_CalcTemperature</definition>
        <argsstring>(void)</argsstring>
        <name>XMC_SCU_CalcTemperature</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>uint32_t Calculate die temperature value. <bold>Range:</bold> 16 bit value.</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Calculates the die temperature value using ROM function.<linebreak/>
<linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___s_c_u_1ga3b00187ccda526f06802152ecf199fa4" kindref="member">XMC_SCU_StartTempMeasurement()</ref> <linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="1060" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___s_c_u_1gae7b20e6cd4212c28515a21ad6305bfa3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_SCU_CLOCK_CalibrateOscillatorOnTemperature</definition>
        <argsstring>(int32_t temperature)</argsstring>
        <name>XMC_SCU_CLOCK_CalibrateOscillatorOnTemperature</name>
        <param>
          <type>int32_t</type>
          <declname>temperature</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>temperature</parametername>
</parameternamelist>
<parameterdescription>
<para>measured temperature using the on-chip temperature sensor</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>DCO1 clock frequency can be calibrated during runtime to achieve a better accuracy. This function start the DCO1 calibration based on temperature. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="1157" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___s_c_u_1ga1a3d595fe9b1c99675f569c5e98bbe20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_SCU_CLOCK_ClearDCO1OscillatorWatchdogStatus</definition>
        <argsstring>(void)</argsstring>
        <name>XMC_SCU_CLOCK_ClearDCO1OscillatorWatchdogStatus</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>This function clears the status of the watchdog on the DCO1 frequency </para>
</simplesect>
<simplesect kind="note"><para>Only available for XMC1400 series </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="1447" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" bodystart="1447" bodyend="1450"/>
      </memberdef>
      <memberdef kind="function" id="group___s_c_u_1ga1593fcaf7e9cfb8a276c564ca69cbe48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_SCU_CLOCK_DisableDCO1ExtRefCalibration</definition>
        <argsstring>(void)</argsstring>
        <name>XMC_SCU_CLOCK_DisableDCO1ExtRefCalibration</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>This function stops the automatic DCO1 calibration based on the selected clock source. </para>
</simplesect>
<simplesect kind="note"><para>Only available for XMC1400 series </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="1195" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___s_c_u_1ga0bc3a0cbd7a1ce7fe4b45e6b975151b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_SCU_CLOCK_DisableDCO1OscillatorWatchdog</definition>
        <argsstring>(void)</argsstring>
        <name>XMC_SCU_CLOCK_DisableDCO1OscillatorWatchdog</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>This function disables the watchdog on the DCO1 frequency </para>
</simplesect>
<simplesect kind="note"><para>Only available for XMC1400 series </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="1434" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" bodystart="1434" bodyend="1437"/>
      </memberdef>
      <memberdef kind="function" id="group___s_c_u_1ga39b9bbd58d1bff0fa29e8d467eb109b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_SCU_CLOCK_DisableFlashPowerDown</definition>
        <argsstring>(void)</argsstring>
        <name>XMC_SCU_CLOCK_DisableFlashPowerDown</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="1408" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" bodystart="1408" bodyend="1411"/>
      </memberdef>
      <memberdef kind="function" id="group___s_c_u_1ga1d273cfcd218e2e9061efe150f8e88d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_SCU_CLOCK_EnableDCO1ExtRefCalibration</definition>
        <argsstring>(XMC_SCU_CLOCK_SYNC_CLKSRC_t sync_clk, uint32_t prescaler, uint32_t syn_preload)</argsstring>
        <name>XMC_SCU_CLOCK_EnableDCO1ExtRefCalibration</name>
        <param>
          <type><ref refid="group___s_c_u_1ga26cbc15f43439603ed5976e7be9b6212" kindref="member">XMC_SCU_CLOCK_SYNC_CLKSRC_t</ref></type>
          <declname>sync_clk</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>prescaler</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>syn_preload</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sync_clk</parametername>
</parameternamelist>
<parameterdescription>
<para>Clock source selected as external reference. <ref refid="group___s_c_u_1ga26cbc15f43439603ed5976e7be9b6212" kindref="member">XMC_SCU_CLOCK_SYNC_CLKSRC_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>prescaler</parametername>
</parameternamelist>
<parameterdescription>
<para>integer( <formula id="0">$\frac{syn_preload \times f_{OSC}[MHz]}{48}$</formula>) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>syn_preload</parametername>
</parameternamelist>
<parameterdescription>
<para>max. value 0x1FFF integer( <formula id="1">$\frac{48 \times prescaler}{f_{OSC}[MHz]}$</formula>)</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>DCO1 clock frequency can be calibrated during runtime to achieve a better accuracy. This function starts the automatic DCO1 calibration based on the selected clock source. </para>
</simplesect>
<simplesect kind="note"><para>Only available for XMC1400 series </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="1185" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___s_c_u_1gadec9aee733bfd18a1f91d19417f6d129" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_SCU_CLOCK_EnableDCO1OscillatorWatchdog</definition>
        <argsstring>(void)</argsstring>
        <name>XMC_SCU_CLOCK_EnableDCO1OscillatorWatchdog</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>This function enables the watchdog on the DCO1 frequency </para>
</simplesect>
<simplesect kind="note"><para>Only available for XMC1400 series </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="1421" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" bodystart="1421" bodyend="1424"/>
      </memberdef>
      <memberdef kind="function" id="group___s_c_u_1gaeba2b71df116edb792af109622946d6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_SCU_CLOCK_EnableFlashPowerDown</definition>
        <argsstring>(void)</argsstring>
        <name>XMC_SCU_CLOCK_EnableFlashPowerDown</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="1394" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" bodystart="1394" bodyend="1397"/>
      </memberdef>
      <memberdef kind="function" id="group___s_c_u_1gab0af70f90b9a1f24d3a0a4764543d833" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_SCU_CLOCK_GatePeripheralClock</definition>
        <argsstring>(const XMC_SCU_PERIPHERAL_CLOCK_t peripheral)</argsstring>
        <name>XMC_SCU_CLOCK_GatePeripheralClock</name>
        <param>
          <type>const <ref refid="group___s_c_u_1ga29713150fdafc3c88f3c73f621410239" kindref="member">XMC_SCU_PERIPHERAL_CLOCK_t</ref></type>
          <declname>peripheral</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>peripheral</parametername>
</parameternamelist>
<parameterdescription>
<para>The peripheral for which the clock has to be gated. <bold>Range:</bold> Use type <ref refid="group___s_c_u_1ga29713150fdafc3c88f3c73f621410239" kindref="member">XMC_SCU_PERIPHERAL_CLOCK_t</ref> to identify the peripheral clock to be gated.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Blocks the supply of clock to the selected peripheral.<linebreak/>
<linebreak/>
Clock gating helps in reducing the power consumption. User can selectively gate the clocks of unused peripherals. fPCLK is the source of clock to various peripherals. Some peripherals support clock gate. Such a gate blocks the clock supply for the selected peripheral. Software can request for individual gating of such peripheral clocks by enabling the <emphasis>SCU_CGATSET0</emphasis> register bit field. Every bit in <emphasis>SCU_CGATSET0</emphasis> register is protected by the bit protection scheme. Access to protected bit fields are handled internally. Note: Clock gating shall not be activated unless the module is in reset state. So use <emphasis><ref refid="group___s_c_u_1ga804f98badedf0e0ba4ce09f445687a37" kindref="member">XMC_SCU_CLOCK_IsPeripheralClockGated()</ref></emphasis> API before enabling the gating of any peripheral. </para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___s_c_u_1ga804f98badedf0e0ba4ce09f445687a37" kindref="member">XMC_SCU_CLOCK_IsPeripheralClockGated()</ref>, <ref refid="group___s_c_u_1ga702904d10b6e6c6a55db381763fd322f" kindref="member">XMC_SCU_CLOCK_UngatePeripheralClock()</ref> <linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_scu.h" line="476" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___s_c_u_1ga3e78410c4d0c9f9b54aa0965d16c3795" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t XMC_SCU_CLOCK_GetCpuClockFrequency</definition>
        <argsstring>(void)</argsstring>
        <name>XMC_SCU_CLOCK_GetCpuClockFrequency</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>uint32_t Value of CPU clock frequency.</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Provides the vlaue of CPU clock frequency.<linebreak/>
<linebreak/>
The value is stored in a global variable <emphasis><bold>SystemCoreClock</bold>.</emphasis> It is updated when the clock configuration is done using the SCU LLD APIs. The value represents the frequency of clock used for CPU operation. <bold>Range:</bold> Value is of type uint32_t, and gives the value of frequency in Hertz.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___s_c_u_1ga55a1be4f0e96fcda7b2c0feb542af250" kindref="member">XMC_SCU_CLOCK_GetPeripheralClockFrequency()</ref>, <ref refid="group___s_c_u_1gab0af70f90b9a1f24d3a0a4764543d833" kindref="member">XMC_SCU_CLOCK_GatePeripheralClock()</ref> <linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_scu.h" line="429" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_scu.h" bodystart="429" bodyend="432"/>
      </memberdef>
      <memberdef kind="function" id="group___s_c_u_1ga4269bd27311f46c895b7ca474236d71c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t XMC_SCU_CLOCK_GetFastPeripheralClockFrequency</definition>
        <argsstring>(void)</argsstring>
        <name>XMC_SCU_CLOCK_GetFastPeripheralClockFrequency</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>uint32_t Fast peripheral clock frequency in Hertz.</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Provides the clock frequency of peripherals on the peripheral bus that are using a shared functional clock.<linebreak/>
<linebreak/>
The value is derived using the bitfield <emphasis>PCLKSEL</emphasis> from <emphasis>CLKCR</emphasis> register. Peripheral clock can have 2 times the frequency of system clock if the <emphasis>PCLKSEL</emphasis> is set. </para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___s_c_u_1ga6103bc92c9cd326903ee4e6b2e1d055d" kindref="member">XMC_SCU_CLOCK_SetFastPeripheralClockSource()</ref> <linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="1127" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___s_c_u_1ga55a1be4f0e96fcda7b2c0feb542af250" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t XMC_SCU_CLOCK_GetPeripheralClockFrequency</definition>
        <argsstring>(void)</argsstring>
        <name>XMC_SCU_CLOCK_GetPeripheralClockFrequency</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>uint32_t Value of peripheral clock frequency in Hertz.</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Provides the vlaue of clock frequency at which the peripherals are working.<linebreak/>
<linebreak/>
The value is derived from the CPU frequency. <bold>Range:</bold> Value is of type uint32_t. It is represented in Hertz. </para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___s_c_u_1ga3e78410c4d0c9f9b54aa0965d16c3795" kindref="member">XMC_SCU_CLOCK_GetCpuClockFrequency()</ref>,<ref refid="group___s_c_u_1gab0af70f90b9a1f24d3a0a4764543d833" kindref="member">XMC_SCU_CLOCK_GatePeripheralClock()</ref> <linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_scu.h" line="443" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___s_c_u_1ga08c337e8a728604e7eb54dff78ae2d9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_SCU_CLOCK_Init</definition>
        <argsstring>(const XMC_SCU_CLOCK_CONFIG_t *const config)</argsstring>
        <name>XMC_SCU_CLOCK_Init</name>
        <param>
          <type>const <ref refid="struct_x_m_c___s_c_u___c_l_o_c_k___c_o_n_f_i_g__t" kindref="compound">XMC_SCU_CLOCK_CONFIG_t</ref> *const</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to structure holding the clock prescaler values and divider values for configuring clock generators and clock tree.<linebreak/>
 <bold>Range:</bold> Configure the members of structure <ref refid="struct_x_m_c___s_c_u___c_l_o_c_k___c_o_n_f_i_g__t" kindref="compound">XMC_SCU_CLOCK_CONFIG_t</ref> for various parameters of clock setup.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Initializes clock generators and clock tree.<linebreak/>
<linebreak/>
Peripheral clock and system clock are configured based on the input configuration <emphasis>config</emphasis>. The system clock frequency is tuned by configuring the FDIV and IDIV values of CLKCR register. The values of FDIV and IDIV can be provided as part of input configuration. The PCLK divider determines the ratio of peripheral clock to the system clock. The source of RTC clock is set based on the input configuration. <emphasis>SystemCoreClock</emphasis> variable will be updated with the value of system clock frequency. Access to protected bit fields are handled internally. </para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___s_c_u_1ga55a1be4f0e96fcda7b2c0feb542af250" kindref="member">XMC_SCU_CLOCK_GetPeripheralClockFrequency()</ref>, <ref refid="group___s_c_u_1ga3e78410c4d0c9f9b54aa0965d16c3795" kindref="member">XMC_SCU_CLOCK_GetCpuClockFrequency()</ref> <linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_scu.h" line="294" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___s_c_u_1ga175db85afdd692784c0558e9693e23aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool XMC_SCU_CLOCK_IsDCO1ClockFrequencyUsable</definition>
        <argsstring>(void)</argsstring>
        <name>XMC_SCU_CLOCK_IsDCO1ClockFrequencyUsable</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="1461" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" bodystart="1461" bodyend="1464"/>
      </memberdef>
      <memberdef kind="function" id="group___s_c_u_1ga52987a0ed17a5ac8644163a1f7b008e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool XMC_SCU_CLOCK_IsDCO1ExtRefCalibrationReady</definition>
        <argsstring>(void)</argsstring>
        <name>XMC_SCU_CLOCK_IsDCO1ExtRefCalibrationReady</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true DCO1 is synchronized to the selected XTAL frequency </para>
</simplesect>
<simplesect kind="return"><para>false Actual DCO1 frequency is out of target</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>This functions checks the status of the synchronisation </para>
</simplesect>
<simplesect kind="note"><para>Only available for XMC1400 series </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="1206" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___s_c_u_1ga804f98badedf0e0ba4ce09f445687a37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool XMC_SCU_CLOCK_IsPeripheralClockGated</definition>
        <argsstring>(const XMC_SCU_PERIPHERAL_CLOCK_t peripheral)</argsstring>
        <name>XMC_SCU_CLOCK_IsPeripheralClockGated</name>
        <param>
          <type>const <ref refid="group___s_c_u_1ga29713150fdafc3c88f3c73f621410239" kindref="member">XMC_SCU_PERIPHERAL_CLOCK_t</ref></type>
          <declname>peripheral</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>peripheral</parametername>
</parameternamelist>
<parameterdescription>
<para>The peripheral for which the check for clock gating has to be done. <bold>Range:</bold> Use type <ref refid="group___s_c_u_1ga29713150fdafc3c88f3c73f621410239" kindref="member">XMC_SCU_PERIPHERAL_CLOCK_t</ref> to identify the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bool Status of the peripheral clock gating. <bold>Range:</bold> true if the peripheral clock is gated. false if the peripheral clock ungated(gate de-asserted).</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Gives the status of peripheral clock gating.<linebreak/>
<linebreak/>
Checks the status of peripheral clock gating using the register CGATSTAT0. It is recommended to use this API before enabling the gating of any peripherals through <emphasis><ref refid="group___s_c_u_1gab0af70f90b9a1f24d3a0a4764543d833" kindref="member">XMC_SCU_CLOCK_GatePeripheralClock()</ref></emphasis> API.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___s_c_u_1ga702904d10b6e6c6a55db381763fd322f" kindref="member">XMC_SCU_CLOCK_UngatePeripheralClock()</ref>, <ref refid="group___s_c_u_1gab0af70f90b9a1f24d3a0a4764543d833" kindref="member">XMC_SCU_CLOCK_GatePeripheralClock()</ref> <linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_scu.h" line="528" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___s_c_u_1ga66a7775d9fe9ee50a3936bd1abf20733" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_SCU_CLOCK_ScaleMCLKFrequency</definition>
        <argsstring>(uint32_t idiv, uint32_t fdiv)</argsstring>
        <name>XMC_SCU_CLOCK_ScaleMCLKFrequency</name>
        <param>
          <type>uint32_t</type>
          <declname>idiv</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>fdiv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>idiv</parametername>
</parameternamelist>
<parameterdescription>
<para>Divider value.<linebreak/>
 <bold>Range:</bold> 0 to 255.<linebreak/>
</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fdiv</parametername>
</parameternamelist>
<parameterdescription>
<para>Fractional Divider value.<linebreak/>
 <bold>Range:</bold> XMC11/XMC12/XMC13 Device: 0 to 255. XMC14 Device: 0 to 1023.<linebreak/>
 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>This API configures main clock (MCLK) frequency by updating user provided divider values.<linebreak/>
<linebreak/>
The API configures main clock by setting <emphasis>IDIV</emphasis> and <emphasis>FDIV</emphasis> bit&apos;s of the <emphasis>CLKCR</emphasis> register for XMC11/XMC12/XMC13/XMC14 Device and with additional <emphasis>FDIV</emphasis> bit (FDIV[9:8]) of the <emphasis>CLKCR1</emphasis> register settings for XMC14 device. </para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___s_c_u_1ga4e80d9644d060fdb10194d63d439e5d6" kindref="member">XMC_SCU_CLOCK_SetMCLKFrequency()</ref><linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="847" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___s_c_u_1ga1565840d44662b5655d67726624540ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_SCU_CLOCK_SetAdcClockSrc</definition>
        <argsstring>(XMC_SCU_CLOCK_ADCCLKSRC_t adcclk_src)</argsstring>
        <name>XMC_SCU_CLOCK_SetAdcClockSrc</name>
        <param>
          <type><ref refid="group___s_c_u_1ga353883c8a243d54487bb5cc8edc20a32" kindref="member">XMC_SCU_CLOCK_ADCCLKSRC_t</ref></type>
          <declname>adcclk_src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>adcclk_src</parametername>
</parameternamelist>
<parameterdescription>
<para>Clock source selected as external reference. <ref refid="group___s_c_u_1ga353883c8a243d54487bb5cc8edc20a32" kindref="member">XMC_SCU_CLOCK_ADCCLKSRC_t</ref></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>ADC converter clock (fCONV) selection </para>
</simplesect>
<simplesect kind="note"><para>Only available for XMC1400 series </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="1170" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___s_c_u_1ga6103bc92c9cd326903ee4e6b2e1d055d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_SCU_CLOCK_SetFastPeripheralClockSource</definition>
        <argsstring>(const XMC_SCU_CLOCK_PCLKSRC_t source)</argsstring>
        <name>XMC_SCU_CLOCK_SetFastPeripheralClockSource</name>
        <param>
          <type>const <ref refid="group___s_c_u_1gad4ef17eaabe7b13c5c159ba6b24c6a2c" kindref="member">XMC_SCU_CLOCK_PCLKSRC_t</ref></type>
          <declname>source</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>source</parametername>
</parameternamelist>
<parameterdescription>
<para>Fast peripheral clock source.<linebreak/>
 <bold>Range:</bold> Use type <ref refid="group___s_c_u_1gad4ef17eaabe7b13c5c159ba6b24c6a2c" kindref="member">XMC_SCU_CLOCK_PCLKSRC_t</ref> to identify the clock source.<linebreak/>
 XMC_SCU_CLOCK_PCLKSRC_MCLK- Use MCLK as the peripheral clock.<linebreak/>
 XMC_SCU_CLOCK_PCLKSRC_DOUBLE_MCLK- peripheral clock will be 2 times the MCLK frequency.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Configures the source of peripheral clock. <linebreak/>
<linebreak/>
The peripheral clock can be either same as MCLK or twice the frequency of MCLK. </para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___s_c_u_1ga4269bd27311f46c895b7ca474236d71c" kindref="member">XMC_SCU_CLOCK_GetFastPeripheralClockFrequency()</ref> <linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="1144" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___s_c_u_1gafddcd1db57d4ff9eacf15ff37c2ca133" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_SCU_CLOCK_SetHighPerformanceOscillatorMode</definition>
        <argsstring>(XMC_SCU_CLOCK_OSCHP_MODE_t mode)</argsstring>
        <name>XMC_SCU_CLOCK_SetHighPerformanceOscillatorMode</name>
        <param>
          <type><ref refid="group___s_c_u_1ga48301d5a516ffd248e062d8f98bb8148" kindref="member">XMC_SCU_CLOCK_OSCHP_MODE_t</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mode</parametername>
</parameternamelist>
<parameterdescription>
<para>Oscillator mode. <ref refid="group___s_c_u_1ga48301d5a516ffd248e062d8f98bb8148" kindref="member">XMC_SCU_CLOCK_OSCHP_MODE_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Configure functional mode of the OSCHP. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="1215" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___s_c_u_1ga33901ef9d941e0cd074e1a9adcff26ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_SCU_CLOCK_SetLowPerformanceOscillatorMode</definition>
        <argsstring>(XMC_SCU_CLOCK_OSCLP_MODE_t mode)</argsstring>
        <name>XMC_SCU_CLOCK_SetLowPerformanceOscillatorMode</name>
        <param>
          <type><ref refid="group___s_c_u_1gad5bf98e9ea7d145180ad029ea3560d8d" kindref="member">XMC_SCU_CLOCK_OSCLP_MODE_t</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mode</parametername>
</parameternamelist>
<parameterdescription>
<para>Oscillator mode. <ref refid="group___s_c_u_1gad5bf98e9ea7d145180ad029ea3560d8d" kindref="member">XMC_SCU_CLOCK_OSCLP_MODE_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Configure functional mode of the OSCLP. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="1224" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___s_c_u_1ga4e80d9644d060fdb10194d63d439e5d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_SCU_CLOCK_SetMCLKFrequency</definition>
        <argsstring>(uint32_t freq_khz)</argsstring>
        <name>XMC_SCU_CLOCK_SetMCLKFrequency</name>
        <param>
          <type>uint32_t</type>
          <declname>freq_khz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>freq_khz</parametername>
</parameternamelist>
<parameterdescription>
<para>Required MCLK frequency value in kHz.<linebreak/>
 <bold>Range:</bold> XMC11/XMC12/XMC13 Device: 125 to 32000. XMC14 Device: 188 to 48000 when DCO1 is clock source for clock control unit. 79 to 48000 when OSC_HP is clock source for clock control unit.<linebreak/>
 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>This API configures main clock (MCLK) frequency to requested frequency value.<linebreak/>
<linebreak/>
The API configures main clock by setting <emphasis>IDIV</emphasis> and <emphasis>FDIV</emphasis> bit&apos;s of the <emphasis>CLKCR</emphasis> register for XMC11/XMC12/XMC13/XMC14 Device and with additional <emphasis>FDIV</emphasis> bit (FDIV[9:8]) of the <emphasis>CLKCR1</emphasis> register settings for XMC14 device. </para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___s_c_u_1ga66a7775d9fe9ee50a3936bd1abf20733" kindref="member">XMC_SCU_CLOCK_ScaleMCLKFrequency()</ref><linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="827" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___s_c_u_1ga702904d10b6e6c6a55db381763fd322f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_SCU_CLOCK_UngatePeripheralClock</definition>
        <argsstring>(const XMC_SCU_PERIPHERAL_CLOCK_t peripheral)</argsstring>
        <name>XMC_SCU_CLOCK_UngatePeripheralClock</name>
        <param>
          <type>const <ref refid="group___s_c_u_1ga29713150fdafc3c88f3c73f621410239" kindref="member">XMC_SCU_PERIPHERAL_CLOCK_t</ref></type>
          <declname>peripheral</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>peripheral</parametername>
</parameternamelist>
<parameterdescription>
<para>The peripheral for which the clock has to be ungated. <bold>Range:</bold> Use type <ref refid="group___s_c_u_1ga29713150fdafc3c88f3c73f621410239" kindref="member">XMC_SCU_PERIPHERAL_CLOCK_t</ref> to identify the peripheral.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Enables the supply of clock to the selected peripheral.<linebreak/>
<linebreak/>
By default when the device powers on, the peripheral clock will be gated for the peripherals that support clock gating. The peripheral clock should be enabled before using it for any functionality. fPCLK is the source of clock to various peripherals. Some peripherals support clock gate. Software can request for individual ungating of such peripheral clocks by setting respective bits in the <emphasis>SCU_CGATCLR0</emphasis> register.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___s_c_u_1ga804f98badedf0e0ba4ce09f445687a37" kindref="member">XMC_SCU_CLOCK_IsPeripheralClockGated()</ref>, <ref refid="group___s_c_u_1gab0af70f90b9a1f24d3a0a4764543d833" kindref="member">XMC_SCU_CLOCK_GatePeripheralClock()</ref> <linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_scu.h" line="504" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___s_c_u_1ga161d3851c3f1c11f90526a283a27b16c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_SCU_DisablePrefetchUnit</definition>
        <argsstring>(void)</argsstring>
        <name>XMC_SCU_DisablePrefetchUnit</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function disables the Prefetch Unit (PFU). The purpose of the Prefetch unit is to reduce the Flash latency gap at higher system frequencies to increase the instruction per cycle performance.</para>
<para><simplesect kind="note"><para>Only available for XMC1400 series </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="1258" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" bodystart="1258" bodyend="1261"/>
      </memberdef>
      <memberdef kind="function" id="group___s_c_u_1ga3125df313f406750ec52080e3e6f50ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_SCU_EnablePrefetchUnit</definition>
        <argsstring>(void)</argsstring>
        <name>XMC_SCU_EnablePrefetchUnit</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function enables the Prefetch Unit (PFU). The purpose of the Prefetch unit is to reduce the Flash latency gap at higher system frequencies to increase the instruction per cycle performance.</para>
<para><simplesect kind="note"><para>Only available for XMC1400 series </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="1246" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" bodystart="1246" bodyend="1249"/>
      </memberdef>
      <memberdef kind="function" id="group___s_c_u_1ga25b1b16ac491c542ceffa20679c8e9c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t XMC_SCU_GetBMI</definition>
        <argsstring>(void)</argsstring>
        <name>XMC_SCU_GetBMI</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>uint32_t Current BMI value.</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>This procedure initiates installation of a new BMI value. In particular, it can be used as well as to restore the state upon delivery for a device already in User Productive mode.</para>
</simplesect>
<programlisting><codeline><highlight class="normal">//<sp/>Switch<sp/>to<sp/>ASC<sp/>Bootstrap<sp/>Loader</highlight></codeline>
<codeline><highlight class="normal">bmi_value<sp/>=<sp/>XMC_SCU_GetBMI();</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">if<sp/>((bmi_value<sp/>&amp;<sp/>0x000000ffU)<sp/>!=<sp/>XMC_SCU_BMI_HWCFG_ASC)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>XMC_SCU_SetBMI(XMC_SCU_BMI_HWCFG_ASC,<sp/>0);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
<para>&lt; Boot Mode Index (BMI) address holding information about start-up mode and debug configuration of the device. </para>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="1358" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" bodystart="1358" bodyend="1361"/>
      </memberdef>
      <memberdef kind="function" id="group___s_c_u_1ga494b75a841498374cfee9664e6ce9cee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t XMC_SCU_GetMirrorStatus</definition>
        <argsstring>(void)</argsstring>
        <name>XMC_SCU_GetMirrorStatus</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>uint32_t Status of the register mirror update.<linebreak/>
 <bold>Range:</bold> Use the bit mask of the SCU_GENERAL_MIRRSTS register for the mirror update event of interest. e.g.: SCU_GENERAL_MIRRSTS_RTC_CTR_Msk. Multiple update events can be combined using <emphasis>OR</emphasis> operation.</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Provides the status of hibernate domain register update, when the respective mirror registers are changed. <linebreak/>
<linebreak/>
The hibernate domain is connected to the core domain via SPI serial communication. MIRRSTS is a status register representing the communication of changed value of a mirror register to its corresponding register in the hibernate domain. The bit fields of the register indicate that a corresponding register of the hibernate domain is ready to accept a write or that the communication interface is busy with executing the previous operation.<linebreak/>
Note: There is no hibernate domain in XMC1x devices. This register is retained for legacy purpose. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_scu.h" line="547" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_scu.h" bodystart="547" bodyend="550"/>
      </memberdef>
      <memberdef kind="function" id="group___s_c_u_1ga71c4f02eb6036f0d3a13af5e10bf56cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t XMC_SCU_GetTemperature</definition>
        <argsstring>(void)</argsstring>
        <name>XMC_SCU_GetTemperature</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>uint32_t Raw die temperature value. <bold>Range:</bold> 16 bit value.</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Provides the raw die temperature value.<linebreak/>
<linebreak/>
The API reads temperature measurement result from <emphasis>SCU_ANALOG-&gt;ANATSEMON</emphasis> bit fields. </para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___s_c_u_1ga3b00187ccda526f06802152ecf199fa4" kindref="member">XMC_SCU_StartTempMeasurement()</ref> <linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="1050" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___s_c_u_1ga5a0ad9c467d9549542d0f0275bae6314" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool XMC_SCU_HighTemperature</definition>
        <argsstring>(void)</argsstring>
        <name>XMC_SCU_HighTemperature</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>bool Result of checking whether the die temperature is more than the upper threshold.<linebreak/>
 <bold>Range:</bold> <emphasis>false</emphasis> if temperature is below the upper threshold. <emphasis>true</emphasis> if temperature has exceeded the upper threshold configured in <emphasis>ANATSEIH</emphasis> register.</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Check if the temperature has exceeded the upper threshold value.<linebreak/>
<linebreak/>
The API checks for <emphasis>TSE_HIGH</emphasis> bit (TSE Compare High Temperature Event Status bit) of <emphasis>SRRAW</emphasis> register. The bit will be set when the <emphasis>TSE_MON</emphasis> value in <emphasis>ANATSEMON</emphasis> register exceeds the value of <emphasis>TSE_IH</emphasis> value in <emphasis>ANATSEIH</emphasis> register. </para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___s_c_u_1ga3b00187ccda526f06802152ecf199fa4" kindref="member">XMC_SCU_StartTempMeasurement()</ref>, <ref refid="group___s_c_u_1ga0f600fa31f024ec9d8e0c17fc767772f" kindref="member">XMC_SCU_SetRawTempLimits()</ref>, <ref refid="group___s_c_u_1ga71c4f02eb6036f0d3a13af5e10bf56cc" kindref="member">XMC_SCU_GetTemperature()</ref>, <ref refid="group___s_c_u_1ga8573534003ebf11fbaa49e331238fb86" kindref="member">XMC_SCU_LowTemperature()</ref> <linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="1023" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___s_c_u_1gabd2e577339ff5af48261d18e0e41dc50" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_SCU_INTERRUPT_ClearEventStatus</definition>
        <argsstring>(const XMC_SCU_INTERRUPT_EVENT_t event)</argsstring>
        <name>XMC_SCU_INTERRUPT_ClearEventStatus</name>
        <param>
          <type>const <ref refid="group___s_c_u_1ga18e68742408210603bed8d0806ce1573" kindref="member">XMC_SCU_INTERRUPT_EVENT_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>Bit mask of the events to clear. <bold>Range:</bold> Use type <ref refid="group___s_c_u_1ga18e68742408210603bed8d0806ce1573" kindref="member">XMC_SCU_INTERRUPT_EVENT_t</ref> for providing the input value. Multiple events can be combined using the <emphasis>OR</emphasis> operation.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Clears the event status bit in SRRAW register.<linebreak/>
<linebreak/>
The events are cleared by writing value 1 to their bit positions in the SRCLR register. The API can be used when polling method is used. After detecting the event, the event status should be cleared using software to detect the event again.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___s_c_u_1gae23dfad3e5e11c78791e5d5a777c44a8" kindref="member">XMC_SCU_INTERUPT_GetEventStatus()</ref>, <ref refid="group___s_c_u_1gaa55b2098ce803174e7dfd680d0c30728" kindref="member">XMC_SCU_INTERRUPT_TriggerEvent()</ref> <linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_scu.h" line="376" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___s_c_u_1gaa814678729d6b7f41c558e768ba8ecd4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_SCU_INTERRUPT_DisableEvent</definition>
        <argsstring>(const XMC_SCU_INTERRUPT_EVENT_t event)</argsstring>
        <name>XMC_SCU_INTERRUPT_DisableEvent</name>
        <param>
          <type>const <ref refid="group___s_c_u_1ga18e68742408210603bed8d0806ce1573" kindref="member">XMC_SCU_INTERRUPT_EVENT_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>Bit mask of the event to disable. <bold>Range:</bold> Use type <ref refid="group___s_c_u_1ga18e68742408210603bed8d0806ce1573" kindref="member">XMC_SCU_INTERRUPT_EVENT_t</ref> for providing the input value. Multiple events can be combined using the <emphasis>OR</emphasis> operation.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Disables generation of interrupt on occurrence of the input event.<linebreak/>
<linebreak/>
The events are disabled by resetting the respective bit fields in the SRMSK register. <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para>NVIC_DisableIRQ(), <ref refid="group___s_c_u_1gab4cfb9545d1e561e1f24aeaa69af821c" kindref="member">XMC_SCU_INTERRUPT_EnableEvent()</ref><linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_scu.h" line="327" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___s_c_u_1gab4cfb9545d1e561e1f24aeaa69af821c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_SCU_INTERRUPT_EnableEvent</definition>
        <argsstring>(const XMC_SCU_INTERRUPT_EVENT_t event)</argsstring>
        <name>XMC_SCU_INTERRUPT_EnableEvent</name>
        <param>
          <type>const <ref refid="group___s_c_u_1ga18e68742408210603bed8d0806ce1573" kindref="member">XMC_SCU_INTERRUPT_EVENT_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>Bit mask of the event to enable. <bold>Range:</bold> Use type <ref refid="group___s_c_u_1ga18e68742408210603bed8d0806ce1573" kindref="member">XMC_SCU_INTERRUPT_EVENT_t</ref> for providing the input value. Multiple events can be combined using the <emphasis>OR</emphasis> operation.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Enables the generation of interrupt for the input events.<linebreak/>
<linebreak/>
The events are enabled by setting the respective bit fields in the SRMSK register. <linebreak/>
Note: User should separately enable the NVIC node responsible for handling the SCU interrupt. The interrupt will be generated when the respective event occurs. </para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para>NVIC_EnableIRQ(), <ref refid="group___s_c_u_1gaa814678729d6b7f41c558e768ba8ecd4" kindref="member">XMC_SCU_INTERRUPT_DisableEvent()</ref><linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_scu.h" line="311" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___s_c_u_1ga4ae03c6bcc3ccade266b46d84f7715e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___s_c_u_1gaff029b1575acc0712d494932d8ca6d60" kindref="member">XMC_SCU_STATUS_t</ref></type>
        <definition>XMC_SCU_STATUS_t XMC_SCU_INTERRUPT_SetEventHandler</definition>
        <argsstring>(const XMC_SCU_INTERRUPT_EVENT_t event, const XMC_SCU_INTERRUPT_EVENT_HANDLER_t handler)</argsstring>
        <name>XMC_SCU_INTERRUPT_SetEventHandler</name>
        <param>
          <type>const <ref refid="group___s_c_u_1ga18e68742408210603bed8d0806ce1573" kindref="member">XMC_SCU_INTERRUPT_EVENT_t</ref></type>
          <declname>event</declname>
        </param>
        <param>
          <type>const <ref refid="group___s_c_u_1ga4b50170c441fb21833c07a27b814a581" kindref="member">XMC_SCU_INTERRUPT_EVENT_HANDLER_t</ref></type>
          <declname>handler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>The event for which the interrupt handler is to be configured. <linebreak/>
 <bold>Range:</bold> Use type <ref refid="group___s_c_u_1ga18e68742408210603bed8d0806ce1573" kindref="member">XMC_SCU_INTERRUPT_EVENT_t</ref> for identifying the event. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>handler</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the function to be executed when the event if detected. <linebreak/>
 <bold>Range:</bold> The function accepts no arguments and returns no value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>XMC_SCU_STATUS_t Status of configuring the event handler function for the selected event.<linebreak/>
 <bold>Range:</bold> <emphasis>XMC_SCU_STATUS_OK</emphasis> if the event handler is successfully configured.<linebreak/>
 <emphasis>XMC_SCU_STATUS_ERROR</emphasis> if the input event is invalid.<linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Assigns the event handler function to be executed on occurrence of the selected event.<linebreak/>
<linebreak/>
If the input event is valid, the handler function will be assigned to a table to be executed when the interrupt is generated and the event status is set in the event status register. By using this API, polling for a particular event can be avoided. This way the CPU utilization will be optimized. Multiple SCU events can generate a common interrupt. When the interrupt is generated, a common interrupt service routine is executed. It checks for status flags of events which can generate the interrupt. The handler function will be executed if the event flag is set.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___s_c_u_1gaa55b2098ce803174e7dfd680d0c30728" kindref="member">XMC_SCU_INTERRUPT_TriggerEvent()</ref>, <ref refid="group___s_c_u_1gae23dfad3e5e11c78791e5d5a777c44a8" kindref="member">XMC_SCU_INTERUPT_GetEventStatus()</ref> <linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_scu.h" line="572" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___s_c_u_1gaa55b2098ce803174e7dfd680d0c30728" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_SCU_INTERRUPT_TriggerEvent</definition>
        <argsstring>(const XMC_SCU_INTERRUPT_EVENT_t event)</argsstring>
        <name>XMC_SCU_INTERRUPT_TriggerEvent</name>
        <param>
          <type>const <ref refid="group___s_c_u_1ga18e68742408210603bed8d0806ce1573" kindref="member">XMC_SCU_INTERRUPT_EVENT_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>Bit mask of the event to be triggered. <bold>Range:</bold> Use type <ref refid="group___s_c_u_1ga18e68742408210603bed8d0806ce1573" kindref="member">XMC_SCU_INTERRUPT_EVENT_t</ref> for providing the input value. Multiple events can be combined using the <emphasis>OR</emphasis> operation.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Triggers the event as if the hardware raised it.<linebreak/>
<linebreak/>
Event will be triggered by setting the respective bitfield in the SRSET register.<linebreak/>
Note: User should enable the NVIC node that handles the respective event for interrupt generation. </para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para>NVIC_EnableIRQ(), <ref refid="group___s_c_u_1gae23dfad3e5e11c78791e5d5a777c44a8" kindref="member">XMC_SCU_INTERUPT_GetEventStatus()</ref>, <ref refid="group___s_c_u_1gabd2e577339ff5af48261d18e0e41dc50" kindref="member">XMC_SCU_INTERRUPT_ClearEventStatus()</ref> <linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_scu.h" line="343" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___s_c_u_1gae23dfad3e5e11c78791e5d5a777c44a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___s_c_u_1ga18e68742408210603bed8d0806ce1573" kindref="member">XMC_SCU_INTERRUPT_EVENT_t</ref></type>
        <definition>XMC_SCU_INTERRUPT_EVENT_t XMC_SCU_INTERUPT_GetEventStatus</definition>
        <argsstring>(void)</argsstring>
        <name>XMC_SCU_INTERUPT_GetEventStatus</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>uint32_t Status of the SCU events.</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Provides the status of all SCU events.<linebreak/>
<linebreak/>
The status is read from the SRRAW register. To check the status of a particular event, the returned value should be masked with the bit mask of the event. The bitmask of events can be obtained using the type <ref refid="group___s_c_u_1ga18e68742408210603bed8d0806ce1573" kindref="member">XMC_SCU_INTERRUPT_EVENT_t</ref>. Multiple events&apos; status can be checked by combining the bit masks using <emphasis>OR</emphasis> operation. After detecting the event, the event status should be cleared using software to detect the event again. </para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___s_c_u_1gabd2e577339ff5af48261d18e0e41dc50" kindref="member">XMC_SCU_INTERRUPT_ClearEventStatus()</ref>, <ref refid="group___s_c_u_1gaa55b2098ce803174e7dfd680d0c30728" kindref="member">XMC_SCU_INTERRUPT_TriggerEvent()</ref>, <ref refid="group___s_c_u_1ga4ae03c6bcc3ccade266b46d84f7715e6" kindref="member">XMC_SCU_INTERRUPT_SetEventHandler()</ref> <linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_scu.h" line="358" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___s_c_u_1ga9ba1ce317ce89edfea107893fbd8a0be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_SCU_IRQHandler</definition>
        <argsstring>(uint32_t sr_num)</argsstring>
        <name>XMC_SCU_IRQHandler</name>
        <param>
          <type>uint32_t</type>
          <declname>sr_num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sr_num</parametername>
</parameternamelist>
<parameterdescription>
<para>Service request number identifying the SCU interrupt generated.<linebreak/>
 <bold>Range:</bold> 0 to 2. XMC4x devices have one common SCU interrupt, so the value should be 0.<linebreak/>
 But XMC1x devices support 3 interrupt nodes. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None </para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>A common function to execute callback functions for multiple events.<linebreak/>
<linebreak/>
It checks for the status of events which can generate the interrupt with the selected service request. If the event is set, the corresponding callback function will be executed. It also clears the event status bit.<linebreak/>
<bold>Note:</bold> This is an internal function. It should not be called by the user application.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___s_c_u_1ga4ae03c6bcc3ccade266b46d84f7715e6" kindref="member">XMC_SCU_INTERRUPT_SetEventHandler()</ref> <linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_scu.h" line="588" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___s_c_u_1ga370ea6fa8641ab74386314bbaa6ffb44" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool XMC_SCU_IsTempMeasurementDone</definition>
        <argsstring>(void)</argsstring>
        <name>XMC_SCU_IsTempMeasurementDone</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true DTS Measurement Done </para>
</simplesect>
<simplesect kind="return"><para>false DTS Measurement not Done</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>This functions checks the status of the DTS Measurement completion.<linebreak/>
<linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___s_c_u_1ga3b00187ccda526f06802152ecf199fa4" kindref="member">XMC_SCU_StartTempMeasurement()</ref> <linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="1072" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" bodystart="1072" bodyend="1075"/>
      </memberdef>
      <memberdef kind="function" id="group___s_c_u_1gad9ba5dce219ea8390f4aa9f7bc46aafe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_SCU_LockProtectedBits</definition>
        <argsstring>(void)</argsstring>
        <name>XMC_SCU_LockProtectedBits</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Locks access to protected bit fields of the SCU.<linebreak/>
<linebreak/>
The bit protection scheme prevents changing selected register bits by unauthorized code. Bit protection scheme is enabled by writing 000000C3H to <emphasis>PASSWD</emphasis> register. By writing this value, the API is setting the <emphasis>MODE</emphasis> bit field to bit protection enabled state.<linebreak/>
List of Protected Register Bit Fields are mentioned below. <linebreak/>
<table rows="7" cols="2"><row>
<entry thead="no"><para><emphasis>Register</emphasis>  </para>
</entry><entry thead="no"><para><emphasis>Bit</emphasis> fields  </para>
</entry></row>
<row>
<entry thead="no"><para>SCU_CLKCR  </para>
</entry><entry thead="no"><para>FDIV, IDIV, PCLKSEL, RTCLKSEL  </para>
</entry></row>
<row>
<entry thead="no"><para>SCU_CGATSET0  </para>
</entry><entry thead="no"><para>All bits  </para>
</entry></row>
<row>
<entry thead="no"><para>SCU_CGATCLR0  </para>
</entry><entry thead="no"><para>All bits  </para>
</entry></row>
<row>
<entry thead="no"><para>SCU_ANAOFFSET  </para>
</entry><entry thead="no"><para>ADJL_OFFSET  </para>
</entry></row>
<row>
<entry thead="no"><para>VADC0_ACCPROT0  </para>
</entry><entry thead="no"><para>All bits  </para>
</entry></row>
<row>
<entry thead="no"><para>VADC0_ACCPROT1  </para>
</entry><entry thead="no"><para>All bits  </para>
</entry></row>
</table>
</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___s_c_u_1gaf60632360634a2f1be0f8af715c03dea" kindref="member">XMC_SCU_UnlockProtectedBits()</ref> <linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="872" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___s_c_u_1ga8573534003ebf11fbaa49e331238fb86" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool XMC_SCU_LowTemperature</definition>
        <argsstring>(void)</argsstring>
        <name>XMC_SCU_LowTemperature</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>bool Result of checking whether the die temperature is less than the lower threshold.<linebreak/>
 <bold>Range:</bold> <emphasis>false</emphasis> if temperature is higher than the lower threshold. <emphasis>true</emphasis> if temperature has dropped below the lower threshold configured in <emphasis>ANATSEIL</emphasis> register.</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Check if the temperature has dropped below the lower threshold value.<linebreak/>
<linebreak/>
The API checks for <emphasis>TSE_LOW</emphasis> bit (TSE Compare Low Temperature Event Status bit) of <emphasis>SRRAW</emphasis> register. The bit will be set when the <emphasis>TSE_MON</emphasis> value in <emphasis>ANATSEMON</emphasis> register drops below the value of <emphasis>TSE_IL</emphasis> value in <emphasis>ANATSEIL</emphasis> register. </para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___s_c_u_1ga3b00187ccda526f06802152ecf199fa4" kindref="member">XMC_SCU_StartTempMeasurement()</ref>, <ref refid="group___s_c_u_1ga0f600fa31f024ec9d8e0c17fc767772f" kindref="member">XMC_SCU_SetRawTempLimits()</ref>, <ref refid="group___s_c_u_1ga71c4f02eb6036f0d3a13af5e10bf56cc" kindref="member">XMC_SCU_GetTemperature()</ref>, <ref refid="group___s_c_u_1ga5a0ad9c467d9549542d0f0275bae6314" kindref="member">XMC_SCU_HighTemperature()</ref> <linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="1039" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___s_c_u_1ga4105a1ad04e87b7ca5ec0c88242ed991" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_SCU_POWER_DisableMonitor</definition>
        <argsstring>(void)</argsstring>
        <name>XMC_SCU_POWER_DisableMonitor</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Disables VDEL detector </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="1290" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" bodystart="1290" bodyend="1293"/>
      </memberdef>
      <memberdef kind="function" id="group___s_c_u_1gabff55cce9dfcad7e04e6de5f3d352978" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_SCU_POWER_EnableMonitor</definition>
        <argsstring>(XMC_SCU_POWER_MONITOR_RANGE_t range, XMC_SCU_POWER_MONITOR_DELAY_t delay)</argsstring>
        <name>XMC_SCU_POWER_EnableMonitor</name>
        <param>
          <type><ref refid="group___s_c_u_1ga985038b59c5bc1d8341db06c6c7cbfdc" kindref="member">XMC_SCU_POWER_MONITOR_RANGE_t</ref></type>
          <declname>range</declname>
        </param>
        <param>
          <type><ref refid="group___s_c_u_1gaae067899a6cfa605f5ebfef2c1f8d393" kindref="member">XMC_SCU_POWER_MONITOR_DELAY_t</ref></type>
          <declname>delay</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>range</parametername>
</parameternamelist>
<parameterdescription>
<para>VDEL Range Select <ref refid="group___s_c_u_1ga985038b59c5bc1d8341db06c6c7cbfdc" kindref="member">XMC_SCU_POWER_MONITOR_RANGE_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>delay</parametername>
</parameternamelist>
<parameterdescription>
<para>VDEL Timing Setting <ref refid="group___s_c_u_1gaae067899a6cfa605f5ebfef2c1f8d393" kindref="member">XMC_SCU_POWER_MONITOR_DELAY_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Enables VDEL detector. VDEL detector compares the supply voltage against a pre-warning threshold voltage</para>
</simplesect>
<simplesect kind="note"><para>Brown Out Trap need to be enabled previously </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="1276" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" bodystart="1276" bodyend="1281"/>
      </memberdef>
      <memberdef kind="function" id="group___s_c_u_1ga77c6ab2add788e4bd31eb563e0f8f8b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_SCU_RESET_AssertMasterReset</definition>
        <argsstring>(void)</argsstring>
        <name>XMC_SCU_RESET_AssertMasterReset</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Trigger device master reset.<linebreak/>
<linebreak/>
The API triggers master reset by setting the <emphasis>MRSTEN</emphasis> bit of <emphasis>RSTCON</emphasis> register. It also internally triggers system reset. Almost all the logics of the device are affected by this reset. </para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___s_c_u_1gaa4dbbfd3a9346cc7eb84bda46d084607" kindref="member">XMC_SCU_RESET_EnableResetRequest()</ref> <linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="1087" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" bodystart="1087" bodyend="1090"/>
      </memberdef>
      <memberdef kind="function" id="group___s_c_u_1ga4bf9396e8b46be98f73999575d13bf6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_SCU_RESET_ClearDeviceResetReason</definition>
        <argsstring>(void)</argsstring>
        <name>XMC_SCU_RESET_ClearDeviceResetReason</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Clears the reset reason bits in the reset status register. <linebreak/>
<linebreak/>
Clearing of the reset status information in the <emphasis>SCU_RSTSTAT</emphasis> register via register bit <emphasis>RSTCLR.RSCLR</emphasis> is strongly recommended to ensure a clear indication of the cause of next reset.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___s_c_u_1ga3f779c81bdc29b44c644017a52aff300" kindref="member">XMC_SCU_RESET_GetDeviceResetReason()</ref> <linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_scu.h" line="410" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_scu.h" bodystart="410" bodyend="414"/>
      </memberdef>
      <memberdef kind="function" id="group___s_c_u_1gaa4dbbfd3a9346cc7eb84bda46d084607" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_SCU_RESET_EnableResetRequest</definition>
        <argsstring>(uint32_t request)</argsstring>
        <name>XMC_SCU_RESET_EnableResetRequest</name>
        <param>
          <type>uint32_t</type>
          <declname>request</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>request</parametername>
</parameternamelist>
<parameterdescription>
<para>Reset source to trigger the device reset.<linebreak/>
 <bold>Range:</bold> Use type <ref refid="group___s_c_u_1ga4988413b7da85ed020b8d1a8243e28aa" kindref="member">XMC_SCU_SYSTEM_RESET_REQUEST_t</ref> to identify the reset source.<linebreak/>
 XMC_SCU_RESET_REQUEST_FLASH_ECC_ERROR- Reset when flash memory double bit error is detected.<linebreak/>
 XMC_SCU_RESET_REQUEST_CLOCK_LOSS- Reset when loss of clock is detected.<linebreak/>
 XMC_SCU_RESET_REQUEST_SRAM_PARITY_ERROR- Reset when SRAM parity error is detected.<linebreak/>
 XMC_SCU_RESET_REQUEST_USIC_SRAM_PARITY_ERROR- Reset when USIC0 SRAM parity error is detected.<linebreak/>
 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Configures trigger for system reset from the selected source.<linebreak/>
<linebreak/>
The API configures the reset source specific bit in the <emphasis>RSTCON</emphasis> register. Multiple reset sources can be combined using <emphasis>OR</emphasis> operation. By enabling the reset using this API will not trigger the reset. The reset will happen when the configured source event is detected. </para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___s_c_u_1ga77c6ab2add788e4bd31eb563e0f8f8b1" kindref="member">XMC_SCU_RESET_AssertMasterReset()</ref> <linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="1111" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" bodystart="1111" bodyend="1114"/>
      </memberdef>
      <memberdef kind="function" id="group___s_c_u_1ga3f779c81bdc29b44c644017a52aff300" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t XMC_SCU_RESET_GetDeviceResetReason</definition>
        <argsstring>(void)</argsstring>
        <name>XMC_SCU_RESET_GetDeviceResetReason</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>uint32_t Status representing the reason for device reset.</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Provides the value representing the reason for device reset.<linebreak/>
<linebreak/>
The return value is an encoded word, which can indicate multiple reasons for the last reset. Each bit position of the returned word is representative of a last reset cause. The returned value should be appropriately masked to check the cause of reset. The cause of the last reset gets automatically stored in the <emphasis>SCU_RSTSTAT</emphasis> register. The reset status shall be reset after each startup in order to ensure consistent source indication after the next reset. <bold>Range:</bold> The type <ref refid="group___s_c_u_1gae01c08f5d524dadbc6e0c4128b348dc3" kindref="member">XMC_SCU_RESET_REASON_t</ref> can be used to get the bit masks of the reset cause.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___s_c_u_1ga4bf9396e8b46be98f73999575d13bf6d" kindref="member">XMC_SCU_RESET_ClearDeviceResetReason()</ref> <linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_scu.h" line="395" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_scu.h" bodystart="395" bodyend="398"/>
      </memberdef>
      <memberdef kind="function" id="group___s_c_u_1gaf5e684d3534fefaad8787c241f54c310" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t XMC_SCU_SetBMI</definition>
        <argsstring>(uint32_t flags, uint8_t timeout)</argsstring>
        <name>XMC_SCU_SetBMI</name>
        <param>
          <type>uint32_t</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>may be any of: <linebreak/>
 <ref refid="group___s_c_u_1gaccc3853c66324f7c0f2ff6e5c260d38d" kindref="member">XMC_SCU_BMI_HWCFG_CAN_BSL</ref> (only available for XMC1400 series with CAN Module)<linebreak/>
 <ref refid="group___s_c_u_1ga2218430a09e0824a83c23c626ed1668b" kindref="member">XMC_SCU_BMI_HWCFG_CAN_BSLTO</ref> (only available for XMC1400 series with CAN Module)<linebreak/>
 <ref refid="group___s_c_u_1ga6ad45fc801302e2ce9583aba0ffe58e0" kindref="member">XMC_SCU_BMI_HWCFG_SBSL_CANOPEN</ref> (only available for XMC1400 series with CAN Module)<linebreak/>
 <ref refid="group___s_c_u_1ga7f00e1b1262b3eab4b98353a06673c3b" kindref="member">XMC_SCU_BMI_HWCFG_ASC_BSL<linebreak/>
</ref> <ref refid="group___s_c_u_1ga3ab345ab24ec81394d45deeb874f3d5d" kindref="member">XMC_SCU_BMI_HWCFG_UPM<linebreak/>
</ref> <ref refid="group___s_c_u_1ga397fae0a8dfbdfb975010cbb94a8bb42" kindref="member">XMC_SCU_BMI_HWCFG_UMD<linebreak/>
</ref> <ref refid="group___s_c_u_1gaf42b9eea5286aec14668d952527be70e" kindref="member">XMC_SCU_BMI_HWCFG_UMHAR<linebreak/>
</ref> <ref refid="group___s_c_u_1ga88de483723947ca91ce5d5bfd1b89a51" kindref="member">XMC_SCU_BMI_HWCFG_SSC_BSL<linebreak/>
</ref> <ref refid="group___s_c_u_1ga0d1b90b10b5672ffe1a3b38f7bbc81b8" kindref="member">XMC_SCU_BMI_HWCFG_ASC_BSLTO<linebreak/>
</ref> <ref refid="group___s_c_u_1ga442aa39ffc3bcc290964bf9c04a558ef" kindref="member">XMC_SCU_BMI_HWCFG_SSC_BSLTO<linebreak/>
</ref> <ref refid="group___s_c_u_1gacf41aeb0d9c158e1ae9bd34906ddab27" kindref="member">XMC_SCU_BMI_HWCFG_SBSL<linebreak/>
</ref><linebreak/>
 optionally OR&apos;d together with any of (only available for XMC1400 series): <linebreak/>
 <ref refid="group___s_c_u_1ga56ed923f3d9fe179cec0b4c187d0d4c6" kindref="member">XMC_SCU_BMI_HWCFG_PINDIS</ref> optionally OR&apos;d together with any of: <linebreak/>
 <ref refid="group___s_c_u_1ga8b090323ebddb3615f33e806b23b1d02" kindref="member">XMC_SCU_BMI_DAPTYP_SWD<linebreak/>
</ref> <ref refid="group___s_c_u_1gaf08ce8782ed3f2501f91d39847e55086" kindref="member">XMC_SCU_BMI_DAPTYP_SPD<linebreak/>
</ref><linebreak/>
 optionally OR&apos;d together with any of: <linebreak/>
 <ref refid="group___s_c_u_1ga02558dc388806845c40f83ba2f8f87cd" kindref="member">XMC_SCU_BMI_DAPDIS_CHANNEL_0<linebreak/>
</ref> <ref refid="group___s_c_u_1ga4863740cd6d84afcfc0d01685f6d3afd" kindref="member">XMC_SCU_BMI_DAPDIS_CHANNEL_1<linebreak/>
</ref><linebreak/>
 <image type="html" name="xmc1000_debugif.png"></image>
 optionally OR&apos;d together with any of (only available for XMC1400 series with CAN Module): <linebreak/>
 <ref refid="group___s_c_u_1ga8eda1a0078fb1dc13593680dcc4c1886" kindref="member">XMC_SCU_BMI_CANCLK_DCO1<linebreak/>
</ref> <ref refid="group___s_c_u_1ga7cb50fbefee333f0aa9bb1a5d510d6e7" kindref="member">XMC_SCU_BMI_CANCLK_OSCHP<linebreak/>
</ref><linebreak/>
</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>Only relevant if a start up mode is selected that uses timeout. The time-out duration is BSLTO*2664000 MCLK cycles, the supported time-out range is 0.3-5s (333...4995ms) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>false only upon error, if OK the procedure triggers a reset and does not return to calling routine</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>This procedure initiates installation of a new BMI value. In particular, it can be used as well as to restore the state upon delivery for a device already in User Productive mode.</para>
</simplesect>
<programlisting><codeline><highlight class="normal">//<sp/>Switch<sp/>to<sp/>ASC<sp/>Bootstrap<sp/>Loader</highlight></codeline>
<codeline><highlight class="normal">XMC_SCU_SetBMI(XMC_SCU_BMI_HWCFG_ASC_BSL,<sp/>0);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>Switch<sp/>to<sp/>Debug<sp/>user<sp/>mode<sp/>SWD1<sp/>(pins<sp/>P1.3<sp/>and<sp/>P1.2)</highlight></codeline>
<codeline><highlight class="normal">XMC_SCU_SetBMI(XMC_SCU_BMI_HWCFG_UMD<sp/>|<sp/>XMC_SCU_BMI_DAPTYP_SWD<sp/>|<sp/>XMC_SCU_BMI_DAPDIS_CHANNEL_1,<sp/>0);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="1337" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___s_c_u_1gac10ca2cd72477476ffe38a4818bcae4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_SCU_SetCcuTriggerHigh</definition>
        <argsstring>(const uint32_t trigger)</argsstring>
        <name>XMC_SCU_SetCcuTriggerHigh</name>
        <param>
          <type>const uint32_t</type>
          <declname>trigger</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>trigger</parametername>
</parameternamelist>
<parameterdescription>
<para>CCU slices to be triggered synchronously via software. The value is a bitmask of CCU slice bits in the register CCUCON. <linebreak/>
 <bold>Range:</bold> Use type <ref refid="group___s_c_u_1ga51850699f03c906a5fefcc4f04c6b2c1" kindref="member">XMC_SCU_CCU_TRIGGER_t</ref> for bitmask of individual CCU slices. Multiple slices can be combined using <emphasis>OR</emphasis> operation.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Generates active edge(low to high) trigger for multiple CCU units at the same time.<linebreak/>
<linebreak/>
Before executing this API, all the required CCU timers should configure external start. The edge of the start signal should be selected as active edge. The input signal for the CCU slice should be selected as SCU input. The above mentioned configurations can be made using the CCU LLD API <ref refid="group___c_c_u4_1gac029dc08c5d54be8e773df0de9641691" kindref="member">XMC_CCU4_SLICE_StartConfig()</ref>. CCU timer slice should be started using <ref refid="group___c_c_u4_1ga9997bb59706a4034e3e3be33a4935a7c" kindref="member">XMC_CCU4_SLICE_StartTimer()</ref> before triggering the timer using this API.<linebreak/>
 </para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___c_c_u4_1gac029dc08c5d54be8e773df0de9641691" kindref="member">XMC_CCU4_SLICE_StartConfig()</ref>, <ref refid="group___c_c_u4_1ga28e214514acb1a75a67de63e6d74b167" kindref="member">XMC_CCU4_SLICE_SetInput()</ref>, <ref refid="group___s_c_u_1ga53300d587bbd03bc34c5a4396f5a34b9" kindref="member">XMC_SCU_SetCcuTriggerLow()</ref><linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_scu.h" line="234" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_scu.h" bodystart="234" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="group___s_c_u_1ga53300d587bbd03bc34c5a4396f5a34b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_SCU_SetCcuTriggerLow</definition>
        <argsstring>(const uint32_t trigger)</argsstring>
        <name>XMC_SCU_SetCcuTriggerLow</name>
        <param>
          <type>const uint32_t</type>
          <declname>trigger</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>trigger</parametername>
</parameternamelist>
<parameterdescription>
<para>CCU slices to be triggered synchronously via software. The value is a bitmask of CCU slice bits in the register CCUCON. <linebreak/>
 <bold>Range:</bold> Use type <ref refid="group___s_c_u_1ga51850699f03c906a5fefcc4f04c6b2c1" kindref="member">XMC_SCU_CCU_TRIGGER_t</ref> for bitmask of individual CCU slices. Multiple slices can be combined using <emphasis>OR</emphasis> operation.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Generates passive edge(high to low) trigger for multiple CCU units at the same time.<linebreak/>
<linebreak/>
Before executing this API, all the required CCU timers should configure external start. The edge of the start signal should be selected as passive edge. The input signal for the CCU slice should be selected as SCU input. The above mentioned configurations can be made using the CCU LLD API <ref refid="group___c_c_u4_1gac029dc08c5d54be8e773df0de9641691" kindref="member">XMC_CCU4_SLICE_StartConfig()</ref>. CCU timer slice should be started using <ref refid="group___c_c_u4_1ga9997bb59706a4034e3e3be33a4935a7c" kindref="member">XMC_CCU4_SLICE_StartTimer()</ref> before triggering the timer using this API.<linebreak/>
 </para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___c_c_u4_1gac029dc08c5d54be8e773df0de9641691" kindref="member">XMC_CCU4_SLICE_StartConfig()</ref>, <ref refid="group___c_c_u4_1ga28e214514acb1a75a67de63e6d74b167" kindref="member">XMC_CCU4_SLICE_SetInput()</ref>, <ref refid="group___s_c_u_1gac10ca2cd72477476ffe38a4818bcae4b" kindref="member">XMC_SCU_SetCcuTriggerHigh()</ref><linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_scu.h" line="259" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_scu.h" bodystart="259" bodyend="262"/>
      </memberdef>
      <memberdef kind="function" id="group___s_c_u_1ga6804b5ee7f0e08ee13d2863f1a35bdcf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_SCU_SetInterruptControl</definition>
        <argsstring>(uint8_t irq_number, XMC_SCU_IRQCTRL_t source)</argsstring>
        <name>XMC_SCU_SetInterruptControl</name>
        <param>
          <type>uint8_t</type>
          <declname>irq_number</declname>
        </param>
        <param>
          <type><ref refid="group___s_c_u_1gad54a1c90f3b35f4c49d62ac204678487" kindref="member">XMC_SCU_IRQCTRL_t</ref></type>
          <declname>source</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function selects service request source for a NVIC interrupt node. The XMC1400 series has up to 54 peripheral service requests. The Cortex M0 however has 32 interrupts available for peripherals. This function allows you to select which 32 peripheral requests of the 54 the CPU should react on.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>irq_number</parametername>
</parameternamelist>
<parameterdescription>
<para>Interrupt number, 0 to 31 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>source</parametername>
</parameternamelist>
<parameterdescription>
<para>Peripheral service request. See <ref refid="group___s_c_u_1gad54a1c90f3b35f4c49d62ac204678487" kindref="member">XMC_SCU_IRQCTRL_t</ref></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Only available for XMC1400 series </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="1237" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___s_c_u_1ga0f600fa31f024ec9d8e0c17fc767772f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_SCU_SetRawTempLimits</definition>
        <argsstring>(const uint32_t lower_temp, const uint32_t upper_temp)</argsstring>
        <name>XMC_SCU_SetRawTempLimits</name>
        <param>
          <type>const uint32_t</type>
          <declname>lower_temp</declname>
        </param>
        <param>
          <type>const uint32_t</type>
          <declname>upper_temp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lower_temp</parametername>
</parameternamelist>
<parameterdescription>
<para>Lower threshold value for the die temperature.<linebreak/>
 <bold>Range:</bold> 0 to 65535(16 bit unsigned value). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>upper_temp</parametername>
</parameternamelist>
<parameterdescription>
<para>Upper threshold value for the die temperature.<linebreak/>
 <bold>Range:</bold> 0 to 65535(16 bit unsigned value).</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Configures upper and lower thresholds of die temperature as raw digital values into temperature sensor.<linebreak/>
<linebreak/>
The API configures <emphasis>ANATSEIH</emphasis> and <emphasis>ANATSEIL</emphasis> registers for upper and lower die temperature threshold limits respectively.<linebreak/>
It is recommended to use following steps:<linebreak/>
<itemizedlist>
<listitem><para>Call <emphasis>XMC_SCU_StopTempMeasurement</emphasis> to stop temperature measurement if it was started previously.<linebreak/>
</para>
</listitem><listitem><para>Call <emphasis>XMC_SCU_SetRawTempLimits</emphasis> with desired lower and upper temperature threshold limit values.<linebreak/>
</para>
</listitem><listitem><para>Finally call <emphasis>XMC_SCU_StartTempMeasurement</emphasis> to start temperature measurement.<linebreak/>
 </para>
</listitem></itemizedlist>
</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___s_c_u_1ga5851b97d5f0830ba58eecc516a488db0" kindref="member">XMC_SCU_StopTempMeasurement()</ref>, <ref refid="group___s_c_u_1ga3b00187ccda526f06802152ecf199fa4" kindref="member">XMC_SCU_StartTempMeasurement()</ref> <linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="972" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___s_c_u_1gacda844c46f28753e5698c9edf1da89c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___s_c_u_1gaff029b1575acc0712d494932d8ca6d60" kindref="member">XMC_SCU_STATUS_t</ref></type>
        <definition>XMC_SCU_STATUS_t XMC_SCU_SetTempHighLimit</definition>
        <argsstring>(uint32_t limit)</argsstring>
        <name>XMC_SCU_SetTempHighLimit</name>
        <param>
          <type>uint32_t</type>
          <declname>limit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>limit</parametername>
</parameternamelist>
<parameterdescription>
<para>Kelvin degree temperature higher compare limit in range [233,388] </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>XMC_SCU_STATUS_t status of limit installation</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Set higher temperature compare limit. A high temperature interrupt (SCU_IRQ1) is triggered if Tchip &gt; limit and the event and interrupt are enabled. Alternatively <ref refid="group___s_c_u_1ga5a0ad9c467d9549542d0f0275bae6314" kindref="member">XMC_SCU_HighTemperature()</ref> can be used to check the status. </para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___s_c_u_1ga5a0ad9c467d9549542d0f0275bae6314" kindref="member">XMC_SCU_HighTemperature()</ref><linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="949" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___s_c_u_1ga9075804b25596f546110b908fbcb7957" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___s_c_u_1gaff029b1575acc0712d494932d8ca6d60" kindref="member">XMC_SCU_STATUS_t</ref></type>
        <definition>XMC_SCU_STATUS_t XMC_SCU_SetTempLowLimit</definition>
        <argsstring>(uint32_t limit)</argsstring>
        <name>XMC_SCU_SetTempLowLimit</name>
        <param>
          <type>uint32_t</type>
          <declname>limit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>limit</parametername>
</parameternamelist>
<parameterdescription>
<para>Kelvin degree temperature lower compare limit in range [233,388] </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>XMC_SCU_STATUS_t status of limit installation</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Set lower temperature compare limit. A low temperature interrupt (SCU_IRQ1) is triggered if Tchip &lt; limit and the event and interrupt are enabled. Alternatively <ref refid="group___s_c_u_1ga8573534003ebf11fbaa49e331238fb86" kindref="member">XMC_SCU_LowTemperature()</ref> can be used to check the status. </para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___s_c_u_1ga8573534003ebf11fbaa49e331238fb86" kindref="member">XMC_SCU_LowTemperature()</ref><linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="935" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___s_c_u_1ga3b00187ccda526f06802152ecf199fa4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_SCU_StartTempMeasurement</definition>
        <argsstring>(void)</argsstring>
        <name>XMC_SCU_StartTempMeasurement</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>XMC_SCU_STATUS_t Status of starting the temperature measurement.<linebreak/>
 <bold>Range:</bold> Use type <ref refid="group___s_c_u_1gaff029b1575acc0712d494932d8ca6d60" kindref="member">XMC_SCU_STATUS_t</ref> to identify the result.<linebreak/>
 XMC_SCU_STATUS_OK- Temperature measurement started successfully.<linebreak/>
 Always returns the above status.</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Starts die temperature measurement using internal temperature sensor.<linebreak/>
<linebreak/>
The API, enables die temperature measurement and waits for about 10000 cycles until temperature measurement result is available on <emphasis>SCU_ANALOG-&gt;ANATSEMON</emphasis> bit fields.<linebreak/>
It is recommended to use following steps:<linebreak/>
<itemizedlist>
<listitem><para>Call <emphasis>XMC_SCU_StopTempMeasurement</emphasis> to stop temperature measurement if it was started previously.<linebreak/>
</para>
</listitem><listitem><para>Call <emphasis>XMC_SCU_SetRawTempLimits</emphasis> with desired lower and upper temperature threshold limit values if it is needed.<linebreak/>
</para>
</listitem><listitem><para>Call <emphasis>XMC_SCU_StartTempMeasurement</emphasis> to start temperature measurement.<linebreak/>
</para>
</listitem><listitem><para>Read die temperature value using <emphasis>XMC_SCU_GetTemperature</emphasis> API.<linebreak/>
</para>
</listitem></itemizedlist>
</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___s_c_u_1ga5851b97d5f0830ba58eecc516a488db0" kindref="member">XMC_SCU_StopTempMeasurement()</ref>, <ref refid="group___s_c_u_1ga0f600fa31f024ec9d8e0c17fc767772f" kindref="member">XMC_SCU_SetRawTempLimits()</ref>, <ref refid="group___s_c_u_1ga71c4f02eb6036f0d3a13af5e10bf56cc" kindref="member">XMC_SCU_GetTemperature()</ref> <linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="995" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___s_c_u_1ga5851b97d5f0830ba58eecc516a488db0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_SCU_StopTempMeasurement</definition>
        <argsstring>(void)</argsstring>
        <name>XMC_SCU_StopTempMeasurement</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Stops the die temperature measurement.<linebreak/>
<linebreak/>
Die temperature measurement is stopped by disabling the sensor using <emphasis>TSE_EN</emphasis> bit of <emphasis>ANATSECTRL</emphasis> register. </para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___s_c_u_1ga3b00187ccda526f06802152ecf199fa4" kindref="member">XMC_SCU_StartTempMeasurement()</ref>, <ref refid="group___s_c_u_1ga0f600fa31f024ec9d8e0c17fc767772f" kindref="member">XMC_SCU_SetRawTempLimits()</ref>, <ref refid="group___s_c_u_1ga71c4f02eb6036f0d3a13af5e10bf56cc" kindref="member">XMC_SCU_GetTemperature()</ref> <linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="1007" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___s_c_u_1gab79580e5b6decc4f6ecce14be9efe17d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_SCU_SupplyMonitorInit</definition>
        <argsstring>(const XMC_SCU_SUPPLYMONITOR_t *obj)</argsstring>
        <name>XMC_SCU_SupplyMonitorInit</name>
        <param>
          <type>const <ref refid="struct_x_m_c___s_c_u___s_u_p_p_l_y_m_o_n_i_t_o_r__t" kindref="compound">XMC_SCU_SUPPLYMONITOR_t</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to data structure consisting voltage monitoring block configuration.<linebreak/>
 <bold>Range:</bold> Use type <ref refid="struct_x_m_c___s_c_u___s_u_p_p_l_y_m_o_n_i_t_o_r__t" kindref="compound">XMC_SCU_SUPPLYMONITOR_t</ref> for detailed description of structure members.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Initializes power supply monitoring unit.<linebreak/>
<linebreak/>
Supply voltage monitoring block consist of 2 detectors namely External voltage detector (VDEL) and External brownout detector (BDE) in the EVR that are used to monitor the VDDP. <emphasis>VDEL</emphasis> detector compares the supply voltage against a pre-warning threshold voltage <emphasis>ext_supply_threshold</emphasis>. The threshold level is programmable via register <emphasis>ANAVDEL.VDEL_SELECT</emphasis>. An interrupt if enabled via <emphasis>enable_prewarning_int</emphasis>, will be triggered if a level below this threshold is detected and the flag, VDDPI, in SRRAW register bit is set. Similarly interrupts can be enabled for the events of VCLIP and prewarning, using the structure members, <emphasis>enable_vclip_int</emphasis> and <emphasis>enable_prewarning_int</emphasis>. The handlers for these interrupts have to be explicitly defined using the API <ref refid="group___s_c_u_1ga4ae03c6bcc3ccade266b46d84f7715e6" kindref="member">XMC_SCU_INTERRUPT_SetEventHandler()</ref>. </para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___s_c_u_1ga4ae03c6bcc3ccade266b46d84f7715e6" kindref="member">XMC_SCU_INTERRUPT_SetEventHandler()</ref><linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="921" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___s_c_u_1gaf60632360634a2f1be0f8af715c03dea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_SCU_UnlockProtectedBits</definition>
        <argsstring>(void)</argsstring>
        <name>XMC_SCU_UnlockProtectedBits</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Unlocks access to protected bit fields of the SCU.<linebreak/>
<linebreak/>
The bit protection scheme prevents changing selected register bits by unauthorized code. Bit protection scheme can be temporarily(for 32 MCLK cycles) disabled by writing 000000C0H to <emphasis>PASSWD</emphasis> register. By writing this value, the API is setting the <emphasis>MODE</emphasis> bit field to bit protection disabled state. The API waits for the protection to be disabled after changing the <emphasis>MODE</emphasis>.<linebreak/>
User can change the values of the protected bit fields within 32 MCLK cycles. After 32 MCLK cycles the lock will be enabled automatically. List of Protected Register Bit Fields are mentioned below. <linebreak/>
<table rows="7" cols="2"><row>
<entry thead="no"><para><emphasis>Register</emphasis>  </para>
</entry><entry thead="no"><para><emphasis>Bit</emphasis> fields  </para>
</entry></row>
<row>
<entry thead="no"><para>SCU_CLKCR  </para>
</entry><entry thead="no"><para>FDIV, IDIV, PCLKSEL, RTCLKSEL  </para>
</entry></row>
<row>
<entry thead="no"><para>SCU_CGATSET0  </para>
</entry><entry thead="no"><para>All bits  </para>
</entry></row>
<row>
<entry thead="no"><para>SCU_CGATCLR0  </para>
</entry><entry thead="no"><para>All bits  </para>
</entry></row>
<row>
<entry thead="no"><para>SCU_ANAOFFSET  </para>
</entry><entry thead="no"><para>ADJL_OFFSET  </para>
</entry></row>
<row>
<entry thead="no"><para>VADC0_ACCPROT0  </para>
</entry><entry thead="no"><para>All bits  </para>
</entry></row>
<row>
<entry thead="no"><para>VADC0_ACCPROT1  </para>
</entry><entry thead="no"><para>All bits  </para>
</entry></row>
</table>
</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___s_c_u_1gad9ba5dce219ea8390f4aa9f7bc46aafe" kindref="member">XMC_SCU_LockProtectedBits()</ref> <linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="900" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="group___s_c_u_1gafb46d68d66d9b23bc878c7e06696c72a" prot="public" static="no">
        <name>XMC_BMI_ADDR</name>
        <initializer>(0x10000e00U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Boot Mode Index (BMI) address holding information about start-up mode and debug configuration of the device. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="196" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" bodystart="196" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_c_u_1ga8eda1a0078fb1dc13593680dcc4c1886" prot="public" static="no">
        <name>XMC_SCU_BMI_CANCLK_DCO1</name>
        <initializer>(0U &lt;&lt; 11)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Synchronous CAN clock via internal oscillator (DCO1) with enabled trimming via external reference is selected </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="192" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" bodystart="192" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_c_u_1ga7cb50fbefee333f0aa9bb1a5d510d6e7" prot="public" static="no">
        <name>XMC_SCU_BMI_CANCLK_OSCHP</name>
        <initializer>(1U &lt;&lt; 11)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Synchronous CAN clock via external oscillator (OSC_HP) is selected </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="193" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" bodystart="193" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_c_u_1ga02558dc388806845c40f83ba2f8f87cd" prot="public" static="no">
        <name>XMC_SCU_BMI_DAPDIS_CHANNEL_0</name>
        <initializer>(0U &lt;&lt; 9)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>SWD/SPD_0 pin is selected </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="188" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" bodystart="188" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_c_u_1ga4863740cd6d84afcfc0d01685f6d3afd" prot="public" static="no">
        <name>XMC_SCU_BMI_DAPDIS_CHANNEL_1</name>
        <initializer>(1U &lt;&lt; 9)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>SWD/SPD_1 pin is selected </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="189" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" bodystart="189" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_c_u_1gaf08ce8782ed3f2501f91d39847e55086" prot="public" static="no">
        <name>XMC_SCU_BMI_DAPTYP_SPD</name>
        <initializer>(1U &lt;&lt; 8)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Single pin debug (SPD) interface is selected </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="186" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" bodystart="186" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_c_u_1ga8b090323ebddb3615f33e806b23b1d02" prot="public" static="no">
        <name>XMC_SCU_BMI_DAPTYP_SWD</name>
        <initializer>(0U &lt;&lt; 8)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Serial wire debug (SWD) interface is selected </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="185" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" bodystart="185" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_c_u_1ga7f00e1b1262b3eab4b98353a06673c3b" prot="public" static="no">
        <name>XMC_SCU_BMI_HWCFG_ASC_BSL</name>
        <initializer>(0x0040U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>ASC Bootstrap Loader Start-up Mode </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="172" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" bodystart="172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_c_u_1ga0d1b90b10b5672ffe1a3b38f7bbc81b8" prot="public" static="no">
        <name>XMC_SCU_BMI_HWCFG_ASC_BSLTO</name>
        <initializer>(0x0050U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>ASC BSL Start-up Mode with time-out </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="177" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" bodystart="177" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_c_u_1gaccc3853c66324f7c0f2ff6e5c260d38d" prot="public" static="no">
        <name>XMC_SCU_BMI_HWCFG_CAN_BSL</name>
        <initializer>(0x0000U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CAN Bootstrap Loader Start-up Mode </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="167" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" bodystart="167" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_c_u_1ga2218430a09e0824a83c23c626ed1668b" prot="public" static="no">
        <name>XMC_SCU_BMI_HWCFG_CAN_BSLTO</name>
        <initializer>(0x0010U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CAN Bootstrap Loader Start-up Mode with time-out </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="168" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" bodystart="168" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_c_u_1ga56ed923f3d9fe179cec0b4c187d0d4c6" prot="public" static="no">
        <name>XMC_SCU_BMI_HWCFG_PINDIS</name>
        <initializer>(0x0080U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Boot Configuration Type Selection, Boot from BMI is selected </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="182" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" bodystart="182" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_c_u_1gacf41aeb0d9c158e1ae9bd34906ddab27" prot="public" static="no">
        <name>XMC_SCU_BMI_HWCFG_SBSL</name>
        <initializer>(0x007AU)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Secure Bootstrap Loader Start-up Mode over ASC </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="179" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" bodystart="179" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_c_u_1ga6ad45fc801302e2ce9583aba0ffe58e0" prot="public" static="no">
        <name>XMC_SCU_BMI_HWCFG_SBSL_CANOPEN</name>
        <initializer>(0x0020U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Secure Bootstrap Loader Start-up Mode over CANopen </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="169" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" bodystart="169" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_c_u_1ga88de483723947ca91ce5d5bfd1b89a51" prot="public" static="no">
        <name>XMC_SCU_BMI_HWCFG_SSC_BSL</name>
        <initializer>(0x0048U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>SSC Bootstrap Loader Start-up Mode </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="176" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" bodystart="176" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_c_u_1ga442aa39ffc3bcc290964bf9c04a558ef" prot="public" static="no">
        <name>XMC_SCU_BMI_HWCFG_SSC_BSLTO</name>
        <initializer>(0x0058U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>SSC BSL Start-up Mode with time-out </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="178" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" bodystart="178" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_c_u_1ga397fae0a8dfbdfb975010cbb94a8bb42" prot="public" static="no">
        <name>XMC_SCU_BMI_HWCFG_UMD</name>
        <initializer>(0x0043U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>User Start-up Mode with debug enabled </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="174" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" bodystart="174" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_c_u_1gaf42b9eea5286aec14668d952527be70e" prot="public" static="no">
        <name>XMC_SCU_BMI_HWCFG_UMHAR</name>
        <initializer>(0x0047U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>User Start-up Mode with debug enabled and halt after reset (HAR) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="175" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" bodystart="175" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_c_u_1ga3ab345ab24ec81394d45deeb874f3d5d" prot="public" static="no">
        <name>XMC_SCU_BMI_HWCFG_UPM</name>
        <initializer>(0x0041U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>User productive Start-up Mode </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="173" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" bodystart="173" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_c_u_1ga308e4ef91ac83cd186f90da9b9a23daf" prot="public" static="no">
        <name>XMC_SCU_INTERRUPT_EVENT_ACMP0</name>
        <initializer>SCU_INTERRUPT_SRMSK_ACMP0I_Msk</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Analog comparator-0 output event. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="119" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_c_u_1ga4f74e12714dc4a7afc11a826de45a46c" prot="public" static="no">
        <name>XMC_SCU_INTERRUPT_EVENT_ACMP1</name>
        <initializer>SCU_INTERRUPT_SRMSK_ACMP1I_Msk</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Analog comparator-1 output event. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="120" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_c_u_1gafa904d78eebc226dddec7a80bbadfb09" prot="public" static="no">
        <name>XMC_SCU_INTERRUPT_EVENT_ACMP2</name>
        <initializer>SCU_INTERRUPT_SRMSK_ACMP2I_Msk</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Analog comparator-2 output event. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="121" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_c_u_1gaf8cb2163ea141171ed94de73943ba2b4" prot="public" static="no">
        <name>XMC_SCU_INTERRUPT_EVENT_ACMP3</name>
        <initializer>(((int64_t)SCU_INTERRUPT_SRMSK1_ACMP3I_Msk) &lt;&lt; 32U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Analog comparator-3 output event. <simplesect kind="note"><para>Only available for XMC1400 series </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="123" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_c_u_1gae86b268dee92492bd26b2560ba438f51" prot="public" static="no">
        <name>XMC_SCU_INTERRUPT_EVENT_DCO1_OUT_SYNC</name>
        <initializer>(((int64_t)SCU_INTERRUPT_SRMSK1_DCO1OFSI_Msk) &lt;&lt; 32U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>DCO1 Out of SYNC Event. <simplesect kind="note"><para>Only available for XMC1400 series </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="160" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" bodystart="160" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_c_u_1ga933407ad8d21c4eaabf846df522d3a22" prot="public" static="no">
        <name>XMC_SCU_INTERRUPT_EVENT_FLASH_COMPLETED</name>
        <initializer>SCU_INTERRUPT_SRCLR_FLCMPLTI_Msk</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Flash operation completion event. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="144" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_c_u_1ga9069357593905c91623a208725b60311" prot="public" static="no">
        <name>XMC_SCU_INTERRUPT_EVENT_FLASH_ERROR</name>
        <initializer>SCU_INTERRUPT_SRMSK_FLECC2I_Msk</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Flash ECC double bit error event. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="143" column="10" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_c_u_1gac94bcfa909e35d08abf33f3c7250ba34" prot="public" static="no">
        <name>XMC_SCU_INTERRUPT_EVENT_LOCI</name>
        <initializer>SCU_INTERRUPT_SRMSK_LOCI_Msk</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Loss of clock event. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="137" column="10" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_c_u_1gad852bbb36333f51cda1a932b6dc40f6b" prot="public" static="no">
        <name>XMC_SCU_INTERRUPT_EVENT_LOSS_EXT_CLOCK</name>
        <initializer>(((int64_t)SCU_INTERRUPT_SRMSK1_LOECI_Msk) &lt;&lt; 32U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Loss of external OSC_HP clock event. <simplesect kind="note"><para>Only available for XMC1400 series </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="159" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_c_u_1ga642c29068f2e6bdd74e887be8546e7a3" prot="public" static="no">
        <name>XMC_SCU_INTERRUPT_EVENT_ORC0</name>
        <initializer>SCU_INTERRUPT_SRMSK_ORC0I_Msk</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Out of range comparator-0 event. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="128" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_c_u_1gaec2d8151a9de33b25883afb34fdd301a" prot="public" static="no">
        <name>XMC_SCU_INTERRUPT_EVENT_ORC1</name>
        <initializer>SCU_INTERRUPT_SRMSK_ORC1I_Msk</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Out of range comparator-1 event. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="129" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_c_u_1gacd248e69d02615043dd0c0d1621f234e" prot="public" static="no">
        <name>XMC_SCU_INTERRUPT_EVENT_ORC2</name>
        <initializer>SCU_INTERRUPT_SRMSK_ORC2I_Msk</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Out of range comparator-2 event. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="130" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" bodystart="130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_c_u_1gaca42ac1f2af14eeb54dcede45105957f" prot="public" static="no">
        <name>XMC_SCU_INTERRUPT_EVENT_ORC3</name>
        <initializer>SCU_INTERRUPT_SRMSK_ORC3I_Msk</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Out of range comparator-3 event. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="131" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_c_u_1gab8a5050ecb73f339481656e2ae74d2f4" prot="public" static="no">
        <name>XMC_SCU_INTERRUPT_EVENT_ORC4</name>
        <initializer>SCU_INTERRUPT_SRMSK_ORC4I_Msk</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Out of range comparator-4 event. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="132" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" bodystart="132" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_c_u_1ga1b28472219d9903bc4eab24c3909481f" prot="public" static="no">
        <name>XMC_SCU_INTERRUPT_EVENT_ORC5</name>
        <initializer>SCU_INTERRUPT_SRMSK_ORC5I_Msk</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Out of range comparator-5 event. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="133" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" bodystart="133" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_c_u_1ga5d53254ae3d670df28ddba679a46b008" prot="public" static="no">
        <name>XMC_SCU_INTERRUPT_EVENT_ORC6</name>
        <initializer>SCU_INTERRUPT_SRMSK_ORC6I_Msk</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Out of range comparator-6 event. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="134" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" bodystart="134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_c_u_1gad73b4f7e40c5a5fa6b14ed3122870739" prot="public" static="no">
        <name>XMC_SCU_INTERRUPT_EVENT_ORC7</name>
        <initializer>SCU_INTERRUPT_SRMSK_ORC7I_Msk</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Out of range comparator-7 event. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="135" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" bodystart="135" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_c_u_1ga866288d67356b65d98698b1a56fbe223" prot="public" static="no">
        <name>XMC_SCU_INTERRUPT_EVENT_PEMCAN</name>
        <initializer>(((int64_t)SCU_INTERRUPT_SRMSK1_PEMCI_Msk) &lt;&lt; 32U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>MultiCAN SRAM Parity Error Event. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="156" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_c_u_1ga49c39fdf288796b8a9a5ac8d026b8fca" prot="public" static="no">
        <name>XMC_SCU_INTERRUPT_EVENT_PESRAM</name>
        <initializer>SCU_INTERRUPT_SRMSK_PESRAMI_Msk</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>PSRAM Parity error event. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="138" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_c_u_1ga76ed3fc3428042a020278b68b29fcef3" prot="public" static="no">
        <name>XMC_SCU_INTERRUPT_EVENT_PEUSIC0</name>
        <initializer>SCU_INTERRUPT_SRMSK_PEU0I_Msk</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>USIC0 Parity error event. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="139" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_c_u_1ga06cec44b1ef45bd7456fa076cfc7fa4f" prot="public" static="no">
        <name>XMC_SCU_INTERRUPT_EVENT_PEUSIC1</name>
        <initializer>(((int64_t)SCU_INTERRUPT_SRMSK1_PEU1I_Msk) &lt;&lt; 32U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>USIC1 Parity error event. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="141" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_c_u_1gab2de9ba5dfa78e350e552cc36529ad22" prot="public" static="no">
        <name>XMC_SCU_INTERRUPT_EVENT_RTC_ALARM</name>
        <initializer>SCU_INTERRUPT_SRCLR_AI_Msk</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>RTC alarm event. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="116" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_c_u_1ga2b86e6490dd0310069274f042ef47625" prot="public" static="no">
        <name>XMC_SCU_INTERRUPT_EVENT_RTC_PERIODIC</name>
        <initializer>SCU_INTERRUPT_SRCLR_PI_Msk</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>RTC periodic event. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="115" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_c_u_1ga33dc60f1ff3285386633b53623dca92b" prot="public" static="no">
        <name>XMC_SCU_INTERRUPT_EVENT_RTCATIM0_UPDATED</name>
        <initializer>SCU_INTERRUPT_SRMSK_RTC_ATIM0_Msk</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>RTCATIM0 register update event. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="148" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" bodystart="148" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_c_u_1ga19a78d87581dbbf3db6f3f23ee4db98e" prot="public" static="no">
        <name>XMC_SCU_INTERRUPT_EVENT_RTCATIM1_UPDATED</name>
        <initializer>SCU_INTERRUPT_SRMSK_RTC_ATIM1_Msk</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>RTCATIM1 register update event. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="149" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" bodystart="149" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_c_u_1ga07039df071591f92674bdd82fc735030" prot="public" static="no">
        <name>XMC_SCU_INTERRUPT_EVENT_RTCCTR_UPDATED</name>
        <initializer>SCU_INTERRUPT_SRMSK_RTC_CTR_Msk</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>RTCCTR register update event. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="147" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_c_u_1ga34acc61e5b01e7f6b4ea1d7a9a9195c9" prot="public" static="no">
        <name>XMC_SCU_INTERRUPT_EVENT_RTCTIM0_UPDATED</name>
        <initializer>SCU_INTERRUPT_SRMSK_RTC_TIM0_Msk</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>RTCTIM0 register update event. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="150" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" bodystart="150" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_c_u_1ga7fcaa73f61c18ec8237e076da6c3bc0e" prot="public" static="no">
        <name>XMC_SCU_INTERRUPT_EVENT_RTCTIM1_UPDATED</name>
        <initializer>SCU_INTERRUPT_SRMSK_RTC_TIM1_Msk</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>RTCTIM1 register update event. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="151" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_c_u_1gac8ff14f167b6080d5eb8c0ea9b417502" prot="public" static="no">
        <name>XMC_SCU_INTERRUPT_EVENT_STDBYCLKFAIL</name>
        <initializer>SCU_INTERRUPT_SRMSK_SBYCLKFI_Msk</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Standby clock failure event. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="146" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_c_u_1gabed038de303f619ac3bfd3aa6371c4bd" prot="public" static="no">
        <name>XMC_SCU_INTERRUPT_EVENT_TSE_DONE</name>
        <initializer>SCU_INTERRUPT_SRMSK_TSE_DONE_Msk</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Temperature measurement Completion event. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="152" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" bodystart="152" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_c_u_1gaef196ed92cf8f7cee093c9307dc047c6" prot="public" static="no">
        <name>XMC_SCU_INTERRUPT_EVENT_TSE_HIGH</name>
        <initializer>SCU_INTERRUPT_SRMSK_TSE_HIGH_Msk</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Temperature too high event. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="153" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_c_u_1ga0334f0b6343f5e9843663247c7a03292" prot="public" static="no">
        <name>XMC_SCU_INTERRUPT_EVENT_TSE_LOW</name>
        <initializer>SCU_INTERRUPT_SRMSK_TSE_LOW_Msk</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Temperature too low event. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="154" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" bodystart="154" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_c_u_1ga0d1ea44665421053f203a6c2b8d65989" prot="public" static="no">
        <name>XMC_SCU_INTERRUPT_EVENT_VCLIP</name>
        <initializer>SCU_INTERRUPT_SRMSK_VCLIPI_Msk</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>VCLIP event. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="145" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" bodystart="145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_c_u_1ga492c0bffe4cfdf7320ea164ee8789c7c" prot="public" static="no">
        <name>XMC_SCU_INTERRUPT_EVENT_VDDPI</name>
        <initializer>SCU_INTERRUPT_SRMSK_VDDPI_Msk</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>VDDP pre-warning event. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="117" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_c_u_1ga8e4ab0550fde6e69b1e3612182190875" prot="public" static="no">
        <name>XMC_SCU_INTERRUPT_EVENT_VDROP</name>
        <initializer>SCU_INTERRUPT_SRMSK_VDROPI_Msk</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>VDROP event. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="126" column="11" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_c_u_1ga61bedea1698b39bbd1fa3d2cd79a9f33" prot="public" static="no">
        <name>XMC_SCU_INTERRUPT_EVENT_WDT_WARN</name>
        <initializer>SCU_INTERRUPT_SRMSK_PRWARN_Msk</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>WDT pre-warning event. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" line="114" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc1_scu.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>System Control Unit(SCU) driver for XMC microcontroller family. </para>
    </briefdescription>
    <detaileddescription>
<para>System control unit is the SoC power, reset and a clock manager with additional responsibility of providing system stability protection and other auxiliary functions.<linebreak/>
 SCU provides the following features,<orderedlist>
<listitem><para>Power control</para>
</listitem><listitem><para>Reset control</para>
</listitem><listitem><para>Clock control</para>
</listitem><listitem><para>Miscellaneous control(boot mode, system interrupts etc.)<linebreak/>
<linebreak/>
</para>
</listitem></orderedlist>
</para>
<para>The SCU driver is divided in to clock control logic, reset control logic, system interrupt control logic and miscellaneous control logic.<linebreak/>
</para>
<para>Clock driver features:<orderedlist>
<listitem><para>Allows clock configuration using the structure <ref refid="struct_x_m_c___s_c_u___c_l_o_c_k___c_o_n_f_i_g__t" kindref="compound">XMC_SCU_CLOCK_CONFIG_t</ref> and API <ref refid="group___s_c_u_1ga08c337e8a728604e7eb54dff78ae2d9d" kindref="member">XMC_SCU_CLOCK_Init()</ref></para>
</listitem><listitem><para>Allows selection of peripheral clock frequency, <ref refid="group___s_c_u_1ga6103bc92c9cd326903ee4e6b2e1d055d" kindref="member">XMC_SCU_CLOCK_SetFastPeripheralClockSource()</ref></para>
</listitem><listitem><para>Provides API to get the peripheral clock frequency, <ref refid="group___s_c_u_1ga4269bd27311f46c895b7ca474236d71c" kindref="member">XMC_SCU_CLOCK_GetFastPeripheralClockFrequency()</ref></para>
</listitem></orderedlist>
</para>
<para>Reset driver features:<orderedlist>
<listitem><para>Allows to trigger device reset <ref refid="group___s_c_u_1ga77c6ab2add788e4bd31eb563e0f8f8b1" kindref="member">XMC_SCU_RESET_AssertMasterReset()</ref></para>
</listitem><listitem><para>Allows to configure multiple sources for reset, <ref refid="group___s_c_u_1gaa4dbbfd3a9346cc7eb84bda46d084607" kindref="member">XMC_SCU_RESET_EnableResetRequest()</ref> <linebreak/>
</para>
</listitem></orderedlist>
</para>
<para>Interrupt driver features:<orderedlist>
<listitem><para>Provides APIs for enabling/ disabling interrupt event generation <ref refid="group___s_c_u_1gab4cfb9545d1e561e1f24aeaa69af821c" kindref="member">XMC_SCU_INTERRUPT_EnableEvent()</ref>, <ref refid="group___s_c_u_1gaa814678729d6b7f41c558e768ba8ecd4" kindref="member">XMC_SCU_INTERRUPT_DisableEvent()</ref></para>
</listitem><listitem><para>Provides API for registering callback function for events <ref refid="group___s_c_u_1ga4ae03c6bcc3ccade266b46d84f7715e6" kindref="member">XMC_SCU_INTERRUPT_SetEventHandler()</ref><linebreak/>
</para>
</listitem></orderedlist>
</para>
<para>Miscellaneous features:<orderedlist>
<listitem><para>Allows to trigger multiple capture compare unit(CCU) channels to be started together <ref refid="group___s_c_u_1gac10ca2cd72477476ffe38a4818bcae4b" kindref="member">XMC_SCU_SetCcuTriggerHigh()</ref></para>
</listitem><listitem><para>Enables configuration of die temperature sensor <ref refid="group___s_c_u_1ga3b00187ccda526f06802152ecf199fa4" kindref="member">XMC_SCU_StartTempMeasurement()</ref>, <ref refid="group___s_c_u_1ga0f600fa31f024ec9d8e0c17fc767772f" kindref="member">XMC_SCU_SetRawTempLimits()</ref></para>
</listitem><listitem><para>Allows configuring supply monitor unit using the structure <ref refid="struct_x_m_c___s_c_u___s_u_p_p_l_y_m_o_n_i_t_o_r__t" kindref="compound">XMC_SCU_SUPPLYMONITOR_t</ref> and API <ref refid="group___s_c_u_1gab79580e5b6decc4f6ecce14be9efe17d" kindref="member">XMC_SCU_SupplyMonitorInit()</ref></para>
</listitem><listitem><para>Allows handling of protected bits <ref refid="group___s_c_u_1gad9ba5dce219ea8390f4aa9f7bc46aafe" kindref="member">XMC_SCU_LockProtectedBits()</ref>, <ref refid="group___s_c_u_1gaf60632360634a2f1be0f8af715c03dea" kindref="member">XMC_SCU_UnlockProtectedBits()</ref><linebreak/>
 </para>
</listitem></orderedlist>
</para>
    </detaileddescription>
  </compounddef>
</doxygen>
