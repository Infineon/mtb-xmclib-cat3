<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="group___c_c_u4" kind="group">
    <compoundname>CCU4</compoundname>
    <title>Capture Compare Unit 4(CCU4)</title>
    <innerclass refid="struct_x_m_c___c_c_u4___s_l_i_c_e___c_a_p_t_u_r_e___c_o_n_f_i_g__t" prot="public">XMC_CCU4_SLICE_CAPTURE_CONFIG_t</innerclass>
    <innerclass refid="struct_x_m_c___c_c_u4___s_l_i_c_e___c_o_m_p_a_r_e___c_o_n_f_i_g__t" prot="public">XMC_CCU4_SLICE_COMPARE_CONFIG_t</innerclass>
    <innerclass refid="struct_x_m_c___c_c_u4___s_l_i_c_e___e_v_e_n_t___c_o_n_f_i_g__t" prot="public">XMC_CCU4_SLICE_EVENT_CONFIG_t</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group___c_c_u4_1gaf5e64519972ca9ee2c9b590eba7c041b" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_CCU4_CLOCK_t</name>
        <enumvalue id="group___c_c_u4_1ggaf5e64519972ca9ee2c9b590eba7c041ba4deb5b0622679b85cd70d22c4837c06c" prot="public">
          <name>XMC_CCU4_CLOCK_SCU</name>
          <initializer>= 0U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Select the fCCU as the clock </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1ggaf5e64519972ca9ee2c9b590eba7c041ba43d3d2e51babff4ad846f917908a6643" prot="public">
          <name>XMC_CCU4_CLOCK_EXTERNAL_A</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>External clock-A </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1ggaf5e64519972ca9ee2c9b590eba7c041baa674f73ca657b4db6e9e7ba04eb0a705" prot="public">
          <name>XMC_CCU4_CLOCK_EXTERNAL_B</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>External clock-B </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1ggaf5e64519972ca9ee2c9b590eba7c041bad80e3f15924161536182512e77d055c1" prot="public">
          <name>XMC_CCU4_CLOCK_EXTERNAL_C</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>External clock-C </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CCU4 module clock </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="209" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" bodystart="208" bodyend="214"/>
      </memberdef>
      <memberdef kind="enum" id="group___c_c_u4_1ga9a88d5f27f3d04acf49beae187238299" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_t</name>
        <enumvalue id="group___c_c_u4_1gga9a88d5f27f3d04acf49beae187238299acb4554396269817e2613cf9834438676" prot="public">
          <name>XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE0</name>
          <initializer>= (uint32_t)0x4000000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Shadow transfer through software only for slice 0 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1gga9a88d5f27f3d04acf49beae187238299a544b030bf4838c41e6aaa83cc6b4f19c" prot="public">
          <name>XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE0</name>
          <initializer>= (uint32_t)0x4000400</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Shadow transfer through software and hardware for slice 0 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1gga9a88d5f27f3d04acf49beae187238299a4f300cfe0a4ed8fa98482d6c1855f3cc" prot="public">
          <name>XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE1</name>
          <initializer>= (uint32_t)0x8000000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Shadow transfer through software only for slice 1 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1gga9a88d5f27f3d04acf49beae187238299a26601e9cf361a3654835d6478218b410" prot="public">
          <name>XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE1</name>
          <initializer>= (uint32_t)0x8000800</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Shadow transfer through software and hardware for slice 1 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1gga9a88d5f27f3d04acf49beae187238299af2529181f7176bf8e10abd67dffa5760" prot="public">
          <name>XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE2</name>
          <initializer>= (uint32_t)0x10000000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Shadow transfer through software only for slice 2 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1gga9a88d5f27f3d04acf49beae187238299a611bad68cc4433cd957d63284a4f71aa" prot="public">
          <name>XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE2</name>
          <initializer>= (uint32_t)0x10001000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Shadow transfer through software and hardware for slice 2 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1gga9a88d5f27f3d04acf49beae187238299ae0778e7e9ec14a0a4159bdd853687ad8" prot="public">
          <name>XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE3</name>
          <initializer>= (uint32_t)0x20000000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Shadow transfer through software only for slice 3 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1gga9a88d5f27f3d04acf49beae187238299a53dabf599c7711ee6a3f6d314104e13b" prot="public">
          <name>XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE3</name>
          <initializer>= (uint32_t)0x20002000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Shadow transfer through software and hardware for slice 3 </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CCU4 set the shadow transfer type for multichannel mode </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="220" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" bodystart="219" bodyend="237"/>
      </memberdef>
      <memberdef kind="enum" id="group___c_c_u4_1ga8d2c64420abee84dccce68e68b942e67" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_CCU4_SHADOW_TRANSFER_t</name>
        <enumvalue id="group___c_c_u4_1gga8d2c64420abee84dccce68e68b942e67a5f7f3e0bb3a17300679f5d595fc91aa8" prot="public">
          <name>XMC_CCU4_SHADOW_TRANSFER_SLICE_0</name>
          <initializer>= CCU4_GCSS_S0SE_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Transfer Period, Compare and Passive Level shadow register values to actual registers for SLICE-0 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1gga8d2c64420abee84dccce68e68b942e67aa90b1cb2a4e67094fbd409f5cc2cd405" prot="public">
          <name>XMC_CCU4_SHADOW_TRANSFER_DITHER_SLICE_0</name>
          <initializer>= CCU4_GCSS_S0DSE_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Transfer Dither compare shadow register value to actual register for SLICE-0 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1gga8d2c64420abee84dccce68e68b942e67a645b1781c3eb75cb91412115594506c6" prot="public">
          <name>XMC_CCU4_SHADOW_TRANSFER_PRESCALER_SLICE_0</name>
          <initializer>= CCU4_GCSS_S0PSE_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Transfer Prescaler shadow register value to actual register for SLICE-0 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1gga8d2c64420abee84dccce68e68b942e67a9a7680934bebba88c31eaa8511413119" prot="public">
          <name>XMC_CCU4_SHADOW_TRANSFER_SLICE_1</name>
          <initializer>= CCU4_GCSS_S1SE_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Transfer Period, Compare and Passive Level shadow register values to actual registers for SLICE-1 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1gga8d2c64420abee84dccce68e68b942e67a50b8ff29688ee7cd0bdee36df48964d1" prot="public">
          <name>XMC_CCU4_SHADOW_TRANSFER_DITHER_SLICE_1</name>
          <initializer>= CCU4_GCSS_S1DSE_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Transfer Dither compare shadow register value to actual registers for SLICE-1 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1gga8d2c64420abee84dccce68e68b942e67aa6b353194a15b689bf278d5096111cb7" prot="public">
          <name>XMC_CCU4_SHADOW_TRANSFER_PRESCALER_SLICE_1</name>
          <initializer>= CCU4_GCSS_S1PSE_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Transfer Prescaler shadow register value to actual register for SLICE-1 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1gga8d2c64420abee84dccce68e68b942e67a4c2eddfcf2a9aededba31fb616d81f6a" prot="public">
          <name>XMC_CCU4_SHADOW_TRANSFER_SLICE_2</name>
          <initializer>= CCU4_GCSS_S2SE_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Transfer Period, Compare and Passive Level shadow register values to actual registers for SLICE-2 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1gga8d2c64420abee84dccce68e68b942e67a18d9d9b0d43768a80257e6d09d8e269a" prot="public">
          <name>XMC_CCU4_SHADOW_TRANSFER_DITHER_SLICE_2</name>
          <initializer>= CCU4_GCSS_S2DSE_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Transfer Dither compare shadow register value to actual register for SLICE-2 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1gga8d2c64420abee84dccce68e68b942e67aab602460197ddb047b0669d50eb07438" prot="public">
          <name>XMC_CCU4_SHADOW_TRANSFER_PRESCALER_SLICE_2</name>
          <initializer>= CCU4_GCSS_S2PSE_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Transfer Prescaler shadow register value to actual register for SLICE-2 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1gga8d2c64420abee84dccce68e68b942e67aba2ebd26d8e8c60faaadc932a235f55d" prot="public">
          <name>XMC_CCU4_SHADOW_TRANSFER_SLICE_3</name>
          <initializer>= CCU4_GCSS_S3SE_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Transfer Period, Compare and Passive Level shadow register values to actual registers for SLICE-3 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1gga8d2c64420abee84dccce68e68b942e67a9a4e23045766ee28fcdada89fb690d2f" prot="public">
          <name>XMC_CCU4_SHADOW_TRANSFER_DITHER_SLICE_3</name>
          <initializer>= CCU4_GCSS_S3DSE_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Transfer Dither compare shadow register value to actual register for SLICE-3 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1gga8d2c64420abee84dccce68e68b942e67a7f7c5fe0b3384b219430d815a0f41bab" prot="public">
          <name>XMC_CCU4_SHADOW_TRANSFER_PRESCALER_SLICE_3</name>
          <initializer>= CCU4_GCSS_S3PSE_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Transfer Prescaler shadow register value to actual register for SLICE-3 </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Slice shadow transfer options. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="505" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" bodystart="504" bodyend="534"/>
      </memberdef>
      <memberdef kind="enum" id="group___c_c_u4_1ga2216adfcbbc93dde340169582ef17ff6" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_CCU4_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_t</name>
        <enumvalue id="group___c_c_u4_1gga2216adfcbbc93dde340169582ef17ff6a26b5652444293e1123ca1daa4256779c" prot="public">
          <name>XMC_CCU4_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_PERIOD_SHADOW</name>
          <initializer>= CCU4_CC4_STC_ASPC_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Automatic Shadow Transfer request when writing into Period Shadow Register </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1gga2216adfcbbc93dde340169582ef17ff6aeaf05428ff334a16cfcc652eb2ce6e39" prot="public">
          <name>XMC_CCU4_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_COMPARE_SHADOW</name>
          <initializer>= CCU4_CC4_STC_ASCC_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Automatic Shadow transfer request when writing into Compare Shadow Register </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1gga2216adfcbbc93dde340169582ef17ff6af5b97b18e485a8c00dfaee23a1e60763" prot="public">
          <name>XMC_CCU4_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_PASSIVE_LEVEL</name>
          <initializer>= CCU4_CC4_STC_ASLC_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Automatic Shadow transfer request when writing into Passive Level Register </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1gga2216adfcbbc93dde340169582ef17ff6a1dd75a1607e1060f9cc0cbba49e129a2" prot="public">
          <name>XMC_CCU4_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_DITHER_SHADOW</name>
          <initializer>= CCU4_CC4_STC_ASDC_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Automatic Shadow transfer request when writing into Dither Shadow Register </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1gga2216adfcbbc93dde340169582ef17ff6a598a5a3e0bb4976dcd6e0b379263dfaf" prot="public">
          <name>XMC_CCU4_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_FLOATING_PRESCALER_SHADOW</name>
          <initializer>= CCU4_CC4_STC_ASFC_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Automatic Shadow transfer request when writing into Floating Prescaler Shadow register </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Automatic Shadow Transfer request when writing into shadow register <simplesect kind="note"><para>Only available for XMC1400 series </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="579" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" bodystart="578" bodyend="599"/>
      </memberdef>
      <memberdef kind="enum" id="group___c_c_u4_1gab5c05e6fda34ac046c12ec25ef405a3d" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_CCU4_SLICE_CAP_REG_SET_t</name>
        <enumvalue id="group___c_c_u4_1ggab5c05e6fda34ac046c12ec25ef405a3da10fbc9596fdd42ae042ec67e0c4ded2f" prot="public">
          <name>XMC_CCU4_SLICE_CAP_REG_SET_LOW</name>
          <initializer>= 0U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Capture register-0, Capture register-1 used </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1ggab5c05e6fda34ac046c12ec25ef405a3daca9cb79415d453134c3de65838dd2697" prot="public">
          <name>XMC_CCU4_SLICE_CAP_REG_SET_HIGH</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Capture register-2, Capture register-3 used </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Capture mode register sets </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="280" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" bodystart="279" bodyend="283"/>
      </memberdef>
      <memberdef kind="enum" id="group___c_c_u4_1gaed08e3fd07e061ccb45377415a958c6a" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_CCU4_SLICE_END_MODE_t</name>
        <enumvalue id="group___c_c_u4_1ggaed08e3fd07e061ccb45377415a958c6aacf0acaf0128b4de22ca78b183b4cf043" prot="public">
          <name>XMC_CCU4_SLICE_END_MODE_TIMER_STOP</name>
          <initializer>= 0U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Stops the timer, without clearing TIMER register </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1ggaed08e3fd07e061ccb45377415a958c6aaacbae5ca775f3bda91af179b815691b0" prot="public">
          <name>XMC_CCU4_SLICE_END_MODE_TIMER_CLEAR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Without stopping timer, clears the TIMER register </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1ggaed08e3fd07e061ccb45377415a958c6aad4cc5a2fe376cf3fe7cd5a1396c286f3" prot="public">
          <name>XMC_CCU4_SLICE_END_MODE_TIMER_STOP_CLEAR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Stops the timer and clears the TIMER register </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Actions that can be performed upon detection of an external Timer STOP event </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="402" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" bodystart="401" bodyend="406"/>
      </memberdef>
      <memberdef kind="enum" id="group___c_c_u4_1ga0d83f7d7d27ced4fbc071540f942cbdd" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY_t</name>
        <enumvalue id="group___c_c_u4_1gga0d83f7d7d27ced4fbc071540f942cbdda2fef49c1f94a1445b4f6ac7d2079020a" prot="public">
          <name>XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY_NONE</name>
          <initializer>= 0U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>None </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1gga0d83f7d7d27ced4fbc071540f942cbdda05cc676a0d88c9c69de0115e81f57837" prot="public">
          <name>XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY_RISING_EDGE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Rising Edge of the input signal generates event trigger </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1gga0d83f7d7d27ced4fbc071540f942cbddabfdb31ec01eba65cf4dfea93ea6e8758" prot="public">
          <name>XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY_FALLING_EDGE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Falling Edge of the input signal generates event trigger </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1gga0d83f7d7d27ced4fbc071540f942cbddad73e4189505de1509082db746c103407" prot="public">
          <name>XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY_DUAL_EDGE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Both Rising and Falling edges cause an event trigger </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>External Event trigger criteria - Edge sensitivity </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="361" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" bodystart="360" bodyend="367"/>
      </memberdef>
      <memberdef kind="enum" id="group___c_c_u4_1gac1f2e1821e948b519f665a3b75fde3a3" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_CCU4_SLICE_EVENT_FILTER_t</name>
        <enumvalue id="group___c_c_u4_1ggac1f2e1821e948b519f665a3b75fde3a3a6d6eb4e612801d52b70d2a731ff2b736" prot="public">
          <name>XMC_CCU4_SLICE_EVENT_FILTER_DISABLED</name>
          <initializer>= 0U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>No Low Pass Filter </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1ggac1f2e1821e948b519f665a3b75fde3a3acf095d1aead6a63fbf4247737d8c0562" prot="public">
          <name>XMC_CCU4_SLICE_EVENT_FILTER_3_CYCLES</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>3 clock cycles </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1ggac1f2e1821e948b519f665a3b75fde3a3a9925034cd9be0dd89976e159936e9813" prot="public">
          <name>XMC_CCU4_SLICE_EVENT_FILTER_5_CYCLES</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>5 clock cycles </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1ggac1f2e1821e948b519f665a3b75fde3a3a3e3fb15c00232316d09a3ca1b0554674" prot="public">
          <name>XMC_CCU4_SLICE_EVENT_FILTER_7_CYCLES</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>7 clock cycles </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Low pass filter Configuration. The External Event input should be stable for a selected number of clock cycles. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="385" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" bodystart="384" bodyend="390"/>
      </memberdef>
      <memberdef kind="enum" id="group___c_c_u4_1ga6885762c605583d15f280d371e08b8b0" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_t</name>
        <enumvalue id="group___c_c_u4_1gga6885762c605583d15f280d371e08b8b0a0b176aa26e1c8251e5ea3599e34bc337" prot="public">
          <name>XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_HIGH</name>
          <initializer>= 0U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Level sensitive functions react to a high signal level </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1gga6885762c605583d15f280d371e08b8b0a1aaf8e9547536e171d18608b801ac967" prot="public">
          <name>XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_LOW</name>
          <initializer>= 1U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Level sensitive functions react to a low signal level </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1gga6885762c605583d15f280d371e08b8b0ac06667a1122fa8c657543cb6ee35c4ba" prot="public">
          <name>XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_COUNT_UP_ON_LOW</name>
          <initializer>= 0U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Timer counts up, during Low state of the control signal </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1gga6885762c605583d15f280d371e08b8b0a9d1921bbe3295a0e1a71ec5d2d3fb46d" prot="public">
          <name>XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_COUNT_UP_ON_HIGH</name>
          <initializer>= 1U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Timer counts up, during High state of the control signal </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>External Event trigger criteria - Level sensitivity </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="373" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" bodystart="372" bodyend="379"/>
      </memberdef>
      <memberdef kind="enum" id="group___c_c_u4_1gacc266caa550eca30994d968fa3b82b94" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_CCU4_SLICE_EVENT_t</name>
        <enumvalue id="group___c_c_u4_1ggacc266caa550eca30994d968fa3b82b94afc62ff96861da446ea03c170174cd3dd" prot="public">
          <name>XMC_CCU4_SLICE_EVENT_NONE</name>
          <initializer>= 0U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>None </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1ggacc266caa550eca30994d968fa3b82b94a266ebde2f56d765d2063e2a9a5ad13ab" prot="public">
          <name>XMC_CCU4_SLICE_EVENT_0</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Event-0 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1ggacc266caa550eca30994d968fa3b82b94a09e79302a201b7369b0e87ff98759ff0" prot="public">
          <name>XMC_CCU4_SLICE_EVENT_1</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Event-1 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1ggacc266caa550eca30994d968fa3b82b94a9bbb89139959f97e28f497fb57a870b0" prot="public">
          <name>XMC_CCU4_SLICE_EVENT_2</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Event-2 </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>External Event list </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="350" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" bodystart="349" bodyend="355"/>
      </memberdef>
      <memberdef kind="enum" id="group___c_c_u4_1gac60bd4b37c3c5d5d0e2401d769c51d28" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_CCU4_SLICE_FUNCTION_t</name>
        <enumvalue id="group___c_c_u4_1ggac60bd4b37c3c5d5d0e2401d769c51d28afe690c6006b55d1b3228a106bfc65cad" prot="public">
          <name>XMC_CCU4_SLICE_FUNCTION_START</name>
          <initializer>= 0U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Start function </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1ggac60bd4b37c3c5d5d0e2401d769c51d28af6cb3555bf927665b90feee075ee23c9" prot="public">
          <name>XMC_CCU4_SLICE_FUNCTION_STOP</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Stop function </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1ggac60bd4b37c3c5d5d0e2401d769c51d28aa25bfc04b6982b1ef51a818ca23b0e39" prot="public">
          <name>XMC_CCU4_SLICE_FUNCTION_CAPTURE_EVENT0</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Capture Event-0 function, CCycapt0 signal is used for event generation </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1ggac60bd4b37c3c5d5d0e2401d769c51d28a3738408500da28c154550454c64d5f32" prot="public">
          <name>XMC_CCU4_SLICE_FUNCTION_CAPTURE_EVENT1</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Capture Event-1 function, CCycapt1 signal is used for event generation </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1ggac60bd4b37c3c5d5d0e2401d769c51d28a5cdc1037f4c88e017720d3c1b6512803" prot="public">
          <name>XMC_CCU4_SLICE_FUNCTION_GATING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Gating function </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1ggac60bd4b37c3c5d5d0e2401d769c51d28a16d7d785730ccb9529fa47bf6398c36d" prot="public">
          <name>XMC_CCU4_SLICE_FUNCTION_DIRECTION</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Direction function </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1ggac60bd4b37c3c5d5d0e2401d769c51d28a178650c8b1bdbd8e8c8988906431b326" prot="public">
          <name>XMC_CCU4_SLICE_FUNCTION_LOAD</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Load function </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1ggac60bd4b37c3c5d5d0e2401d769c51d28a1468e37099c197b5306576c87c8f80d7" prot="public">
          <name>XMC_CCU4_SLICE_FUNCTION_COUNT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Counting function </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1ggac60bd4b37c3c5d5d0e2401d769c51d28ac0176be221201d76c061546f5db11c0a" prot="public">
          <name>XMC_CCU4_SLICE_FUNCTION_OVERRIDE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Override function </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1ggac60bd4b37c3c5d5d0e2401d769c51d28a7a4e2d332e64a114f0c846f765d74813" prot="public">
          <name>XMC_CCU4_SLICE_FUNCTION_MODULATION</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Modulation function </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1ggac60bd4b37c3c5d5d0e2401d769c51d28adbe73766f6842ed2f2c8f4cf05f78d10" prot="public">
          <name>XMC_CCU4_SLICE_FUNCTION_TRAP</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trap function </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>External Function list </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="330" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" bodystart="329" bodyend="344"/>
      </memberdef>
      <memberdef kind="enum" id="group___c_c_u4_1ga9b6b22c75755089c6c4038de4a5d213c" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_CCU4_SLICE_IRQ_ID_t</name>
        <enumvalue id="group___c_c_u4_1gga9b6b22c75755089c6c4038de4a5d213ca1110754891260f416e50d1ad2bb30930" prot="public">
          <name>XMC_CCU4_SLICE_IRQ_ID_PERIOD_MATCH</name>
          <initializer>= 0U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Period match counting up </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1gga9b6b22c75755089c6c4038de4a5d213ca615bf994e6e5f1b13ababdd84616904f" prot="public">
          <name>XMC_CCU4_SLICE_IRQ_ID_ONE_MATCH</name>
          <initializer>= 1U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Period match -&gt; One match counting down </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1gga9b6b22c75755089c6c4038de4a5d213ca1195f29e18054e36acb8a3ec18bbd238" prot="public">
          <name>XMC_CCU4_SLICE_IRQ_ID_COMPARE_MATCH_UP</name>
          <initializer>= 2U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Compare match counting up </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1gga9b6b22c75755089c6c4038de4a5d213ca2eb52479fe0ae263fe317b1743e50608" prot="public">
          <name>XMC_CCU4_SLICE_IRQ_ID_COMPARE_MATCH_DOWN</name>
          <initializer>= 3U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Compare match counting down </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1gga9b6b22c75755089c6c4038de4a5d213cacc10ec1487839dcdd54b9dbd9466b00e" prot="public">
          <name>XMC_CCU4_SLICE_IRQ_ID_EVENT0</name>
          <initializer>= 8U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Event-0 occurrence </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1gga9b6b22c75755089c6c4038de4a5d213cac2fe4d6206f325e8ff4dff7099e5ab0b" prot="public">
          <name>XMC_CCU4_SLICE_IRQ_ID_EVENT1</name>
          <initializer>= 9U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Event-1 occurrence </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1gga9b6b22c75755089c6c4038de4a5d213ca98d2fb52e2a0891b483e14fd0b821604" prot="public">
          <name>XMC_CCU4_SLICE_IRQ_ID_EVENT2</name>
          <initializer>= 10U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Event-2 occurrence </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1gga9b6b22c75755089c6c4038de4a5d213cace11d182e6f743f723d70077f588801a" prot="public">
          <name>XMC_CCU4_SLICE_IRQ_ID_TRAP</name>
          <initializer>= 11U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trap occurrence </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Available Interrupt Event Ids </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="465" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" bodystart="464" bodyend="474"/>
      </memberdef>
      <memberdef kind="enum" id="group___c_c_u4_1gace3b8480c5644319f7c266b67b3aa07b" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_CCU4_SLICE_MASK_t</name>
        <enumvalue id="group___c_c_u4_1ggace3b8480c5644319f7c266b67b3aa07baaedf4ef58f5d086c994756b77d4c8b19" prot="public">
          <name>XMC_CCU4_SLICE_MASK_SLICE_0</name>
          <initializer>= 1U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SLICE-0 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1ggace3b8480c5644319f7c266b67b3aa07bac585e780ceca6c8629e5e73af024c3b6" prot="public">
          <name>XMC_CCU4_SLICE_MASK_SLICE_1</name>
          <initializer>= 2U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SLICE-1 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1ggace3b8480c5644319f7c266b67b3aa07ba137ee059dc23e97ce2040b97b9b98d53" prot="public">
          <name>XMC_CCU4_SLICE_MASK_SLICE_2</name>
          <initializer>= 4U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SLICE-2 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1ggace3b8480c5644319f7c266b67b3aa07bae1c3588c1a342901461e591c685e5e11" prot="public">
          <name>XMC_CCU4_SLICE_MASK_SLICE_3</name>
          <initializer>= 8U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SLICE-3 </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Used to create Mask needed for Multi-channel Shadow transfer enable/disable </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="605" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" bodystart="604" bodyend="610"/>
      </memberdef>
      <memberdef kind="enum" id="group___c_c_u4_1ga1cdf6b35dbf21bc9ffd767cf8df77615" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_CCU4_SLICE_MCMS_ACTION_t</name>
        <enumvalue id="group___c_c_u4_1gga1cdf6b35dbf21bc9ffd767cf8df77615a07f35a295b4b3b9432cdd03450185d8e" prot="public">
          <name>XMC_CCU4_SLICE_MCMS_ACTION_TRANSFER_PR_CR</name>
          <initializer>= 0U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Transfer Compare and Period Shadow register values to the actual registers upon MCS xfer request </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1gga1cdf6b35dbf21bc9ffd767cf8df77615af0335adc39165b7a0427260db33f0208" prot="public">
          <name>XMC_CCU4_SLICE_MCMS_ACTION_TRANSFER_PR_CR_PCMP</name>
          <initializer>= 1U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Transfer Compare, Period and Prescaler Compare Shadow register values to the actual registers upon MCS xfer request </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1gga1cdf6b35dbf21bc9ffd767cf8df77615a07778edd210fcdd0fe458a3b87ba45b3" prot="public">
          <name>XMC_CCU4_SLICE_MCMS_ACTION_TRANSFER_PR_CR_PCMP_DIT</name>
          <initializer>= 3U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Transfer Compare, Period ,Prescaler Compare and Dither Compare register values to the actual registers upon MCS xfer request </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Multi Channel Shadow transfer request configuration options </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="450" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" bodystart="449" bodyend="459"/>
      </memberdef>
      <memberdef kind="enum" id="group___c_c_u4_1ga9667e43e2a54209c309f767354a0af8e" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_CCU4_SLICE_MODE_t</name>
        <enumvalue id="group___c_c_u4_1gga9667e43e2a54209c309f767354a0af8eae2a0b1462e62ea6c1de6e2cfb1ab9a4b" prot="public">
          <name>XMC_CCU4_SLICE_MODE_COMPARE</name>
          <initializer>= 0U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>slice(CC4y) operates in Compare Mode </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1gga9667e43e2a54209c309f767354a0af8ea0d70c96f084872d0db5b8dd34c6384d1" prot="public">
          <name>XMC_CCU4_SLICE_MODE_CAPTURE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>slice(CC4y) operates in Capture Mode </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Operational modes of CCU4 slice </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="243" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" bodystart="242" bodyend="246"/>
      </memberdef>
      <memberdef kind="enum" id="group___c_c_u4_1gaba1abc67da718dd4dd0df6054aeda354" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_CCU4_SLICE_MODULATION_MODE_t</name>
        <enumvalue id="group___c_c_u4_1ggaba1abc67da718dd4dd0df6054aeda354ad37a1aa22cf58f318f0a6b7319ee5f3a" prot="public">
          <name>XMC_CCU4_SLICE_MODULATION_MODE_CLEAR_ST_OUT</name>
          <initializer>= 0U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Clear ST and OUT signals </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1ggaba1abc67da718dd4dd0df6054aeda354a4eb2b8e39a4ad266febeba6f6d02ed89" prot="public">
          <name>XMC_CCU4_SLICE_MODULATION_MODE_CLEAR_OUT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Clear only the OUT signal </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Modulation of timer output signals </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="421" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" bodystart="420" bodyend="424"/>
      </memberdef>
      <memberdef kind="enum" id="group___c_c_u4_1ga99a221425b50cb24f3358c905c92f105" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_CCU4_SLICE_MULTI_IRQ_ID_t</name>
        <enumvalue id="group___c_c_u4_1gga99a221425b50cb24f3358c905c92f105abef36d3c3a24427fb8f031db28e9baac" prot="public">
          <name>XMC_CCU4_SLICE_MULTI_IRQ_ID_PERIOD_MATCH</name>
          <initializer>= 0x1U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Period match counting up </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1gga99a221425b50cb24f3358c905c92f105a68eb8b00bdfc1336c66d92104fde9af1" prot="public">
          <name>XMC_CCU4_SLICE_MULTI_IRQ_ID_ONE_MATCH</name>
          <initializer>= 0x2U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Period match -&gt; One match counting down </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1gga99a221425b50cb24f3358c905c92f105a351a2552a33a0f3163605a19e30f7a56" prot="public">
          <name>XMC_CCU4_SLICE_MULTI_IRQ_ID_COMPARE_MATCH_UP</name>
          <initializer>= 0x4U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Compare match counting up </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1gga99a221425b50cb24f3358c905c92f105acd2dc3adf095991bf1c374bdcdd85a92" prot="public">
          <name>XMC_CCU4_SLICE_MULTI_IRQ_ID_COMPARE_MATCH_DOWN</name>
          <initializer>= 0x8U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Compare match counting down </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1gga99a221425b50cb24f3358c905c92f105a4dae63fc87fb65f4a027402c1ec9adfe" prot="public">
          <name>XMC_CCU4_SLICE_MULTI_IRQ_ID_EVENT0</name>
          <initializer>= 0x100U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Event-0 occurrence </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1gga99a221425b50cb24f3358c905c92f105ae8fb1889eed2861dd5ccdc2c3556ee56" prot="public">
          <name>XMC_CCU4_SLICE_MULTI_IRQ_ID_EVENT1</name>
          <initializer>= 0x200U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Event-1 occurrence </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1gga99a221425b50cb24f3358c905c92f105a8915bb2051d30faa27e400170865977f" prot="public">
          <name>XMC_CCU4_SLICE_MULTI_IRQ_ID_EVENT2</name>
          <initializer>= 0x400U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Event-2 occurrence </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Available Interrupt Event Ids, which is added to support multi event APIs </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="480" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" bodystart="479" bodyend="488"/>
      </memberdef>
      <memberdef kind="enum" id="group___c_c_u4_1gad1e13100aef87f3fdbffcd561b1d7e57" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_CCU4_SLICE_OUTPUT_PASSIVE_LEVEL_t</name>
        <enumvalue id="group___c_c_u4_1ggad1e13100aef87f3fdbffcd561b1d7e57a4a4c2f6167364519a64a4357390d8791" prot="public">
          <name>XMC_CCU4_SLICE_OUTPUT_PASSIVE_LEVEL_LOW</name>
          <initializer>= 0U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Passive level = Low </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1ggad1e13100aef87f3fdbffcd561b1d7e57a165b8c77d8101587c31ad8f01fd14cb1" prot="public">
          <name>XMC_CCU4_SLICE_OUTPUT_PASSIVE_LEVEL_HIGH</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Passive level = High </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Timer output passive level </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="298" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" bodystart="297" bodyend="301"/>
      </memberdef>
      <memberdef kind="enum" id="group___c_c_u4_1ga1dcda6886b599a8260e6f9934dd74dc1" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_CCU4_SLICE_PRESCALER_MODE_t</name>
        <enumvalue id="group___c_c_u4_1gga1dcda6886b599a8260e6f9934dd74dc1ae811f6f9afca2fa27136947ed5f2ea5b" prot="public">
          <name>XMC_CCU4_SLICE_PRESCALER_MODE_NORMAL</name>
          <initializer>= 0U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Fixed division of module clock </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1gga1dcda6886b599a8260e6f9934dd74dc1a5c26f6a0bfdc053250da48a6e205cce6" prot="public">
          <name>XMC_CCU4_SLICE_PRESCALER_MODE_FLOAT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Floating divider. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Prescaler mode </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="289" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" bodystart="288" bodyend="292"/>
      </memberdef>
      <memberdef kind="enum" id="group___c_c_u4_1ga871bce3beb610d5e16b083c68381a60f" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_CCU4_SLICE_PRESCALER_t</name>
        <enumvalue id="group___c_c_u4_1gga871bce3beb610d5e16b083c68381a60fa21730c3c85876b200cfe3c53fbefb409" prot="public">
          <name>XMC_CCU4_SLICE_PRESCALER_1</name>
          <initializer>= 0U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Slice Clock = fccu4 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1gga871bce3beb610d5e16b083c68381a60fa1274e6b5c52db963d9160ab3855dcca5" prot="public">
          <name>XMC_CCU4_SLICE_PRESCALER_2</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Slice Clock = fccu4/2 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1gga871bce3beb610d5e16b083c68381a60faa90473df8e937f3605698d4d4e7a780b" prot="public">
          <name>XMC_CCU4_SLICE_PRESCALER_4</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Slice Clock = fccu4/4 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1gga871bce3beb610d5e16b083c68381a60fa86d1d3241d91aea49d5b342375eb88e4" prot="public">
          <name>XMC_CCU4_SLICE_PRESCALER_8</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Slice Clock = fccu4/8 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1gga871bce3beb610d5e16b083c68381a60fa9b791c72ca12272d96b6852063d4dcea" prot="public">
          <name>XMC_CCU4_SLICE_PRESCALER_16</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Slice Clock = fccu4/16 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1gga871bce3beb610d5e16b083c68381a60fa4c7e8d216ba1848e14f7c353de015620" prot="public">
          <name>XMC_CCU4_SLICE_PRESCALER_32</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Slice Clock = fccu4/32 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1gga871bce3beb610d5e16b083c68381a60fa420a4d436ffe32d312f0bd9a6e25060a" prot="public">
          <name>XMC_CCU4_SLICE_PRESCALER_64</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Slice Clock = fccu4/64 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1gga871bce3beb610d5e16b083c68381a60fa8ed8c701fe46730b47375a1b94e8c993" prot="public">
          <name>XMC_CCU4_SLICE_PRESCALER_128</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Slice Clock = fccu4/128 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1gga871bce3beb610d5e16b083c68381a60fa040bfdb62c0c148163a39e48251a7e3f" prot="public">
          <name>XMC_CCU4_SLICE_PRESCALER_256</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Slice Clock = fccu4/256 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1gga871bce3beb610d5e16b083c68381a60fa1f2bdbb25d2177a9bc2d5b816b11db37" prot="public">
          <name>XMC_CCU4_SLICE_PRESCALER_512</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Slice Clock = fccu4/512 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1gga871bce3beb610d5e16b083c68381a60fac4d910af417ec48ddefb40d600b39549" prot="public">
          <name>XMC_CCU4_SLICE_PRESCALER_1024</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Slice Clock = fccu4/1024 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1gga871bce3beb610d5e16b083c68381a60faf08263ed3302cae17bad9745d3a0618e" prot="public">
          <name>XMC_CCU4_SLICE_PRESCALER_2048</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Slice Clock = fccu4/2048 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1gga871bce3beb610d5e16b083c68381a60fa503205ae411d32a5a966caf019b4e817" prot="public">
          <name>XMC_CCU4_SLICE_PRESCALER_4096</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Slice Clock = fccu4/4096 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1gga871bce3beb610d5e16b083c68381a60faa5635168ed9b7ceb25fab5887e97c430" prot="public">
          <name>XMC_CCU4_SLICE_PRESCALER_8192</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Slice Clock = fccu4/8192 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1gga871bce3beb610d5e16b083c68381a60fa6987633000fa62b874eecf6882edb3d4" prot="public">
          <name>XMC_CCU4_SLICE_PRESCALER_16384</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Slice Clock = fccu4/16384 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1gga871bce3beb610d5e16b083c68381a60fafc45b1530f6f2264995bb7b9703b4af3" prot="public">
          <name>XMC_CCU4_SLICE_PRESCALER_32768</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Slice Clock = fccu4/32768 </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Timer clock Divider </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="307" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" bodystart="306" bodyend="324"/>
      </memberdef>
      <memberdef kind="enum" id="group___c_c_u4_1ga6b7d3d96e6ba78dd55ca0850379ebf9d" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_CCU4_SLICE_SHADOW_TRANSFER_MODE_t</name>
        <enumvalue id="group___c_c_u4_1gga6b7d3d96e6ba78dd55ca0850379ebf9dacb0b5f0078d5039dd05903cd3440332a" prot="public">
          <name>XMC_CCU4_SLICE_SHADOW_TRANSFER_MODE_IN_PERIOD_MATCH_AND_ONE_MATCH</name>
          <initializer>= 0U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Shadow transfer is done in Period Match and One match. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1gga6b7d3d96e6ba78dd55ca0850379ebf9da3e58f0c4e9d39e1a7270a9acec6215cf" prot="public">
          <name>XMC_CCU4_SLICE_SHADOW_TRANSFER_MODE_ONLY_IN_PERIOD_MATCH</name>
          <initializer>= 1U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Shadow transfer is done only in Period Match. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1gga6b7d3d96e6ba78dd55ca0850379ebf9da1471dea0a4bf1f5043e36068521ed5e1" prot="public">
          <name>XMC_CCU4_SLICE_SHADOW_TRANSFER_MODE_ONLY_IN_ONE_MATCH</name>
          <initializer>= 2U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Shadow transfer is done only in One Match. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Slice shadow transfer mode options. <simplesect kind="note"><para>Only available for XMC1400 series </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="542" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" bodystart="541" bodyend="547"/>
      </memberdef>
      <memberdef kind="enum" id="group___c_c_u4_1ga9de58e90257a0c33532f376c7c5f959e" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_CCU4_SLICE_SR_ID_t</name>
        <enumvalue id="group___c_c_u4_1gga9de58e90257a0c33532f376c7c5f959ea606c95b58b5d6d5dbe49d3d5ef1ddcca" prot="public">
          <name>XMC_CCU4_SLICE_SR_ID_0</name>
          <initializer>= 0U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Service Request Line-0 selected </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1gga9de58e90257a0c33532f376c7c5f959ea8c6eb4a0bd77ca1d2ee974c7ce2c28b1" prot="public">
          <name>XMC_CCU4_SLICE_SR_ID_1</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Service Request Line-1 selected </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1gga9de58e90257a0c33532f376c7c5f959ea49cefefb272abca4ba8a6c9f223c2c20" prot="public">
          <name>XMC_CCU4_SLICE_SR_ID_2</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Service Request Line-2 selected </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1gga9de58e90257a0c33532f376c7c5f959eac7d83257e819a2acd2b35b0e5f856897" prot="public">
          <name>XMC_CCU4_SLICE_SR_ID_3</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Service Request Line-3 selected </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Service Request Lines for CCU4. Event are mapped to these SR lines and these are used to generate the interrupt. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="494" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" bodystart="493" bodyend="499"/>
      </memberdef>
      <memberdef kind="enum" id="group___c_c_u4_1ga665528c9d6bedf104384b20797e892c3" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_CCU4_SLICE_START_MODE_t</name>
        <enumvalue id="group___c_c_u4_1gga665528c9d6bedf104384b20797e892c3ad412d8efd6c8145f9f39f048e4971a01" prot="public">
          <name>XMC_CCU4_SLICE_START_MODE_TIMER_START</name>
          <initializer>= 0U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Start the timer from the current count of TIMER register </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1gga665528c9d6bedf104384b20797e892c3ae2bfe2856021d15cf1509a4d4cb56297" prot="public">
          <name>XMC_CCU4_SLICE_START_MODE_TIMER_START_CLEAR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Clears the TIMER register and start the timer </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Actions that can be performed upon detection of an external Timer START event </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="412" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" bodystart="411" bodyend="415"/>
      </memberdef>
      <memberdef kind="enum" id="group___c_c_u4_1ga5bd133ab5643ed217b548ce94f6bacc6" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_CCU4_SLICE_STATUS_BIT_t</name>
        <enumvalue id="group___c_c_u4_1gga5bd133ab5643ed217b548ce94f6bacc6acc767d7c8bbded08e87e3cc5232eb625" prot="public">
          <name>XMC_CCU4_SLICE_STATUS_BIT_PASSIVE</name>
          <initializer>= false</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Passive </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1gga5bd133ab5643ed217b548ce94f6bacc6a99abff0fd6a7cef4624f571b047c5f6f" prot="public">
          <name>XMC_CCU4_SLICE_STATUS_BIT_ACTIVE</name>
          <initializer>= true</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Active </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CCU4 slice status bit </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="628" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" bodystart="627" bodyend="631"/>
      </memberdef>
      <memberdef kind="enum" id="group___c_c_u4_1ga39bc5ede3f6f7d5e44dbaf01f0e3a98d" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_CCU4_SLICE_TIMER_CLEAR_MODE_t</name>
        <enumvalue id="group___c_c_u4_1gga39bc5ede3f6f7d5e44dbaf01f0e3a98da34cf9539f3e113d0308fde8b2b7e7ea3" prot="public">
          <name>XMC_CCU4_SLICE_TIMER_CLEAR_MODE_NEVER</name>
          <initializer>= 0U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Never clear the timer on any capture event </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1gga39bc5ede3f6f7d5e44dbaf01f0e3a98daecb208a201233a895998122372644f76" prot="public">
          <name>XMC_CCU4_SLICE_TIMER_CLEAR_MODE_CAP_HIGH</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Clear only when timer value has been captured in C3V and C2V </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1gga39bc5ede3f6f7d5e44dbaf01f0e3a98da74bcde097f72a785eb0ddc1d95c08e3a" prot="public">
          <name>XMC_CCU4_SLICE_TIMER_CLEAR_MODE_CAP_LOW</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Clear only when timer value has been captured in C1V and C0V </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1gga39bc5ede3f6f7d5e44dbaf01f0e3a98daae8593b42bd161d754c42113e2312d54" prot="public">
          <name>XMC_CCU4_SLICE_TIMER_CLEAR_MODE_ALWAYS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Always clear the timer upon detection of any capture event </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Timer clear on capture </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="439" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" bodystart="438" bodyend="444"/>
      </memberdef>
      <memberdef kind="enum" id="group___c_c_u4_1gacbf19766ba6532d4b09ac3ac1cd0d571" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_CCU4_SLICE_TIMER_COUNT_DIR_t</name>
        <enumvalue id="group___c_c_u4_1ggacbf19766ba6532d4b09ac3ac1cd0d571afb257cb392cadc536c43f78e36d31dcf" prot="public">
          <name>XMC_CCU4_SLICE_TIMER_COUNT_DIR_UP</name>
          <initializer>= 0U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Counting up </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1ggacbf19766ba6532d4b09ac3ac1cd0d571afaf67b9b034f8168444940544144f796" prot="public">
          <name>XMC_CCU4_SLICE_TIMER_COUNT_DIR_DOWN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Counting down </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Timer counting direction for the CCU4 slice </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="271" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" bodystart="270" bodyend="274"/>
      </memberdef>
      <memberdef kind="enum" id="group___c_c_u4_1ga488780142d4d7da249cbb6e2c16ec512" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_CCU4_SLICE_TIMER_COUNT_MODE_t</name>
        <enumvalue id="group___c_c_u4_1gga488780142d4d7da249cbb6e2c16ec512a4318f65933cfd2f8348b14a9527a54cf" prot="public">
          <name>XMC_CCU4_SLICE_TIMER_COUNT_MODE_EA</name>
          <initializer>= 0U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Edge Aligned Mode </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1gga488780142d4d7da249cbb6e2c16ec512a873c92d1c37a0f7b040a5d2b5dc0231a" prot="public">
          <name>XMC_CCU4_SLICE_TIMER_COUNT_MODE_CA</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Center Aligned Mode </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Timer counting modes for the slice </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="252" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" bodystart="251" bodyend="255"/>
      </memberdef>
      <memberdef kind="enum" id="group___c_c_u4_1ga85c8c78c8c4ec52eae3d4654aa37ad9d" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_CCU4_SLICE_TIMER_REPEAT_MODE_t</name>
        <enumvalue id="group___c_c_u4_1gga85c8c78c8c4ec52eae3d4654aa37ad9da8d51f93f5e31e8f72e4497a409bc2bcc" prot="public">
          <name>XMC_CCU4_SLICE_TIMER_REPEAT_MODE_REPEAT</name>
          <initializer>= 0U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Repetitive mode: continuous mode of operation </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1gga85c8c78c8c4ec52eae3d4654aa37ad9da4de4b49a7511bbef001ee903a680bed6" prot="public">
          <name>XMC_CCU4_SLICE_TIMER_REPEAT_MODE_SINGLE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Single shot mode: Once a Period match/One match occurs timer goes to idle state </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Timer repetition mode for the slice </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="261" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" bodystart="260" bodyend="265"/>
      </memberdef>
      <memberdef kind="enum" id="group___c_c_u4_1gafc3c6b390f18574d954473174a595eb2" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_CCU4_SLICE_TRAP_EXIT_MODE_t</name>
        <enumvalue id="group___c_c_u4_1ggafc3c6b390f18574d954473174a595eb2ad0e74edf598f2c828a938de5a2461112" prot="public">
          <name>XMC_CCU4_SLICE_TRAP_EXIT_MODE_AUTOMATIC</name>
          <initializer>= 0U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Clear trap state as soon as the trap signal is de-asserted </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1ggafc3c6b390f18574d954473174a595eb2a100606bfa8b7b7c11deef92dceb07da0" prot="public">
          <name>XMC_CCU4_SLICE_TRAP_EXIT_MODE_SW</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Clear only when acknowledged by software </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Trap exit mode </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="430" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" bodystart="429" bodyend="433"/>
      </memberdef>
      <memberdef kind="enum" id="group___c_c_u4_1ga1cf1dcb4c712c711441f1ee42a8577bd" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_CCU4_SLICE_WRITE_INTO_t</name>
        <enumvalue id="group___c_c_u4_1gga1cf1dcb4c712c711441f1ee42a8577bda793268c55ee55c93bc0c50fee9a17960" prot="public">
          <name>XMC_CCU4_SLICE_WRITE_INTO_PERIOD_CONFIGURATION</name>
          <initializer>= CCU4_CC4_STC_IRPC_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Immediate or Coherent Write into Period Configuration </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1gga1cf1dcb4c712c711441f1ee42a8577bdaf27bb047766d40a81e5bcea978070b78" prot="public">
          <name>XMC_CCU4_SLICE_WRITE_INTO_COMPARE_CONFIGURATION</name>
          <initializer>= CCU4_CC4_STC_IRCC_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Immediate or Coherent Write into Compare Configuration </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1gga1cf1dcb4c712c711441f1ee42a8577bda3e7e6d8f1bfdd6abf7854152f2b70c90" prot="public">
          <name>XMC_CCU4_SLICE_WRITE_INTO_PASSIVE_LEVEL_CONFIGURATION</name>
          <initializer>= CCU4_CC4_STC_IRLC_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Immediate or Coherent Write into Passive Level Configuration </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1gga1cf1dcb4c712c711441f1ee42a8577bda2027f4df492329f65376f6ffb220dc23" prot="public">
          <name>XMC_CCU4_SLICE_WRITE_INTO_DITHER_VALUE_CONFIGURATION</name>
          <initializer>= CCU4_CC4_STC_IRDC_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Immediate or Coherent Write into Dither Value Configuration </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1gga1cf1dcb4c712c711441f1ee42a8577bda7c8cbc8cb315c1caf2c23a1ca69c2bfc" prot="public">
          <name>XMC_CCU4_SLICE_WRITE_INTO_FLOATING_PRESCALER_VALUE_CONFIGURATION</name>
          <initializer>= CCU4_CC4_STC_IRFC_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Immediate or Coherent Write into Floating Prescaler Value Configuration </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Immediate write into configuration register <simplesect kind="note"><para>Only available for XMC1400 series </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="555" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" bodystart="554" bodyend="571"/>
      </memberdef>
      <memberdef kind="enum" id="group___c_c_u4_1gac0f35f7b62570cbbd9ff102fea356b62" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_CCU4_STATUS_t</name>
        <enumvalue id="group___c_c_u4_1ggac0f35f7b62570cbbd9ff102fea356b62a2cb66ee3128b8de1632f4c92bf9a87be" prot="public">
          <name>XMC_CCU4_STATUS_OK</name>
          <initializer>= 0U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>API fulfils request </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1ggac0f35f7b62570cbbd9ff102fea356b62a15005b0626b30abc2f37d1b3d1047bc3" prot="public">
          <name>XMC_CCU4_STATUS_ERROR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>API cannot fulfil the request </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1ggac0f35f7b62570cbbd9ff102fea356b62aea3f12395fc07e2ce14d8d263ce7d2be" prot="public">
          <name>XMC_CCU4_STATUS_RUNNING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The timer slice is currently running </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1ggac0f35f7b62570cbbd9ff102fea356b62a0f2125e8f28d513ee65f60939d1aefe0" prot="public">
          <name>XMC_CCU4_STATUS_IDLE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The timer slice is currently idle </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return Value of an API </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="198" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" bodystart="197" bodyend="203"/>
      </memberdef>
      <memberdef kind="enum" id="group___c_c_u4_1gac29c624b192d2b963e29389ae01a707a" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_CCU4_SUSPEND_MODE_t</name>
        <enumvalue id="group___c_c_u4_1ggac29c624b192d2b963e29389ae01a707aa809f16e07fb7d70ff37dfd05c3382c2a" prot="public">
          <name>XMC_CCU4_SUSPEND_MODE_IGNORE</name>
          <initializer>= 0 &lt;&lt; CCU4_GCTRL_SUSCFG_Pos</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Suspend request ignored. The module never enters in suspend </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1ggac29c624b192d2b963e29389ae01a707aaeb7d1ccc41651c6fdd86a2870149521e" prot="public">
          <name>XMC_CCU4_SUSPEND_MODE_STOPS_INMEDIATELLY</name>
          <initializer>= 1 &lt;&lt; CCU4_GCTRL_SUSCFG_Pos</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Stops all the running slices immediately. Safe stop is not applied. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1ggac29c624b192d2b963e29389ae01a707aa9d60ab20eea6e5d7f6d9a3f484533c32" prot="public">
          <name>XMC_CCU4_SUSPEND_MODE_SAFE_STOP</name>
          <initializer>= 2 &lt;&lt; CCU4_GCTRL_SUSCFG_Pos</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Stops the block immediately and clamps all the outputs to PASSIVE state. Safe stop is applied. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_c_u4_1ggac29c624b192d2b963e29389ae01a707aa87fc32e07bee14bfb4fd663e0a591595" prot="public">
          <name>XMC_CCU4_SUSPEND_MODE_WAIT_ROLL_OVER</name>
          <initializer>= 3 &lt;&lt; CCU4_GCTRL_SUSCFG_Pos</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Waits for the roll over of each slice to stop and clamp the slices outputs. Safe stop is applied. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Selects suspend mode </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="616" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" bodystart="615" bodyend="621"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group___c_c_u4_1gabc8c277fccba02adfd4c57fdbf66df71" prot="public" static="no">
        <type>CCU4_GLOBAL_TypeDef</type>
        <definition>typedef CCU4_GLOBAL_TypeDef XMC_CCU4_MODULE_t</definition>
        <argsstring></argsstring>
        <name>XMC_CCU4_MODULE_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Typedef for CCU4 Global data structure </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="187" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" bodystart="187" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___c_c_u4_1gaab7f7bcdc1aff8cc0beb2edae16a3cf3" prot="public" static="no">
        <type>uint8_t</type>
        <definition>typedef uint8_t XMC_CCU4_SLICE_INPUT_t</definition>
        <argsstring></argsstring>
        <name>XMC_CCU4_SLICE_INPUT_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>External Event Input list. This list depicts the possible input connections to the CCU4 slice. Interconnects are specific to each device. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="396" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" bodystart="396" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___c_c_u4_1ga759d9cc26009d3567612d196ac3f3969" prot="public" static="no">
        <type>CCU4_CC4_TypeDef</type>
        <definition>typedef CCU4_CC4_TypeDef XMC_CCU4_SLICE_t</definition>
        <argsstring></argsstring>
        <name>XMC_CCU4_SLICE_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Typedef for CCU4 Slice data structure </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="192" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" bodystart="192" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group___c_c_u4_1ga58ad9c171f730ad379f349aac4e78009" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CCU4_DisableClock</definition>
        <argsstring>(XMC_CCU4_MODULE_t *const module, const uint8_t slice_number)</argsstring>
        <name>XMC_CCU4_DisableClock</name>
        <param>
          <type><ref refid="group___c_c_u4_1gabc8c277fccba02adfd4c57fdbf66df71" kindref="member">XMC_CCU4_MODULE_t</ref> *const</type>
          <declname>module</declname>
        </param>
        <param>
          <type>const uint8_t</type>
          <declname>slice_number</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>module</parametername>
</parameternamelist>
<parameterdescription>
<para>Constant pointer to CCU4 module </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>slice_number</parametername>
</parameternamelist>
<parameterdescription>
<para>Slice for which the clock should be disabled. Range: [0x0 to 0x3] </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><linebreak/>
 None<linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Disables the slice timer clock, by configuring GIDLS.SS0I, GIDLS.SSS1I, GIDLS.SSS2I, GIDLS.SSS3I bits according to the selected <emphasis>slice_number</emphasis> .<linebreak/>
<linebreak/>
It is possible to disable clock at slice level using the module pointer. <bold>slice_number</bold> is used to disable the clock to a given slice of the module. Directly accessed Register is GIDLS.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___c_c_u4_1ga1809347868d61b8627442802601fb863" kindref="member">XMC_CCU4_EnableClock()</ref><linebreak/>
 <ref refid="group___c_c_u4_1ga636c23537ae9718af9bb3c3f66c7db4b" kindref="member">XMC_CCU4_EnableMultipleClocks()</ref><linebreak/>
 <ref refid="group___c_c_u4_1gad492e0c49bfa5b89b01d6dd5a43a1e1b" kindref="member">XMC_CCU4_StartPrescaler()</ref><linebreak/>
 <ref refid="group___c_c_u4_1gae3741bc9dc0cb9f565ade9182d73141f" kindref="member">XMC_CCU4_StopPrescaler()</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="1004" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" bodystart="1004" bodyend="1010"/>
      </memberdef>
      <memberdef kind="function" id="group___c_c_u4_1gacb7f295a4b04bd0cf79e9df8da97a954" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CCU4_DisableModule</definition>
        <argsstring>(XMC_CCU4_MODULE_t *const module)</argsstring>
        <name>XMC_CCU4_DisableModule</name>
        <param>
          <type><ref refid="group___c_c_u4_1gabc8c277fccba02adfd4c57fdbf66df71" kindref="member">XMC_CCU4_MODULE_t</ref> *const</type>
          <declname>module</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>module</parametername>
</parameternamelist>
<parameterdescription>
<para>Constant pointer to CCU4 module </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><linebreak/>
 None<linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Brings the CCU4 module to reset state and enables gating of the clock signal(if applicable depending on the device being selected).<linebreak/>
<linebreak/>
Invoke this API when a CCU4 module needs to be disabled completely. Any operation on the CCU4 module will have no effect after this API is called.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___c_c_u4_1ga71ef51e46d57bdd95563fdc0da1f44c3" kindref="member">XMC_CCU4_EnableModule()</ref><linebreak/>
 <ref refid="group___c_c_u4_1gacb7f295a4b04bd0cf79e9df8da97a954" kindref="member">XMC_CCU4_DisableModule()</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="876" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___c_c_u4_1ga1809347868d61b8627442802601fb863" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CCU4_EnableClock</definition>
        <argsstring>(XMC_CCU4_MODULE_t *const module, const uint8_t slice_number)</argsstring>
        <name>XMC_CCU4_EnableClock</name>
        <param>
          <type><ref refid="group___c_c_u4_1gabc8c277fccba02adfd4c57fdbf66df71" kindref="member">XMC_CCU4_MODULE_t</ref> *const</type>
          <declname>module</declname>
        </param>
        <param>
          <type>const uint8_t</type>
          <declname>slice_number</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>module</parametername>
</parameternamelist>
<parameterdescription>
<para>Constant pointer to CCU4 module </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>slice_number</parametername>
</parameternamelist>
<parameterdescription>
<para>Slice for which the clock should be Enabled. Range: [0x0 to 0x3] </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><linebreak/>
 None<linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Enables the slice timer clock, by configuring GIDLC.CS0I, GIDLC.CS1I, GIDLC.CS2I, GIDLC.CS3I bits according to the selected <emphasis>slice_number</emphasis>.<linebreak/>
<linebreak/>
 It is possible to enable/disable clock at slice level. This uses the <bold>slice_number</bold> to indicate the slice whose clock needs to be enabled.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___c_c_u4_1ga58ad9c171f730ad379f349aac4e78009" kindref="member">XMC_CCU4_DisableClock()</ref><linebreak/>
 <ref refid="group___c_c_u4_1ga636c23537ae9718af9bb3c3f66c7db4b" kindref="member">XMC_CCU4_EnableMultipleClocks()</ref><linebreak/>
 <ref refid="group___c_c_u4_1gad492e0c49bfa5b89b01d6dd5a43a1e1b" kindref="member">XMC_CCU4_StartPrescaler()</ref><linebreak/>
 <ref refid="group___c_c_u4_1gae3741bc9dc0cb9f565ade9182d73141f" kindref="member">XMC_CCU4_StopPrescaler()</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="979" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" bodystart="979" bodyend="985"/>
      </memberdef>
      <memberdef kind="function" id="group___c_c_u4_1ga71ef51e46d57bdd95563fdc0da1f44c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CCU4_EnableModule</definition>
        <argsstring>(XMC_CCU4_MODULE_t *const module)</argsstring>
        <name>XMC_CCU4_EnableModule</name>
        <param>
          <type><ref refid="group___c_c_u4_1gabc8c277fccba02adfd4c57fdbf66df71" kindref="member">XMC_CCU4_MODULE_t</ref> *const</type>
          <declname>module</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>module</parametername>
</parameternamelist>
<parameterdescription>
<para>Constant pointer to CCU4 module </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><linebreak/>
 None<linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Enables the CCU4 module and brings it to active state.<linebreak/>
<linebreak/>
Also disables the gating of the clock signal (if applicable depending on the device being selected). Invoke this API before any operations are done on the CCU4 module. Invoked from <ref refid="group___c_c_u4_1ga6ab30100f7e86a8f47095282a123d071" kindref="member">XMC_CCU4_Init()</ref>.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___c_c_u4_1gaafc3f9bdcb648bf3e2cc6fdd1a597d3e" kindref="member">XMC_CCU4_SetModuleClock()</ref><linebreak/>
 <ref refid="group___c_c_u4_1gacb7f295a4b04bd0cf79e9df8da97a954" kindref="member">XMC_CCU4_DisableModule()</ref><linebreak/>
 <ref refid="group___c_c_u4_1gad492e0c49bfa5b89b01d6dd5a43a1e1b" kindref="member">XMC_CCU4_StartPrescaler()</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="860" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___c_c_u4_1ga636c23537ae9718af9bb3c3f66c7db4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CCU4_EnableMultipleClocks</definition>
        <argsstring>(XMC_CCU4_MODULE_t *const module, const uint8_t clock_mask)</argsstring>
        <name>XMC_CCU4_EnableMultipleClocks</name>
        <param>
          <type><ref refid="group___c_c_u4_1gabc8c277fccba02adfd4c57fdbf66df71" kindref="member">XMC_CCU4_MODULE_t</ref> *const</type>
          <declname>module</declname>
        </param>
        <param>
          <type>const uint8_t</type>
          <declname>clock_mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>module</parametername>
</parameternamelist>
<parameterdescription>
<para>Constant pointer to CCU4 module </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>clock_mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Slices whose clocks are to be enabled simultaneously. Bit location 0/1/2/3 represents slice-0/1/2/3 respectively. Range: [0x1 to 0xF] </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><linebreak/>
 None<linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Enables clocks of multiple slices at a time, by configuring GIDLC.CS0I, GIDLC.CS1I, GIDLC.CS2I, GIDLC.CS3I bits.<linebreak/>
<linebreak/>
Takes an input clock_mask, which determines the slices that would receive the clock. Bring them out of the idle state simultaneously.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___c_c_u4_1ga1809347868d61b8627442802601fb863" kindref="member">XMC_CCU4_EnableClock()</ref><linebreak/>
 <ref refid="group___c_c_u4_1ga58ad9c171f730ad379f349aac4e78009" kindref="member">XMC_CCU4_DisableClock()</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="955" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" bodystart="955" bodyend="961"/>
      </memberdef>
      <memberdef kind="function" id="group___c_c_u4_1gadcfbaa660e4c008e78128b8deb4cc5c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CCU4_EnableShadowTransfer</definition>
        <argsstring>(XMC_CCU4_MODULE_t *const module, const uint32_t shadow_transfer_msk)</argsstring>
        <name>XMC_CCU4_EnableShadowTransfer</name>
        <param>
          <type><ref refid="group___c_c_u4_1gabc8c277fccba02adfd4c57fdbf66df71" kindref="member">XMC_CCU4_MODULE_t</ref> *const</type>
          <declname>module</declname>
        </param>
        <param>
          <type>const uint32_t</type>
          <declname>shadow_transfer_msk</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>module</parametername>
</parameternamelist>
<parameterdescription>
<para>Constant pointer to CCU4 module </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>shadow_transfer_msk</parametername>
</parameternamelist>
<parameterdescription>
<para>Shadow transfer request mask for various transfers. Use <ref refid="group___c_c_u4_1ga8d2c64420abee84dccce68e68b942e67" kindref="member">XMC_CCU4_SHADOW_TRANSFER_t</ref> enum items to create a mask of choice, using a bit wise OR operation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><linebreak/>
 None<linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Requests of shadow transfer for Period, Compare, Passive level, dither and prescaler, by configuring the GCSS register.<linebreak/>
<linebreak/>
The transfer from the shadow registers to the actual registers is done in the immediate next occurrence of the shadow transfer trigger after the API is called.</para>
</simplesect>
Any call to <ref refid="group___c_c_u4_1ga1341abfd52a8165c7e1b5292033797ed" kindref="member">XMC_CCU4_SLICE_SetTimerPeriodMatch()</ref><linebreak/>
 <ref refid="group___c_c_u4_1ga7ae1adcaba614fa7d919221da9020a57" kindref="member">XMC_CCU4_SLICE_SetTimerCompareMatch()</ref><linebreak/>
 <ref refid="group___c_c_u4_1ga24127bd989b62814c2ba0cc876b99473" kindref="member">XMC_CCU4_SLICE_SetPrescaler()</ref><linebreak/>
 <ref refid="group___c_c_u4_1gaaaf6a6054b308d38a5d05a518d042873" kindref="member">XMC_CCU4_SLICE_CompareInit()</ref><linebreak/>
 <ref refid="group___c_c_u4_1ga0e1afff754cd0b288f3ef9e364b86092" kindref="member">XMC_CCU4_SLICE_CaptureInit()</ref>. must be succeeded by this API. Directly accessed Register is GCSS.</para>
<para><simplesect kind="par"><title>Related APIs:</title><para>None. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="1760" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" bodystart="1760" bodyend="1764"/>
      </memberdef>
      <memberdef kind="function" id="group___c_c_u4_1ga38533fac543669af19de6972cd56a3a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___c_c_u4_1ga5bd133ab5643ed217b548ce94f6bacc6" kindref="member">XMC_CCU4_SLICE_STATUS_BIT_t</ref></type>
        <definition>XMC_CCU4_SLICE_STATUS_BIT_t XMC_CCU4_GetSliceStatusBit</definition>
        <argsstring>(XMC_CCU4_MODULE_t *const module, uint8_t slice_number)</argsstring>
        <name>XMC_CCU4_GetSliceStatusBit</name>
        <param>
          <type><ref refid="group___c_c_u4_1gabc8c277fccba02adfd4c57fdbf66df71" kindref="member">XMC_CCU4_MODULE_t</ref> *const</type>
          <declname>module</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>slice_number</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>module</parametername>
</parameternamelist>
<parameterdescription>
<para>Constant pointer to CCU4 module </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>slice_number</parametername>
</parameternamelist>
<parameterdescription>
<para>Slice for which the clock should be disabled. Range: [0x0 to 0x3] </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status bit of slice passive (false) or active (true)</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Returns CCU4 slice status bit (passive or active) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="2457" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" bodystart="2457" bodyend="2460"/>
      </memberdef>
      <memberdef kind="function" id="group___c_c_u4_1ga6ab30100f7e86a8f47095282a123d071" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CCU4_Init</definition>
        <argsstring>(XMC_CCU4_MODULE_t *const module, const XMC_CCU4_SLICE_MCMS_ACTION_t mcs_action)</argsstring>
        <name>XMC_CCU4_Init</name>
        <param>
          <type><ref refid="group___c_c_u4_1gabc8c277fccba02adfd4c57fdbf66df71" kindref="member">XMC_CCU4_MODULE_t</ref> *const</type>
          <declname>module</declname>
        </param>
        <param>
          <type>const <ref refid="group___c_c_u4_1ga1cdf6b35dbf21bc9ffd767cf8df77615" kindref="member">XMC_CCU4_SLICE_MCMS_ACTION_t</ref></type>
          <declname>mcs_action</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>module</parametername>
</parameternamelist>
<parameterdescription>
<para>Constant pointer to CCU4 module </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mcs_action</parametername>
</parameternamelist>
<parameterdescription>
<para>multi-channel shadow transfer request configuration </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><linebreak/>
 None<linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Initialization of global register GCTRL.<linebreak/>
<linebreak/>
 As part of module initialization, behaviour of the module upon detection Multi-Channel Mode trigger is configured. Will also invoke the <ref refid="group___c_c_u4_1ga71ef51e46d57bdd95563fdc0da1f44c3" kindref="member">XMC_CCU4_EnableModule()</ref>. The API call would bring up the required CCU4 module and also initialize the module for the required multi-channel shadow transfer.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___c_c_u4_1gaaaf6a6054b308d38a5d05a518d042873" kindref="member">XMC_CCU4_SLICE_CompareInit()</ref><linebreak/>
 <ref refid="group___c_c_u4_1ga0e1afff754cd0b288f3ef9e364b86092" kindref="member">XMC_CCU4_SLICE_CaptureInit()</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="829" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___c_c_u4_1ga13b0b2fb23ac55d1fcfa41378e22e395" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool XMC_CCU4_IsPrescalerRunning</definition>
        <argsstring>(XMC_CCU4_MODULE_t *const module)</argsstring>
        <name>XMC_CCU4_IsPrescalerRunning</name>
        <param>
          <type><ref refid="group___c_c_u4_1gabc8c277fccba02adfd4c57fdbf66df71" kindref="member">XMC_CCU4_MODULE_t</ref> *const</type>
          <declname>module</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>module</parametername>
</parameternamelist>
<parameterdescription>
<para>Constant pointer to CCU4 module </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><linebreak/>
 None<linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Returns the state of the prescaler, by reading GSTAT.PRB bit.<linebreak/>
<linebreak/>
This will return true if the prescaler is running. If clock is being supplied to the slices of the module then returns as true.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___c_c_u4_1gad492e0c49bfa5b89b01d6dd5a43a1e1b" kindref="member">XMC_CCU4_StartPrescaler()</ref><linebreak/>
 <ref refid="group___c_c_u4_1gae3741bc9dc0cb9f565ade9182d73141f" kindref="member">XMC_CCU4_StopPrescaler()</ref><linebreak/>
 <ref refid="group___c_c_u4_1ga1809347868d61b8627442802601fb863" kindref="member">XMC_CCU4_EnableClock()</ref><linebreak/>
 <ref refid="group___c_c_u4_1ga58ad9c171f730ad379f349aac4e78009" kindref="member">XMC_CCU4_DisableClock()</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="932" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" bodystart="932" bodyend="936"/>
      </memberdef>
      <memberdef kind="function" id="group___c_c_u4_1ga4d1f24c4884f22db6c469d8204c1f3af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool XMC_CCU4_IsValidModule</definition>
        <argsstring>(const XMC_CCU4_MODULE_t *const module)</argsstring>
        <name>XMC_CCU4_IsValidModule</name>
        <param>
          <type>const <ref refid="group___c_c_u4_1gabc8c277fccba02adfd4c57fdbf66df71" kindref="member">XMC_CCU4_MODULE_t</ref> *const</type>
          <declname>module</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="738" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" bodystart="738" bodyend="757"/>
      </memberdef>
      <memberdef kind="function" id="group___c_c_u4_1gabfdbd2dfdb411b6470870f9360f0e2e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool XMC_CCU4_IsValidSlice</definition>
        <argsstring>(const XMC_CCU4_SLICE_t *const slice)</argsstring>
        <name>XMC_CCU4_IsValidSlice</name>
        <param>
          <type>const <ref refid="group___c_c_u4_1ga759d9cc26009d3567612d196ac3f3969" kindref="member">XMC_CCU4_SLICE_t</ref> *const</type>
          <declname>slice</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="759" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" bodystart="759" bodyend="811"/>
      </memberdef>
      <memberdef kind="function" id="group___c_c_u4_1gaafc3f9bdcb648bf3e2cc6fdd1a597d3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CCU4_SetModuleClock</definition>
        <argsstring>(XMC_CCU4_MODULE_t *const module, const XMC_CCU4_CLOCK_t clock)</argsstring>
        <name>XMC_CCU4_SetModuleClock</name>
        <param>
          <type><ref refid="group___c_c_u4_1gabc8c277fccba02adfd4c57fdbf66df71" kindref="member">XMC_CCU4_MODULE_t</ref> *const</type>
          <declname>module</declname>
        </param>
        <param>
          <type>const <ref refid="group___c_c_u4_1gaf5e64519972ca9ee2c9b590eba7c041b" kindref="member">XMC_CCU4_CLOCK_t</ref></type>
          <declname>clock</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>module</parametername>
</parameternamelist>
<parameterdescription>
<para>Constant pointer to CCU4 module </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>clock</parametername>
</parameternamelist>
<parameterdescription>
<para>Choice of input clock to the module </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><linebreak/>
 None<linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Selects the Module Clock by configuring GCTRL.PCIS bits.<linebreak/>
<linebreak/>
 There are 3 potential clock sources. This API helps to select the required clock source. Call to this API is valid after the <ref refid="group___c_c_u4_1ga6ab30100f7e86a8f47095282a123d071" kindref="member">XMC_CCU4_Init()</ref>.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para>None.<linebreak/>
 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="845" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___c_c_u4_1ga10d688acde3cd3ffa2067973c640f9bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CCU4_SetMultiChannelShadowTransferMode</definition>
        <argsstring>(XMC_CCU4_MODULE_t *const module, const uint32_t slice_mode_msk)</argsstring>
        <name>XMC_CCU4_SetMultiChannelShadowTransferMode</name>
        <param>
          <type><ref refid="group___c_c_u4_1gabc8c277fccba02adfd4c57fdbf66df71" kindref="member">XMC_CCU4_MODULE_t</ref> *const</type>
          <declname>module</declname>
        </param>
        <param>
          <type>const uint32_t</type>
          <declname>slice_mode_msk</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>module</parametername>
</parameternamelist>
<parameterdescription>
<para>Constant pointer to CCU4 module </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>slice_mode_msk</parametername>
</parameternamelist>
<parameterdescription>
<para>Slices for which the configuration has to be applied. Use <ref refid="group___c_c_u4_1ga9a88d5f27f3d04acf49beae187238299" kindref="member">XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_t</ref> enum items to create a mask of choice, using a bit wise OR operation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><linebreak/>
 None<linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Enables the Multi-channel shadow transfer request trigger signal either by software or hardware by configuring GCTRL.MSE0, GCTRL.MSE1, GCTRL.MSE2, and GCTRL.MSE3 based on the mask.<linebreak/>
<linebreak/>
The shadow transfer would take place either if it was requested by software or by the CCU4x.MCSS input.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para>None. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="2031" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___c_c_u4_1ga541ed12424b01306986e12e15172e175" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CCU4_SetSuspendMode</definition>
        <argsstring>(XMC_CCU4_MODULE_t *const module, const XMC_CCU4_SUSPEND_MODE_t mode)</argsstring>
        <name>XMC_CCU4_SetSuspendMode</name>
        <param>
          <type><ref refid="group___c_c_u4_1gabc8c277fccba02adfd4c57fdbf66df71" kindref="member">XMC_CCU4_MODULE_t</ref> *const</type>
          <declname>module</declname>
        </param>
        <param>
          <type>const <ref refid="group___c_c_u4_1gac29c624b192d2b963e29389ae01a707a" kindref="member">XMC_CCU4_SUSPEND_MODE_t</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>module</parametername>
</parameternamelist>
<parameterdescription>
<para>Constant pointer to CCU8 module </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mode</parametername>
</parameternamelist>
<parameterdescription>
<para>Selects suspend mode </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><linebreak/>
 None<linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Configures the entering in suspend mode for all the CCU8 slices.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para>None. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="1024" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" bodystart="1024" bodyend="1028"/>
      </memberdef>
      <memberdef kind="function" id="group___c_c_u4_1ga3ed073924b8580efb863070ddf20426a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CCU4_SLICE_Capture0Config</definition>
        <argsstring>(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t event)</argsstring>
        <name>XMC_CCU4_SLICE_Capture0Config</name>
        <param>
          <type><ref refid="group___c_c_u4_1ga759d9cc26009d3567612d196ac3f3969" kindref="member">XMC_CCU4_SLICE_t</ref> *const</type>
          <declname>slice</declname>
        </param>
        <param>
          <type>const <ref refid="group___c_c_u4_1gacc266caa550eca30994d968fa3b82b94" kindref="member">XMC_CCU4_SLICE_EVENT_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>slice</parametername>
</parameternamelist>
<parameterdescription>
<para>Constant pointer to CC4 Slice </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>Map an External event to the Capture-0 Function </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><linebreak/>
 None<linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Configures the Capture-0 Function of the slice, by configuring CC4yCMC.CAP0S bit.<linebreak/>
<linebreak/>
Capture function is mapped with one of the 3 events. A CCU4 slice can be configured into capture-0 mode with the selected <bold>event</bold>. In this mode the CCU4 will capture the timer value into CC4yC0V and CC4yC1V.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___c_c_u4_1ga6417b3f8823b6c76ec44118fc9c1eeb7" kindref="member">XMC_CCU4_SLICE_ConfigureEvent()</ref><linebreak/>
 <ref refid="group___c_c_u4_1ga28e214514acb1a75a67de63e6d74b167" kindref="member">XMC_CCU4_SLICE_SetInput()</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="1195" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___c_c_u4_1ga01bd8510437249b1bc33eb5cd2da7b0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CCU4_SLICE_Capture1Config</definition>
        <argsstring>(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t event)</argsstring>
        <name>XMC_CCU4_SLICE_Capture1Config</name>
        <param>
          <type><ref refid="group___c_c_u4_1ga759d9cc26009d3567612d196ac3f3969" kindref="member">XMC_CCU4_SLICE_t</ref> *const</type>
          <declname>slice</declname>
        </param>
        <param>
          <type>const <ref refid="group___c_c_u4_1gacc266caa550eca30994d968fa3b82b94" kindref="member">XMC_CCU4_SLICE_EVENT_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>slice</parametername>
</parameternamelist>
<parameterdescription>
<para>Constant pointer to CC4 Slice </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>Map an External event to the Capture-1 Function </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><linebreak/>
 None<linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Configures the Capture-1 Function of the slice, by configuring CC4yCMC.CAP1S bit.<linebreak/>
<linebreak/>
Capture function is mapped with one of the 3 events. A CCU4 slice can be configured into capture-1 mode with the selected <bold>event</bold>. In this mode the CCU4 will capture the timer value into CC4yC2V and CC4yC3V.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___c_c_u4_1ga6417b3f8823b6c76ec44118fc9c1eeb7" kindref="member">XMC_CCU4_SLICE_ConfigureEvent()</ref><linebreak/>
 <ref refid="group___c_c_u4_1ga28e214514acb1a75a67de63e6d74b167" kindref="member">XMC_CCU4_SLICE_SetInput()</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="1211" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___c_c_u4_1ga0e1afff754cd0b288f3ef9e364b86092" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CCU4_SLICE_CaptureInit</definition>
        <argsstring>(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_CAPTURE_CONFIG_t *const capture_init)</argsstring>
        <name>XMC_CCU4_SLICE_CaptureInit</name>
        <param>
          <type><ref refid="group___c_c_u4_1ga759d9cc26009d3567612d196ac3f3969" kindref="member">XMC_CCU4_SLICE_t</ref> *const</type>
          <declname>slice</declname>
        </param>
        <param>
          <type>const <ref refid="struct_x_m_c___c_c_u4___s_l_i_c_e___c_a_p_t_u_r_e___c_o_n_f_i_g__t" kindref="compound">XMC_CCU4_SLICE_CAPTURE_CONFIG_t</ref> *const</type>
          <declname>capture_init</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>slice</parametername>
</parameternamelist>
<parameterdescription>
<para>Constant pointer to CC4 Slice </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>capture_init</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to slice configuration structure </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><linebreak/>
 None<linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Initialization of a CC4 slice to capture mode, by configuring CC4yTC, CC4yCMC, CC4yPSC,CC4yFPCS registers.<linebreak/>
<linebreak/>
CC4 slice is configured with Capture configurations in this routine.After initialization user has to explicitly enable the shadow transfer for the required values by calling <ref refid="group___c_c_u4_1gadcfbaa660e4c008e78128b8deb4cc5c1" kindref="member">XMC_CCU4_EnableShadowTransfer()</ref> with appropriate mask.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___c_c_u4_1ga3ed073924b8580efb863070ddf20426a" kindref="member">XMC_CCU4_SLICE_Capture0Config()</ref><linebreak/>
 <ref refid="group___c_c_u4_1ga01bd8510437249b1bc33eb5cd2da7b0f" kindref="member">XMC_CCU4_SLICE_Capture1Config()</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="1064" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___c_c_u4_1ga40dd61be60dc66c77164829280181e90" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CCU4_SLICE_ClearEvent</definition>
        <argsstring>(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_IRQ_ID_t event)</argsstring>
        <name>XMC_CCU4_SLICE_ClearEvent</name>
        <param>
          <type><ref refid="group___c_c_u4_1ga759d9cc26009d3567612d196ac3f3969" kindref="member">XMC_CCU4_SLICE_t</ref> *const</type>
          <declname>slice</declname>
        </param>
        <param>
          <type>const <ref refid="group___c_c_u4_1ga9b6b22c75755089c6c4038de4a5d213c" kindref="member">XMC_CCU4_SLICE_IRQ_ID_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>slice</parametername>
</parameternamelist>
<parameterdescription>
<para>Constant pointer to CC4 Slice </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>Asserted event which must be acknowledged. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><linebreak/>
 None<linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Acknowledges an asserted event, by setting CC4ySWR with respective event flag.<linebreak/>
<linebreak/>
 </para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___c_c_u4_1ga70968924480cf3d06eb9381856a69b87" kindref="member">XMC_CCU4_SLICE_EnableEvent()</ref><linebreak/>
 <ref refid="group___c_c_u4_1gaa063b2ed84316c3dfb3f45b8cf2fcd38" kindref="member">XMC_CCU4_SLICE_SetEvent()</ref><linebreak/>
 <ref refid="group___c_c_u4_1ga6d5a5802adc4917b4802db02926397e9" kindref="member">XMC_CCU4_SLICE_GetEvent()</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="2199" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" bodystart="2199" bodyend="2204"/>
      </memberdef>
      <memberdef kind="function" id="group___c_c_u4_1ga4520a69a5d5e653512ca6042feef4678" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CCU4_SLICE_ClearTimer</definition>
        <argsstring>(XMC_CCU4_SLICE_t *const slice)</argsstring>
        <name>XMC_CCU4_SLICE_ClearTimer</name>
        <param>
          <type><ref refid="group___c_c_u4_1ga759d9cc26009d3567612d196ac3f3969" kindref="member">XMC_CCU4_SLICE_t</ref> *const</type>
          <declname>slice</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>slice</parametername>
</parameternamelist>
<parameterdescription>
<para>Constant pointer to CC4 Slice </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><linebreak/>
 None<linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Resets the timer count to zero, by setting CC4yTCCLR.TCC bit.<linebreak/>
<linebreak/>
A timer which has been stopped can still retain the last counted value. After invoking this API the timer value will be cleared.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___c_c_u4_1ga9997bb59706a4034e3e3be33a4935a7c" kindref="member">XMC_CCU4_SLICE_StartTimer()</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="1523" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" bodystart="1523" bodyend="1527"/>
      </memberdef>
      <memberdef kind="function" id="group___c_c_u4_1gaaaf6a6054b308d38a5d05a518d042873" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CCU4_SLICE_CompareInit</definition>
        <argsstring>(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_COMPARE_CONFIG_t *const compare_init)</argsstring>
        <name>XMC_CCU4_SLICE_CompareInit</name>
        <param>
          <type><ref refid="group___c_c_u4_1ga759d9cc26009d3567612d196ac3f3969" kindref="member">XMC_CCU4_SLICE_t</ref> *const</type>
          <declname>slice</declname>
        </param>
        <param>
          <type>const <ref refid="struct_x_m_c___c_c_u4___s_l_i_c_e___c_o_m_p_a_r_e___c_o_n_f_i_g__t" kindref="compound">XMC_CCU4_SLICE_COMPARE_CONFIG_t</ref> *const</type>
          <declname>compare_init</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>slice</parametername>
</parameternamelist>
<parameterdescription>
<para>Constant pointer to CC4 Slice </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>compare_init</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to slice configuration structure </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><linebreak/>
 None<linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Initialization of a CC4 slice to compare mode, by configuring CC4yTC, CC4yCMC, CC4yPSC, CC4yDITH, CC4yPSL, CC4yFPCS, CC4yCHC registers.<linebreak/>
<linebreak/>
CC4 slice is configured with Timer configurations in this routine. After initialization user has to explicitly enable the shadow transfer for the required values by calling <ref refid="group___c_c_u4_1gadcfbaa660e4c008e78128b8deb4cc5c1" kindref="member">XMC_CCU4_EnableShadowTransfer()</ref> with appropriate mask.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para>None. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="1046" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___c_c_u4_1ga6417b3f8823b6c76ec44118fc9c1eeb7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CCU4_SLICE_ConfigureEvent</definition>
        <argsstring>(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t event, const XMC_CCU4_SLICE_EVENT_CONFIG_t *const config)</argsstring>
        <name>XMC_CCU4_SLICE_ConfigureEvent</name>
        <param>
          <type><ref refid="group___c_c_u4_1ga759d9cc26009d3567612d196ac3f3969" kindref="member">XMC_CCU4_SLICE_t</ref> *const</type>
          <declname>slice</declname>
        </param>
        <param>
          <type>const <ref refid="group___c_c_u4_1gacc266caa550eca30994d968fa3b82b94" kindref="member">XMC_CCU4_SLICE_EVENT_t</ref></type>
          <declname>event</declname>
        </param>
        <param>
          <type>const <ref refid="struct_x_m_c___c_c_u4___s_l_i_c_e___e_v_e_n_t___c_o_n_f_i_g__t" kindref="compound">XMC_CCU4_SLICE_EVENT_CONFIG_t</ref> *const</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>slice</parametername>
</parameternamelist>
<parameterdescription>
<para>Constant pointer to CC4 Slice </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>The External Event which needs to be configured. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to event configuration data. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><linebreak/>
 None<linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Configures an External Event of the slice, by updating CC4yINS register .<linebreak/>
<linebreak/>
Details such as the input mapped to the event, event detection criteria and low pass filter options are programmed by this routine. The Event <bold>config</bold> will configure the input selection, the edge selection, the level selection and the Low pass filter for the event.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___c_c_u4_1gac029dc08c5d54be8e773df0de9641691" kindref="member">XMC_CCU4_SLICE_StartConfig()</ref><linebreak/>
 <ref refid="group___c_c_u4_1ga17330b4b761f443140b1c736c1a09840" kindref="member">XMC_CCU4_SLICE_StopConfig()</ref><linebreak/>
 <ref refid="group___c_c_u4_1ga2d77fccc50ddf0c24b4906fd1b4ba1ae" kindref="member">XMC_CCU4_SLICE_LoadConfig()</ref><linebreak/>
 <ref refid="group___c_c_u4_1ga14933455fad7c724768f0cf8fbd61324" kindref="member">XMC_CCU4_SLICE_ModulationConfig()</ref><linebreak/>
 <ref refid="group___c_c_u4_1gaf312a02f00b3149c2f5cd3faea6f93c2" kindref="member">XMC_CCU4_SLICE_CountConfig()</ref><linebreak/>
 <ref refid="group___c_c_u4_1gafbf3c4118d03da31af66baf439183cae" kindref="member">XMC_CCU4_SLICE_GateConfig()</ref><linebreak/>
 <ref refid="group___c_c_u4_1ga3ed073924b8580efb863070ddf20426a" kindref="member">XMC_CCU4_SLICE_Capture0Config()</ref><linebreak/>
 <ref refid="group___c_c_u4_1ga01bd8510437249b1bc33eb5cd2da7b0f" kindref="member">XMC_CCU4_SLICE_Capture1Config()</ref><linebreak/>
 <ref refid="group___c_c_u4_1gac61d7dc678e8379b4afaa8d763975866" kindref="member">XMC_CCU4_SLICE_DirectionConfig()</ref><linebreak/>
 <ref refid="group___c_c_u4_1ga8f1ff68c2bae61d72c539684a050553b" kindref="member">XMC_CCU4_SLICE_StatusBitOverrideConfig()</ref><linebreak/>
 <ref refid="group___c_c_u4_1gab2d5615177cfa2f20c5f5655400f4a8e" kindref="member">XMC_CCU4_SLICE_TrapConfig()</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="1369" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___c_c_u4_1ga0b084822487e0ca0a4a950c7d0f36fa7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent</definition>
        <argsstring>(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_CONFIG_t *const ev1_config, const XMC_CCU4_SLICE_EVENT_CONFIG_t *const ev2_config)</argsstring>
        <name>XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent</name>
        <param>
          <type><ref refid="group___c_c_u4_1ga759d9cc26009d3567612d196ac3f3969" kindref="member">XMC_CCU4_SLICE_t</ref> *const</type>
          <declname>slice</declname>
        </param>
        <param>
          <type>const <ref refid="struct_x_m_c___c_c_u4___s_l_i_c_e___e_v_e_n_t___c_o_n_f_i_g__t" kindref="compound">XMC_CCU4_SLICE_EVENT_CONFIG_t</ref> *const</type>
          <declname>ev1_config</declname>
        </param>
        <param>
          <type>const <ref refid="struct_x_m_c___c_c_u4___s_l_i_c_e___e_v_e_n_t___c_o_n_f_i_g__t" kindref="compound">XMC_CCU4_SLICE_EVENT_CONFIG_t</ref> *const</type>
          <declname>ev2_config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>slice</parametername>
</parameternamelist>
<parameterdescription>
<para>Constant pointer to CC4 Slice </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ev1_config</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to event 1 configuration data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ev2_config</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to event 2 configuration data </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><linebreak/>
 None<linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Map Status bit override function with an Event1 &amp; Event 2 of the slice and configure CC4yINS register.<linebreak/>
<linebreak/>
Details such as the input mapped to the event, event detection criteria and Low Pass filter options are programmed by this routine for the events 1 &amp; 2. Event-1 input would be the trigger to override the value. Event-2 input would be the override value.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___c_c_u4_1ga8f1ff68c2bae61d72c539684a050553b" kindref="member">XMC_CCU4_SLICE_StatusBitOverrideConfig()</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="1346" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___c_c_u4_1gaf312a02f00b3149c2f5cd3faea6f93c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CCU4_SLICE_CountConfig</definition>
        <argsstring>(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t event)</argsstring>
        <name>XMC_CCU4_SLICE_CountConfig</name>
        <param>
          <type><ref refid="group___c_c_u4_1ga759d9cc26009d3567612d196ac3f3969" kindref="member">XMC_CCU4_SLICE_t</ref> *const</type>
          <declname>slice</declname>
        </param>
        <param>
          <type>const <ref refid="group___c_c_u4_1gacc266caa550eca30994d968fa3b82b94" kindref="member">XMC_CCU4_SLICE_EVENT_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>slice</parametername>
</parameternamelist>
<parameterdescription>
<para>Constant pointer to CC4 Slice </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>Map an External event to the External Count Function </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><linebreak/>
 None<linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Configures the Count Function of the slice, by configuring CC4yCMC.CNTS bit.<linebreak/>
<linebreak/>
Count function is mapped with one of the 3 events. CCU4 slice can take an external signal to act as the counting event. The CCU4 slice would count the edges present on the <bold>event</bold> selected.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___c_c_u4_1ga6417b3f8823b6c76ec44118fc9c1eeb7" kindref="member">XMC_CCU4_SLICE_ConfigureEvent()</ref><linebreak/>
 <ref refid="group___c_c_u4_1ga28e214514acb1a75a67de63e6d74b167" kindref="member">XMC_CCU4_SLICE_SetInput()</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="1163" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___c_c_u4_1gac61d7dc678e8379b4afaa8d763975866" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CCU4_SLICE_DirectionConfig</definition>
        <argsstring>(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t event)</argsstring>
        <name>XMC_CCU4_SLICE_DirectionConfig</name>
        <param>
          <type><ref refid="group___c_c_u4_1ga759d9cc26009d3567612d196ac3f3969" kindref="member">XMC_CCU4_SLICE_t</ref> *const</type>
          <declname>slice</declname>
        </param>
        <param>
          <type>const <ref refid="group___c_c_u4_1gacc266caa550eca30994d968fa3b82b94" kindref="member">XMC_CCU4_SLICE_EVENT_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>slice</parametername>
</parameternamelist>
<parameterdescription>
<para>Constant pointer to CC4 Slice </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>Map an External event to the External Count Direction Function </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><linebreak/>
 None<linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Configures the Count Direction of the slice, by configuring CC4yCMC.UDS bit.<linebreak/>
<linebreak/>
Count direction function is mapped with one of the 3 events. A slice can be configured to change the CC4yTIMER count direction depending on an external signal.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___c_c_u4_1ga6417b3f8823b6c76ec44118fc9c1eeb7" kindref="member">XMC_CCU4_SLICE_ConfigureEvent()</ref><linebreak/>
 <ref refid="group___c_c_u4_1ga28e214514acb1a75a67de63e6d74b167" kindref="member">XMC_CCU4_SLICE_SetInput()</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="1290" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___c_c_u4_1ga3e4002ef45cbd1504f1dfa03be7f79d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CCU4_SLICE_DisableAutomaticShadowTransferRequest</definition>
        <argsstring>(XMC_CCU4_SLICE_t *const slice, const uint32_t automatic_shadow_transfer)</argsstring>
        <name>XMC_CCU4_SLICE_DisableAutomaticShadowTransferRequest</name>
        <param>
          <type><ref refid="group___c_c_u4_1ga759d9cc26009d3567612d196ac3f3969" kindref="member">XMC_CCU4_SLICE_t</ref> *const</type>
          <declname>slice</declname>
        </param>
        <param>
          <type>const uint32_t</type>
          <declname>automatic_shadow_transfer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>slice</parametername>
</parameternamelist>
<parameterdescription>
<para>Constant pointer to CC4 Slice </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>automatic_shadow_transfer</parametername>
</parameternamelist>
<parameterdescription>
<para>specify upon which register update, automatic shadow transfer request should not be generated Use :: XMC_CCU4_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_t enum items to create a mask of choice, using a bit wise OR operation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><linebreak/>
 None<linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Configure on which shadow register update, automatic shadow transfer request generation has to be disabled. By clearing ASPC, ASCC1, ASCC2, ASLC, ASDC, ASFC bits in STC register.<linebreak/>
<linebreak/>
 This disables the generation of automatic shadow transfer request for the specified register update. </para>
</simplesect>
<simplesect kind="par"><title>Note:</title><para></para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___c_c_u4_1gada142961bff1eae9b4182249810b762e" kindref="member">XMC_CCU4_SLICE_EnableAutomaticShadowTransferRequest()</ref>. </para>
</simplesect>
<simplesect kind="note"><para>Only available for XMC1400 series </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="2439" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" bodystart="2439" bodyend="2444"/>
      </memberdef>
      <memberdef kind="function" id="group___c_c_u4_1gaf299d2965b919f5828ded78d2d015baa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CCU4_SLICE_DisableCascadedShadowTransfer</definition>
        <argsstring>(XMC_CCU4_SLICE_t *const slice)</argsstring>
        <name>XMC_CCU4_SLICE_DisableCascadedShadowTransfer</name>
        <param>
          <type><ref refid="group___c_c_u4_1ga759d9cc26009d3567612d196ac3f3969" kindref="member">XMC_CCU4_SLICE_t</ref> *const</type>
          <declname>slice</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>slice</parametername>
</parameternamelist>
<parameterdescription>
<para>Constant pointer to CC4 Slice</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><linebreak/>
 None<linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Disables the cascaded the shadow transfer operation, by clearing CSE bit in STC register.<linebreak/>
<linebreak/>
 If in any slice the cascaded mode disabled, other slices from there onwards does not update the values in cascaded mode.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___c_c_u4_1gaa8a44e999105f023b688fb8e3cf28c43" kindref="member">XMC_CCU4_SLICE_EnableCascadedShadowTransfer()</ref><linebreak/>
. </para>
</simplesect>
<simplesect kind="note"><para>Only available for XMC1400 series </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="2308" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" bodystart="2308" bodyend="2312"/>
      </memberdef>
      <memberdef kind="function" id="group___c_c_u4_1ga074938e1d84568cc5d0c14247188ceab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CCU4_SLICE_DisableDithering</definition>
        <argsstring>(XMC_CCU4_SLICE_t *const slice)</argsstring>
        <name>XMC_CCU4_SLICE_DisableDithering</name>
        <param>
          <type><ref refid="group___c_c_u4_1ga759d9cc26009d3567612d196ac3f3969" kindref="member">XMC_CCU4_SLICE_t</ref> *const</type>
          <declname>slice</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>slice</parametername>
</parameternamelist>
<parameterdescription>
<para>Constant pointer to CC4 Slice </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><linebreak/>
 None<linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Disables dithering of PWM frequency and duty cycle, by clearing CC4yTC.DITHE bits.<linebreak/>
<linebreak/>
This disables the Dither mode that was set in <ref refid="group___c_c_u4_1ga726d7c99adf8d7f438f1f08ef2a9de1a" kindref="member">XMC_CCU4_SLICE_EnableDithering()</ref>. This API will not clear the dither compare value.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___c_c_u4_1ga726d7c99adf8d7f438f1f08ef2a9de1a" kindref="member">XMC_CCU4_SLICE_EnableDithering()</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="1846" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" bodystart="1846" bodyend="1850"/>
      </memberdef>
      <memberdef kind="function" id="group___c_c_u4_1ga1d8dd9cc41693043dec0ae759d91fbae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CCU4_SLICE_DisableEvent</definition>
        <argsstring>(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_IRQ_ID_t event)</argsstring>
        <name>XMC_CCU4_SLICE_DisableEvent</name>
        <param>
          <type><ref refid="group___c_c_u4_1ga759d9cc26009d3567612d196ac3f3969" kindref="member">XMC_CCU4_SLICE_t</ref> *const</type>
          <declname>slice</declname>
        </param>
        <param>
          <type>const <ref refid="group___c_c_u4_1ga9b6b22c75755089c6c4038de4a5d213c" kindref="member">XMC_CCU4_SLICE_IRQ_ID_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>slice</parametername>
</parameternamelist>
<parameterdescription>
<para>Constant pointer to CC4 Slice </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>Event whose assertion can potentially lead to an interrupt </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><linebreak/>
 None<linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Disables the generation of an interrupt pulse for the event, by clearing CC4yINTE register.<linebreak/>
<linebreak/>
Prevents the event from being asserted</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___c_c_u4_1ga08c882083ebd4d874a466b61d011e3f7" kindref="member">XMC_CCU4_SLICE_SetInterruptNode()</ref><linebreak/>
 <ref refid="group___c_c_u4_1ga70968924480cf3d06eb9381856a69b87" kindref="member">XMC_CCU4_SLICE_EnableEvent()</ref><linebreak/>
 <ref refid="group___c_c_u4_1gadc79794c8392fdd71e843220786d8d99" kindref="member">XMC_CCU4_SLICE_EnableMultipleEvents()</ref><linebreak/>
 <ref refid="group___c_c_u4_1ga3152586e4a4d2f25775bb0286653ca8c" kindref="member">XMC_CCU4_SLICE_DisableMultipleEvents()</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="2136" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" bodystart="2136" bodyend="2142"/>
      </memberdef>
      <memberdef kind="function" id="group___c_c_u4_1gae2c8386269be2f976ab9bb83da99087a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CCU4_SLICE_DisableFloatingPrescaler</definition>
        <argsstring>(XMC_CCU4_SLICE_t *const slice)</argsstring>
        <name>XMC_CCU4_SLICE_DisableFloatingPrescaler</name>
        <param>
          <type><ref refid="group___c_c_u4_1ga759d9cc26009d3567612d196ac3f3969" kindref="member">XMC_CCU4_SLICE_t</ref> *const</type>
          <declname>slice</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>slice</parametername>
</parameternamelist>
<parameterdescription>
<para>Constant pointer to CC4 Slice </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><linebreak/>
 None<linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Disables the floating prescaler, by clearing CC4yTC.FPE bit.<linebreak/>
<linebreak/>
This would return the prescaler to the normal mode. The prescaler that would be applied is the value present in CC4yPSC.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___c_c_u4_1ga495ca5dfa02beb5a818dd113ebf99ae1" kindref="member">XMC_CCU4_SLICE_EnableFloatingPrescaler()</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="1886" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" bodystart="1886" bodyend="1890"/>
      </memberdef>
      <memberdef kind="function" id="group___c_c_u4_1ga08273e7c8fa6261de82759637831a989" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CCU4_SLICE_DisableMultiChannelMode</definition>
        <argsstring>(XMC_CCU4_SLICE_t *const slice)</argsstring>
        <name>XMC_CCU4_SLICE_DisableMultiChannelMode</name>
        <param>
          <type><ref refid="group___c_c_u4_1ga759d9cc26009d3567612d196ac3f3969" kindref="member">XMC_CCU4_SLICE_t</ref> *const</type>
          <declname>slice</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>slice</parametername>
</parameternamelist>
<parameterdescription>
<para>Constant pointer to CC4 Slice </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><linebreak/>
 None<linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Disables the multichannel mode, by clearing CC4yTC.MCME bit.<linebreak/>
<linebreak/>
This would return the slices to the normal operation mode.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___c_c_u4_1ga470cd6e533923a9495e76fd7f0fcf0de" kindref="member">XMC_CCU4_SLICE_EnableMultiChannelMode()</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="2009" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" bodystart="2009" bodyend="2013"/>
      </memberdef>
      <memberdef kind="function" id="group___c_c_u4_1ga3152586e4a4d2f25775bb0286653ca8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CCU4_SLICE_DisableMultipleEvents</definition>
        <argsstring>(XMC_CCU4_SLICE_t *const slice, const uint16_t mask)</argsstring>
        <name>XMC_CCU4_SLICE_DisableMultipleEvents</name>
        <param>
          <type><ref refid="group___c_c_u4_1ga759d9cc26009d3567612d196ac3f3969" kindref="member">XMC_CCU4_SLICE_t</ref> *const</type>
          <declname>slice</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>slice</parametername>
</parameternamelist>
<parameterdescription>
<para>Constant pointer to CC4 Slice </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Event mask such that multiple events can be enabled. Use <ref refid="group___c_c_u4_1ga99a221425b50cb24f3358c905c92f105" kindref="member">XMC_CCU4_SLICE_MULTI_IRQ_ID_t</ref> enum items to create a mask of choice, using a bit wise OR operation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><linebreak/>
 None<linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Disables the generation of an interrupt pulse for the required events, by clearing CC4yINTE register.<linebreak/>
<linebreak/>
 Prevents selected events of the slice from being asserted.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___c_c_u4_1ga08c882083ebd4d874a466b61d011e3f7" kindref="member">XMC_CCU4_SLICE_SetInterruptNode()</ref><linebreak/>
 <ref refid="group___c_c_u4_1ga70968924480cf3d06eb9381856a69b87" kindref="member">XMC_CCU4_SLICE_EnableEvent()</ref><linebreak/>
 <ref refid="group___c_c_u4_1gadc79794c8392fdd71e843220786d8d99" kindref="member">XMC_CCU4_SLICE_EnableMultipleEvents()</ref><linebreak/>
 <ref refid="group___c_c_u4_1ga1d8dd9cc41693043dec0ae759d91fbae" kindref="member">XMC_CCU4_SLICE_DisableEvent()</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="2160" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" bodystart="2160" bodyend="2164"/>
      </memberdef>
      <memberdef kind="function" id="group___c_c_u4_1ga528b039bddfe9e20f765aaa2f7bdcc0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CCU4_SLICE_DisableTrap</definition>
        <argsstring>(XMC_CCU4_SLICE_t *const slice)</argsstring>
        <name>XMC_CCU4_SLICE_DisableTrap</name>
        <param>
          <type><ref refid="group___c_c_u4_1ga759d9cc26009d3567612d196ac3f3969" kindref="member">XMC_CCU4_SLICE_t</ref> *const</type>
          <declname>slice</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>slice</parametername>
</parameternamelist>
<parameterdescription>
<para>Constant pointer to CC4 Slice </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><linebreak/>
 None<linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Disables the trap feature, by clearing CC4yTC.TRAPE0, CC4yTC.TRAPE1, CC4yTC.TRAPE2 and CC4yTC.TRAPE3 bit based on the <emphasis>out_mask</emphasis>.<linebreak/>
<linebreak/>
.<linebreak/>
<linebreak/>
This API will revert the changes done by <ref refid="group___c_c_u4_1gaba1fc3c0735f1bed11dafb3d4c773ba5" kindref="member">XMC_CCU4_SLICE_EnableTrap()</ref>. This Ensures that the TRAP function has no effect on the output of the CCU4 slice.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___c_c_u4_1gaba1fc3c0735f1bed11dafb3d4c773ba5" kindref="member">XMC_CCU4_SLICE_EnableTrap()</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="1431" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" bodystart="1431" bodyend="1435"/>
      </memberdef>
      <memberdef kind="function" id="group___c_c_u4_1gada142961bff1eae9b4182249810b762e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CCU4_SLICE_EnableAutomaticShadowTransferRequest</definition>
        <argsstring>(XMC_CCU4_SLICE_t *const slice, const uint32_t automatic_shadow_transfer)</argsstring>
        <name>XMC_CCU4_SLICE_EnableAutomaticShadowTransferRequest</name>
        <param>
          <type><ref refid="group___c_c_u4_1ga759d9cc26009d3567612d196ac3f3969" kindref="member">XMC_CCU4_SLICE_t</ref> *const</type>
          <declname>slice</declname>
        </param>
        <param>
          <type>const uint32_t</type>
          <declname>automatic_shadow_transfer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>slice</parametername>
</parameternamelist>
<parameterdescription>
<para>Constant pointer to CC4 Slice </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>automatic_shadow_transfer</parametername>
</parameternamelist>
<parameterdescription>
<para>specify upon which register update, automatic shadow transfer request is generated Use :: XMC_CCU4_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_t enum items to create a mask of choice, using a bit wise OR operation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><linebreak/>
 None<linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Configure on which shadow register update, automatic shadow transfer request generation has to be enabled. By setting ASPC, ASCC1, ASCC2, ASLC, ASDC, ASFC bits in STC register.<linebreak/>
<linebreak/>
 By updating the configured shadow register, the shadow transfer request is generated to update all the shadow registers. </para>
</simplesect>
<simplesect kind="par"><title>Note:</title><para></para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___c_c_u4_1ga3e4002ef45cbd1504f1dfa03be7f79d6" kindref="member">XMC_CCU4_SLICE_DisableAutomaticShadowTransferRequest()</ref>. </para>
</simplesect>
<simplesect kind="note"><para>Only available for XMC1400 series </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="2412" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" bodystart="2412" bodyend="2417"/>
      </memberdef>
      <memberdef kind="function" id="group___c_c_u4_1gaa8a44e999105f023b688fb8e3cf28c43" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CCU4_SLICE_EnableCascadedShadowTransfer</definition>
        <argsstring>(XMC_CCU4_SLICE_t *const slice)</argsstring>
        <name>XMC_CCU4_SLICE_EnableCascadedShadowTransfer</name>
        <param>
          <type><ref refid="group___c_c_u4_1ga759d9cc26009d3567612d196ac3f3969" kindref="member">XMC_CCU4_SLICE_t</ref> *const</type>
          <declname>slice</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>slice</parametername>
</parameternamelist>
<parameterdescription>
<para>Constant pointer to CC4 Slice</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><linebreak/>
 None<linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Cascades the shadow transfer operation throughout the CCU4 timer slices, by setting CSE bit in STC register.<linebreak/>
<linebreak/>
 The shadow transfer enable bits needs to be set in all timer slices, that are being used in the cascaded architecture, at the same time. The shadow transfer enable bits, also need to be set for all slices even if the shadow values of some slices were not updated. It is possible to to cascade with the adjacent slices only. CC40 slice is a master to start the operation.</para>
</simplesect>
<simplesect kind="par"><title>Note:</title><para><ref refid="group___c_c_u4_1gadcfbaa660e4c008e78128b8deb4cc5c1" kindref="member">XMC_CCU4_EnableShadowTransfer()</ref> must be called to enable the shadow transfer of the all the slices, which needs to be cascaded.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___c_c_u4_1gadcfbaa660e4c008e78128b8deb4cc5c1" kindref="member">XMC_CCU4_EnableShadowTransfer()</ref>, <ref refid="group___c_c_u4_1gaf299d2965b919f5828ded78d2d015baa" kindref="member">XMC_CCU4_SLICE_DisableCascadedShadowTransfer()</ref><linebreak/>
. </para>
</simplesect>
<simplesect kind="note"><para>Only available for XMC1400 series </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="2287" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" bodystart="2287" bodyend="2291"/>
      </memberdef>
      <memberdef kind="function" id="group___c_c_u4_1ga726d7c99adf8d7f438f1f08ef2a9de1a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CCU4_SLICE_EnableDithering</definition>
        <argsstring>(XMC_CCU4_SLICE_t *const slice, const bool period_dither, const bool duty_dither, const uint8_t spread)</argsstring>
        <name>XMC_CCU4_SLICE_EnableDithering</name>
        <param>
          <type><ref refid="group___c_c_u4_1ga759d9cc26009d3567612d196ac3f3969" kindref="member">XMC_CCU4_SLICE_t</ref> *const</type>
          <declname>slice</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>period_dither</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>duty_dither</declname>
        </param>
        <param>
          <type>const uint8_t</type>
          <declname>spread</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>slice</parametername>
</parameternamelist>
<parameterdescription>
<para>Constant pointer to CC4 Slice </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>period_dither</parametername>
</parameternamelist>
<parameterdescription>
<para>Boolean instruction on dithering of period match </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>duty_dither</parametername>
</parameternamelist>
<parameterdescription>
<para>Boolean instruction on dithering of compare match </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>spread</parametername>
</parameternamelist>
<parameterdescription>
<para>Dither compare value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><linebreak/>
 None<linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Enables dithering of PWM frequency and duty cycle, by configuring CC4yTC.DITHE and CC4yDITS bits.<linebreak/>
<linebreak/>
Some control loops are slow in updating PWM frequency and duty cycle. In such a case, a Bresenham style dithering can help reduce long term errors. Dithering can be applied to period and duty individually, this can be selected using the parameter <bold>period_dither</bold> and <bold>duty_dither</bold>. The <bold>spread</bold> would provide the dither compare value. If the dither counter value is less than this <bold>spread</bold> then the period/compare values would be dithered according to the dither mode selected. This API would invoke <ref refid="group___c_c_u4_1gac459b6e5e0efccd9bc762c5add86ca48" kindref="member">XMC_CCU4_SLICE_SetDitherCompareValue()</ref>.</para>
</simplesect>
<simplesect kind="par"><title>Note:</title><para>After this API call, <ref refid="group___c_c_u4_1gadcfbaa660e4c008e78128b8deb4cc5c1" kindref="member">XMC_CCU4_EnableShadowTransfer()</ref> has to be called with appropriate mask to transfer the dither value.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___c_c_u4_1ga074938e1d84568cc5d0c14247188ceab" kindref="member">XMC_CCU4_SLICE_DisableDithering()</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="1828" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___c_c_u4_1ga70968924480cf3d06eb9381856a69b87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CCU4_SLICE_EnableEvent</definition>
        <argsstring>(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_IRQ_ID_t event)</argsstring>
        <name>XMC_CCU4_SLICE_EnableEvent</name>
        <param>
          <type><ref refid="group___c_c_u4_1ga759d9cc26009d3567612d196ac3f3969" kindref="member">XMC_CCU4_SLICE_t</ref> *const</type>
          <declname>slice</declname>
        </param>
        <param>
          <type>const <ref refid="group___c_c_u4_1ga9b6b22c75755089c6c4038de4a5d213c" kindref="member">XMC_CCU4_SLICE_IRQ_ID_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>slice</parametername>
</parameternamelist>
<parameterdescription>
<para>Constant pointer to CC4 Slice </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>Event whose assertion can potentially lead to an interrupt </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><linebreak/>
 None<linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Enables the generation of an interrupt pulse for the event, by configuring CC4yINTE register.<linebreak/>
<linebreak/>
For an event to lead to an interrupt, it must first be enabled and bound to a service request line. The corresponding NVIC node must be enabled as well. This API merely enables the event. Binding with SR is performed by another API.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___c_c_u4_1ga08c882083ebd4d874a466b61d011e3f7" kindref="member">XMC_CCU4_SLICE_SetInterruptNode()</ref><linebreak/>
 <ref refid="group___c_c_u4_1gadc79794c8392fdd71e843220786d8d99" kindref="member">XMC_CCU4_SLICE_EnableMultipleEvents()</ref><linebreak/>
 <ref refid="group___c_c_u4_1ga1d8dd9cc41693043dec0ae759d91fbae" kindref="member">XMC_CCU4_SLICE_DisableEvent()</ref><linebreak/>
 <ref refid="group___c_c_u4_1ga3152586e4a4d2f25775bb0286653ca8c" kindref="member">XMC_CCU4_SLICE_DisableMultipleEvents()</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="2091" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" bodystart="2091" bodyend="2097"/>
      </memberdef>
      <memberdef kind="function" id="group___c_c_u4_1ga495ca5dfa02beb5a818dd113ebf99ae1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CCU4_SLICE_EnableFloatingPrescaler</definition>
        <argsstring>(XMC_CCU4_SLICE_t *const slice)</argsstring>
        <name>XMC_CCU4_SLICE_EnableFloatingPrescaler</name>
        <param>
          <type><ref refid="group___c_c_u4_1ga759d9cc26009d3567612d196ac3f3969" kindref="member">XMC_CCU4_SLICE_t</ref> *const</type>
          <declname>slice</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>slice</parametername>
</parameternamelist>
<parameterdescription>
<para>Constant pointer to CC4 Slice </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><linebreak/>
 None<linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Enables the floating prescaler, by setting CC4yTC.FPE bit.<linebreak/>
<linebreak/>
The prescaler divider starts with an initial value and increments upon every period match. It keeps incrementing until a ceiling (prescaler compare value) is hit and thereafter rolls back to the original prescaler divider value.<linebreak/>
It is necessary to have programmed an initial divider value and a compare value before the feature is enabled.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___c_c_u4_1ga989c0d32380efe2053c259ff4e7d3c78" kindref="member">XMC_CCU4_SLICE_SetFloatingPrescalerCompareValue()</ref><linebreak/>
 <ref refid="group___c_c_u4_1gae2c8386269be2f976ab9bb83da99087a" kindref="member">XMC_CCU4_SLICE_DisableFloatingPrescaler()</ref><linebreak/>
 <ref refid="group___c_c_u4_1ga24127bd989b62814c2ba0cc876b99473" kindref="member">XMC_CCU4_SLICE_SetPrescaler()</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="1867" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" bodystart="1867" bodyend="1871"/>
      </memberdef>
      <memberdef kind="function" id="group___c_c_u4_1ga470cd6e533923a9495e76fd7f0fcf0de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CCU4_SLICE_EnableMultiChannelMode</definition>
        <argsstring>(XMC_CCU4_SLICE_t *const slice)</argsstring>
        <name>XMC_CCU4_SLICE_EnableMultiChannelMode</name>
        <param>
          <type><ref refid="group___c_c_u4_1ga759d9cc26009d3567612d196ac3f3969" kindref="member">XMC_CCU4_SLICE_t</ref> *const</type>
          <declname>slice</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>slice</parametername>
</parameternamelist>
<parameterdescription>
<para>Constant pointer to CC4 Slice </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><linebreak/>
 None<linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Enables the multichannel mode, by setting CC4yTC.MCME bit.<linebreak/>
<linebreak/>
The output state of the Timer slices can be controlled in parallel by a single input signal. A particularly useful feature in motor control applications where the PWM output of multiple slices of a module can be gated and ungated by multi-channel gating inputs connected to the slices. A peripheral like POSIF connected to the motor knows exactly which of the power drive switches are to be turned on and off at any instant. It can thus through a gating bus (known as multi-channel inputs) control which of the slices output stays gated/ungated.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___c_c_u4_1ga08273e7c8fa6261de82759637831a989" kindref="member">XMC_CCU4_SLICE_DisableMultiChannelMode()</ref><linebreak/>
 <ref refid="group___c_c_u4_1ga10d688acde3cd3ffa2067973c640f9bf" kindref="member">XMC_CCU4_SetMultiChannelShadowTransferMode()</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="1991" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" bodystart="1991" bodyend="1995"/>
      </memberdef>
      <memberdef kind="function" id="group___c_c_u4_1gadc79794c8392fdd71e843220786d8d99" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CCU4_SLICE_EnableMultipleEvents</definition>
        <argsstring>(XMC_CCU4_SLICE_t *const slice, const uint16_t intr_mask)</argsstring>
        <name>XMC_CCU4_SLICE_EnableMultipleEvents</name>
        <param>
          <type><ref refid="group___c_c_u4_1ga759d9cc26009d3567612d196ac3f3969" kindref="member">XMC_CCU4_SLICE_t</ref> *const</type>
          <declname>slice</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>intr_mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>slice</parametername>
</parameternamelist>
<parameterdescription>
<para>Constant pointer to CC4 Slice </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>intr_mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Event mask such that multiple events can be enabled. Use <ref refid="group___c_c_u4_1ga99a221425b50cb24f3358c905c92f105" kindref="member">XMC_CCU4_SLICE_MULTI_IRQ_ID_t</ref> enum items to create a mask of choice, using a bit wise OR operation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><linebreak/>
 None<linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Enables the generation of an interrupt pulse for the required events, by configuring CC4yINTE register.<linebreak/>
<linebreak/>
For an event to lead to an interrupt, it must first be enabled and bound to a service request line. The corresponding NVIC node must be enabled as well. This API merely enables the events. Binding with SR is performed by another API.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___c_c_u4_1ga08c882083ebd4d874a466b61d011e3f7" kindref="member">XMC_CCU4_SLICE_SetInterruptNode()</ref><linebreak/>
 <ref refid="group___c_c_u4_1ga70968924480cf3d06eb9381856a69b87" kindref="member">XMC_CCU4_SLICE_EnableEvent()</ref><linebreak/>
 <ref refid="group___c_c_u4_1ga1d8dd9cc41693043dec0ae759d91fbae" kindref="member">XMC_CCU4_SLICE_DisableEvent()</ref><linebreak/>
 <ref refid="group___c_c_u4_1ga3152586e4a4d2f25775bb0286653ca8c" kindref="member">XMC_CCU4_SLICE_DisableMultipleEvents()</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="2116" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" bodystart="2116" bodyend="2120"/>
      </memberdef>
      <memberdef kind="function" id="group___c_c_u4_1gaba1fc3c0735f1bed11dafb3d4c773ba5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CCU4_SLICE_EnableTrap</definition>
        <argsstring>(XMC_CCU4_SLICE_t *const slice)</argsstring>
        <name>XMC_CCU4_SLICE_EnableTrap</name>
        <param>
          <type><ref refid="group___c_c_u4_1ga759d9cc26009d3567612d196ac3f3969" kindref="member">XMC_CCU4_SLICE_t</ref> *const</type>
          <declname>slice</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>slice</parametername>
</parameternamelist>
<parameterdescription>
<para>Constant pointer to CC4 Slice </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><linebreak/>
 None<linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Enables the trap feature, by setting CC4yTC.TRAPE0, CC4yTC.TRAPE1, CC4yTC.TRAPE2 and CC4yTC.TRAPE3 bit based on the <emphasis>out_mask</emphasis>.<linebreak/>
<linebreak/>
A particularly useful feature where the PWM output can be forced inactive upon detection of a trap. The trap signal can be the output of a sensing element which has just detected an abnormal electrical condition.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___c_c_u4_1gab2d5615177cfa2f20c5f5655400f4a8e" kindref="member">XMC_CCU4_SLICE_TrapConfig()</ref><linebreak/>
 <ref refid="group___c_c_u4_1ga528b039bddfe9e20f765aaa2f7bdcc0e" kindref="member">XMC_CCU4_SLICE_DisableTrap()</ref><linebreak/>
 <ref refid="group___c_c_u4_1ga6417b3f8823b6c76ec44118fc9c1eeb7" kindref="member">XMC_CCU4_SLICE_ConfigureEvent()</ref><linebreak/>
 <ref refid="group___c_c_u4_1ga28e214514acb1a75a67de63e6d74b167" kindref="member">XMC_CCU4_SLICE_SetInput()</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="1411" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" bodystart="1411" bodyend="1415"/>
      </memberdef>
      <memberdef kind="function" id="group___c_c_u4_1gafbf3c4118d03da31af66baf439183cae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CCU4_SLICE_GateConfig</definition>
        <argsstring>(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t event)</argsstring>
        <name>XMC_CCU4_SLICE_GateConfig</name>
        <param>
          <type><ref refid="group___c_c_u4_1ga759d9cc26009d3567612d196ac3f3969" kindref="member">XMC_CCU4_SLICE_t</ref> *const</type>
          <declname>slice</declname>
        </param>
        <param>
          <type>const <ref refid="group___c_c_u4_1gacc266caa550eca30994d968fa3b82b94" kindref="member">XMC_CCU4_SLICE_EVENT_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>slice</parametername>
</parameternamelist>
<parameterdescription>
<para>Constant pointer to CC4 Slice </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>Map an External event to the External Gating Function </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><linebreak/>
 None<linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Configures the Gating Function of the slice, by configuring CC4yCMC.GATES bit.<linebreak/>
<linebreak/>
Gating function is mapped with one of the 3 events. A CCU4 slice can use an input signal that would operate as counter gating. If the configured Active level is detected the counter will gate all the pulses.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___c_c_u4_1ga6417b3f8823b6c76ec44118fc9c1eeb7" kindref="member">XMC_CCU4_SLICE_ConfigureEvent()</ref><linebreak/>
 <ref refid="group___c_c_u4_1ga28e214514acb1a75a67de63e6d74b167" kindref="member">XMC_CCU4_SLICE_SetInput()</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="1179" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___c_c_u4_1ga0c918bf66f4046e22bb10f7172f8ae41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t XMC_CCU4_SLICE_GetCapturedValueFromFifo</definition>
        <argsstring>(const XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_CAP_REG_SET_t set)</argsstring>
        <name>XMC_CCU4_SLICE_GetCapturedValueFromFifo</name>
        <param>
          <type>const <ref refid="group___c_c_u4_1ga759d9cc26009d3567612d196ac3f3969" kindref="member">XMC_CCU4_SLICE_t</ref> *const</type>
          <declname>slice</declname>
        </param>
        <param>
          <type>const <ref refid="group___c_c_u4_1gab5c05e6fda34ac046c12ec25ef405a3d" kindref="member">XMC_CCU4_SLICE_CAP_REG_SET_t</ref></type>
          <declname>set</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>slice</parametername>
</parameternamelist>
<parameterdescription>
<para>Constant pointer to CC4 Slice </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>set</parametername>
</parameternamelist>
<parameterdescription>
<para>The capture register set from which the captured value is to be retrieved </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><linebreak/>
 uint32_t Returns the value captured in the <bold>slice_number</bold> Range: [0x0 to 0xFFFF]</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Read captured value from FIFO(CC4yECRD0 and CC4yECRD1).<linebreak/>
<linebreak/>
This is applicable only in the Capture mode of operation. The signal whose timing characteristics are to be measured must be mapped to an event which in turn must be mapped to the capture function. Based on the capture criteria, the instant timer values are captured into capture registers. Timing characteristics of the input signal may then be derived/inferred from the captured values.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___c_c_u4_1gaf9fa582be48916db21e086f073930ce2" kindref="member">XMC_CCU4_SLICE_IsExtendedCapReadEnabled()</ref>. </para>
</simplesect>
<simplesect kind="note"><para>Defined for XMC4800, XMC4700, XMC4500, XMC4400, XMC4200, XMC4100 devices only. For other devices use XMC_CCU4_GetCapturedValueFromFifo() API </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="1272" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___c_c_u4_1gaf3b2360da5116806f763ee79a63591ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t XMC_CCU4_SLICE_GetCaptureRegisterValue</definition>
        <argsstring>(const XMC_CCU4_SLICE_t *const slice, const uint8_t reg_num)</argsstring>
        <name>XMC_CCU4_SLICE_GetCaptureRegisterValue</name>
        <param>
          <type>const <ref refid="group___c_c_u4_1ga759d9cc26009d3567612d196ac3f3969" kindref="member">XMC_CCU4_SLICE_t</ref> *const</type>
          <declname>slice</declname>
        </param>
        <param>
          <type>const uint8_t</type>
          <declname>reg_num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>slice</parametername>
</parameternamelist>
<parameterdescription>
<para>Constant pointer to CC4 Slice </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>reg_num</parametername>
</parameternamelist>
<parameterdescription>
<para>The capture register from which the captured value is to be retrieved Range: [0,3] </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><linebreak/>
 uint32_t Returns the Capture register value. Range: [0 to 0x1FFFFF]</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Retrieves timer value which has been captured in the Capture registers, by reading CC4yCV[<bold>reg_num</bold>] register.<linebreak/>
<linebreak/>
The signal whose timing characteristics are to be measured must be mapped to an event which in turn must be mapped to the capture function. Based on the capture criteria, the timer values are captured into capture registers. Timing characteristics of the input signal may then be derived/inferred from the captured values. The full flag will help to find out if there is a new captured value present.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___c_c_u4_1ga3392bbfae89deb4a809aab04efde114b" kindref="member">XMC_CCU4_SLICE_GetLastCapturedTimerValue()</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="2051" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___c_c_u4_1ga6762faa90aae0987218b1c0b173b5385" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___c_c_u4_1gacbf19766ba6532d4b09ac3ac1cd0d571" kindref="member">XMC_CCU4_SLICE_TIMER_COUNT_DIR_t</ref></type>
        <definition>XMC_CCU4_SLICE_TIMER_COUNT_DIR_t XMC_CCU4_SLICE_GetCountingDir</definition>
        <argsstring>(const XMC_CCU4_SLICE_t *const slice)</argsstring>
        <name>XMC_CCU4_SLICE_GetCountingDir</name>
        <param>
          <type>const <ref refid="group___c_c_u4_1ga759d9cc26009d3567612d196ac3f3969" kindref="member">XMC_CCU4_SLICE_t</ref> *const</type>
          <declname>slice</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>slice</parametername>
</parameternamelist>
<parameterdescription>
<para>Constant pointer to CC4 Slice </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><linebreak/>
 <ref refid="group___c_c_u4_1gacbf19766ba6532d4b09ac3ac1cd0d571" kindref="member">XMC_CCU4_SLICE_TIMER_COUNT_DIR_t</ref> returns the direction in which the timer is counting.</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Returns the timer counting direction, by reading CC4yTCST.CDIR bit.<linebreak/>
<linebreak/>
This API will return the direction in which the timer is currently incrementing(XMC_CCU4_SLICE_TIMER_COUNT_DIR_UP) or decrementing (XMC_CCU4_SLICE_TIMER_COUNT_DIR_DOWN).</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para>None. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="1467" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" bodystart="1467" bodyend="1471"/>
      </memberdef>
      <memberdef kind="function" id="group___c_c_u4_1ga6d5a5802adc4917b4802db02926397e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool XMC_CCU4_SLICE_GetEvent</definition>
        <argsstring>(const XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_IRQ_ID_t event)</argsstring>
        <name>XMC_CCU4_SLICE_GetEvent</name>
        <param>
          <type>const <ref refid="group___c_c_u4_1ga759d9cc26009d3567612d196ac3f3969" kindref="member">XMC_CCU4_SLICE_t</ref> *const</type>
          <declname>slice</declname>
        </param>
        <param>
          <type>const <ref refid="group___c_c_u4_1ga9b6b22c75755089c6c4038de4a5d213c" kindref="member">XMC_CCU4_SLICE_IRQ_ID_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>slice</parametername>
</parameternamelist>
<parameterdescription>
<para>Constant pointer to CC4 Slice </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>Event to be evaluated for assertion </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><linebreak/>
 bool Returns true if event is set else false is returned.</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Evaluates if a given event is asserted or not, by reading CC4yINTS register.<linebreak/>
<linebreak/>
Return true if the event is asserted. For a event to be asserted it has to be first enabled. Only if that event is enabled the call to this API is valid. If the Event is enabled and has not yet occurred then a false is returned.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___c_c_u4_1ga70968924480cf3d06eb9381856a69b87" kindref="member">XMC_CCU4_SLICE_EnableEvent()</ref><linebreak/>
 <ref refid="group___c_c_u4_1gaa063b2ed84316c3dfb3f45b8cf2fcd38" kindref="member">XMC_CCU4_SLICE_SetEvent()</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="2221" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" bodystart="2221" bodyend="2227"/>
      </memberdef>
      <memberdef kind="function" id="group___c_c_u4_1ga3392bbfae89deb4a809aab04efde114b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___c_c_u4_1gac0f35f7b62570cbbd9ff102fea356b62" kindref="member">XMC_CCU4_STATUS_t</ref></type>
        <definition>XMC_CCU4_STATUS_t XMC_CCU4_SLICE_GetLastCapturedTimerValue</definition>
        <argsstring>(const XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_CAP_REG_SET_t set, uint32_t *val_ptr)</argsstring>
        <name>XMC_CCU4_SLICE_GetLastCapturedTimerValue</name>
        <param>
          <type>const <ref refid="group___c_c_u4_1ga759d9cc26009d3567612d196ac3f3969" kindref="member">XMC_CCU4_SLICE_t</ref> *const</type>
          <declname>slice</declname>
        </param>
        <param>
          <type>const <ref refid="group___c_c_u4_1gab5c05e6fda34ac046c12ec25ef405a3d" kindref="member">XMC_CCU4_SLICE_CAP_REG_SET_t</ref></type>
          <declname>set</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>val_ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>slice</parametername>
</parameternamelist>
<parameterdescription>
<para>Constant pointer to CC4 Slice </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>set</parametername>
</parameternamelist>
<parameterdescription>
<para>The capture register set, which must be evaluated </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Out Parameter of the API.Stores the captured timer value into this out parameter. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><linebreak/>
 <ref refid="group___c_c_u4_1gac0f35f7b62570cbbd9ff102fea356b62" kindref="member">XMC_CCU4_STATUS_t</ref> Returns XMC_CCU4_STATUS_OK if there was new value present in the capture registers. returns XMC_CCU4_STATUS_ERROR if there was no new value present in the capture registers.</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Retrieves the latest captured timer value, by reading CC4yCV registers.<linebreak/>
<linebreak/>
Retrieve the timer value last stored by the slice. When separate capture events are used, users must specify the capture set to evaluate. If single capture event mode is used, all 4 capture registers are evaluated.<linebreak/>
The lowest register is evaluated first followed by the next higher ordered register and this continues until all capture registers have been evaluated.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___c_c_u4_1gaf3b2360da5116806f763ee79a63591ab" kindref="member">XMC_CCU4_SLICE_GetCaptureRegisterValue()</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="2072" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___c_c_u4_1gace251376e4d8988e023fbf11013791c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___c_c_u4_1ga871bce3beb610d5e16b083c68381a60f" kindref="member">XMC_CCU4_SLICE_PRESCALER_t</ref></type>
        <definition>XMC_CCU4_SLICE_PRESCALER_t XMC_CCU4_SLICE_GetPrescaler</definition>
        <argsstring>(XMC_CCU4_SLICE_t *const slice)</argsstring>
        <name>XMC_CCU4_SLICE_GetPrescaler</name>
        <param>
          <type><ref refid="group___c_c_u4_1ga759d9cc26009d3567612d196ac3f3969" kindref="member">XMC_CCU4_SLICE_t</ref> *const</type>
          <declname>slice</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>slice</parametername>
</parameternamelist>
<parameterdescription>
<para>Constant pointer to CC4 Slice </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><linebreak/>
 XMC_CCU4_SLICE_PRESCALER_t Prescaler divider value.<linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Returns current prescaler value.<linebreak/>
<linebreak/>
Used to detrmine the clock frequency of the CCU8 slice XMC_SCU_CLOCK_GetCcuClockFrequency() / <ref refid="group___c_c_u4_1gace251376e4d8988e023fbf11013791c4" kindref="member">XMC_CCU4_SLICE_GetPrescaler()</ref></para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___c_c_u4_1ga24127bd989b62814c2ba0cc876b99473" kindref="member">XMC_CCU4_SLICE_SetPrescaler()</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="1944" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" bodystart="1944" bodyend="1949"/>
      </memberdef>
      <memberdef kind="function" id="group___c_c_u4_1ga0aa3f23d1d1251bfc67284abd641eb0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___c_c_u4_1ga9667e43e2a54209c309f767354a0af8e" kindref="member">XMC_CCU4_SLICE_MODE_t</ref></type>
        <definition>XMC_CCU4_SLICE_MODE_t XMC_CCU4_SLICE_GetSliceMode</definition>
        <argsstring>(const XMC_CCU4_SLICE_t *const slice)</argsstring>
        <name>XMC_CCU4_SLICE_GetSliceMode</name>
        <param>
          <type>const <ref refid="group___c_c_u4_1ga759d9cc26009d3567612d196ac3f3969" kindref="member">XMC_CCU4_SLICE_t</ref> *const</type>
          <declname>slice</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>slice</parametername>
</parameternamelist>
<parameterdescription>
<para>Constant pointer to CC4 Slice </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><linebreak/>
 <ref refid="group___c_c_u4_1ga9667e43e2a54209c309f767354a0af8e" kindref="member">XMC_CCU4_SLICE_MODE_t</ref> returns XMC_CCU4_SLICE_MODE_COMPARE if the slice is operating in compare mode returns XMC_CCU4_SLICE_MODE_CAPTURE if the slice is operating in capture mode</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Retrieves the current mode of operation in the slice (either Capture mode or Compare mode), by reading CC4yTC.CMOD bit.<linebreak/>
<linebreak/>
Ensure that before invoking this API the CCU4 slice should be configured otherwise the output of this API is invalid.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para>None. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="1561" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" bodystart="1561" bodyend="1565"/>
      </memberdef>
      <memberdef kind="function" id="group___c_c_u4_1ga6dbf6592e274fd4a3df6322abbcf1af3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t XMC_CCU4_SLICE_GetTimerCompareMatch</definition>
        <argsstring>(const XMC_CCU4_SLICE_t *const slice)</argsstring>
        <name>XMC_CCU4_SLICE_GetTimerCompareMatch</name>
        <param>
          <type>const <ref refid="group___c_c_u4_1ga759d9cc26009d3567612d196ac3f3969" kindref="member">XMC_CCU4_SLICE_t</ref> *const</type>
          <declname>slice</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>slice</parametername>
</parameternamelist>
<parameterdescription>
<para>Constant pointer to CC4 Slice </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><linebreak/>
 uint16_t returns the current timer compare value Range: [0x0 to 0xFFFF]</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Retrieves the timer compare value currently effective, by reading CC4yCRS register.<linebreak/>
<linebreak/>
If the timer is active then the value being returned is currently being for the PWM duty cycle( timer compare value).</para>
</simplesect>
<simplesect kind="par"><title>Note:</title><para>The <ref refid="group___c_c_u4_1ga7ae1adcaba614fa7d919221da9020a57" kindref="member">XMC_CCU4_SLICE_SetTimerCompareMatch()</ref> would set the new compare value to a shadow register. This would only transfer the new values into the actual compare register if the shadow transfer request is enabled and if a period match occurs. Hence a consecutive call to <ref refid="group___c_c_u4_1ga6dbf6592e274fd4a3df6322abbcf1af3" kindref="member">XMC_CCU4_SLICE_GetTimerCompareMatch()</ref> would not reflect the new values until the shadow transfer completes. Directly accessed Register is CC4yCR.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___c_c_u4_1ga7ae1adcaba614fa7d919221da9020a57" kindref="member">XMC_CCU4_SLICE_SetTimerCompareMatch()</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="1732" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" bodystart="1732" bodyend="1736"/>
      </memberdef>
      <memberdef kind="function" id="group___c_c_u4_1gac330a353060ff06f84d2d9835716ea94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___c_c_u4_1ga488780142d4d7da249cbb6e2c16ec512" kindref="member">XMC_CCU4_SLICE_TIMER_COUNT_MODE_t</ref></type>
        <definition>XMC_CCU4_SLICE_TIMER_COUNT_MODE_t XMC_CCU4_SLICE_GetTimerCountingMode</definition>
        <argsstring>(const XMC_CCU4_SLICE_t *const slice)</argsstring>
        <name>XMC_CCU4_SLICE_GetTimerCountingMode</name>
        <param>
          <type>const <ref refid="group___c_c_u4_1ga759d9cc26009d3567612d196ac3f3969" kindref="member">XMC_CCU4_SLICE_t</ref> *const</type>
          <declname>slice</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>slice</parametername>
</parameternamelist>
<parameterdescription>
<para>Constant pointer to CC4 Slice </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><linebreak/>
 <ref refid="group___c_c_u4_1ga488780142d4d7da249cbb6e2c16ec512" kindref="member">XMC_CCU4_SLICE_TIMER_COUNT_MODE_t</ref> returns XMC_CCU4_SLICE_TIMER_COUNT_MODE_EA if edge aligned mode is selected returns XMC_CCU4_SLICE_TIMER_COUNT_MODE_CA if center aligned mode is selected</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Retrieves timer counting mode either Edge aligned or Center Aligned, by reading CC4yTC.TCM bit.<linebreak/>
<linebreak/>
 </para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___c_c_u4_1ga35b25352390bfa747b51ba511fe85c57" kindref="member">XMC_CCU4_SLICE_SetTimerCountingMode()</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="1635" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" bodystart="1635" bodyend="1640"/>
      </memberdef>
      <memberdef kind="function" id="group___c_c_u4_1ga33f030851ea5f6abc4d7e1ecd7de2906" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t XMC_CCU4_SLICE_GetTimerPeriodMatch</definition>
        <argsstring>(const XMC_CCU4_SLICE_t *const slice)</argsstring>
        <name>XMC_CCU4_SLICE_GetTimerPeriodMatch</name>
        <param>
          <type>const <ref refid="group___c_c_u4_1ga759d9cc26009d3567612d196ac3f3969" kindref="member">XMC_CCU4_SLICE_t</ref> *const</type>
          <declname>slice</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>slice</parametername>
</parameternamelist>
<parameterdescription>
<para>Constant pointer to CC4 Slice </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><linebreak/>
 uint16_t returns the current timer period value Range: [0x0 to 0xFFFF]</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Retrieves the timer period value currently effective, by reading CC4yPR register.<linebreak/>
<linebreak/>
If the timer is active then the value being returned is currently being used for the PWM period.</para>
</simplesect>
<simplesect kind="par"><title>Note:</title><para>The <ref refid="group___c_c_u4_1ga1341abfd52a8165c7e1b5292033797ed" kindref="member">XMC_CCU4_SLICE_SetTimerPeriodMatch()</ref> would set the new period value to a shadow register. This would only transfer the new values into the actual period register if the shadow transfer request is enabled and if a period match occurs. Hence a consecutive call to <ref refid="group___c_c_u4_1ga33f030851ea5f6abc4d7e1ecd7de2906" kindref="member">XMC_CCU4_SLICE_GetTimerPeriodMatch()</ref> would not reflect the new values until the shadow transfer completes.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___c_c_u4_1ga1341abfd52a8165c7e1b5292033797ed" kindref="member">XMC_CCU4_SLICE_SetTimerPeriodMatch()</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="1683" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" bodystart="1683" bodyend="1687"/>
      </memberdef>
      <memberdef kind="function" id="group___c_c_u4_1gad164d9989a251f651159323c718965f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___c_c_u4_1ga85c8c78c8c4ec52eae3d4654aa37ad9d" kindref="member">XMC_CCU4_SLICE_TIMER_REPEAT_MODE_t</ref></type>
        <definition>XMC_CCU4_SLICE_TIMER_REPEAT_MODE_t XMC_CCU4_SLICE_GetTimerRepeatMode</definition>
        <argsstring>(const XMC_CCU4_SLICE_t *const slice)</argsstring>
        <name>XMC_CCU4_SLICE_GetTimerRepeatMode</name>
        <param>
          <type>const <ref refid="group___c_c_u4_1ga759d9cc26009d3567612d196ac3f3969" kindref="member">XMC_CCU4_SLICE_t</ref> *const</type>
          <declname>slice</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>slice</parametername>
</parameternamelist>
<parameterdescription>
<para>Constant pointer to CC4 Slice </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><linebreak/>
 <ref refid="group___c_c_u4_1ga85c8c78c8c4ec52eae3d4654aa37ad9d" kindref="member">XMC_CCU4_SLICE_TIMER_REPEAT_MODE_t</ref> returns XMC_CCU4_SLICE_TIMER_REPEAT_MODE_REPEAT if continuous mode is selected returns XMC_CCU4_SLICE_TIMER_REPEAT_MODE_SINGLE if single shot mode is selected</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Retrieves the Timer repeat mode, either Single shot mode or continuous mode, by reading CC4yTC.TSSM bit.<linebreak/>
<linebreak/>
The timer will count up to the terminal count as specified in the period register and stops immediately if the repeat mode has been set to single shot mode. In the continuous mode of operation, the timer starts counting all over again after reaching the terminal count.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___c_c_u4_1gaaaceaa5953e0235db8f17592c3606aff" kindref="member">XMC_CCU4_SLICE_SetTimerRepeatMode()</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="1598" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" bodystart="1598" bodyend="1603"/>
      </memberdef>
      <memberdef kind="function" id="group___c_c_u4_1ga9d9be217f287f53b1e96e929753acf41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t XMC_CCU4_SLICE_GetTimerValue</definition>
        <argsstring>(const XMC_CCU4_SLICE_t *const slice)</argsstring>
        <name>XMC_CCU4_SLICE_GetTimerValue</name>
        <param>
          <type>const <ref refid="group___c_c_u4_1ga759d9cc26009d3567612d196ac3f3969" kindref="member">XMC_CCU4_SLICE_t</ref> *const</type>
          <declname>slice</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>slice</parametername>
</parameternamelist>
<parameterdescription>
<para>Constant pointer to CC4 Slice </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><linebreak/>
 uint16_t returns the current timer value Range: [0x0 to 0xFFFF]</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Retrieves the latest timer value, from CC4yTIMER register.<linebreak/>
<linebreak/>
 </para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___c_c_u4_1gad654c695ac03c9218657816e4468d835" kindref="member">XMC_CCU4_SLICE_SetTimerValue()</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="1778" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" bodystart="1778" bodyend="1782"/>
      </memberdef>
      <memberdef kind="function" id="group___c_c_u4_1gaf9fa582be48916db21e086f073930ce2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool XMC_CCU4_SLICE_IsExtendedCapReadEnabled</definition>
        <argsstring>(const XMC_CCU4_SLICE_t *const slice)</argsstring>
        <name>XMC_CCU4_SLICE_IsExtendedCapReadEnabled</name>
        <param>
          <type>const <ref refid="group___c_c_u4_1ga759d9cc26009d3567612d196ac3f3969" kindref="member">XMC_CCU4_SLICE_t</ref> *const</type>
          <declname>slice</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>slice</parametername>
</parameternamelist>
<parameterdescription>
<para>Constant pointer to CC4 Slice </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><linebreak/>
 bool would return true if the extended capture read back mode is enabled<linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Checks if Extended capture mode read is enabled for particular slice or not, by reading CC4yTC.ECM bit.<linebreak/>
<linebreak/>
In this mode the there is only one associated read address for all the capture registers. Individual capture registers can still be accessed in this mode.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para>XMC_CCU4_GetCapturedValueFromFifo(). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="1226" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" bodystart="1226" bodyend="1230"/>
      </memberdef>
      <memberdef kind="function" id="group___c_c_u4_1ga505356f6ed183985041548ee87abfa69" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool XMC_CCU4_SLICE_IsTimerRunning</definition>
        <argsstring>(const XMC_CCU4_SLICE_t *const slice)</argsstring>
        <name>XMC_CCU4_SLICE_IsTimerRunning</name>
        <param>
          <type>const <ref refid="group___c_c_u4_1ga759d9cc26009d3567612d196ac3f3969" kindref="member">XMC_CCU4_SLICE_t</ref> *const</type>
          <declname>slice</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>slice</parametername>
</parameternamelist>
<parameterdescription>
<para>Constant pointer to CC4 Slice </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><linebreak/>
 bool returns <bold>true</bold> if the Timer is running else it returns <bold>false</bold>.</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Returns the state of the timer (Either Running or stopped(idle)), by reading CC4yTCST.TRB bit.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___c_c_u4_1ga9997bb59706a4034e3e3be33a4935a7c" kindref="member">XMC_CCU4_SLICE_StartTimer()</ref><linebreak/>
 <ref refid="group___c_c_u4_1gac41eed8d2857f7c9d23567fa742a705c" kindref="member">XMC_CCU4_SLICE_StopTimer()</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="1448" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" bodystart="1448" bodyend="1452"/>
      </memberdef>
      <memberdef kind="function" id="group___c_c_u4_1ga2d77fccc50ddf0c24b4906fd1b4ba1ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CCU4_SLICE_LoadConfig</definition>
        <argsstring>(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t event)</argsstring>
        <name>XMC_CCU4_SLICE_LoadConfig</name>
        <param>
          <type><ref refid="group___c_c_u4_1ga759d9cc26009d3567612d196ac3f3969" kindref="member">XMC_CCU4_SLICE_t</ref> *const</type>
          <declname>slice</declname>
        </param>
        <param>
          <type>const <ref refid="group___c_c_u4_1gacc266caa550eca30994d968fa3b82b94" kindref="member">XMC_CCU4_SLICE_EVENT_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>slice</parametername>
</parameternamelist>
<parameterdescription>
<para>Constant pointer to CC4 Slice </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>Map an External event to the External load Function </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><linebreak/>
 None<linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Configures the Load Function for the slice, by configuring CC4yCMC.LDS bit.<linebreak/>
<linebreak/>
 Load function is mapped with one of the 3 events. Up on occurrence of the event,<linebreak/>
 if CC4yTCST.CDIR set to 0,CC4yTIMER register is reloaded with the value from compare register<linebreak/>
 if CC4yTCST.CDIR set to 1,CC4yTIMER register is reloaded with the value from period register<linebreak/>
 </para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___c_c_u4_1ga6417b3f8823b6c76ec44118fc9c1eeb7" kindref="member">XMC_CCU4_SLICE_ConfigureEvent()</ref><linebreak/>
 <ref refid="group___c_c_u4_1ga28e214514acb1a75a67de63e6d74b167" kindref="member">XMC_CCU4_SLICE_SetInput()</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="1121" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___c_c_u4_1ga14933455fad7c724768f0cf8fbd61324" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CCU4_SLICE_ModulationConfig</definition>
        <argsstring>(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t event, const XMC_CCU4_SLICE_MODULATION_MODE_t mod_mode, const bool synch_with_pwm)</argsstring>
        <name>XMC_CCU4_SLICE_ModulationConfig</name>
        <param>
          <type><ref refid="group___c_c_u4_1ga759d9cc26009d3567612d196ac3f3969" kindref="member">XMC_CCU4_SLICE_t</ref> *const</type>
          <declname>slice</declname>
        </param>
        <param>
          <type>const <ref refid="group___c_c_u4_1gacc266caa550eca30994d968fa3b82b94" kindref="member">XMC_CCU4_SLICE_EVENT_t</ref></type>
          <declname>event</declname>
        </param>
        <param>
          <type>const <ref refid="group___c_c_u4_1gaba1abc67da718dd4dd0df6054aeda354" kindref="member">XMC_CCU4_SLICE_MODULATION_MODE_t</ref></type>
          <declname>mod_mode</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>synch_with_pwm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>slice</parametername>
</parameternamelist>
<parameterdescription>
<para>Constant pointer to CC4 Slice </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>Map an External event to the External Modulation Function </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mod_mode</parametername>
</parameternamelist>
<parameterdescription>
<para>Desired Modulation mode </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>synch_with_pwm</parametername>
</parameternamelist>
<parameterdescription>
<para>Option to synchronize modulation with PWM start Pass <bold>true</bold> if the modulation needs to be synchronized with PWM signal. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><linebreak/>
 None<linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Configures the Output Modulation Function of the slice, by configuring CCeyCMC.MOS, CC4yTC.EMT and CC4yTC.EMS bits.<linebreak/>
<linebreak/>
Modulation function is mapped with one of the 3 events. The output signal of the CCU can be modulated according to a external input. Additionally, the behaviour of the slice upon activation of the modulation function is configured as well.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___c_c_u4_1ga6417b3f8823b6c76ec44118fc9c1eeb7" kindref="member">XMC_CCU4_SLICE_ConfigureEvent()</ref><linebreak/>
 <ref refid="group___c_c_u4_1ga28e214514acb1a75a67de63e6d74b167" kindref="member">XMC_CCU4_SLICE_SetInput()</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="1143" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___c_c_u4_1gac459b6e5e0efccd9bc762c5add86ca48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CCU4_SLICE_SetDitherCompareValue</definition>
        <argsstring>(XMC_CCU4_SLICE_t *const slice, const uint8_t comp_val)</argsstring>
        <name>XMC_CCU4_SLICE_SetDitherCompareValue</name>
        <param>
          <type><ref refid="group___c_c_u4_1ga759d9cc26009d3567612d196ac3f3969" kindref="member">XMC_CCU4_SLICE_t</ref> *const</type>
          <declname>slice</declname>
        </param>
        <param>
          <type>const uint8_t</type>
          <declname>comp_val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>slice</parametername>
</parameternamelist>
<parameterdescription>
<para>Constant pointer to CC4 Slice </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>comp_val</parametername>
</parameternamelist>
<parameterdescription>
<para>Dither compare value Range: [0x0 to 0xF] </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><linebreak/>
 None<linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Sets the dither spread/compare value, by setting CC4yDITS.DCVS bits.<linebreak/>
<linebreak/>
This value is the cornerstone of PWM dithering feature. Dithering is applied/done when the value in the dithering counter is less than this compare/spread value. For all dithering counter values greater than the spread value, there is no dithering. After setting the value <ref refid="group___c_c_u4_1gadcfbaa660e4c008e78128b8deb4cc5c1" kindref="member">XMC_CCU4_EnableShadowTransfer()</ref> has to be called with appropriate mask.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___c_c_u4_1ga726d7c99adf8d7f438f1f08ef2a9de1a" kindref="member">XMC_CCU4_SLICE_EnableDithering()</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="1909" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" bodystart="1909" bodyend="1913"/>
      </memberdef>
      <memberdef kind="function" id="group___c_c_u4_1gaa063b2ed84316c3dfb3f45b8cf2fcd38" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CCU4_SLICE_SetEvent</definition>
        <argsstring>(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_IRQ_ID_t event)</argsstring>
        <name>XMC_CCU4_SLICE_SetEvent</name>
        <param>
          <type><ref refid="group___c_c_u4_1ga759d9cc26009d3567612d196ac3f3969" kindref="member">XMC_CCU4_SLICE_t</ref> *const</type>
          <declname>slice</declname>
        </param>
        <param>
          <type>const <ref refid="group___c_c_u4_1ga9b6b22c75755089c6c4038de4a5d213c" kindref="member">XMC_CCU4_SLICE_IRQ_ID_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>slice</parametername>
</parameternamelist>
<parameterdescription>
<para>Constant pointer to CC4 Slice </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>Event whose assertion can potentially lead to an interrupt </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><linebreak/>
 None<linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Manually asserts the requested event, by setting CC4ySWS register.<linebreak/>
<linebreak/>
For an event to lead to an interrupt, it must first be enabled and bound to a service request line. The corresponding NVIC node must be enabled as well. This API manually asserts the requested event.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___c_c_u4_1ga08c882083ebd4d874a466b61d011e3f7" kindref="member">XMC_CCU4_SLICE_SetInterruptNode()</ref><linebreak/>
 <ref refid="group___c_c_u4_1ga70968924480cf3d06eb9381856a69b87" kindref="member">XMC_CCU4_SLICE_EnableEvent()</ref><linebreak/>
 <ref refid="group___c_c_u4_1gadc79794c8392fdd71e843220786d8d99" kindref="member">XMC_CCU4_SLICE_EnableMultipleEvents()</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="2180" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" bodystart="2180" bodyend="2185"/>
      </memberdef>
      <memberdef kind="function" id="group___c_c_u4_1ga989c0d32380efe2053c259ff4e7d3c78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CCU4_SLICE_SetFloatingPrescalerCompareValue</definition>
        <argsstring>(XMC_CCU4_SLICE_t *const slice, const uint8_t cmp_val)</argsstring>
        <name>XMC_CCU4_SLICE_SetFloatingPrescalerCompareValue</name>
        <param>
          <type><ref refid="group___c_c_u4_1ga759d9cc26009d3567612d196ac3f3969" kindref="member">XMC_CCU4_SLICE_t</ref> *const</type>
          <declname>slice</declname>
        </param>
        <param>
          <type>const uint8_t</type>
          <declname>cmp_val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>slice</parametername>
</parameternamelist>
<parameterdescription>
<para>Constant pointer to CC4 Slice </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cmp_val</parametername>
</parameternamelist>
<parameterdescription>
<para>Prescaler divider compare value Range: [0x0 to 0xF] </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><linebreak/>
 None<linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Programs the slice specific prescaler divider compare value, by configuring CC4yFPCS register.<linebreak/>
<linebreak/>
The compare value is applicable only in floating mode of operation. The prescaler divider starts with an initial value and increments to the compare value steadily upon every period match. Once prescaler divider equals the prescaler divider compare value, the value in the former resets back to the PVAL (from FPC). After setting the value, <ref refid="group___c_c_u4_1gadcfbaa660e4c008e78128b8deb4cc5c1" kindref="member">XMC_CCU4_EnableShadowTransfer()</ref> has to be called with appropriate mask.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___c_c_u4_1ga24127bd989b62814c2ba0cc876b99473" kindref="member">XMC_CCU4_SLICE_SetPrescaler()</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="1968" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" bodystart="1968" bodyend="1974"/>
      </memberdef>
      <memberdef kind="function" id="group___c_c_u4_1ga28e214514acb1a75a67de63e6d74b167" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CCU4_SLICE_SetInput</definition>
        <argsstring>(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t event, const XMC_CCU4_SLICE_INPUT_t input)</argsstring>
        <name>XMC_CCU4_SLICE_SetInput</name>
        <param>
          <type><ref refid="group___c_c_u4_1ga759d9cc26009d3567612d196ac3f3969" kindref="member">XMC_CCU4_SLICE_t</ref> *const</type>
          <declname>slice</declname>
        </param>
        <param>
          <type>const <ref refid="group___c_c_u4_1gacc266caa550eca30994d968fa3b82b94" kindref="member">XMC_CCU4_SLICE_EVENT_t</ref></type>
          <declname>event</declname>
        </param>
        <param>
          <type>const <ref refid="group___c_c_u4_1gaab7f7bcdc1aff8cc0beb2edae16a3cf3" kindref="member">XMC_CCU4_SLICE_INPUT_t</ref></type>
          <declname>input</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>slice</parametername>
</parameternamelist>
<parameterdescription>
<para>Constant pointer to CC4 Slice </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>The External Event which needs to be configured. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>input</parametername>
</parameternamelist>
<parameterdescription>
<para>One of the 16 inputs meant to be mapped to the desired event </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><linebreak/>
 None<linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Selects an input for an external event, by configuring CC4yINS register.<linebreak/>
<linebreak/>
It is possible to select one of the possible 16 input signals for a given Event. This configures the CC4yINS.EVxIS for the selected event.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___c_c_u4_1gac029dc08c5d54be8e773df0de9641691" kindref="member">XMC_CCU4_SLICE_StartConfig()</ref><linebreak/>
 <ref refid="group___c_c_u4_1ga17330b4b761f443140b1c736c1a09840" kindref="member">XMC_CCU4_SLICE_StopConfig()</ref><linebreak/>
 <ref refid="group___c_c_u4_1ga2d77fccc50ddf0c24b4906fd1b4ba1ae" kindref="member">XMC_CCU4_SLICE_LoadConfig()</ref><linebreak/>
 <ref refid="group___c_c_u4_1ga14933455fad7c724768f0cf8fbd61324" kindref="member">XMC_CCU4_SLICE_ModulationConfig()</ref><linebreak/>
 <ref refid="group___c_c_u4_1gaf312a02f00b3149c2f5cd3faea6f93c2" kindref="member">XMC_CCU4_SLICE_CountConfig()</ref><linebreak/>
 <ref refid="group___c_c_u4_1gafbf3c4118d03da31af66baf439183cae" kindref="member">XMC_CCU4_SLICE_GateConfig()</ref><linebreak/>
 <ref refid="group___c_c_u4_1ga3ed073924b8580efb863070ddf20426a" kindref="member">XMC_CCU4_SLICE_Capture0Config()</ref><linebreak/>
 <ref refid="group___c_c_u4_1ga01bd8510437249b1bc33eb5cd2da7b0f" kindref="member">XMC_CCU4_SLICE_Capture1Config()</ref><linebreak/>
 <ref refid="group___c_c_u4_1gac61d7dc678e8379b4afaa8d763975866" kindref="member">XMC_CCU4_SLICE_DirectionConfig()</ref><linebreak/>
 <ref refid="group___c_c_u4_1ga8f1ff68c2bae61d72c539684a050553b" kindref="member">XMC_CCU4_SLICE_StatusBitOverrideConfig()</ref><linebreak/>
 <ref refid="group___c_c_u4_1gab2d5615177cfa2f20c5f5655400f4a8e" kindref="member">XMC_CCU4_SLICE_TrapConfig()</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="1392" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___c_c_u4_1ga08c882083ebd4d874a466b61d011e3f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CCU4_SLICE_SetInterruptNode</definition>
        <argsstring>(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_IRQ_ID_t event, const XMC_CCU4_SLICE_SR_ID_t sr)</argsstring>
        <name>XMC_CCU4_SLICE_SetInterruptNode</name>
        <param>
          <type><ref refid="group___c_c_u4_1ga759d9cc26009d3567612d196ac3f3969" kindref="member">XMC_CCU4_SLICE_t</ref> *const</type>
          <declname>slice</declname>
        </param>
        <param>
          <type>const <ref refid="group___c_c_u4_1ga9b6b22c75755089c6c4038de4a5d213c" kindref="member">XMC_CCU4_SLICE_IRQ_ID_t</ref></type>
          <declname>event</declname>
        </param>
        <param>
          <type>const <ref refid="group___c_c_u4_1ga9de58e90257a0c33532f376c7c5f959e" kindref="member">XMC_CCU4_SLICE_SR_ID_t</ref></type>
          <declname>sr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>slice</parametername>
</parameternamelist>
<parameterdescription>
<para>Constant pointer to CC4 Slice </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>Event which must be bound to a service request line </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sr</parametername>
</parameternamelist>
<parameterdescription>
<para>The Service request line which is bound to the <bold>event</bold> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><linebreak/>
 None<linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Binds requested event to a service request line, by configuring CC4ySRS register with respective event.<linebreak/>
<linebreak/>
For an event to lead to an interrupt, it must first be enabled and bound to a service request line. The corresponding NVIC node must be enabled as well. This API binds the requested event with the requested service request line(<bold>sr</bold>).</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___c_c_u4_1ga70968924480cf3d06eb9381856a69b87" kindref="member">XMC_CCU4_SLICE_EnableEvent()</ref><linebreak/>
 <ref refid="group___c_c_u4_1gaa063b2ed84316c3dfb3f45b8cf2fcd38" kindref="member">XMC_CCU4_SLICE_SetEvent()</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="2243" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___c_c_u4_1ga962a6a7402c99ec80359d3202ae9cd50" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CCU4_SLICE_SetPassiveLevel</definition>
        <argsstring>(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_OUTPUT_PASSIVE_LEVEL_t level)</argsstring>
        <name>XMC_CCU4_SLICE_SetPassiveLevel</name>
        <param>
          <type><ref refid="group___c_c_u4_1ga759d9cc26009d3567612d196ac3f3969" kindref="member">XMC_CCU4_SLICE_t</ref> *const</type>
          <declname>slice</declname>
        </param>
        <param>
          <type>const <ref refid="group___c_c_u4_1gad1e13100aef87f3fdbffcd561b1d7e57" kindref="member">XMC_CCU4_SLICE_OUTPUT_PASSIVE_LEVEL_t</ref></type>
          <declname>level</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>slice</parametername>
</parameternamelist>
<parameterdescription>
<para>Constant pointer to CC4 Slice </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>level</parametername>
</parameternamelist>
<parameterdescription>
<para>Slice output passive level </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><linebreak/>
 None<linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Configures the passive level for the slice output, by setting CC4yPSL register.<linebreak/>
<linebreak/>
Defines the passive level for the timer slice output pin. Selects either level high is passive or level low is passive. This is the level of the output before the compare match is value changes it.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___c_c_u4_1ga70968924480cf3d06eb9381856a69b87" kindref="member">XMC_CCU4_SLICE_EnableEvent()</ref><linebreak/>
 <ref refid="group___c_c_u4_1gaa063b2ed84316c3dfb3f45b8cf2fcd38" kindref="member">XMC_CCU4_SLICE_SetEvent()</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="2261" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___c_c_u4_1ga24127bd989b62814c2ba0cc876b99473" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CCU4_SLICE_SetPrescaler</definition>
        <argsstring>(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_PRESCALER_t div_val)</argsstring>
        <name>XMC_CCU4_SLICE_SetPrescaler</name>
        <param>
          <type><ref refid="group___c_c_u4_1ga759d9cc26009d3567612d196ac3f3969" kindref="member">XMC_CCU4_SLICE_t</ref> *const</type>
          <declname>slice</declname>
        </param>
        <param>
          <type>const <ref refid="group___c_c_u4_1ga871bce3beb610d5e16b083c68381a60f" kindref="member">XMC_CCU4_SLICE_PRESCALER_t</ref></type>
          <declname>div_val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>slice</parametername>
</parameternamelist>
<parameterdescription>
<para>Constant pointer to CC4 Slice </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>div_val</parametername>
</parameternamelist>
<parameterdescription>
<para>Prescaler divider value. Accepts enum :: XMC_CCU4_SLICE_PRESCALER_t Range: [0x0 to 0xF] </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><linebreak/>
 None<linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Programs the slice specific prescaler divider, by configuring the CC4yPSC and CC4yFPC registers.<linebreak/>
<linebreak/>
The prescaler divider may only be programmed after the prescaler run bit has been cleared by calling <ref refid="group___c_c_u4_1gae3741bc9dc0cb9f565ade9182d73141f" kindref="member">XMC_CCU4_StopPrescaler()</ref>.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___c_c_u4_1ga989c0d32380efe2053c259ff4e7d3c78" kindref="member">XMC_CCU4_SLICE_SetFloatingPrescalerCompareValue()</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="1930" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___c_c_u4_1ga8631a666973bd4471bb80d8f08ae99cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CCU4_SLICE_SetShadowTransferMode</definition>
        <argsstring>(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_SHADOW_TRANSFER_MODE_t shadow_transfer_mode)</argsstring>
        <name>XMC_CCU4_SLICE_SetShadowTransferMode</name>
        <param>
          <type><ref refid="group___c_c_u4_1ga759d9cc26009d3567612d196ac3f3969" kindref="member">XMC_CCU4_SLICE_t</ref> *const</type>
          <declname>slice</declname>
        </param>
        <param>
          <type>const <ref refid="group___c_c_u4_1ga6b7d3d96e6ba78dd55ca0850379ebf9d" kindref="member">XMC_CCU4_SLICE_SHADOW_TRANSFER_MODE_t</ref></type>
          <declname>shadow_transfer_mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>slice</parametername>
</parameternamelist>
<parameterdescription>
<para>Constant pointer to CC4 Slice </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>shadow_transfer_mode</parametername>
</parameternamelist>
<parameterdescription>
<para>mode to be configured Use :: XMC_CCU4_SLICE_SHADOW_TRANSFER_MODE_t enum items for mode </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><linebreak/>
 None<linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Configures when the shadow transfer has to occur, by setting STM bit in STC register.<linebreak/>
<linebreak/>
 After requesting for shadow transfer mode using <ref refid="group___c_c_u4_1gadcfbaa660e4c008e78128b8deb4cc5c1" kindref="member">XMC_CCU4_EnableShadowTransfer()</ref>, actual transfer occurs based on the selection done using this API (i.e. on period and One match, on Period match only, on One match only).</para>
</simplesect>
<simplesect kind="par"><title>Note:</title><para>This is effective when the timer is configured in centre aligned mode.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___c_c_u4_1gadcfbaa660e4c008e78128b8deb4cc5c1" kindref="member">XMC_CCU4_EnableShadowTransfer()</ref><linebreak/>
 </para>
</simplesect>
<simplesect kind="note"><para>Only available for XMC1400 series </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="2334" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" bodystart="2334" bodyend="2340"/>
      </memberdef>
      <memberdef kind="function" id="group___c_c_u4_1ga7ae1adcaba614fa7d919221da9020a57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CCU4_SLICE_SetTimerCompareMatch</definition>
        <argsstring>(XMC_CCU4_SLICE_t *const slice, const uint16_t compare_val)</argsstring>
        <name>XMC_CCU4_SLICE_SetTimerCompareMatch</name>
        <param>
          <type><ref refid="group___c_c_u4_1ga759d9cc26009d3567612d196ac3f3969" kindref="member">XMC_CCU4_SLICE_t</ref> *const</type>
          <declname>slice</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>compare_val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>slice</parametername>
</parameternamelist>
<parameterdescription>
<para>Constant pointer to CC4 Slice </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>compare_val</parametername>
</parameternamelist>
<parameterdescription>
<para>Timer compare value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><linebreak/>
 None<linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Programs the timer compare value, by writing CC4yCRS register.<linebreak/>
<linebreak/>
 The PWM duty cycle is determined by this value. The compare value is written to a shadow register. Explicitly enable the shadow transfer for the the period/compare value by calling <ref refid="group___c_c_u4_1gadcfbaa660e4c008e78128b8deb4cc5c1" kindref="member">XMC_CCU4_EnableShadowTransfer()</ref> with appropriate mask.If shadow transfer is enabled and the timer is running, a period match transfers the value from the shadow register to the actual compare register.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___c_c_u4_1ga33f030851ea5f6abc4d7e1ecd7de2906" kindref="member">XMC_CCU4_SLICE_GetTimerPeriodMatch()</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="1706" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" bodystart="1706" bodyend="1710"/>
      </memberdef>
      <memberdef kind="function" id="group___c_c_u4_1ga35b25352390bfa747b51ba511fe85c57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CCU4_SLICE_SetTimerCountingMode</definition>
        <argsstring>(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_TIMER_COUNT_MODE_t mode)</argsstring>
        <name>XMC_CCU4_SLICE_SetTimerCountingMode</name>
        <param>
          <type><ref refid="group___c_c_u4_1ga759d9cc26009d3567612d196ac3f3969" kindref="member">XMC_CCU4_SLICE_t</ref> *const</type>
          <declname>slice</declname>
        </param>
        <param>
          <type>const <ref refid="group___c_c_u4_1ga488780142d4d7da249cbb6e2c16ec512" kindref="member">XMC_CCU4_SLICE_TIMER_COUNT_MODE_t</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>slice</parametername>
</parameternamelist>
<parameterdescription>
<para>Constant pointer to CC4 Slice </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mode</parametername>
</parameternamelist>
<parameterdescription>
<para>Desired counting mode (Either Edge Aligned or Center Aligned) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><linebreak/>
 None<linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Configures the timer counting mode either Edge Aligned or Center Aligned, by configuring CC4yTC.TCM bit.<linebreak/>
<linebreak/>
In the edge aligned mode, the timer counts from 0 to the terminal count. Once the timer count has reached a preset compare value, the timer status output asserts itself. It will now deassert only after the timer count reaches the terminal count.<linebreak/>
 In the center aligned mode, the timer first counts from 0 to the terminal count and then back to 0. During this upward and downward counting, the timer status output stays asserted as long as the timer value is greater than the compare value.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___c_c_u4_1gac330a353060ff06f84d2d9835716ea94" kindref="member">XMC_CCU4_SLICE_GetTimerCountingMode()</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="1621" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___c_c_u4_1ga1341abfd52a8165c7e1b5292033797ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CCU4_SLICE_SetTimerPeriodMatch</definition>
        <argsstring>(XMC_CCU4_SLICE_t *const slice, const uint16_t period_val)</argsstring>
        <name>XMC_CCU4_SLICE_SetTimerPeriodMatch</name>
        <param>
          <type><ref refid="group___c_c_u4_1ga759d9cc26009d3567612d196ac3f3969" kindref="member">XMC_CCU4_SLICE_t</ref> *const</type>
          <declname>slice</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>period_val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>slice</parametername>
</parameternamelist>
<parameterdescription>
<para>Constant pointer to CC4 Slice </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>period_val</parametername>
</parameternamelist>
<parameterdescription>
<para>Timer period value Range: [0x0 to 0xFFFF] </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><linebreak/>
 None<linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Programs the timer period, by writing CC4yPRS register.<linebreak/>
<linebreak/>
The frequency of counting/ PWM frequency is determined by this value. The period value is written to a shadow register. Explicitly enable the shadow transfer for the the period value by calling <ref refid="group___c_c_u4_1gadcfbaa660e4c008e78128b8deb4cc5c1" kindref="member">XMC_CCU4_EnableShadowTransfer()</ref> with appropriate mask. If shadow transfer is enabled and the timer is running, a period match transfers the value from the shadow register to the actual period register.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___c_c_u4_1ga33f030851ea5f6abc4d7e1ecd7de2906" kindref="member">XMC_CCU4_SLICE_GetTimerPeriodMatch()</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="1658" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" bodystart="1658" bodyend="1662"/>
      </memberdef>
      <memberdef kind="function" id="group___c_c_u4_1gaaaceaa5953e0235db8f17592c3606aff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CCU4_SLICE_SetTimerRepeatMode</definition>
        <argsstring>(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_TIMER_REPEAT_MODE_t mode)</argsstring>
        <name>XMC_CCU4_SLICE_SetTimerRepeatMode</name>
        <param>
          <type><ref refid="group___c_c_u4_1ga759d9cc26009d3567612d196ac3f3969" kindref="member">XMC_CCU4_SLICE_t</ref> *const</type>
          <declname>slice</declname>
        </param>
        <param>
          <type>const <ref refid="group___c_c_u4_1ga85c8c78c8c4ec52eae3d4654aa37ad9d" kindref="member">XMC_CCU4_SLICE_TIMER_REPEAT_MODE_t</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>slice</parametername>
</parameternamelist>
<parameterdescription>
<para>Constant pointer to CC4 Slice </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mode</parametername>
</parameternamelist>
<parameterdescription>
<para>Desired repetition mode (Either single shot or Continuous) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><linebreak/>
 None<linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Configures the Timer to either Single shot mode or continuous mode, by configuring CC4yTC.TSSM bit.<linebreak/>
<linebreak/>
The timer will count up to the terminal count as specified in the period register and stops immediately if the repeat mode has been set to single shot. In the continuous mode of operation, the timer starts counting all over again after reaching the terminal count.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___c_c_u4_1gad164d9989a251f651159323c718965f1" kindref="member">XMC_CCU4_SLICE_GetTimerRepeatMode()</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="1581" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___c_c_u4_1gad654c695ac03c9218657816e4468d835" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CCU4_SLICE_SetTimerValue</definition>
        <argsstring>(XMC_CCU4_SLICE_t *const slice, const uint16_t timer_val)</argsstring>
        <name>XMC_CCU4_SLICE_SetTimerValue</name>
        <param>
          <type><ref refid="group___c_c_u4_1ga759d9cc26009d3567612d196ac3f3969" kindref="member">XMC_CCU4_SLICE_t</ref> *const</type>
          <declname>slice</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>timer_val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>slice</parametername>
</parameternamelist>
<parameterdescription>
<para>Constant pointer to CC4 Slice </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timer_val</parametername>
</parameternamelist>
<parameterdescription>
<para>The new timer value that has to be loaded into the TIMER register. Range: [0x0 to 0xFFFF] </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><linebreak/>
 None<linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Loads a new timer value, by setting CC4yTIMER register.<linebreak/>
<linebreak/>
 </para>
</simplesect>
<simplesect kind="par"><title>Note:</title><para>Request to load is ignored if the timer is running.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___c_c_u4_1ga9d9be217f287f53b1e96e929753acf41" kindref="member">XMC_CCU4_SLICE_GetTimerValue()</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="1799" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" bodystart="1799" bodyend="1803"/>
      </memberdef>
      <memberdef kind="function" id="group___c_c_u4_1gac029dc08c5d54be8e773df0de9641691" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CCU4_SLICE_StartConfig</definition>
        <argsstring>(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t event, const XMC_CCU4_SLICE_START_MODE_t start_mode)</argsstring>
        <name>XMC_CCU4_SLICE_StartConfig</name>
        <param>
          <type><ref refid="group___c_c_u4_1ga759d9cc26009d3567612d196ac3f3969" kindref="member">XMC_CCU4_SLICE_t</ref> *const</type>
          <declname>slice</declname>
        </param>
        <param>
          <type>const <ref refid="group___c_c_u4_1gacc266caa550eca30994d968fa3b82b94" kindref="member">XMC_CCU4_SLICE_EVENT_t</ref></type>
          <declname>event</declname>
        </param>
        <param>
          <type>const <ref refid="group___c_c_u4_1ga665528c9d6bedf104384b20797e892c3" kindref="member">XMC_CCU4_SLICE_START_MODE_t</ref></type>
          <declname>start_mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>slice</parametername>
</parameternamelist>
<parameterdescription>
<para>Constant pointer to CC4 Slice </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>Map an External event to the External Start Function </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>start_mode</parametername>
</parameternamelist>
<parameterdescription>
<para>Behavior of slice when the start function is activated </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><linebreak/>
 None<linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Configures the Start Function of the slice, by configuring CC4yCMC.ENDS and CC4yTC.ENDM bits.<linebreak/>
<linebreak/>
 Start function is mapped with one of the 3 events. An external signal can control when a CC4 timer should start. Additionally, the behaviour of the slice upon activation of the start function is configured as well.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___c_c_u4_1ga17330b4b761f443140b1c736c1a09840" kindref="member">XMC_CCU4_SLICE_StopConfig()</ref><linebreak/>
 <ref refid="group___c_c_u4_1ga6417b3f8823b6c76ec44118fc9c1eeb7" kindref="member">XMC_CCU4_SLICE_ConfigureEvent()</ref><linebreak/>
 <ref refid="group___c_c_u4_1ga28e214514acb1a75a67de63e6d74b167" kindref="member">XMC_CCU4_SLICE_SetInput()</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="1083" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___c_c_u4_1ga9997bb59706a4034e3e3be33a4935a7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CCU4_SLICE_StartTimer</definition>
        <argsstring>(XMC_CCU4_SLICE_t *const slice)</argsstring>
        <name>XMC_CCU4_SLICE_StartTimer</name>
        <param>
          <type><ref refid="group___c_c_u4_1ga759d9cc26009d3567612d196ac3f3969" kindref="member">XMC_CCU4_SLICE_t</ref> *const</type>
          <declname>slice</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>slice</parametername>
</parameternamelist>
<parameterdescription>
<para>Constant pointer to CC4 Slice </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><linebreak/>
 None<linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Starts the timer counting operation, by setting CC4yTCSET.TRBS bit.<linebreak/>
<linebreak/>
It is necessary to have configured the CC4 slice before starting its timer. Before the Timer is started ensure that the clock is provided to the slice.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___c_c_u4_1gac41eed8d2857f7c9d23567fa742a705c" kindref="member">XMC_CCU4_SLICE_StopTimer()</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="1486" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" bodystart="1486" bodyend="1490"/>
      </memberdef>
      <memberdef kind="function" id="group___c_c_u4_1ga8f1ff68c2bae61d72c539684a050553b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CCU4_SLICE_StatusBitOverrideConfig</definition>
        <argsstring>(XMC_CCU4_SLICE_t *const slice)</argsstring>
        <name>XMC_CCU4_SLICE_StatusBitOverrideConfig</name>
        <param>
          <type><ref refid="group___c_c_u4_1ga759d9cc26009d3567612d196ac3f3969" kindref="member">XMC_CCU4_SLICE_t</ref> *const</type>
          <declname>slice</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>slice</parametername>
</parameternamelist>
<parameterdescription>
<para>Constant pointer to CC4 Slice </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><linebreak/>
 None<linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Configures the status bit override Function of the slice, by configuring CC4yCMC.OFS bit.<linebreak/>
<linebreak/>
Status bit override function is mapped with one of the 3 events. A slice can be configured to change the output of the timer&apos;s CC4yST signal depending on an external signal.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___c_c_u4_1ga0b084822487e0ca0a4a950c7d0f36fa7" kindref="member">XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent()</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="1305" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___c_c_u4_1ga9bd3401eb3b8744163b730998e5e3f7a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CCU4_SLICE_StopClearTimer</definition>
        <argsstring>(XMC_CCU4_SLICE_t *const slice)</argsstring>
        <name>XMC_CCU4_SLICE_StopClearTimer</name>
        <param>
          <type><ref refid="group___c_c_u4_1ga759d9cc26009d3567612d196ac3f3969" kindref="member">XMC_CCU4_SLICE_t</ref> *const</type>
          <declname>slice</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>slice</parametername>
</parameternamelist>
<parameterdescription>
<para>Constant pointer to CC4 Slice </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><linebreak/>
 None<linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Stops and resets the timer count to zero, by setting CC4yTCCLR.TCC and CC4yTCCLR.TRBC bit.<linebreak/>
<linebreak/>
 </para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___c_c_u4_1ga9997bb59706a4034e3e3be33a4935a7c" kindref="member">XMC_CCU4_SLICE_StartTimer()</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="1540" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" bodystart="1540" bodyend="1544"/>
      </memberdef>
      <memberdef kind="function" id="group___c_c_u4_1ga17330b4b761f443140b1c736c1a09840" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CCU4_SLICE_StopConfig</definition>
        <argsstring>(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t event, const XMC_CCU4_SLICE_END_MODE_t end_mode)</argsstring>
        <name>XMC_CCU4_SLICE_StopConfig</name>
        <param>
          <type><ref refid="group___c_c_u4_1ga759d9cc26009d3567612d196ac3f3969" kindref="member">XMC_CCU4_SLICE_t</ref> *const</type>
          <declname>slice</declname>
        </param>
        <param>
          <type>const <ref refid="group___c_c_u4_1gacc266caa550eca30994d968fa3b82b94" kindref="member">XMC_CCU4_SLICE_EVENT_t</ref></type>
          <declname>event</declname>
        </param>
        <param>
          <type>const <ref refid="group___c_c_u4_1gaed08e3fd07e061ccb45377415a958c6a" kindref="member">XMC_CCU4_SLICE_END_MODE_t</ref></type>
          <declname>end_mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>slice</parametername>
</parameternamelist>
<parameterdescription>
<para>Constant pointer to CC4 Slice </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>Map an External event to the External Stop Function </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end_mode</parametername>
</parameternamelist>
<parameterdescription>
<para>Behavior of slice when the stop function is activated </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><linebreak/>
 None<linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Configures the Stop function for the slice, by configuring CC4yCMC.STRTS and CC4yTC.STRM bits.<linebreak/>
<linebreak/>
Stop function is mapped with one of the 3 events. An external signal can control when a CCU4 timer should stop. Additionally, the behaviour of the slice upon activation of the stop function is configured as well.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___c_c_u4_1gac029dc08c5d54be8e773df0de9641691" kindref="member">XMC_CCU4_SLICE_StartConfig()</ref><linebreak/>
 <ref refid="group___c_c_u4_1ga6417b3f8823b6c76ec44118fc9c1eeb7" kindref="member">XMC_CCU4_SLICE_ConfigureEvent()</ref><linebreak/>
 <ref refid="group___c_c_u4_1ga28e214514acb1a75a67de63e6d74b167" kindref="member">XMC_CCU4_SLICE_SetInput()</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="1102" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___c_c_u4_1gac41eed8d2857f7c9d23567fa742a705c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CCU4_SLICE_StopTimer</definition>
        <argsstring>(XMC_CCU4_SLICE_t *const slice)</argsstring>
        <name>XMC_CCU4_SLICE_StopTimer</name>
        <param>
          <type><ref refid="group___c_c_u4_1ga759d9cc26009d3567612d196ac3f3969" kindref="member">XMC_CCU4_SLICE_t</ref> *const</type>
          <declname>slice</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>slice</parametername>
</parameternamelist>
<parameterdescription>
<para>Constant pointer to CC4 Slice </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><linebreak/>
 None<linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Stops the Timer.<linebreak/>
<linebreak/>
Timer counting operation can be stopped by invoking this API, by setting CC4yTCCLR.TRBC bit.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___c_c_u4_1ga9997bb59706a4034e3e3be33a4935a7c" kindref="member">XMC_CCU4_SLICE_StartTimer()</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="1504" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" bodystart="1504" bodyend="1508"/>
      </memberdef>
      <memberdef kind="function" id="group___c_c_u4_1gab2d5615177cfa2f20c5f5655400f4a8e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CCU4_SLICE_TrapConfig</definition>
        <argsstring>(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_TRAP_EXIT_MODE_t exit_mode, bool synch_with_pwm)</argsstring>
        <name>XMC_CCU4_SLICE_TrapConfig</name>
        <param>
          <type><ref refid="group___c_c_u4_1ga759d9cc26009d3567612d196ac3f3969" kindref="member">XMC_CCU4_SLICE_t</ref> *const</type>
          <declname>slice</declname>
        </param>
        <param>
          <type>const <ref refid="group___c_c_u4_1gafc3c6b390f18574d954473174a595eb2" kindref="member">XMC_CCU4_SLICE_TRAP_EXIT_MODE_t</ref></type>
          <declname>exit_mode</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>synch_with_pwm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>slice</parametername>
</parameternamelist>
<parameterdescription>
<para>Constant pointer to CC4 Slice </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>exit_mode</parametername>
</parameternamelist>
<parameterdescription>
<para>How should a previously logged trap state be exited? </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>synch_with_pwm</parametername>
</parameternamelist>
<parameterdescription>
<para>Should exit of trap state be synchronized with PWM cycle start? </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><linebreak/>
 None<linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Configures the Trap Function of the slice, by configuring CC4yCMC.TS, CC4yTC.TRPSE, and CC4yTC.TRPSW bits.<linebreak/>
<linebreak/>
Trap function is mapped with Event-2. Criteria for exiting the trap state is configured. This trap function allows PWM outputs to react on the state of an input pin. Thus PWM output can be forced to inactive state upon detection of a trap. It is also possible to synchronize the trap function with the PWM signal using the <bold>synch_with_pwm</bold>.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___c_c_u4_1ga6417b3f8823b6c76ec44118fc9c1eeb7" kindref="member">XMC_CCU4_SLICE_ConfigureEvent()</ref><linebreak/>
 <ref refid="group___c_c_u4_1ga28e214514acb1a75a67de63e6d74b167" kindref="member">XMC_CCU4_SLICE_SetInput()</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="1324" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___c_c_u4_1ga416ddf2d93e243f85ecbf5b087b4672f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CCU4_SLICE_WriteCoherentlyWithPWMCycle</definition>
        <argsstring>(XMC_CCU4_SLICE_t *const slice, const uint32_t coherent_write)</argsstring>
        <name>XMC_CCU4_SLICE_WriteCoherentlyWithPWMCycle</name>
        <param>
          <type><ref refid="group___c_c_u4_1ga759d9cc26009d3567612d196ac3f3969" kindref="member">XMC_CCU4_SLICE_t</ref> *const</type>
          <declname>slice</declname>
        </param>
        <param>
          <type>const uint32_t</type>
          <declname>coherent_write</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>slice</parametername>
</parameternamelist>
<parameterdescription>
<para>Constant pointer to CC4 Slice </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>coherent_write</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies for what fields this mode has to be applied Use :: XMC_CCU4_SLICE_WRITE_INTO_t enum items to create a mask of choice, using a bit wise OR operation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><linebreak/>
 None<linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Configures the specified fields shadow value to be updated in synchronous with PWM after shadow transfer request, by clearing IRPC, IRCC1, IRCC2, IRLC, IRDC, IRFC bits in STC register.<linebreak/>
<linebreak/>
 When coherent shadow is enabled, after calling <ref refid="group___c_c_u4_1gadcfbaa660e4c008e78128b8deb4cc5c1" kindref="member">XMC_CCU4_EnableShadowTransfer()</ref>, the value which are written in the respective shadow registers get updated according the configuration done using <ref refid="group___c_c_u4_1ga8631a666973bd4471bb80d8f08ae99cd" kindref="member">XMC_CCU4_SLICE_SetShadowTransferMode()</ref> API. </para>
</simplesect>
<simplesect kind="par"><title>Note:</title><para></para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___c_c_u4_1gadcfbaa660e4c008e78128b8deb4cc5c1" kindref="member">XMC_CCU4_EnableShadowTransfer()</ref>, <ref refid="group___c_c_u4_1ga8631a666973bd4471bb80d8f08ae99cd" kindref="member">XMC_CCU4_SLICE_SetShadowTransferMode()</ref><linebreak/>
 </para>
</simplesect>
<simplesect kind="note"><para>Only available for XMC1400 series </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="2361" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" bodystart="2361" bodyend="2366"/>
      </memberdef>
      <memberdef kind="function" id="group___c_c_u4_1ga5048bfa6fbbcc4752d137f32c141743c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CCU4_SLICE_WriteImmediateAfterShadowTransfer</definition>
        <argsstring>(XMC_CCU4_SLICE_t *const slice, const uint32_t immediate_write)</argsstring>
        <name>XMC_CCU4_SLICE_WriteImmediateAfterShadowTransfer</name>
        <param>
          <type><ref refid="group___c_c_u4_1ga759d9cc26009d3567612d196ac3f3969" kindref="member">XMC_CCU4_SLICE_t</ref> *const</type>
          <declname>slice</declname>
        </param>
        <param>
          <type>const uint32_t</type>
          <declname>immediate_write</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>slice</parametername>
</parameternamelist>
<parameterdescription>
<para>Constant pointer to CC4 Slice </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>immediate_write</parametername>
</parameternamelist>
<parameterdescription>
<para>specifies for what fields this mode has to be applied Use :: XMC_CCU4_SLICE_WRITE_INTO_t enum items to create a mask of choice, using a bit wise OR operation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><linebreak/>
 None<linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Configures the specified fields shadow value to be updated immediately after shadow transfer request, by setting IRPC, IRCC1, IRCC2, IRLC, IRDC, IRFC bits in STC register.<linebreak/>
<linebreak/>
 When immediate shadow is enabled, by calling <ref refid="group___c_c_u4_1gadcfbaa660e4c008e78128b8deb4cc5c1" kindref="member">XMC_CCU4_EnableShadowTransfer()</ref> the value which are written in the shadow registers get updated to the actual registers immediately. </para>
</simplesect>
<simplesect kind="par"><title>Note:</title><para></para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___c_c_u4_1gadcfbaa660e4c008e78128b8deb4cc5c1" kindref="member">XMC_CCU4_EnableShadowTransfer()</ref><linebreak/>
 </para>
</simplesect>
<simplesect kind="note"><para>Only available for XMC1400 series </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="2386" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" bodystart="2386" bodyend="2391"/>
      </memberdef>
      <memberdef kind="function" id="group___c_c_u4_1gad492e0c49bfa5b89b01d6dd5a43a1e1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CCU4_StartPrescaler</definition>
        <argsstring>(XMC_CCU4_MODULE_t *const module)</argsstring>
        <name>XMC_CCU4_StartPrescaler</name>
        <param>
          <type><ref refid="group___c_c_u4_1gabc8c277fccba02adfd4c57fdbf66df71" kindref="member">XMC_CCU4_MODULE_t</ref> *const</type>
          <declname>module</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>module</parametername>
</parameternamelist>
<parameterdescription>
<para>Constant pointer to CCU4 module </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><linebreak/>
 None<linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Starts the prescaler and restores clocks to the timer slices, by setting GIDLC.SPRB bit.<linebreak/>
<linebreak/>
 Once the input to the prescaler has been chosen and the prescaler divider of all slices programmed, the prescaler itself may be started. Invoke this API after <ref refid="group___c_c_u4_1ga6ab30100f7e86a8f47095282a123d071" kindref="member">XMC_CCU4_Init()</ref> (Mandatory to fully initialize the module).Directly accessed register is GIDLC.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___c_c_u4_1ga6ab30100f7e86a8f47095282a123d071" kindref="member">XMC_CCU4_Init()</ref><linebreak/>
 <ref refid="group___c_c_u4_1ga1809347868d61b8627442802601fb863" kindref="member">XMC_CCU4_EnableClock()</ref><linebreak/>
 <ref refid="group___c_c_u4_1ga58ad9c171f730ad379f349aac4e78009" kindref="member">XMC_CCU4_DisableClock()</ref><linebreak/>
 <ref refid="group___c_c_u4_1gad492e0c49bfa5b89b01d6dd5a43a1e1b" kindref="member">XMC_CCU4_StartPrescaler()</ref><linebreak/>
 <ref refid="group___c_c_u4_1gae3741bc9dc0cb9f565ade9182d73141f" kindref="member">XMC_CCU4_StopPrescaler()</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="893" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" bodystart="893" bodyend="897"/>
      </memberdef>
      <memberdef kind="function" id="group___c_c_u4_1gae3741bc9dc0cb9f565ade9182d73141f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CCU4_StopPrescaler</definition>
        <argsstring>(XMC_CCU4_MODULE_t *const module)</argsstring>
        <name>XMC_CCU4_StopPrescaler</name>
        <param>
          <type><ref refid="group___c_c_u4_1gabc8c277fccba02adfd4c57fdbf66df71" kindref="member">XMC_CCU4_MODULE_t</ref> *const</type>
          <declname>module</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>module</parametername>
</parameternamelist>
<parameterdescription>
<para>Constant pointer to CCU4 module </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><linebreak/>
 None<linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Stops the prescaler and blocks clocks to the timer slices, by setting GIDLS.CPRB bit.<linebreak/>
<linebreak/>
Opposite of the StartPrescaler routine. Clears the run bit of the prescaler. Ensures that the module clock is not supplied to the slices of the module.Registers directly accessed is GIDLS.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___c_c_u4_1ga1809347868d61b8627442802601fb863" kindref="member">XMC_CCU4_EnableClock()</ref><linebreak/>
 <ref refid="group___c_c_u4_1ga58ad9c171f730ad379f349aac4e78009" kindref="member">XMC_CCU4_DisableClock()</ref><linebreak/>
 <ref refid="group___c_c_u4_1gad492e0c49bfa5b89b01d6dd5a43a1e1b" kindref="member">XMC_CCU4_StartPrescaler()</ref><linebreak/>
 <ref refid="group___c_c_u4_1gae3741bc9dc0cb9f565ade9182d73141f" kindref="member">XMC_CCU4_StopPrescaler()</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="913" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" bodystart="913" bodyend="917"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="group___c_c_u4_1ga8502598617c5ba53391dbb5e483d4565" prot="public" static="no">
        <name>XMC_CCU4_SLICE_CHECK_INTERRUPT</name>
        <param><defname>interrupt</defname></param>
        <initializer>((interrupt == <ref refid="group___c_c_u4_1gga9b6b22c75755089c6c4038de4a5d213ca1110754891260f416e50d1ad2bb30930" kindref="member">XMC_CCU4_SLICE_IRQ_ID_PERIOD_MATCH</ref>)           || \
     (interrupt == <ref refid="group___c_c_u4_1gga9b6b22c75755089c6c4038de4a5d213ca615bf994e6e5f1b13ababdd84616904f" kindref="member">XMC_CCU4_SLICE_IRQ_ID_ONE_MATCH</ref>)              || \
     (interrupt == <ref refid="group___c_c_u4_1gga9b6b22c75755089c6c4038de4a5d213ca1195f29e18054e36acb8a3ec18bbd238" kindref="member">XMC_CCU4_SLICE_IRQ_ID_COMPARE_MATCH_UP</ref>)  || \
     (interrupt == <ref refid="group___c_c_u4_1gga9b6b22c75755089c6c4038de4a5d213ca2eb52479fe0ae263fe317b1743e50608" kindref="member">XMC_CCU4_SLICE_IRQ_ID_COMPARE_MATCH_DOWN</ref>)|| \
     (interrupt == <ref refid="group___c_c_u4_1gga9b6b22c75755089c6c4038de4a5d213cacc10ec1487839dcdd54b9dbd9466b00e" kindref="member">XMC_CCU4_SLICE_IRQ_ID_EVENT0</ref>)                 || \
     (interrupt == <ref refid="group___c_c_u4_1gga9b6b22c75755089c6c4038de4a5d213cac2fe4d6206f325e8ff4dff7099e5ab0b" kindref="member">XMC_CCU4_SLICE_IRQ_ID_EVENT1</ref>)                 || \
     (interrupt == <ref refid="group___c_c_u4_1gga9b6b22c75755089c6c4038de4a5d213ca98d2fb52e2a0891b483e14fd0b821604" kindref="member">XMC_CCU4_SLICE_IRQ_ID_EVENT2</ref>)                 || \
     (interrupt == <ref refid="group___c_c_u4_1gga9b6b22c75755089c6c4038de4a5d213cace11d182e6f743f723d70077f588801a" kindref="member">XMC_CCU4_SLICE_IRQ_ID_TRAP</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" line="170" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ccu4.h" bodystart="170" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Capture Compare Unit 4 (CCU4) low level driver for XMC family of microcontrollers<linebreak/>
 </para>
    </briefdescription>
    <detaileddescription>
<para>The CCU4 peripheral is a major component for systems that need general purpose timers for signal monitoring/conditioning and Pulse Width Modulation (PWM) signal generation. Power electronic control systems like switched mode power supplies or interruptible power supplies, can easily be implemented with the functions inside the CCU4 peripheral.<linebreak/>
Each CCU4 module is comprised of four identical 16 bit Capture/Compare Timer slices, CC4y (where y = [0..4]). Each timer slice can work in compare mode or in capture mode.</para>
<para>APIs provided in this file cover the following functional blocks of CCU4:<linebreak/>
<ndash/> Timer configuration, Capture configuration, Function/Event configuration, Interrupt configuration<linebreak/>
<simplesect kind="par"><title>Note:</title><para><orderedlist>
<listitem><para>SLICE (APIs prefixed with e.g. XMC_CCU4_SLICE_)</para>
</listitem><listitem><para>Module (APIs are not having any prefix e.g. XMC_CCU4_)</para>
</listitem></orderedlist>
</para>
</simplesect>
<simplesect kind="par"><title>Timer(Compare mode) configuration:</title><para>This section of the LLD provides the configuration structure <ref refid="struct_x_m_c___c_c_u4___s_l_i_c_e___c_o_m_p_a_r_e___c_o_n_f_i_g__t" kindref="compound">XMC_CCU4_SLICE_COMPARE_CONFIG_t</ref> and the initialization function <ref refid="group___c_c_u4_1gaaaf6a6054b308d38a5d05a518d042873" kindref="member">XMC_CCU4_SLICE_CompareInit()</ref>.</para>
</simplesect>
It can be used to:<orderedlist>
<listitem><para>Start and Stop the timer. (<ref refid="group___c_c_u4_1ga9997bb59706a4034e3e3be33a4935a7c" kindref="member">XMC_CCU4_SLICE_StartTimer()</ref>, <ref refid="group___c_c_u4_1gac41eed8d2857f7c9d23567fa742a705c" kindref="member">XMC_CCU4_SLICE_StopTimer()</ref>)</para>
</listitem><listitem><para>Update the period, compare, Dither, Prescaler and Passive values. (<ref refid="group___c_c_u4_1ga1341abfd52a8165c7e1b5292033797ed" kindref="member">XMC_CCU4_SLICE_SetTimerPeriodMatch()</ref>, <ref refid="group___c_c_u4_1ga7ae1adcaba614fa7d919221da9020a57" kindref="member">XMC_CCU4_SLICE_SetTimerCompareMatch()</ref>, <ref refid="group___c_c_u4_1ga24127bd989b62814c2ba0cc876b99473" kindref="member">XMC_CCU4_SLICE_SetPrescaler()</ref>, <ref refid="group___c_c_u4_1gac459b6e5e0efccd9bc762c5add86ca48" kindref="member">XMC_CCU4_SLICE_SetDitherCompareValue()</ref>, <ref refid="group___c_c_u4_1ga962a6a7402c99ec80359d3202ae9cd50" kindref="member">XMC_CCU4_SLICE_SetPassiveLevel()</ref>)</para>
</listitem><listitem><para>Enable the slices to support multichannel mode. (<ref refid="group___c_c_u4_1ga470cd6e533923a9495e76fd7f0fcf0de" kindref="member">XMC_CCU4_SLICE_EnableMultiChannelMode()</ref>)</para>
</listitem></orderedlist>
</para>
<para><simplesect kind="par"><title>Capture configuration:</title><para>This section of the LLD provides the configuration structure <ref refid="struct_x_m_c___c_c_u4___s_l_i_c_e___c_a_p_t_u_r_e___c_o_n_f_i_g__t" kindref="compound">XMC_CCU4_SLICE_CAPTURE_CONFIG_t</ref> and the initialization function <ref refid="group___c_c_u4_1ga0e1afff754cd0b288f3ef9e364b86092" kindref="member">XMC_CCU4_SLICE_CaptureInit()</ref>.</para>
</simplesect>
It can be used to:<orderedlist>
<listitem><para>Configure the capture functionality. (<ref refid="group___c_c_u4_1ga3ed073924b8580efb863070ddf20426a" kindref="member">XMC_CCU4_SLICE_Capture0Config()</ref>, <ref refid="group___c_c_u4_1ga01bd8510437249b1bc33eb5cd2da7b0f" kindref="member">XMC_CCU4_SLICE_Capture1Config()</ref>)</para>
</listitem><listitem><para>Read the captured values along with the status, which indicate the value is latest or not. (<ref refid="group___c_c_u4_1gaf3b2360da5116806f763ee79a63591ab" kindref="member">XMC_CCU4_SLICE_GetCaptureRegisterValue()</ref>)</para>
</listitem></orderedlist>
</para>
<para><simplesect kind="par"><title>Function/Event configuration:</title><para>This section of the LLD provides the configuration structure <ref refid="struct_x_m_c___c_c_u4___s_l_i_c_e___e_v_e_n_t___c_o_n_f_i_g__t" kindref="compound">XMC_CCU4_SLICE_EVENT_CONFIG_t</ref>.<linebreak/>
 It can be used to:<orderedlist>
<listitem><para>Enable and Disable the events. (<ref refid="group___c_c_u4_1ga70968924480cf3d06eb9381856a69b87" kindref="member">XMC_CCU4_SLICE_EnableEvent()</ref>, <ref refid="group___c_c_u4_1ga1d8dd9cc41693043dec0ae759d91fbae" kindref="member">XMC_CCU4_SLICE_DisableEvent()</ref>)</para>
</listitem><listitem><para>Configure to start and stop the timer on external events.(<ref refid="group___c_c_u4_1gac029dc08c5d54be8e773df0de9641691" kindref="member">XMC_CCU4_SLICE_StartConfig()</ref>, <ref refid="group___c_c_u4_1ga17330b4b761f443140b1c736c1a09840" kindref="member">XMC_CCU4_SLICE_StopConfig()</ref>)</para>
</listitem><listitem><para>Modulation, external load and Gating of the timer output.(<ref refid="group___c_c_u4_1ga14933455fad7c724768f0cf8fbd61324" kindref="member">XMC_CCU4_SLICE_ModulationConfig()</ref>, <ref refid="group___c_c_u4_1ga2d77fccc50ddf0c24b4906fd1b4ba1ae" kindref="member">XMC_CCU4_SLICE_LoadConfig()</ref>, <ref refid="group___c_c_u4_1gafbf3c4118d03da31af66baf439183cae" kindref="member">XMC_CCU4_SLICE_GateConfig()</ref>)</para>
</listitem><listitem><para>Control the count direction of the timer based on the external event. (<ref refid="group___c_c_u4_1gac61d7dc678e8379b4afaa8d763975866" kindref="member">XMC_CCU4_SLICE_DirectionConfig()</ref>)</para>
</listitem><listitem><para>Count the external events.(<ref refid="group___c_c_u4_1gaf312a02f00b3149c2f5cd3faea6f93c2" kindref="member">XMC_CCU4_SLICE_CountConfig()</ref>)</para>
</listitem><listitem><para>External Trap. Which can be used as protective feature.(<ref refid="group___c_c_u4_1gaba1fc3c0735f1bed11dafb3d4c773ba5" kindref="member">XMC_CCU4_SLICE_EnableTrap()</ref>, <ref refid="group___c_c_u4_1ga528b039bddfe9e20f765aaa2f7bdcc0e" kindref="member">XMC_CCU4_SLICE_DisableTrap()</ref>, <ref refid="group___c_c_u4_1gab2d5615177cfa2f20c5f5655400f4a8e" kindref="member">XMC_CCU4_SLICE_TrapConfig()</ref>)</para>
</listitem></orderedlist>
</para>
</simplesect>
<simplesect kind="par"><title>Interrupt configuration:</title><para>This section of the LLD provides the function to configure the interrupt node to each event (<ref refid="group___c_c_u4_1ga08c882083ebd4d874a466b61d011e3f7" kindref="member">XMC_CCU4_SLICE_SetInterruptNode()</ref>) </para>
</simplesect>
</para>
    </detaileddescription>
  </compounddef>
</doxygen>
