<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="xmc__dsd_8h" kind="file" language="C++">
    <compoundname>xmc_dsd.h</compoundname>
    <includes local="yes">xmc_common.h</includes>
    <includes refid="xmc__scu_8h" local="yes">xmc_scu.h</includes>
    <incdepgraph>
      <node id="37">
        <label>xmc_common.h</label>
      </node>
      <node id="36">
        <label>xmc_dsd.h</label>
        <link refid="xmc__dsd_8h"/>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="struct_x_m_c___d_s_d___c_h___a_u_x___f_i_l_t_e_r___c_o_n_f_i_g__t" prot="public">XMC_DSD_CH_AUX_FILTER_CONFIG_t</innerclass>
    <innerclass refid="struct_x_m_c___d_s_d___c_h___c_o_n_f_i_g__t" prot="public">XMC_DSD_CH_CONFIG_t</innerclass>
    <innerclass refid="struct_x_m_c___d_s_d___c_h___f_i_l_t_e_r___c_o_n_f_i_g__t" prot="public">XMC_DSD_CH_FILTER_CONFIG_t</innerclass>
    <innerclass refid="struct_x_m_c___d_s_d___c_h___i_n_t_e_g_r_a_t_o_r___c_o_n_f_i_g__t" prot="public">XMC_DSD_CH_INTEGRATOR_CONFIG_t</innerclass>
    <innerclass refid="struct_x_m_c___d_s_d___c_h___r_e_c_t_i_f_y___c_o_n_f_i_g__t" prot="public">XMC_DSD_CH_RECTIFY_CONFIG_t</innerclass>
    <innerclass refid="struct_x_m_c___d_s_d___c_h___t_i_m_e_s_t_a_m_p___c_o_n_f_i_g__t" prot="public">XMC_DSD_CH_TIMESTAMP_CONFIG_t</innerclass>
    <innerclass refid="struct_x_m_c___d_s_d___g_e_n_e_r_a_t_o_r___c_o_n_f_i_g__t" prot="public">XMC_DSD_GENERATOR_CONFIG_t</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="group___d_s_d_1ga237ba66a7c30407632bdc2920368a266" prot="public" static="no">
        <name>XMC_DSD_CHECK_CHANNEL_PTR</name>
        <param><defname>PTR</defname></param>
        <initializer>( ((PTR) == DSD_CH0) || ((PTR) == DSD_CH1) || ((PTR) == DSD_CH2) || ((PTR) == DSD_CH3))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_dsd.h" line="112" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_dsd.h" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___d_s_d_1gaa407d696b0bec52989d3cc8c01f606ac" prot="public" static="no">
        <name>XMC_DSD_CHECK_MODULE_PTR</name>
        <param><defname>PTR</defname></param>
        <initializer>( ((PTR)== DSD))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_dsd.h" line="111" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_dsd.h" bodystart="111" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group___d_s_d_1gae9cb3a22cc1880697d0ea7750a2b6d93" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_DSD_CH_AUX_EVENT_t</name>
        <enumvalue id="group___d_s_d_1ggae9cb3a22cc1880697d0ea7750a2b6d93a57ad2ad31b4899ab088338edc798b52c" prot="public">
          <name>XMC_DSD_CH_AUX_EVENT_DISABLED</name>
          <initializer>= 0U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Service request is disabled </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___d_s_d_1ggae9cb3a22cc1880697d0ea7750a2b6d93a0a212d10c3ac1bffed59962213fc4a4b" prot="public">
          <name>XMC_DSD_CH_AUX_EVENT_EVERY_NEW_RESULT</name>
          <initializer>= 1U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Service request generated for aux filter for every new result </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___d_s_d_1ggae9cb3a22cc1880697d0ea7750a2b6d93a4faabdd8772d2d0cdc1ca7c4338b40d1" prot="public">
          <name>XMC_DSD_CH_AUX_EVENT_CAPTURE_SIGN_DELAY</name>
          <initializer>= 2U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Service request generated for alternate source </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___d_s_d_1ggae9cb3a22cc1880697d0ea7750a2b6d93a3ab4d0c7568df504e83490122d2307e4" prot="public">
          <name>XMC_DSD_CH_AUX_EVENT_INSIDE_BOUNDARY</name>
          <initializer>= 5U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Service request generated for aux filter if result is inside boundary </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___d_s_d_1ggae9cb3a22cc1880697d0ea7750a2b6d93a3abdc67a3d401ff6844abf8e03c40d7a" prot="public">
          <name>XMC_DSD_CH_AUX_EVENT_OUTSIDE_BOUNDARY</name>
          <initializer>= 9U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Service request generated for aux filter if result is outside boundary </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enumerates the service request generation mode for auxiliary filter. Use type <ref refid="group___d_s_d_1gae9cb3a22cc1880697d0ea7750a2b6d93" kindref="member">XMC_DSD_CH_AUX_EVENT_t</ref> for this enum. Note: This is combined ENUM for SRGA + ESEL bit fields </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_dsd.h" line="358" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_dsd.h" bodystart="357" bodyend="365"/>
      </memberdef>
      <memberdef kind="enum" id="group___d_s_d_1gab4e7fab86390d11083766317842074b6" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_DSD_CH_CLK_t</name>
        <enumvalue id="group___d_s_d_1ggab4e7fab86390d11083766317842074b6af92290b5c8d52063a5db34c772afbfd7" prot="public">
          <name>XMC_DSD_CH_CLK_DIV_2</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>fMOD = fCLK/2 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___d_s_d_1ggab4e7fab86390d11083766317842074b6ae3f733ce4d8ac562e17b0c2277ad4d5e" prot="public">
          <name>XMC_DSD_CH_CLK_DIV_4</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>fMOD = fCLK/4 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___d_s_d_1ggab4e7fab86390d11083766317842074b6a986cd51fbdd73966a0366fed1919ca8d" prot="public">
          <name>XMC_DSD_CH_CLK_DIV_6</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>fMOD = fCLK/6 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___d_s_d_1ggab4e7fab86390d11083766317842074b6aea0dcaa19c05a30cafd4fcff830a9d24" prot="public">
          <name>XMC_DSD_CH_CLK_DIV_8</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>fMOD = fCLK/8 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___d_s_d_1ggab4e7fab86390d11083766317842074b6a22ef3429a0285f5d47809d2c539c2e86" prot="public">
          <name>XMC_DSD_CH_CLK_DIV_10</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>fMOD = fCLK/10 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___d_s_d_1ggab4e7fab86390d11083766317842074b6a1dc3da8a9668cca3acb379f1d4374bf8" prot="public">
          <name>XMC_DSD_CH_CLK_DIV_12</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>fMOD = fCLK/12 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___d_s_d_1ggab4e7fab86390d11083766317842074b6a1cc347b104335e28022f030f2365ff16" prot="public">
          <name>XMC_DSD_CH_CLK_DIV_14</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>fMOD = fCLK/14 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___d_s_d_1ggab4e7fab86390d11083766317842074b6a74088346c57fa2153fa4f474dd22d154" prot="public">
          <name>XMC_DSD_CH_CLK_DIV_16</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>fMOD = fCLK/16 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___d_s_d_1ggab4e7fab86390d11083766317842074b6a106fe80a6d799ce3b7aa32e87dfb2ef9" prot="public">
          <name>XMC_DSD_CH_CLK_DIV_18</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>fMOD = fCLK/18 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___d_s_d_1ggab4e7fab86390d11083766317842074b6ab37aa7334b5f943abba4b7865f12d2f1" prot="public">
          <name>XMC_DSD_CH_CLK_DIV_20</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>fMOD = fCLK/20 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___d_s_d_1ggab4e7fab86390d11083766317842074b6af32d566fb67e160971a02bbe1e4fba0f" prot="public">
          <name>XMC_DSD_CH_CLK_DIV_22</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>fMOD = fCLK/22 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___d_s_d_1ggab4e7fab86390d11083766317842074b6a04ca791ac88ab94fb02628c3baed9829" prot="public">
          <name>XMC_DSD_CH_CLK_DIV_24</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>fMOD = fCLK/24 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___d_s_d_1ggab4e7fab86390d11083766317842074b6a373e5a76ab64bae225ff74f2ca31f384" prot="public">
          <name>XMC_DSD_CH_CLK_DIV_26</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>fMOD = fCLK/26 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___d_s_d_1ggab4e7fab86390d11083766317842074b6a3e561cda7535d481e9e443b6392ecf41" prot="public">
          <name>XMC_DSD_CH_CLK_DIV_28</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>fMOD = fCLK/28 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___d_s_d_1ggab4e7fab86390d11083766317842074b6ac3aedde9d6599141f0833350ea679b94" prot="public">
          <name>XMC_DSD_CH_CLK_DIV_30</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>fMOD = fCLK/30 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___d_s_d_1ggab4e7fab86390d11083766317842074b6afed001abcc2f043d5f65731de6cb4cf7" prot="public">
          <name>XMC_DSD_CH_CLK_DIV_32</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>fMOD = fCLK/32 </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enumerates the divider factor for modulator clock (fMOD). Use divider factor to derive modulator clock frequency(fMOD), from the selected internal clock source(fCLK). Use type <ref refid="group___d_s_d_1gab4e7fab86390d11083766317842074b6" kindref="member">XMC_DSD_CH_CLK_t</ref> for this enum. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_dsd.h" line="249" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_dsd.h" bodystart="248" bodyend="268"/>
      </memberdef>
      <memberdef kind="enum" id="group___d_s_d_1ga74e553765a2b78b955d2eb8cd2a9217e" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_DSD_CH_CLOCK_SOURCE_t</name>
        <enumvalue id="group___d_s_d_1gga74e553765a2b78b955d2eb8cd2a9217eaa3e6fac1fc6082713a46fd79b20a634f" prot="public">
          <name>XMC_DSD_CH_CLOCK_SOURCE_A</name>
          <initializer>= 1U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>External source, from input A </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___d_s_d_1gga74e553765a2b78b955d2eb8cd2a9217ea30fb5b3bf5374c6bd5ce4db7f3a3082a" prot="public">
          <name>XMC_DSD_CH_CLOCK_SOURCE_B</name>
          <initializer>= 2U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>External source, from input B </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___d_s_d_1gga74e553765a2b78b955d2eb8cd2a9217eaa52858de2722e044b1e26851571bb6c0" prot="public">
          <name>XMC_DSD_CH_CLOCK_SOURCE_C</name>
          <initializer>= 3U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>External source, from input C </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___d_s_d_1gga74e553765a2b78b955d2eb8cd2a9217ea2db12bdc7816e67d9a413a7333c72558" prot="public">
          <name>XMC_DSD_CH_CLOCK_SOURCE_D</name>
          <initializer>= 4U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>External source, from input D </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___d_s_d_1gga74e553765a2b78b955d2eb8cd2a9217ea558db7a075775df230732ed5a4829a29" prot="public">
          <name>XMC_DSD_CH_CLOCK_SOURCE_INTERN</name>
          <initializer>= 15U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Internal clock source </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enumerates the sample clock source select. Use type <ref refid="group___d_s_d_1ga74e553765a2b78b955d2eb8cd2a9217e" kindref="member">XMC_DSD_CH_CLOCK_SOURCE_t</ref> for this enum. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_dsd.h" line="215" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_dsd.h" bodystart="214" bodyend="223"/>
      </memberdef>
      <memberdef kind="enum" id="group___d_s_d_1ga7277cae85e421cd975a28a91e21de688" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_DSD_CH_DATA_SOURCE_t</name>
        <enumvalue id="group___d_s_d_1gga7277cae85e421cd975a28a91e21de688a3b50e42af50af314a78d734136ab9867" prot="public">
          <name>XMC_DSD_CH_DATA_SOURCE_DISCONNECT</name>
          <initializer>= 0U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Disconnected </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___d_s_d_1gga7277cae85e421cd975a28a91e21de688a99dd10b1bf73b04c1d99a63d03f72e69" prot="public">
          <name>XMC_DSD_CH_DATA_SOURCE_A_DIRECT</name>
          <initializer>= 2U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>External source, from input A, direct </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___d_s_d_1gga7277cae85e421cd975a28a91e21de688af7f78d32c58dc1b78f224a474201fc4a" prot="public">
          <name>XMC_DSD_CH_DATA_SOURCE_A_INVERTED</name>
          <initializer>= 3U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>External source, from input A, inverted </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___d_s_d_1gga7277cae85e421cd975a28a91e21de688a6fe0a48855d02bfc4ae14e63d607aea9" prot="public">
          <name>XMC_DSD_CH_DATA_SOURCE_B_DIRECT</name>
          <initializer>= 4U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>External source, from input B, direct </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___d_s_d_1gga7277cae85e421cd975a28a91e21de688a48988ba9421c4624258650eb359855d9" prot="public">
          <name>XMC_DSD_CH_DATA_SOURCE_B_INVERTED</name>
          <initializer>= 5U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>External source, from input B, inverted </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enumerates the input data source select. Use type <ref refid="group___d_s_d_1ga7277cae85e421cd975a28a91e21de688" kindref="member">XMC_DSD_CH_DATA_SOURCE_t</ref> for this enum. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_dsd.h" line="200" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_dsd.h" bodystart="199" bodyend="208"/>
      </memberdef>
      <memberdef kind="enum" id="group___d_s_d_1ga08bfaecf579c25093fc992320457d86a" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_DSD_CH_FILTER_TYPE_t</name>
        <enumvalue id="group___d_s_d_1gga08bfaecf579c25093fc992320457d86aad74cf93e2437ad3313c6aa296d519587" prot="public">
          <name>XMC_DSD_CH_FILTER_TYPE_CIC1</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>CIC1 filter </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___d_s_d_1gga08bfaecf579c25093fc992320457d86aacc89ea0bb3a521607af46db1d7dc224e" prot="public">
          <name>XMC_DSD_CH_FILTER_TYPE_CIC2</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>CIC2 filter </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___d_s_d_1gga08bfaecf579c25093fc992320457d86aa87e345a272e00f6130a2ce360819fd5b" prot="public">
          <name>XMC_DSD_CH_FILTER_TYPE_CIC3</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>CIC3 filter </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___d_s_d_1gga08bfaecf579c25093fc992320457d86aa66ecef471600edaacb1af5471adb99e2" prot="public">
          <name>XMC_DSD_CH_FILTER_TYPE_CICF</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>CICF filter </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enumerates the CIC(cyclic integrating comb) filter type. Use type <ref refid="group___d_s_d_1ga08bfaecf579c25093fc992320457d86a" kindref="member">XMC_DSD_CH_FILTER_TYPE_t</ref> for this enum. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_dsd.h" line="186" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_dsd.h" bodystart="185" bodyend="193"/>
      </memberdef>
      <memberdef kind="enum" id="group___d_s_d_1gaf4be737ccac0300480dabb3635c9f95c" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_DSD_CH_ID_t</name>
        <enumvalue id="group___d_s_d_1ggaf4be737ccac0300480dabb3635c9f95ca90ba73b0dbf8db34d53f85a0195a69e5" prot="public">
          <name>XMC_DSD_CH_ID_0</name>
          <initializer>= 1U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Register value for channel 0 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___d_s_d_1ggaf4be737ccac0300480dabb3635c9f95cac11a68d45e1de1d459e07779e94ab236" prot="public">
          <name>XMC_DSD_CH_ID_1</name>
          <initializer>= 2U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Register value for channel 1 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___d_s_d_1ggaf4be737ccac0300480dabb3635c9f95cae1a6484ad4995f9a2e8e7c39c2e8f6e7" prot="public">
          <name>XMC_DSD_CH_ID_2</name>
          <initializer>= 4U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Register value for channel 2 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___d_s_d_1ggaf4be737ccac0300480dabb3635c9f95ca9a883136a56e48e6f5e400f5d8f14d16" prot="public">
          <name>XMC_DSD_CH_ID_3</name>
          <initializer>= 8U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Register value for channel 3 </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enumerates the channel run control bit register value in global run control register. Use type <ref refid="group___d_s_d_1gaf4be737ccac0300480dabb3635c9f95c" kindref="member">XMC_DSD_CH_ID_t</ref> for this enum. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_dsd.h" line="344" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_dsd.h" bodystart="343" bodyend="350"/>
      </memberdef>
      <memberdef kind="enum" id="group___d_s_d_1gacf67e1a54b42e975838c0331a67d22f8" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_DSD_CH_INTEGRATOR_START_t</name>
        <enumvalue id="group___d_s_d_1ggacf67e1a54b42e975838c0331a67d22f8a6542df96a700282af672859b512f512b" prot="public">
          <name>XMC_DSD_CH_INTEGRATOR_START_OFF</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>No integration trigger </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___d_s_d_1ggacf67e1a54b42e975838c0331a67d22f8a41ff83cc378e90276ab31dbccbae8fec" prot="public">
          <name>XMC_DSD_CH_INTEGRATOR_START_TRIGGER_FALL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trigger event upon a falling edge </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___d_s_d_1ggacf67e1a54b42e975838c0331a67d22f8a41554bac76554e256a140371997bc3e0" prot="public">
          <name>XMC_DSD_CH_INTEGRATOR_START_TRIGGER_RISE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trigger event upon a rising edge </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___d_s_d_1ggacf67e1a54b42e975838c0331a67d22f8aa0f9eae082895c9446d286311e3ae3f1" prot="public">
          <name>XMC_DSD_CH_INTEGRATOR_START_ALLWAYS_ON</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>No trigger, integrator active all the time </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enumerates the integrator trigger mode. Use type <ref refid="group___d_s_d_1gacf67e1a54b42e975838c0331a67d22f8" kindref="member">XMC_DSD_CH_INTEGRATOR_START_t</ref> for this enum. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_dsd.h" line="275" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_dsd.h" bodystart="274" bodyend="281"/>
      </memberdef>
      <memberdef kind="enum" id="group___d_s_d_1ga222a39dba6894d68bc2af180f3d42b34" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_DSD_CH_INTEGRATOR_STOP_t</name>
        <enumvalue id="group___d_s_d_1gga222a39dba6894d68bc2af180f3d42b34ad75dd79f4a198aa99a8795127737ff95" prot="public">
          <name>XMC_DSD_CH_INTEGRATOR_STOP_END_OF_LOOPS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Integration stopped upon the inverse trigger event </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___d_s_d_1gga222a39dba6894d68bc2af180f3d42b34a37e30791f02595a9c51505de67c09e1f" prot="public">
          <name>XMC_DSD_CH_INTEGRATOR_STOP_ENDLESS_OR_INVERSE_TRIGGER</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Integration enabled upon the defined trigger event. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enumerates the integration enable. Use type <ref refid="group___d_s_d_1ga222a39dba6894d68bc2af180f3d42b34" kindref="member">XMC_DSD_CH_INTEGRATOR_STOP_t</ref> for this enum. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_dsd.h" line="288" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_dsd.h" bodystart="287" bodyend="292"/>
      </memberdef>
      <memberdef kind="enum" id="group___d_s_d_1ga77628de9d7c52f79eebbe7797bc7b581" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_DSD_CH_RESULT_EVENT_t</name>
        <enumvalue id="group___d_s_d_1gga77628de9d7c52f79eebbe7797bc7b581a1d9f8a186836ef365b4182c2dddbd73b" prot="public">
          <name>XMC_DSD_CH_RESULT_EVENT_DISABLE</name>
          <initializer>= 0U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Disable service request </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___d_s_d_1gga77628de9d7c52f79eebbe7797bc7b581a9bd8a93a112df3d1572f6669eae2651e" prot="public">
          <name>XMC_DSD_CH_RESULT_EVENT_ENABLE</name>
          <initializer>= 3U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Enable service request for each new result value </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enumerates the service request generation for main chain filter. Use type <ref refid="group___d_s_d_1ga77628de9d7c52f79eebbe7797bc7b581" kindref="member">XMC_DSD_CH_RESULT_EVENT_t</ref> for this enum. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_dsd.h" line="372" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_dsd.h" bodystart="371" bodyend="376"/>
      </memberdef>
      <memberdef kind="enum" id="group___d_s_d_1ga32064f76d8be2050aeb60f7cf6f5717f" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_DSD_CH_SIGN_SOURCE_t</name>
        <enumvalue id="group___d_s_d_1gga32064f76d8be2050aeb60f7cf6f5717fa0b1c0b6fe1fbe7929daa3c6a76cc369f" prot="public">
          <name>XMC_DSD_CH_SIGN_SOURCE_ON_CHIP_GENERATOR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Carrier is generated internally by DSD </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___d_s_d_1gga32064f76d8be2050aeb60f7cf6f5717fa4ed091a3010c8822b5eb6bd63b2d494c" prot="public">
          <name>XMC_DSD_CH_SIGN_SOURCE_NEXT_CHANNEL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Carrier sign signal is generated internally by next channel </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___d_s_d_1gga32064f76d8be2050aeb60f7cf6f5717fa5fb0116ec8d6042e4b056b5d1ef2956c" prot="public">
          <name>XMC_DSD_CH_SIGN_SOURCE_EXTERNAL_A</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Carrier is generated externally, External sign signal A </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___d_s_d_1gga32064f76d8be2050aeb60f7cf6f5717fae70967d5826d425b4c0103b1323f9403" prot="public">
          <name>XMC_DSD_CH_SIGN_SOURCE_EXTERNAL_B</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Carrier is generated externally, External sign signal B </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enumerates the carrier generation mode. Use type <ref refid="group___d_s_d_1ga32064f76d8be2050aeb60f7cf6f5717f" kindref="member">XMC_DSD_CH_SIGN_SOURCE_t</ref> for this enum. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_dsd.h" line="331" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_dsd.h" bodystart="330" bodyend="337"/>
      </memberdef>
      <memberdef kind="enum" id="group___d_s_d_1gac092a2346cbc4aab408df95beb6284ae" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_DSD_CH_STROBE_t</name>
        <enumvalue id="group___d_s_d_1ggac092a2346cbc4aab408df95beb6284aea82b195c9c7e46b769fc81d6368d5cf75" prot="public">
          <name>XMC_DSD_CH_STROBE_DIRECT_CLOCK_RISE</name>
          <initializer>= 1U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___d_s_d_1ggac092a2346cbc4aab408df95beb6284aea09100297da98fce37edce3332836aa53" prot="public">
          <name>XMC_DSD_CH_STROBE_DIRECT_CLOCK_FALL</name>
          <initializer>= 2U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___d_s_d_1ggac092a2346cbc4aab408df95beb6284aeadea49dba260577a86e4342997d50718c" prot="public">
          <name>XMC_DSD_CH_STROBE_DOUBLE_DATA</name>
          <initializer>= 3U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___d_s_d_1ggac092a2346cbc4aab408df95beb6284aeab978e581b13f0ee38b096aca4a2a2bc8" prot="public">
          <name>XMC_DSD_CH_STROBE_DOUBLE_CLOCK_RISE</name>
          <initializer>= 5U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___d_s_d_1ggac092a2346cbc4aab408df95beb6284aeaae9852799888008c3529ac138b8ea28b" prot="public">
          <name>XMC_DSD_CH_STROBE_DOUBLE_CLOCK_FALL</name>
          <initializer>= 6U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enumerates the data strobe generation Mode. Use type <ref refid="group___d_s_d_1gac092a2346cbc4aab408df95beb6284ae" kindref="member">XMC_DSD_CH_STROBE_t</ref> for this enum. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_dsd.h" line="231" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_dsd.h" bodystart="230" bodyend="239"/>
      </memberdef>
      <memberdef kind="enum" id="group___d_s_d_1ga0b1ee318d29a035ea865a08b6f83b4b6" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_DSD_CH_TIMESTAMP_TRIGGER_t</name>
        <enumvalue id="group___d_s_d_1gga0b1ee318d29a035ea865a08b6f83b4b6a847dd1a624ff871ba8ab617a46b93800" prot="public">
          <name>XMC_DSD_CH_TIMESTAMP_TRIGGER_DISABLE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>No trigger event </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___d_s_d_1gga0b1ee318d29a035ea865a08b6f83b4b6a4c2b8f2723391c141957ca8c5ac1aa29" prot="public">
          <name>XMC_DSD_CH_TIMESTAMP_TRIGGER_FALL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trigger event upon a falling edge </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___d_s_d_1gga0b1ee318d29a035ea865a08b6f83b4b6a549783fb5ab277a1c1d8142c0c491ee6" prot="public">
          <name>XMC_DSD_CH_TIMESTAMP_TRIGGER_RISE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trigger event upon a rising edge </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___d_s_d_1gga0b1ee318d29a035ea865a08b6f83b4b6a95228e0589b308b82b26fc5a8038f052" prot="public">
          <name>XMC_DSD_CH_TIMESTAMP_TRIGGER_BOTH_EDGES</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trigger event upon both the edge </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enumerates the timestamp trigger mode. Use type <ref refid="group___d_s_d_1ga0b1ee318d29a035ea865a08b6f83b4b6" kindref="member">XMC_DSD_CH_TIMESTAMP_TRIGGER_t</ref> for this enum. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_dsd.h" line="318" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_dsd.h" bodystart="317" bodyend="324"/>
      </memberdef>
      <memberdef kind="enum" id="group___d_s_d_1ga3a6f085bea1f918759879c3b8516fb55" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_DSD_CH_TRIGGER_SOURCE_t</name>
        <enumvalue id="group___d_s_d_1gga3a6f085bea1f918759879c3b8516fb55afb22627b045136ac12471971455ae485" prot="public">
          <name>XMC_DSD_CH_TRIGGER_SOURCE_A</name>
          <initializer>= 0U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trigger signal,input A </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___d_s_d_1gga3a6f085bea1f918759879c3b8516fb55aa613d1b7c9f08fcc129d435ef58e8b77" prot="public">
          <name>XMC_DSD_CH_TRIGGER_SOURCE_B</name>
          <initializer>= 1U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trigger signal,input B </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___d_s_d_1gga3a6f085bea1f918759879c3b8516fb55a48dd62f1e68906d40d9162b1509343bd" prot="public">
          <name>XMC_DSD_CH_TRIGGER_SOURCE_C</name>
          <initializer>= 2U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trigger signal,input C </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___d_s_d_1gga3a6f085bea1f918759879c3b8516fb55a5d18997f249d6a4648907f5b8149ac01" prot="public">
          <name>XMC_DSD_CH_TRIGGER_SOURCE_D</name>
          <initializer>= 3U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trigger signal,input D </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___d_s_d_1gga3a6f085bea1f918759879c3b8516fb55a9611e89435f93733c95030a4ac0bad2f" prot="public">
          <name>XMC_DSD_CH_TRIGGER_SOURCE_E</name>
          <initializer>= 4U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trigger signal,input E </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___d_s_d_1gga3a6f085bea1f918759879c3b8516fb55a8e413712204a804d1c13f100d2e3b426" prot="public">
          <name>XMC_DSD_CH_TRIGGER_SOURCE_F</name>
          <initializer>= 5U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trigger signal,input F </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___d_s_d_1gga3a6f085bea1f918759879c3b8516fb55ac7f7473a7a9ac51cb06a19e263bc3b00" prot="public">
          <name>XMC_DSD_CH_TRIGGER_SOURCE_G</name>
          <initializer>= 6U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trigger signal,input G </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___d_s_d_1gga3a6f085bea1f918759879c3b8516fb55ac8f0f4127665ec3feb70bc3c11ffba82" prot="public">
          <name>XMC_DSD_CH_TRIGGER_SOURCE_H</name>
          <initializer>= 7U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trigger signal,input H </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enumerates the trigger signal. Use type <ref refid="group___d_s_d_1ga3a6f085bea1f918759879c3b8516fb55" kindref="member">XMC_DSD_CH_TRIGGER_SOURCE_t</ref> for this enum. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_dsd.h" line="300" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_dsd.h" bodystart="299" bodyend="311"/>
      </memberdef>
      <memberdef kind="enum" id="group___d_s_d_1ga36d00cfa1835598c73321abc43809042" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_DSD_GENERATOR_CLKDIV_t</name>
        <enumvalue id="group___d_s_d_1gga36d00cfa1835598c73321abc43809042a148a5465bc02207f2aadaecaa63a9bec" prot="public">
          <name>XMC_DSD_GENERATOR_CLKDIV_2048</name>
          <initializer>= 0x00U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>fCG = (fCLK/2)/1024 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___d_s_d_1gga36d00cfa1835598c73321abc43809042af42ef259b1010b0d335994ff48d4738b" prot="public">
          <name>XMC_DSD_GENERATOR_CLKDIV_4096</name>
          <initializer>= 0x01U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>fCG = (fCLK/4)/1024 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___d_s_d_1gga36d00cfa1835598c73321abc43809042a85ea869d9a12a1edc7b44eda29939106" prot="public">
          <name>XMC_DSD_GENERATOR_CLKDIV_6144</name>
          <initializer>= 0x02U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>fCG = (fCLK/6)/1024 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___d_s_d_1gga36d00cfa1835598c73321abc43809042a67df9e25a1b82cde81022b7f04a89e66" prot="public">
          <name>XMC_DSD_GENERATOR_CLKDIV_8192</name>
          <initializer>= 0x03U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>fCG = (fCLK/8)/1024 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___d_s_d_1gga36d00cfa1835598c73321abc43809042a2477323af623261b2ae28463de11db2b" prot="public">
          <name>XMC_DSD_GENERATOR_CLKDIV_10240</name>
          <initializer>= 0x04U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>fCG = (fCLK/10)/1024 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___d_s_d_1gga36d00cfa1835598c73321abc43809042a44be3be30746e5bd13700775fcdf4198" prot="public">
          <name>XMC_DSD_GENERATOR_CLKDIV_12288</name>
          <initializer>= 0x05U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>fCG = (fCLK/12)/1024 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___d_s_d_1gga36d00cfa1835598c73321abc43809042a6bb0bcd91369d632a1f7d81761b1997e" prot="public">
          <name>XMC_DSD_GENERATOR_CLKDIV_14336</name>
          <initializer>= 0x06U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>fCG = (fCLK/14)/1024 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___d_s_d_1gga36d00cfa1835598c73321abc43809042a7b08b22cebd1e45beb0bdb4838ea9e6f" prot="public">
          <name>XMC_DSD_GENERATOR_CLKDIV_16384</name>
          <initializer>= 0x07U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>fCG = (fCLK/16)/1024 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___d_s_d_1gga36d00cfa1835598c73321abc43809042ada046d28ad75c756aa43443074531bf3" prot="public">
          <name>XMC_DSD_GENERATOR_CLKDIV_18432</name>
          <initializer>= 0x08U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>fCG = (fCLK/18)/1024 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___d_s_d_1gga36d00cfa1835598c73321abc43809042a702dd967c22b4e4abb1eb5687ef66bdf" prot="public">
          <name>XMC_DSD_GENERATOR_CLKDIV_20480</name>
          <initializer>= 0x09U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>fCG = (fCLK/20)/1024 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___d_s_d_1gga36d00cfa1835598c73321abc43809042a257a02ff824ebaa32eaa9ebf61ae4ee1" prot="public">
          <name>XMC_DSD_GENERATOR_CLKDIV_22528</name>
          <initializer>= 0x0AU</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>fCG = (fCLK/22)/1024 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___d_s_d_1gga36d00cfa1835598c73321abc43809042a6f27993de43741e4058958e5c70e70c6" prot="public">
          <name>XMC_DSD_GENERATOR_CLKDIV_24576</name>
          <initializer>= 0x0BU</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>fCG = (fCLK/24)/1024 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___d_s_d_1gga36d00cfa1835598c73321abc43809042a9de978b5540364acb1abac1904ca67fe" prot="public">
          <name>XMC_DSD_GENERATOR_CLKDIV_26624</name>
          <initializer>= 0x0CU</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>fCG = (fCLK/26)/1024 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___d_s_d_1gga36d00cfa1835598c73321abc43809042a18d37d0310eb1c7b1b69005290afc157" prot="public">
          <name>XMC_DSD_GENERATOR_CLKDIV_28672</name>
          <initializer>= 0x0DU</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>fCG = (fCLK/28)/1024 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___d_s_d_1gga36d00cfa1835598c73321abc43809042a3d9bedf5aeb71e16a9bc8909f6e65892" prot="public">
          <name>XMC_DSD_GENERATOR_CLKDIV_30720</name>
          <initializer>= 0x0EU</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>fCG = (fCLK/30)/1024 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___d_s_d_1gga36d00cfa1835598c73321abc43809042aef70cb4a2eb1dc8ae974b4315bca1c5f" prot="public">
          <name>XMC_DSD_GENERATOR_CLKDIV_32768</name>
          <initializer>= 0x0FU</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>fCG = (fCLK/32)/1024 </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enumerates the divider factor for the PWM pattern signal generator. Use divider factor to derive input frequency of the carrier signal generator(fCG), from the selected internal clock source(fCLK). Use type <ref refid="group___d_s_d_1ga36d00cfa1835598c73321abc43809042" kindref="member">XMC_DSD_GENERATOR_CLKDIV_t</ref> for this enum. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_dsd.h" line="146" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_dsd.h" bodystart="145" bodyend="164"/>
      </memberdef>
      <memberdef kind="enum" id="group___d_s_d_1ga5f1d45bf1b7c823102d747bbb2d2afd8" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_DSD_GENERATOR_MODE_t</name>
        <enumvalue id="group___d_s_d_1gga5f1d45bf1b7c823102d747bbb2d2afd8aad44dbf2bea2cb4f70c22f80b6572247" prot="public">
          <name>XMC_DSD_GENERATOR_MODE_STOPPED</name>
          <initializer>= 0x00U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Stopped </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___d_s_d_1gga5f1d45bf1b7c823102d747bbb2d2afd8a1e1c266a28b6328586fa87e64ea86ecc" prot="public">
          <name>XMC_DSD_GENERATOR_MODE_RECTANGLE</name>
          <initializer>= 0x01U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Square wave </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___d_s_d_1gga5f1d45bf1b7c823102d747bbb2d2afd8a344590e160d8538ef7d50d5c67cbcafe" prot="public">
          <name>XMC_DSD_GENERATOR_MODE_TRIANGLE</name>
          <initializer>= 0x02U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Triangle </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___d_s_d_1gga5f1d45bf1b7c823102d747bbb2d2afd8a7d33f4ba6f9e25914a2beddd825589a6" prot="public">
          <name>XMC_DSD_GENERATOR_MODE_SINE</name>
          <initializer>= 0x03U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Sine wave </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enumerates the carrier generator operating mode. Use type <ref refid="group___d_s_d_1ga5f1d45bf1b7c823102d747bbb2d2afd8" kindref="member">XMC_DSD_GENERATOR_MODE_t</ref> for this enum. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_dsd.h" line="172" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_dsd.h" bodystart="171" bodyend="178"/>
      </memberdef>
      <memberdef kind="enum" id="group___d_s_d_1ga1fe41bdf5334f8dafa87942e43adf2e4" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_DSD_STATUS_t</name>
        <enumvalue id="group___d_s_d_1gga1fe41bdf5334f8dafa87942e43adf2e4ae475b684cda2e9244fce06f7233b371c" prot="public">
          <name>XMC_DSD_STATUS_OK</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>API fulfills request </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___d_s_d_1gga1fe41bdf5334f8dafa87942e43adf2e4a3fb2552c72b7201d430cc09c347bfab7" prot="public">
          <name>XMC_DSD_STATUS_ERROR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Error detected </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return types of the API&apos;s.Use type <ref refid="group___d_s_d_1ga1fe41bdf5334f8dafa87942e43adf2e4" kindref="member">XMC_DSD_STATUS_t</ref> for this enum. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_dsd.h" line="132" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_dsd.h" bodystart="131" bodyend="137"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group___d_s_d_1ga0926714ae01c0dc11c07c597e6c48cf4" prot="public" static="no">
        <type>DSD_CH_TypeDef</type>
        <definition>typedef DSD_CH_TypeDef XMC_DSD_CH_t</definition>
        <argsstring></argsstring>
        <name>XMC_DSD_CH_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>DSD Channel </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_dsd.h" line="120" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_dsd.h" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___d_s_d_1ga4b704e8631e5c1ce127a679e840166d4" prot="public" static="no">
        <type>DSD_GLOBAL_TypeDef</type>
        <definition>typedef DSD_GLOBAL_TypeDef XMC_DSD_t</definition>
        <argsstring></argsstring>
        <name>XMC_DSD_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>DSD Module </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_dsd.h" line="125" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_dsd.h" bodystart="125" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group___d_s_d_1gad0bb37ffc88334e571894d16fc396c49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_DSD_CH_AuxFilter_DisableEvent</definition>
        <argsstring>(XMC_DSD_CH_t *const channel)</argsstring>
        <name>XMC_DSD_CH_AuxFilter_DisableEvent</name>
        <param>
          <type><ref refid="group___d_s_d_1ga0926714ae01c0dc11c07c597e6c48cf4" kindref="member">XMC_DSD_CH_t</ref> *const</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an instance of DSD channel of type <ref refid="group___d_s_d_1ga0926714ae01c0dc11c07c597e6c48cf4" kindref="member">XMC_DSD_CH_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>This API disable the auxiliary filter service request generation for this channel. Clear the bit fields <emphasis>SRGA</emphasis> and ESEL of register <emphasis>FCFGA</emphasis>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_dsd.h" line="1032" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_dsd.h" bodystart="1032" bodyend="1036"/>
      </memberdef>
      <memberdef kind="function" id="group___d_s_d_1ga5caf306dca39c1e83fd2c96ae386b780" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_DSD_CH_AuxFilter_EnableEvent</definition>
        <argsstring>(XMC_DSD_CH_t *const channel, XMC_DSD_CH_AUX_EVENT_t event)</argsstring>
        <name>XMC_DSD_CH_AuxFilter_EnableEvent</name>
        <param>
          <type><ref refid="group___d_s_d_1ga0926714ae01c0dc11c07c597e6c48cf4" kindref="member">XMC_DSD_CH_t</ref> *const</type>
          <declname>channel</declname>
        </param>
        <param>
          <type><ref refid="group___d_s_d_1gae9cb3a22cc1880697d0ea7750a2b6d93" kindref="member">XMC_DSD_CH_AUX_EVENT_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an instance of DSD channel of type <ref refid="group___d_s_d_1ga0926714ae01c0dc11c07c597e6c48cf4" kindref="member">XMC_DSD_CH_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>to select the type of event which will be enabled of type <ref refid="group___d_s_d_1gae9cb3a22cc1880697d0ea7750a2b6d93" kindref="member">XMC_DSD_CH_AUX_EVENT_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>This API enable the service request generation for this channel. Result events are generated at the output rate of the configured auxiliary filter chain. Configure bit field <emphasis>SRGA</emphasis> and ESEL of register <emphasis>FCFGA</emphasis> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_dsd.h" line="1016" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_dsd.h" bodystart="1016" bodyend="1021"/>
      </memberdef>
      <memberdef kind="function" id="group___d_s_d_1gac5718c77cc5727ccf1b234f1e2653704" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_DSD_CH_AuxFilter_Init</definition>
        <argsstring>(XMC_DSD_CH_t *const channel, const XMC_DSD_CH_AUX_FILTER_CONFIG_t *const init)</argsstring>
        <name>XMC_DSD_CH_AuxFilter_Init</name>
        <param>
          <type><ref refid="group___d_s_d_1ga0926714ae01c0dc11c07c597e6c48cf4" kindref="member">XMC_DSD_CH_t</ref> *const</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>const <ref refid="struct_x_m_c___d_s_d___c_h___a_u_x___f_i_l_t_e_r___c_o_n_f_i_g__t" kindref="compound">XMC_DSD_CH_AUX_FILTER_CONFIG_t</ref> *const</type>
          <declname>init</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an instance of DSD channel of type <ref refid="group___d_s_d_1ga0926714ae01c0dc11c07c597e6c48cf4" kindref="member">XMC_DSD_CH_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>init</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an instance of data structure of type <ref refid="struct_x_m_c___d_s_d___c_h___a_u_x___f_i_l_t_e_r___c_o_n_f_i_g__t" kindref="compound">XMC_DSD_CH_AUX_FILTER_CONFIG_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>This API initialize auxiliary filter module with <emphasis>init</emphasis>. The auxiliary Filter is mainly used as fast filter.<linebreak/>
Adding the auxiliary filter to the system structure helps by defining the boundaries and filter configurations.<linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title>Note</title><para>It is internally called by <ref refid="group___d_s_d_1ga6d191abec2d9b8d1c8ff1f21ac00313b" kindref="member">XMC_DSD_CH_Init()</ref>.<linebreak/>
 </para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___d_s_d_1ga6d191abec2d9b8d1c8ff1f21ac00313b" kindref="member">XMC_DSD_CH_Init()</ref><linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_dsd.h" line="976" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___d_s_d_1gace30e711b2cbdd0a17e6fc856737d051" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_DSD_CH_AuxFilter_SetBoundary</definition>
        <argsstring>(XMC_DSD_CH_t *const channel, const int16_t lower_boundary, const int16_t upper_boundary)</argsstring>
        <name>XMC_DSD_CH_AuxFilter_SetBoundary</name>
        <param>
          <type><ref refid="group___d_s_d_1ga0926714ae01c0dc11c07c597e6c48cf4" kindref="member">XMC_DSD_CH_t</ref> *const</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>const int16_t</type>
          <declname>lower_boundary</declname>
        </param>
        <param>
          <type>const int16_t</type>
          <declname>upper_boundary</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an instance of DSD channel of type <ref refid="group___d_s_d_1ga0926714ae01c0dc11c07c597e6c48cf4" kindref="member">XMC_DSD_CH_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lower_boundary</parametername>
</parameternamelist>
<parameterdescription>
<para>lower boundary value for limit checking </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>upper_boundary</parametername>
</parameternamelist>
<parameterdescription>
<para>upper boundary value for limit checking </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Invoke this API, to set the lower and upper boundary for limit checking for this channel. This (two’s complement) value is compared to the results of the parallel filter. Configure bit fields <emphasis>BOUNDARYU</emphasis> and <emphasis>BOUNDARYL</emphasis> of register <emphasis>BOUNDSEL</emphasis>.</para>
</simplesect>
<simplesect kind="par"><title>Note</title><para>Lower and upper boundaries are internally configured by function <ref refid="group___d_s_d_1gac5718c77cc5727ccf1b234f1e2653704" kindref="member">XMC_DSD_CH_AuxFilter_Init()</ref>.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___d_s_d_1gac5718c77cc5727ccf1b234f1e2653704" kindref="member">XMC_DSD_CH_AuxFilter_Init()</ref><linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_dsd.h" line="995" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_dsd.h" bodystart="995" bodyend="1003"/>
      </memberdef>
      <memberdef kind="function" id="group___d_s_d_1ga78cbc0ea3aa5577e6186f93991bf5fa3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_DSD_CH_GetRectifyDelay</definition>
        <argsstring>(XMC_DSD_CH_t *const channel, uint8_t *delay)</argsstring>
        <name>XMC_DSD_CH_GetRectifyDelay</name>
        <param>
          <type><ref refid="group___d_s_d_1ga0926714ae01c0dc11c07c597e6c48cf4" kindref="member">XMC_DSD_CH_t</ref> *const</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>delay</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an instance of DSD channel of type <ref refid="group___d_s_d_1ga0926714ae01c0dc11c07c597e6c48cf4" kindref="member">XMC_DSD_CH_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>delay</parametername>
</parameternamelist>
<parameterdescription>
<para>Captured value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint8_t</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>This API, capture sign delay value for DSD channel. Captured value indicates the values counted between the begin of the positive halfwave of the carrier signal and the first received positive value. Read bit field <emphasis>SDCAP</emphasis> of register <emphasis>CGSYNC</emphasis> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_dsd.h" line="1087" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_dsd.h" bodystart="1087" bodyend="1091"/>
      </memberdef>
      <memberdef kind="function" id="group___d_s_d_1ga70a28f988abaccc0c76130beb461efc7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_DSD_CH_GetResult</definition>
        <argsstring>(XMC_DSD_CH_t *const channel, int16_t *dsd_Result)</argsstring>
        <name>XMC_DSD_CH_GetResult</name>
        <param>
          <type><ref refid="group___d_s_d_1ga0926714ae01c0dc11c07c597e6c48cf4" kindref="member">XMC_DSD_CH_t</ref> *const</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>int16_t *</type>
          <declname>dsd_Result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an instance of DSD channel of type <ref refid="group___d_s_d_1ga0926714ae01c0dc11c07c597e6c48cf4" kindref="member">XMC_DSD_CH_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dsd_Result</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer point to the address of 16 bit variable </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Returns the result of most recent conversion associated with this channel.<linebreak/>
 A call to this API would access the register bit field <emphasis>RESMx.RESULT</emphasis> (x = 0 - 3).</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___d_s_d_1ga56bbc99bfe95ae0507d46d4d72e7e99e" kindref="member">XMC_DSD_CH_GetResult_TS()</ref><linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_dsd.h" line="779" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_dsd.h" bodystart="779" bodyend="784"/>
      </memberdef>
      <memberdef kind="function" id="group___d_s_d_1gae0d0b8a3009c9314ac07752ecec7945a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_DSD_CH_GetResult_AUX</definition>
        <argsstring>(XMC_DSD_CH_t *const channel, int16_t *dsd_Result)</argsstring>
        <name>XMC_DSD_CH_GetResult_AUX</name>
        <param>
          <type><ref refid="group___d_s_d_1ga0926714ae01c0dc11c07c597e6c48cf4" kindref="member">XMC_DSD_CH_t</ref> *const</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>int16_t *</type>
          <declname>dsd_Result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an instance of DSD channel of type <ref refid="group___d_s_d_1ga0926714ae01c0dc11c07c597e6c48cf4" kindref="member">XMC_DSD_CH_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dsd_Result</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer point to the address of 16 bit variable </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Returns the most recent conversion result values of the auxiliary filter associated with this channel.<linebreak/>
 A call to this API would access the register bit field <emphasis>RESAx.RESULT</emphasis> (x = 0 - 3).</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___d_s_d_1ga56bbc99bfe95ae0507d46d4d72e7e99e" kindref="member">XMC_DSD_CH_GetResult_TS()</ref><linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_dsd.h" line="833" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_dsd.h" bodystart="833" bodyend="838"/>
      </memberdef>
      <memberdef kind="function" id="group___d_s_d_1ga56bbc99bfe95ae0507d46d4d72e7e99e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_DSD_CH_GetResult_TS</definition>
        <argsstring>(XMC_DSD_CH_t *const channel, int16_t *dsd_Result, uint8_t *dsd_filter_loop, uint8_t *dsd_integration_loop)</argsstring>
        <name>XMC_DSD_CH_GetResult_TS</name>
        <param>
          <type><ref refid="group___d_s_d_1ga0926714ae01c0dc11c07c597e6c48cf4" kindref="member">XMC_DSD_CH_t</ref> *const</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>int16_t *</type>
          <declname>dsd_Result</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>dsd_filter_loop</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>dsd_integration_loop</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an instance of DSD channel of type XMC_DSD_CH_t<linebreak/>
 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dsd_Result</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer point to the address of 16 bit variable holds result value<linebreak/>
</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dsd_filter_loop</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer point to the address of 8 bit variable holds decimation counter value<linebreak/>
</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dsd_integration_loop</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer point to the address of 8 bit integration counter variable holds value<linebreak/>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None<linebreak/>
 </para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>API to get the result of the last conversion associated with this channel with CIC filter decimation counter and number of values counted.<linebreak/>
 A call to this API would access the register bit field <emphasis>TSTMPx.RESULT</emphasis> <emphasis>TSTMPx.CFMDCNT</emphasis> and <emphasis>TSTMPx.NVALCNT</emphasis> where (x = 0 - 3).</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___d_s_d_1ga70a28f988abaccc0c76130beb461efc7" kindref="member">XMC_DSD_CH_GetResult()</ref>,<ref refid="group___d_s_d_1ga97c150a74b54eceae3c8820bcdbb1286" kindref="member">XMC_DSD_CH_GetResult_TS_Time()</ref><linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_dsd.h" line="801" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___d_s_d_1ga97c150a74b54eceae3c8820bcdbb1286" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_DSD_CH_GetResult_TS_Time</definition>
        <argsstring>(XMC_DSD_CH_t *const channel, int16_t *dsd_Result, uint32_t *time)</argsstring>
        <name>XMC_DSD_CH_GetResult_TS_Time</name>
        <param>
          <type><ref refid="group___d_s_d_1ga0926714ae01c0dc11c07c597e6c48cf4" kindref="member">XMC_DSD_CH_t</ref> *const</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>int16_t *</type>
          <declname>dsd_Result</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an instance of DSD channel of type XMC_DSD_CH_t<linebreak/>
 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dsd_Result</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer point to the address of 16 bit variable holds result value<linebreak/>
</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer point to the address of 32 bit variable holds the time<linebreak/>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>API to get the result of the last conversion with the time, associated with this channel.<linebreak/>
 </para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___d_s_d_1ga70a28f988abaccc0c76130beb461efc7" kindref="member">XMC_DSD_CH_GetResult()</ref>,<ref refid="group___d_s_d_1ga56bbc99bfe95ae0507d46d4d72e7e99e" kindref="member">XMC_DSD_CH_GetResult_TS()</ref><linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_dsd.h" line="819" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___d_s_d_1ga6d191abec2d9b8d1c8ff1f21ac00313b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___d_s_d_1ga1fe41bdf5334f8dafa87942e43adf2e4" kindref="member">XMC_DSD_STATUS_t</ref></type>
        <definition>XMC_DSD_STATUS_t XMC_DSD_CH_Init</definition>
        <argsstring>(XMC_DSD_CH_t *const channel, const XMC_DSD_CH_CONFIG_t *const init)</argsstring>
        <name>XMC_DSD_CH_Init</name>
        <param>
          <type><ref refid="group___d_s_d_1ga0926714ae01c0dc11c07c597e6c48cf4" kindref="member">XMC_DSD_CH_t</ref> *const</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>const <ref refid="struct_x_m_c___d_s_d___c_h___c_o_n_f_i_g__t" kindref="compound">XMC_DSD_CH_CONFIG_t</ref> *const</type>
          <declname>init</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an instance of DSD channel of type <ref refid="group___d_s_d_1ga0926714ae01c0dc11c07c597e6c48cf4" kindref="member">XMC_DSD_CH_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>init</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an instance of data structure of type <ref refid="struct_x_m_c___d_s_d___c_h___c_o_n_f_i_g__t" kindref="compound">XMC_DSD_CH_CONFIG_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>XMC_DSD_STATUS_t if success Returns <ref refid="group___d_s_d_1gga1fe41bdf5334f8dafa87942e43adf2e4ae475b684cda2e9244fce06f7233b371c" kindref="member">XMC_DSD_STATUS_OK</ref> else return <ref refid="group___d_s_d_1gga1fe41bdf5334f8dafa87942e43adf2e4a3fb2552c72b7201d430cc09c347bfab7" kindref="member">XMC_DSD_STATUS_ERROR</ref>.</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Initialize main filter,auxiliary filter,integrator, rectifier and timestamp of DSD module with <emphasis>init</emphasis>.<linebreak/>
Internally this API invoke main filter, auxiliary filter, integrator, rectifier and timestamp init API.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___d_s_d_1ga553ef84a4928891b8196e1b302e62070" kindref="member">XMC_DSD_CH_MainFilter_Init()</ref>,<ref refid="group___d_s_d_1gac5718c77cc5727ccf1b234f1e2653704" kindref="member">XMC_DSD_CH_AuxFilter_Init()</ref>,<ref refid="group___d_s_d_1ga84eaf8c2fda261fcce202c81b2ee94c5" kindref="member">XMC_DSD_CH_Integrator_Init()</ref>, <ref refid="group___d_s_d_1ga21153beece159dc431200a17bbf582cb" kindref="member">XMC_DSD_CH_Rectify_Init()</ref>,<ref refid="group___d_s_d_1gaefcf46240b873558f4813d682d3e7db1" kindref="member">XMC_DSD_CH_Timestamp_Init()</ref><linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_dsd.h" line="695" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___d_s_d_1ga84eaf8c2fda261fcce202c81b2ee94c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_DSD_CH_Integrator_Init</definition>
        <argsstring>(XMC_DSD_CH_t *const channel, const XMC_DSD_CH_INTEGRATOR_CONFIG_t *const init)</argsstring>
        <name>XMC_DSD_CH_Integrator_Init</name>
        <param>
          <type><ref refid="group___d_s_d_1ga0926714ae01c0dc11c07c597e6c48cf4" kindref="member">XMC_DSD_CH_t</ref> *const</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>const <ref refid="struct_x_m_c___d_s_d___c_h___i_n_t_e_g_r_a_t_o_r___c_o_n_f_i_g__t" kindref="compound">XMC_DSD_CH_INTEGRATOR_CONFIG_t</ref> *const</type>
          <declname>init</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an instance of DSD channel of type <ref refid="group___d_s_d_1ga0926714ae01c0dc11c07c597e6c48cf4" kindref="member">XMC_DSD_CH_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>init</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an instance of data structure of type <ref refid="struct_x_m_c___d_s_d___c_h___i_n_t_e_g_r_a_t_o_r___c_o_n_f_i_g__t" kindref="compound">XMC_DSD_CH_INTEGRATOR_CONFIG_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Initialize integrator of DSD module.The integrator is mainly used for resolver feedback but can also be used for high accurate measurement. This API configures number of integration loops, number of results are discarded before integration starts, integrator stop condition, number of integrator loop to get integration result and trigger mode.</para>
</simplesect>
<simplesect kind="par"><title>Note</title><para>Trigger source for timestamp and integrator are shared. It is internally called by <ref refid="group___d_s_d_1ga6d191abec2d9b8d1c8ff1f21ac00313b" kindref="member">XMC_DSD_CH_Init()</ref>.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___d_s_d_1ga6d191abec2d9b8d1c8ff1f21ac00313b" kindref="member">XMC_DSD_CH_Init()</ref><linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_dsd.h" line="1055" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___d_s_d_1ga6b7baf705ddd49f5df11d49cdacfff0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_DSD_CH_MainFilter_DisableEvent</definition>
        <argsstring>(XMC_DSD_CH_t *const channel)</argsstring>
        <name>XMC_DSD_CH_MainFilter_DisableEvent</name>
        <param>
          <type><ref refid="group___d_s_d_1ga0926714ae01c0dc11c07c597e6c48cf4" kindref="member">XMC_DSD_CH_t</ref> *const</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an instance of DSD channel of type <ref refid="group___d_s_d_1ga0926714ae01c0dc11c07c597e6c48cf4" kindref="member">XMC_DSD_CH_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>This API disable the service request generation for result of this channel. Configure bit field <emphasis>SRGM</emphasis> of register <emphasis>FCFGC</emphasis> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_dsd.h" line="954" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_dsd.h" bodystart="954" bodyend="958"/>
      </memberdef>
      <memberdef kind="function" id="group___d_s_d_1ga1209337fa505ce1aead18ef6fc1eef72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_DSD_CH_MainFilter_EnableEvent</definition>
        <argsstring>(XMC_DSD_CH_t *const channel)</argsstring>
        <name>XMC_DSD_CH_MainFilter_EnableEvent</name>
        <param>
          <type><ref refid="group___d_s_d_1ga0926714ae01c0dc11c07c597e6c48cf4" kindref="member">XMC_DSD_CH_t</ref> *const</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an instance of DSD channel of type <ref refid="group___d_s_d_1ga0926714ae01c0dc11c07c597e6c48cf4" kindref="member">XMC_DSD_CH_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>This API enable the service request generation for result of this channel. Result events are generated at the output rate of the configured main filter chain. Configure bit field <emphasis>SRGM</emphasis> of register <emphasis>FCFGC</emphasis> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_dsd.h" line="939" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_dsd.h" bodystart="939" bodyend="943"/>
      </memberdef>
      <memberdef kind="function" id="group___d_s_d_1ga553ef84a4928891b8196e1b302e62070" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_DSD_CH_MainFilter_Init</definition>
        <argsstring>(XMC_DSD_CH_t *const channel, const XMC_DSD_CH_FILTER_CONFIG_t *const init)</argsstring>
        <name>XMC_DSD_CH_MainFilter_Init</name>
        <param>
          <type><ref refid="group___d_s_d_1ga0926714ae01c0dc11c07c597e6c48cf4" kindref="member">XMC_DSD_CH_t</ref> *const</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>const <ref refid="struct_x_m_c___d_s_d___c_h___f_i_l_t_e_r___c_o_n_f_i_g__t" kindref="compound">XMC_DSD_CH_FILTER_CONFIG_t</ref> *const</type>
          <declname>init</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an instance of DSD channel of type <ref refid="group___d_s_d_1ga0926714ae01c0dc11c07c597e6c48cf4" kindref="member">XMC_DSD_CH_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>init</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an instance of data structure of type <ref refid="struct_x_m_c___d_s_d___c_h___f_i_l_t_e_r___c_o_n_f_i_g__t" kindref="compound">XMC_DSD_CH_FILTER_CONFIG_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>This API initialize main filter module with <emphasis>init</emphasis>. The filter demodulates the incoming bit stream from the delta sigma modulator to a 16 bit result.</para>
</simplesect>
<simplesect kind="par"><title>Note</title><para>It is internally called by <ref refid="group___d_s_d_1ga6d191abec2d9b8d1c8ff1f21ac00313b" kindref="member">XMC_DSD_CH_Init()</ref>.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___d_s_d_1ga6d191abec2d9b8d1c8ff1f21ac00313b" kindref="member">XMC_DSD_CH_Init()</ref><linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_dsd.h" line="908" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___d_s_d_1ga550cf32d8f26da8b9d26bed22eb1171b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_DSD_CH_MainFilter_SetOffset</definition>
        <argsstring>(XMC_DSD_CH_t *const channel, const int16_t offset)</argsstring>
        <name>XMC_DSD_CH_MainFilter_SetOffset</name>
        <param>
          <type><ref refid="group___d_s_d_1ga0926714ae01c0dc11c07c597e6c48cf4" kindref="member">XMC_DSD_CH_t</ref> *const</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>const int16_t</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an instance of DSD channel of type <ref refid="group___d_s_d_1ga0926714ae01c0dc11c07c597e6c48cf4" kindref="member">XMC_DSD_CH_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para>Signed Offset value to be set </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>API set the signed offset value for this channel. This offset value is subtracted from each result before being written to the corresponding result register <emphasis>RESMx</emphasis>.</para>
</simplesect>
<simplesect kind="par"><title>Note</title><para>The offset value is measured for each channel separately. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_dsd.h" line="923" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_dsd.h" bodystart="923" bodyend="927"/>
      </memberdef>
      <memberdef kind="function" id="group___d_s_d_1ga21153beece159dc431200a17bbf582cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_DSD_CH_Rectify_Init</definition>
        <argsstring>(XMC_DSD_CH_t *const channel, const XMC_DSD_CH_RECTIFY_CONFIG_t *const init)</argsstring>
        <name>XMC_DSD_CH_Rectify_Init</name>
        <param>
          <type><ref refid="group___d_s_d_1ga0926714ae01c0dc11c07c597e6c48cf4" kindref="member">XMC_DSD_CH_t</ref> *const</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>const <ref refid="struct_x_m_c___d_s_d___c_h___r_e_c_t_i_f_y___c_o_n_f_i_g__t" kindref="compound">XMC_DSD_CH_RECTIFY_CONFIG_t</ref> *const</type>
          <declname>init</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an instance of DSD channel of type <ref refid="group___d_s_d_1ga0926714ae01c0dc11c07c597e6c48cf4" kindref="member">XMC_DSD_CH_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>init</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an instance of data structure of type <ref refid="struct_x_m_c___d_s_d___c_h___r_e_c_t_i_f_y___c_o_n_f_i_g__t" kindref="compound">XMC_DSD_CH_RECTIFY_CONFIG_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Initialize rectification for this channel. In a resolver feedback system, rectifier is used to rectify the result from the integrator. Configure bit field <emphasis>RFEN</emphasis> and <emphasis>SSRC</emphasis> of register <emphasis>RECTCFG</emphasis>. Also configure sign delay value for positive halfwave(<emphasis>SDPOS</emphasis>) and negative halfwave(<emphasis>SDNEG</emphasis>). </para>
</simplesect>
<simplesect kind="par"><title>Note</title><para>For the operational capability of rectifier the filter and the integrator is mandatory. It is internally called by <ref refid="group___d_s_d_1ga6d191abec2d9b8d1c8ff1f21ac00313b" kindref="member">XMC_DSD_CH_Init()</ref>.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___d_s_d_1ga6d191abec2d9b8d1c8ff1f21ac00313b" kindref="member">XMC_DSD_CH_Init()</ref><linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_dsd.h" line="1073" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___d_s_d_1gaefcf46240b873558f4813d682d3e7db1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_DSD_CH_Timestamp_Init</definition>
        <argsstring>(XMC_DSD_CH_t *const channel, const XMC_DSD_CH_TIMESTAMP_CONFIG_t *const init)</argsstring>
        <name>XMC_DSD_CH_Timestamp_Init</name>
        <param>
          <type><ref refid="group___d_s_d_1ga0926714ae01c0dc11c07c597e6c48cf4" kindref="member">XMC_DSD_CH_t</ref> *const</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>const <ref refid="struct_x_m_c___d_s_d___c_h___t_i_m_e_s_t_a_m_p___c_o_n_f_i_g__t" kindref="compound">XMC_DSD_CH_TIMESTAMP_CONFIG_t</ref> *const</type>
          <declname>init</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an instance of DSD channel of type <ref refid="group___d_s_d_1ga0926714ae01c0dc11c07c597e6c48cf4" kindref="member">XMC_DSD_CH_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>init</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an instance of data structure of type <ref refid="struct_x_m_c___d_s_d___c_h___t_i_m_e_s_t_a_m_p___c_o_n_f_i_g__t" kindref="compound">XMC_DSD_CH_TIMESTAMP_CONFIG_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Initialize timestamp mode of DSD module with <emphasis>init</emphasis>.<linebreak/>
Configures bits <emphasis>TRSEL</emphasis> and <emphasis>TSTRMODE</emphasis> of register <emphasis>DICFG</emphasis> .</para>
</simplesect>
<simplesect kind="par"><title>Note</title><para>Trigger source for timestamp and integrator are shared. It is internally called by <ref refid="group___d_s_d_1ga6d191abec2d9b8d1c8ff1f21ac00313b" kindref="member">XMC_DSD_CH_Init()</ref>.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___d_s_d_1ga6d191abec2d9b8d1c8ff1f21ac00313b" kindref="member">XMC_DSD_CH_Init()</ref><linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_dsd.h" line="679" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___d_s_d_1ga14280e89324e1fb9adaa379d8e10b9fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_DSD_ClearAlarmEventFlag</definition>
        <argsstring>(XMC_DSD_t *const dsd, const uint32_t channel_id)</argsstring>
        <name>XMC_DSD_ClearAlarmEventFlag</name>
        <param>
          <type><ref refid="group___d_s_d_1ga4b704e8631e5c1ce127a679e840166d4" kindref="member">XMC_DSD_t</ref> *const</type>
          <declname>dsd</declname>
        </param>
        <param>
          <type>const uint32_t</type>
          <declname>channel_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dsd</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an instance of DSD module of type <ref refid="group___d_s_d_1ga4b704e8631e5c1ce127a679e840166d4" kindref="member">XMC_DSD_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channel_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel number register value of type <ref refid="group___d_s_d_1gaf4be737ccac0300480dabb3635c9f95c" kindref="member">XMC_DSD_CH_ID_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Clear the result event flag.<linebreak/>
Set bit fields <emphasis>ALECx</emphasis> of register <emphasis>EVFLAGCLR.Clearing</emphasis> these bits has no effect.</para>
</simplesect>
<simplesect kind="par"><title>Note</title><para>API call for channel-0 : XMC_DSD_ClearResultEventFlag(DSD,(uint32_t)XMC_DSD_CH_ID_0); API call for channel-0 and 1: XMC_DSD_ClearResultEventFlag(DSD,(uint32_t)(XMC_DSD_CH_ID_0|XMC_DSD_CH_ID_1));</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___d_s_d_1gae73cb88751e69031eb5d9ffbbfec47e5" kindref="member">XMC_DSD_SetAlarmEventFlag()</ref><linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_dsd.h" line="1171" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_dsd.h" bodystart="1171" bodyend="1175"/>
      </memberdef>
      <memberdef kind="function" id="group___d_s_d_1gac3e92415ba18b5bcedb454bc02409631" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_DSD_ClearResultEventFlag</definition>
        <argsstring>(XMC_DSD_t *const dsd, const uint32_t channel_id)</argsstring>
        <name>XMC_DSD_ClearResultEventFlag</name>
        <param>
          <type><ref refid="group___d_s_d_1ga4b704e8631e5c1ce127a679e840166d4" kindref="member">XMC_DSD_t</ref> *const</type>
          <declname>dsd</declname>
        </param>
        <param>
          <type>const uint32_t</type>
          <declname>channel_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dsd</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an instance of DSD module of type <ref refid="group___d_s_d_1ga4b704e8631e5c1ce127a679e840166d4" kindref="member">XMC_DSD_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channel_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel number register value of type <ref refid="group___d_s_d_1gaf4be737ccac0300480dabb3635c9f95c" kindref="member">XMC_DSD_CH_ID_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Clear the result event flag.<linebreak/>
Set bit fields <emphasis>RESECx</emphasis> of register <emphasis>EVFLAGCLR.Clearing</emphasis> these bits has no effect.</para>
</simplesect>
<simplesect kind="par"><title>Note</title><para>API call for channel-0 : XMC_DSD_ClearResultEventFlag(DSD,(uint32_t)XMC_DSD_CH_ID_0); API call for channel-0 and 1: XMC_DSD_ClearResultEventFlag(DSD,(uint32_t)(XMC_DSD_CH_ID_0|XMC_DSD_CH_ID_1));</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___d_s_d_1ga0dfd9c25608f8dd6d28f68fae3a04d68" kindref="member">XMC_DSD_SetResultEventFlag()</ref><linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_dsd.h" line="1129" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_dsd.h" bodystart="1129" bodyend="1133"/>
      </memberdef>
      <memberdef kind="function" id="group___d_s_d_1gabc530c3f59111a433dca627b52477ccd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_DSD_Disable</definition>
        <argsstring>(XMC_DSD_t *const dsd)</argsstring>
        <name>XMC_DSD_Disable</name>
        <param>
          <type><ref refid="group___d_s_d_1ga4b704e8631e5c1ce127a679e840166d4" kindref="member">XMC_DSD_t</ref> *const</type>
          <declname>dsd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dsd</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an instance of DSD module of type <ref refid="group___d_s_d_1ga4b704e8631e5c1ce127a679e840166d4" kindref="member">XMC_DSD_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Asserts the DSD module into reset.<linebreak/>
Configures <emphasis>PRSET0</emphasis> register&apos;s <emphasis>DSDRS</emphasis> bit field. If running on XMC44/XMC48 device then it will gate the peripheral clock.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___d_s_d_1gae625acbcea862aaef4ae6ffa1384213d" kindref="member">XMC_DSD_Enable()</ref><linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_dsd.h" line="611" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___d_s_d_1ga201f09e7e0da21c460266de3ad6b7ab2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_DSD_DisableClock</definition>
        <argsstring>(XMC_DSD_t *const dsd)</argsstring>
        <name>XMC_DSD_DisableClock</name>
        <param>
          <type><ref refid="group___d_s_d_1ga4b704e8631e5c1ce127a679e840166d4" kindref="member">XMC_DSD_t</ref> *const</type>
          <declname>dsd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dsd</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an instance of DSD module of type <ref refid="group___d_s_d_1ga4b704e8631e5c1ce127a679e840166d4" kindref="member">XMC_DSD_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Stop the module clock and disable internal module clock for DSD.<linebreak/>
Configures bit field <emphasis>MCSEL</emphasis> of register <emphasis>GLOBCFG</emphasis> and bit field <emphasis>DISR</emphasis> of register <emphasis>CLC</emphasis>.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___d_s_d_1ga201f09e7e0da21c460266de3ad6b7ab2" kindref="member">XMC_DSD_DisableClock()</ref><linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_dsd.h" line="638" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___d_s_d_1gae625acbcea862aaef4ae6ffa1384213d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_DSD_Enable</definition>
        <argsstring>(XMC_DSD_t *const dsd)</argsstring>
        <name>XMC_DSD_Enable</name>
        <param>
          <type><ref refid="group___d_s_d_1ga4b704e8631e5c1ce127a679e840166d4" kindref="member">XMC_DSD_t</ref> *const</type>
          <declname>dsd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dsd</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an instance of DSD module of type <ref refid="group___d_s_d_1ga4b704e8631e5c1ce127a679e840166d4" kindref="member">XMC_DSD_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>De-asserts the DSD module from reset.<linebreak/>
Configures <emphasis>PRCLR0</emphasis> register&apos;s <emphasis>DSDRS</emphasis> bit field. If running on XMC44/XMC48 device then it will ungate the peripheral clock.</para>
</simplesect>
<simplesect kind="par"><title>Note</title><para>It is internally called by <ref refid="group___d_s_d_1ga8ef9ed5f2da44e68e667dd86157aa67f" kindref="member">XMC_DSD_Init()</ref>.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___d_s_d_1gabc530c3f59111a433dca627b52477ccd" kindref="member">XMC_DSD_Disable()</ref>,<ref refid="group___d_s_d_1ga8ef9ed5f2da44e68e667dd86157aa67f" kindref="member">XMC_DSD_Init()</ref> <linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_dsd.h" line="597" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___d_s_d_1gace3fcdbf6e73ac059ac75139f4d4d17c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_DSD_EnableClock</definition>
        <argsstring>(XMC_DSD_t *const dsd)</argsstring>
        <name>XMC_DSD_EnableClock</name>
        <param>
          <type><ref refid="group___d_s_d_1ga4b704e8631e5c1ce127a679e840166d4" kindref="member">XMC_DSD_t</ref> *const</type>
          <declname>dsd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dsd</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an instance of DSD module of type <ref refid="group___d_s_d_1ga4b704e8631e5c1ce127a679e840166d4" kindref="member">XMC_DSD_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Enable the module clock and internal module clock for DSD.<linebreak/>
Configures bit field <emphasis>MCSEL</emphasis> of register <emphasis>GLOBCFG</emphasis> and bit field <emphasis>DISR</emphasis> of register <emphasis>CLC</emphasis>.</para>
</simplesect>
<simplesect kind="par"><title>Note</title><para>It is internally called by <ref refid="group___d_s_d_1ga8ef9ed5f2da44e68e667dd86157aa67f" kindref="member">XMC_DSD_Init()</ref>.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___d_s_d_1ga201f09e7e0da21c460266de3ad6b7ab2" kindref="member">XMC_DSD_DisableClock()</ref>,<ref refid="group___d_s_d_1ga8ef9ed5f2da44e68e667dd86157aa67f" kindref="member">XMC_DSD_Init()</ref> <linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_dsd.h" line="626" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___d_s_d_1ga4110982124cd1c069bdc80c5461e1d56" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_DSD_Generator_Init</definition>
        <argsstring>(XMC_DSD_t *const dsd, const XMC_DSD_GENERATOR_CONFIG_t *const init)</argsstring>
        <name>XMC_DSD_Generator_Init</name>
        <param>
          <type><ref refid="group___d_s_d_1ga4b704e8631e5c1ce127a679e840166d4" kindref="member">XMC_DSD_t</ref> *const</type>
          <declname>dsd</declname>
        </param>
        <param>
          <type>const <ref refid="struct_x_m_c___d_s_d___g_e_n_e_r_a_t_o_r___c_o_n_f_i_g__t" kindref="compound">XMC_DSD_GENERATOR_CONFIG_t</ref> *const</type>
          <declname>init</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dsd</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an instance of DSD module of type <ref refid="group___d_s_d_1ga4b704e8631e5c1ce127a679e840166d4" kindref="member">XMC_DSD_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>init</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an instance of data structure of type <ref refid="struct_x_m_c___d_s_d___g_e_n_e_r_a_t_o_r___c_o_n_f_i_g__t" kindref="compound">XMC_DSD_GENERATOR_CONFIG_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>This API initialize generator module with <emphasis>init</emphasis>, to generate a wave for a resolver. Three types of waveforms can be generated: Rectangle, Triangle and Sine. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_dsd.h" line="850" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___d_s_d_1ga7fcaf9ce73d825f8020964d9983d9da2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_DSD_Generator_Start</definition>
        <argsstring>(XMC_DSD_t *const dsd, const XMC_DSD_GENERATOR_CONFIG_t *const config)</argsstring>
        <name>XMC_DSD_Generator_Start</name>
        <param>
          <type><ref refid="group___d_s_d_1ga4b704e8631e5c1ce127a679e840166d4" kindref="member">XMC_DSD_t</ref> *const</type>
          <declname>dsd</declname>
        </param>
        <param>
          <type>const <ref refid="struct_x_m_c___d_s_d___g_e_n_e_r_a_t_o_r___c_o_n_f_i_g__t" kindref="compound">XMC_DSD_GENERATOR_CONFIG_t</ref> *const</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dsd</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an instance of DSD module of type <ref refid="group___d_s_d_1ga4b704e8631e5c1ce127a679e840166d4" kindref="member">XMC_DSD_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an instance of data structure of type <ref refid="struct_x_m_c___d_s_d___g_e_n_e_r_a_t_o_r___c_o_n_f_i_g__t" kindref="compound">XMC_DSD_GENERATOR_CONFIG_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Start carrier generator by configuring operating mode. Configures bit field <emphasis>CGMOD</emphasis> of register <emphasis>CGCFG</emphasis>.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___d_s_d_1ga54588105c52fe3a59667cb946efbca02" kindref="member">XMC_DSD_Generator_Stop()</ref><linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_dsd.h" line="865" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_dsd.h" bodystart="865" bodyend="870"/>
      </memberdef>
      <memberdef kind="function" id="group___d_s_d_1ga54588105c52fe3a59667cb946efbca02" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_DSD_Generator_Stop</definition>
        <argsstring>(XMC_DSD_t *const dsd)</argsstring>
        <name>XMC_DSD_Generator_Stop</name>
        <param>
          <type><ref refid="group___d_s_d_1ga4b704e8631e5c1ce127a679e840166d4" kindref="member">XMC_DSD_t</ref> *const</type>
          <declname>dsd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dsd</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an instance of DSD module of type <ref refid="group___d_s_d_1ga4b704e8631e5c1ce127a679e840166d4" kindref="member">XMC_DSD_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Stop carrier generator by configuring operating mode. Reset bit field <emphasis>CGMOD</emphasis> of register <emphasis>CGCFG</emphasis>.</para>
</simplesect>
<simplesect kind="par"><title>Note</title><para>Stopping the carrier generator terminates the PWM output after completion of the current period.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___d_s_d_1ga7fcaf9ce73d825f8020964d9983d9da2" kindref="member">XMC_DSD_Generator_Start()</ref><linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_dsd.h" line="886" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_dsd.h" bodystart="886" bodyend="890"/>
      </memberdef>
      <memberdef kind="function" id="group___d_s_d_1ga8ef9ed5f2da44e68e667dd86157aa67f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_DSD_Init</definition>
        <argsstring>(XMC_DSD_t *const dsd)</argsstring>
        <name>XMC_DSD_Init</name>
        <param>
          <type><ref refid="group___d_s_d_1ga4b704e8631e5c1ce127a679e840166d4" kindref="member">XMC_DSD_t</ref> *const</type>
          <declname>dsd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dsd</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an instance of DSD module of type <ref refid="group___d_s_d_1ga4b704e8631e5c1ce127a679e840166d4" kindref="member">XMC_DSD_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Enable the DSD module and clock.<linebreak/>
 </para>
</simplesect>
<simplesect kind="par"><title>Note</title><para>This is the first API which application must invoke to configure DSD.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___d_s_d_1gae625acbcea862aaef4ae6ffa1384213d" kindref="member">XMC_DSD_Enable()</ref>,<ref refid="group___d_s_d_1gace3fcdbf6e73ac059ac75139f4d4d17c" kindref="member">XMC_DSD_EnableClock()</ref><linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_dsd.h" line="662" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___d_s_d_1ga1c932fe74edcf6f32c2f87663edc1122" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool XMC_DSD_IsChannelStarted</definition>
        <argsstring>(XMC_DSD_t *const dsd, const XMC_DSD_CH_ID_t channel)</argsstring>
        <name>XMC_DSD_IsChannelStarted</name>
        <param>
          <type><ref refid="group___d_s_d_1ga4b704e8631e5c1ce127a679e840166d4" kindref="member">XMC_DSD_t</ref> *const</type>
          <declname>dsd</declname>
        </param>
        <param>
          <type>const <ref refid="group___d_s_d_1gaf4be737ccac0300480dabb3635c9f95c" kindref="member">XMC_DSD_CH_ID_t</ref></type>
          <declname>channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dsd</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an instance of DSD module of type XMC_DSD_t<linebreak/>
 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel run control bit register value of type XMC_DSD_CH_ID_t<linebreak/>
 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bool Return 1 if started else 0.<linebreak/>
 </para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Find out if particular demodulator channel is started or not.<linebreak/>
 </para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___d_s_d_1gaf8ff4a18539762c79d68125f7298ccfe" kindref="member">XMC_DSD_Start()</ref>,<ref refid="group___d_s_d_1gac90d64373b776d4a0a50040243bb98d4" kindref="member">XMC_DSD_Stop()</ref><linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_dsd.h" line="752" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_dsd.h" bodystart="752" bodyend="765"/>
      </memberdef>
      <memberdef kind="function" id="group___d_s_d_1gaf99009cda039f955b12950d42d700d9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool XMC_DSD_IsEnabled</definition>
        <argsstring>(XMC_DSD_t *const dsd)</argsstring>
        <name>XMC_DSD_IsEnabled</name>
        <param>
          <type><ref refid="group___d_s_d_1ga4b704e8631e5c1ce127a679e840166d4" kindref="member">XMC_DSD_t</ref> *const</type>
          <declname>dsd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dsd</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an instance of DSD module of type <ref refid="group___d_s_d_1ga4b704e8631e5c1ce127a679e840166d4" kindref="member">XMC_DSD_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bool Return 1 if success else 0.</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Find out if the DSD reset is asserted.<linebreak/>
Read <emphasis>PRSTAT0</emphasis> register&apos;s <emphasis>DSDRS</emphasis> bit field.<linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_dsd.h" line="647" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___d_s_d_1gae73cb88751e69031eb5d9ffbbfec47e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_DSD_SetAlarmEventFlag</definition>
        <argsstring>(XMC_DSD_t *const dsd, const uint32_t channel_id)</argsstring>
        <name>XMC_DSD_SetAlarmEventFlag</name>
        <param>
          <type><ref refid="group___d_s_d_1ga4b704e8631e5c1ce127a679e840166d4" kindref="member">XMC_DSD_t</ref> *const</type>
          <declname>dsd</declname>
        </param>
        <param>
          <type>const uint32_t</type>
          <declname>channel_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dsd</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an instance of DSD module of type <ref refid="group___d_s_d_1ga4b704e8631e5c1ce127a679e840166d4" kindref="member">XMC_DSD_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channel_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel number register value of type <ref refid="group___d_s_d_1gaf4be737ccac0300480dabb3635c9f95c" kindref="member">XMC_DSD_CH_ID_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Set the alarm event flag.<linebreak/>
Set bit fields <emphasis>ALEVx</emphasis> of register <emphasis>EVFLAG.Clearing</emphasis> these bits has no effect.</para>
</simplesect>
<simplesect kind="par"><title>Note</title><para>API call for channel-0 : XMC_DSD_SetAlarmEventFlag(DSD,(uint32_t)XMC_DSD_CH_ID_0); API call for channel-0 and 1: XMC_DSD_SetAlarmEventFlag(DSD,(uint32_t)(XMC_DSD_CH_ID_0|XMC_DSD_CH_ID_1));</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___d_s_d_1ga14280e89324e1fb9adaa379d8e10b9fa" kindref="member">XMC_DSD_ClearAlarmEventFlag()</ref><linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_dsd.h" line="1150" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_dsd.h" bodystart="1150" bodyend="1154"/>
      </memberdef>
      <memberdef kind="function" id="group___d_s_d_1ga0dfd9c25608f8dd6d28f68fae3a04d68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_DSD_SetResultEventFlag</definition>
        <argsstring>(XMC_DSD_t *const dsd, const uint32_t channel_id)</argsstring>
        <name>XMC_DSD_SetResultEventFlag</name>
        <param>
          <type><ref refid="group___d_s_d_1ga4b704e8631e5c1ce127a679e840166d4" kindref="member">XMC_DSD_t</ref> *const</type>
          <declname>dsd</declname>
        </param>
        <param>
          <type>const uint32_t</type>
          <declname>channel_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dsd</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an instance of DSD module of type <ref refid="group___d_s_d_1ga4b704e8631e5c1ce127a679e840166d4" kindref="member">XMC_DSD_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channel_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel number register value of type <ref refid="group___d_s_d_1gaf4be737ccac0300480dabb3635c9f95c" kindref="member">XMC_DSD_CH_ID_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Set the result event flag and trigger the corresponding event.<linebreak/>
Set bit fields <emphasis>RESEVx</emphasis> of register <emphasis>EVFLAG.Clearing</emphasis> these bits has no effect.</para>
</simplesect>
<simplesect kind="par"><title>Note</title><para>API call for channel-0 : XMC_DSD_SetResultEventFlag(DSD,(uint32_t)XMC_DSD_CH_ID_0); API call for channel-0 and 1: XMC_DSD_SetResultEventFlag(DSD,(uint32_t)(XMC_DSD_CH_ID_0|XMC_DSD_CH_ID_1));</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___d_s_d_1gac3e92415ba18b5bcedb454bc02409631" kindref="member">XMC_DSD_ClearResultEventFlag()</ref><linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_dsd.h" line="1108" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_dsd.h" bodystart="1108" bodyend="1112"/>
      </memberdef>
      <memberdef kind="function" id="group___d_s_d_1gaf8ff4a18539762c79d68125f7298ccfe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_DSD_Start</definition>
        <argsstring>(XMC_DSD_t *const dsd, const uint32_t channel)</argsstring>
        <name>XMC_DSD_Start</name>
        <param>
          <type><ref refid="group___d_s_d_1ga4b704e8631e5c1ce127a679e840166d4" kindref="member">XMC_DSD_t</ref> *const</type>
          <declname>dsd</declname>
        </param>
        <param>
          <type>const uint32_t</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dsd</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an instance of DSD module of type <ref refid="group___d_s_d_1ga4b704e8631e5c1ce127a679e840166d4" kindref="member">XMC_DSD_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel run control bit register value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Start demodulator channel by enabling run control bit. Multiple channel can be start at a time. For an example: To start all four channel, call this function as XMC_DSD_Start(DSD,(uint32_t)(XMC_DSD_CH_ID_0|XMC_DSD_CH_ID_1|XMC_DSD_CH_ID_2|XMC_DSD_CH_ID_3));</para>
</simplesect>
<simplesect kind="par"><title>Note</title><para>All filter blocks are cleared when CHxRUN is set.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___d_s_d_1gac90d64373b776d4a0a50040243bb98d4" kindref="member">XMC_DSD_Stop()</ref>,<ref refid="group___d_s_d_1ga1c932fe74edcf6f32c2f87663edc1122" kindref="member">XMC_DSD_IsChannelStarted()</ref><linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_dsd.h" line="714" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_dsd.h" bodystart="714" bodyend="718"/>
      </memberdef>
      <memberdef kind="function" id="group___d_s_d_1gac90d64373b776d4a0a50040243bb98d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_DSD_Stop</definition>
        <argsstring>(XMC_DSD_t *const dsd, const uint32_t channel)</argsstring>
        <name>XMC_DSD_Stop</name>
        <param>
          <type><ref refid="group___d_s_d_1ga4b704e8631e5c1ce127a679e840166d4" kindref="member">XMC_DSD_t</ref> *const</type>
          <declname>dsd</declname>
        </param>
        <param>
          <type>const uint32_t</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dsd</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an instance of DSD module of type XMC_DSD_t<linebreak/>
 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel run control bit register value<linebreak/>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None<linebreak/>
 </para>
</simplesect>
<simplesect kind="par"><title>Description</title><para>Stop demodulator channel by resetting run control bit. Multiple channel can be stop at a time. For an example: To stop all four channel, call this function as XMC_DSD_Stop(DSD,(uint32_t)(XMC_DSD_CH_ID_0|XMC_DSD_CH_ID_1|XMC_DSD_CH_ID_2|XMC_DSD_CH_ID_3));</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___d_s_d_1gaf8ff4a18539762c79d68125f7298ccfe" kindref="member">XMC_DSD_Start()</ref>,<ref refid="group___d_s_d_1ga1c932fe74edcf6f32c2f87663edc1122" kindref="member">XMC_DSD_IsChannelStarted()</ref><linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_dsd.h" line="735" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_dsd.h" bodystart="735" bodyend="739"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="date"><para>2019-12-16 </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="67"><highlight class="preprocessor">#ifndef<sp/>XMC_DSD_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>XMC_DSD_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment">/**********************************************************************************************************************</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/>*<sp/>HEADER<sp/>FILES</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/>*********************************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xmc_common.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(DSD)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xmc_scu.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="comment">/*********************************************************************************************************************</highlight></codeline>
<codeline lineno="109"><highlight class="comment">*<sp/>MACROS</highlight></codeline>
<codeline lineno="110"><highlight class="comment">********************************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>XMC_DSD_CHECK_MODULE_PTR(PTR)<sp/><sp/>(<sp/>((PTR)==<sp/>DSD))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>XMC_DSD_CHECK_CHANNEL_PTR(PTR)<sp/>(<sp/>((PTR)<sp/>==<sp/>DSD_CH0)<sp/>||<sp/>((PTR)<sp/>==<sp/>DSD_CH1)<sp/>||<sp/>((PTR)<sp/>==<sp/>DSD_CH2)<sp/>||<sp/>((PTR)<sp/>==<sp/>DSD_CH3))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="comment">/**********************************************************************************************************************</highlight></codeline>
<codeline lineno="115"><highlight class="comment"><sp/>*<sp/>ENUMS</highlight></codeline>
<codeline lineno="116"><highlight class="comment"><sp/>*********************************************************************************************************************/</highlight></codeline>
<codeline lineno="120"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>DSD_CH_TypeDef<sp/><ref refid="group___d_s_d_1ga0926714ae01c0dc11c07c597e6c48cf4" kindref="member">XMC_DSD_CH_t</ref>;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>DSD_GLOBAL_TypeDef<sp/><ref refid="group___d_s_d_1ga4b704e8631e5c1ce127a679e840166d4" kindref="member">XMC_DSD_t</ref>;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>XMC_DSD_STATUS</highlight></codeline>
<codeline lineno="132"><highlight class="normal">{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><ref refid="group___d_s_d_1gga1fe41bdf5334f8dafa87942e43adf2e4ae475b684cda2e9244fce06f7233b371c" kindref="member">XMC_DSD_STATUS_OK</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><ref refid="group___d_s_d_1gga1fe41bdf5334f8dafa87942e43adf2e4a3fb2552c72b7201d430cc09c347bfab7" kindref="member">XMC_DSD_STATUS_ERROR</ref><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="137"><highlight class="normal">}<sp/><ref refid="group___d_s_d_1ga1fe41bdf5334f8dafa87942e43adf2e4" kindref="member">XMC_DSD_STATUS_t</ref>;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>XMC_DSD_GENERATOR_CLKDIV</highlight></codeline>
<codeline lineno="146"><highlight class="normal">{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><ref refid="group___d_s_d_1gga36d00cfa1835598c73321abc43809042a148a5465bc02207f2aadaecaa63a9bec" kindref="member">XMC_DSD_GENERATOR_CLKDIV_2048</ref><sp/><sp/>=<sp/>0x00U,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><ref refid="group___d_s_d_1gga36d00cfa1835598c73321abc43809042af42ef259b1010b0d335994ff48d4738b" kindref="member">XMC_DSD_GENERATOR_CLKDIV_4096</ref><sp/><sp/>=<sp/>0x01U,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><ref refid="group___d_s_d_1gga36d00cfa1835598c73321abc43809042a85ea869d9a12a1edc7b44eda29939106" kindref="member">XMC_DSD_GENERATOR_CLKDIV_6144</ref><sp/><sp/>=<sp/>0x02U,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><ref refid="group___d_s_d_1gga36d00cfa1835598c73321abc43809042a67df9e25a1b82cde81022b7f04a89e66" kindref="member">XMC_DSD_GENERATOR_CLKDIV_8192</ref><sp/><sp/>=<sp/>0x03U,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><ref refid="group___d_s_d_1gga36d00cfa1835598c73321abc43809042a2477323af623261b2ae28463de11db2b" kindref="member">XMC_DSD_GENERATOR_CLKDIV_10240</ref><sp/>=<sp/>0x04U,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><ref refid="group___d_s_d_1gga36d00cfa1835598c73321abc43809042a44be3be30746e5bd13700775fcdf4198" kindref="member">XMC_DSD_GENERATOR_CLKDIV_12288</ref><sp/>=<sp/>0x05U,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><ref refid="group___d_s_d_1gga36d00cfa1835598c73321abc43809042a6bb0bcd91369d632a1f7d81761b1997e" kindref="member">XMC_DSD_GENERATOR_CLKDIV_14336</ref><sp/>=<sp/>0x06U,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><ref refid="group___d_s_d_1gga36d00cfa1835598c73321abc43809042a7b08b22cebd1e45beb0bdb4838ea9e6f" kindref="member">XMC_DSD_GENERATOR_CLKDIV_16384</ref><sp/>=<sp/>0x07U,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><ref refid="group___d_s_d_1gga36d00cfa1835598c73321abc43809042ada046d28ad75c756aa43443074531bf3" kindref="member">XMC_DSD_GENERATOR_CLKDIV_18432</ref><sp/>=<sp/>0x08U,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><ref refid="group___d_s_d_1gga36d00cfa1835598c73321abc43809042a702dd967c22b4e4abb1eb5687ef66bdf" kindref="member">XMC_DSD_GENERATOR_CLKDIV_20480</ref><sp/>=<sp/>0x09U,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><ref refid="group___d_s_d_1gga36d00cfa1835598c73321abc43809042a257a02ff824ebaa32eaa9ebf61ae4ee1" kindref="member">XMC_DSD_GENERATOR_CLKDIV_22528</ref><sp/>=<sp/>0x0AU,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><ref refid="group___d_s_d_1gga36d00cfa1835598c73321abc43809042a6f27993de43741e4058958e5c70e70c6" kindref="member">XMC_DSD_GENERATOR_CLKDIV_24576</ref><sp/>=<sp/>0x0BU,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><ref refid="group___d_s_d_1gga36d00cfa1835598c73321abc43809042a9de978b5540364acb1abac1904ca67fe" kindref="member">XMC_DSD_GENERATOR_CLKDIV_26624</ref><sp/>=<sp/>0x0CU,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><ref refid="group___d_s_d_1gga36d00cfa1835598c73321abc43809042a18d37d0310eb1c7b1b69005290afc157" kindref="member">XMC_DSD_GENERATOR_CLKDIV_28672</ref><sp/>=<sp/>0x0DU,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><ref refid="group___d_s_d_1gga36d00cfa1835598c73321abc43809042a3d9bedf5aeb71e16a9bc8909f6e65892" kindref="member">XMC_DSD_GENERATOR_CLKDIV_30720</ref><sp/>=<sp/>0x0EU,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><ref refid="group___d_s_d_1gga36d00cfa1835598c73321abc43809042aef70cb4a2eb1dc8ae974b4315bca1c5f" kindref="member">XMC_DSD_GENERATOR_CLKDIV_32768</ref><sp/>=<sp/>0x0FU<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="164"><highlight class="normal">}<sp/><ref refid="group___d_s_d_1ga36d00cfa1835598c73321abc43809042" kindref="member">XMC_DSD_GENERATOR_CLKDIV_t</ref>;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>XMC_DSD_GENERATOR_MODE</highlight></codeline>
<codeline lineno="172"><highlight class="normal">{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><ref refid="group___d_s_d_1gga5f1d45bf1b7c823102d747bbb2d2afd8aad44dbf2bea2cb4f70c22f80b6572247" kindref="member">XMC_DSD_GENERATOR_MODE_STOPPED</ref><sp/><sp/><sp/>=<sp/>0x00U,<sp/></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><ref refid="group___d_s_d_1gga5f1d45bf1b7c823102d747bbb2d2afd8a1e1c266a28b6328586fa87e64ea86ecc" kindref="member">XMC_DSD_GENERATOR_MODE_RECTANGLE</ref><sp/>=<sp/>0x01U,<sp/></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><ref refid="group___d_s_d_1gga5f1d45bf1b7c823102d747bbb2d2afd8a344590e160d8538ef7d50d5c67cbcafe" kindref="member">XMC_DSD_GENERATOR_MODE_TRIANGLE</ref><sp/><sp/>=<sp/>0x02U,<sp/></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><ref refid="group___d_s_d_1gga5f1d45bf1b7c823102d747bbb2d2afd8a7d33f4ba6f9e25914a2beddd825589a6" kindref="member">XMC_DSD_GENERATOR_MODE_SINE</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x03U<sp/></highlight></codeline>
<codeline lineno="178"><highlight class="normal">}<sp/><ref refid="group___d_s_d_1ga5f1d45bf1b7c823102d747bbb2d2afd8" kindref="member">XMC_DSD_GENERATOR_MODE_t</ref>;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>XMC_DSD_CH_FILTER_TYPE</highlight></codeline>
<codeline lineno="186"><highlight class="normal">{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><ref refid="group___d_s_d_1gga08bfaecf579c25093fc992320457d86aad74cf93e2437ad3313c6aa296d519587" kindref="member">XMC_DSD_CH_FILTER_TYPE_CIC1</ref>,<sp/><sp/></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><ref refid="group___d_s_d_1gga08bfaecf579c25093fc992320457d86aacc89ea0bb3a521607af46db1d7dc224e" kindref="member">XMC_DSD_CH_FILTER_TYPE_CIC2</ref>,<sp/><sp/></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><ref refid="group___d_s_d_1gga08bfaecf579c25093fc992320457d86aa87e345a272e00f6130a2ce360819fd5b" kindref="member">XMC_DSD_CH_FILTER_TYPE_CIC3</ref>,<sp/><sp/></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><ref refid="group___d_s_d_1gga08bfaecf579c25093fc992320457d86aa66ecef471600edaacb1af5471adb99e2" kindref="member">XMC_DSD_CH_FILTER_TYPE_CICF</ref><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="193"><highlight class="normal">}<sp/><ref refid="group___d_s_d_1ga08bfaecf579c25093fc992320457d86a" kindref="member">XMC_DSD_CH_FILTER_TYPE_t</ref>;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>XMC_DSD_CH_DATA_SOURCE</highlight></codeline>
<codeline lineno="200"><highlight class="normal">{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><ref refid="group___d_s_d_1gga7277cae85e421cd975a28a91e21de688a3b50e42af50af314a78d734136ab9867" kindref="member">XMC_DSD_CH_DATA_SOURCE_DISCONNECT</ref><sp/><sp/>=<sp/>0U,<sp/><sp/></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><ref refid="group___d_s_d_1gga7277cae85e421cd975a28a91e21de688a99dd10b1bf73b04c1d99a63d03f72e69" kindref="member">XMC_DSD_CH_DATA_SOURCE_A_DIRECT</ref><sp/><sp/><sp/><sp/>=<sp/>2U,<sp/><sp/></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><ref refid="group___d_s_d_1gga7277cae85e421cd975a28a91e21de688af7f78d32c58dc1b78f224a474201fc4a" kindref="member">XMC_DSD_CH_DATA_SOURCE_A_INVERTED</ref><sp/><sp/>=<sp/>3U,<sp/><sp/></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><ref refid="group___d_s_d_1gga7277cae85e421cd975a28a91e21de688a6fe0a48855d02bfc4ae14e63d607aea9" kindref="member">XMC_DSD_CH_DATA_SOURCE_B_DIRECT</ref><sp/><sp/><sp/><sp/>=<sp/>4U,<sp/><sp/></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><ref refid="group___d_s_d_1gga7277cae85e421cd975a28a91e21de688a48988ba9421c4624258650eb359855d9" kindref="member">XMC_DSD_CH_DATA_SOURCE_B_INVERTED</ref><sp/><sp/>=<sp/>5U<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="208"><highlight class="normal">}<sp/><ref refid="group___d_s_d_1ga7277cae85e421cd975a28a91e21de688" kindref="member">XMC_DSD_CH_DATA_SOURCE_t</ref>;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>XMC_DSD_CH_CLOCK_SOURCE</highlight></codeline>
<codeline lineno="215"><highlight class="normal">{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><ref refid="group___d_s_d_1gga74e553765a2b78b955d2eb8cd2a9217eaa3e6fac1fc6082713a46fd79b20a634f" kindref="member">XMC_DSD_CH_CLOCK_SOURCE_A</ref><sp/>=<sp/>1U,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><ref refid="group___d_s_d_1gga74e553765a2b78b955d2eb8cd2a9217ea30fb5b3bf5374c6bd5ce4db7f3a3082a" kindref="member">XMC_DSD_CH_CLOCK_SOURCE_B</ref><sp/>=<sp/>2U,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><ref refid="group___d_s_d_1gga74e553765a2b78b955d2eb8cd2a9217eaa52858de2722e044b1e26851571bb6c0" kindref="member">XMC_DSD_CH_CLOCK_SOURCE_C</ref><sp/>=<sp/>3U,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><ref refid="group___d_s_d_1gga74e553765a2b78b955d2eb8cd2a9217ea2db12bdc7816e67d9a413a7333c72558" kindref="member">XMC_DSD_CH_CLOCK_SOURCE_D</ref><sp/>=<sp/>4U,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><ref refid="group___d_s_d_1gga74e553765a2b78b955d2eb8cd2a9217ea558db7a075775df230732ed5a4829a29" kindref="member">XMC_DSD_CH_CLOCK_SOURCE_INTERN</ref><sp/>=<sp/>15U<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="223"><highlight class="normal">}<sp/><ref refid="group___d_s_d_1ga74e553765a2b78b955d2eb8cd2a9217e" kindref="member">XMC_DSD_CH_CLOCK_SOURCE_t</ref>;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>XMC_DSD_CH_STROBE</highlight></codeline>
<codeline lineno="231"><highlight class="normal">{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/>XMC_DSD_CH_STROBE_DIRECT_CLOCK_RISE<sp/>=<sp/>1U,<sp/><sp/></highlight><highlight class="comment">/*<sp/>Direct<sp/>clock,<sp/>a<sp/>sample<sp/>trigger<sp/>is<sp/>generated<sp/>at<sp/>each<sp/>rising<sp/>clock<sp/>edge<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/>XMC_DSD_CH_STROBE_DIRECT_CLOCK_FALL<sp/>=<sp/>2U,<sp/><sp/></highlight><highlight class="comment">/*<sp/>Direct<sp/>clock,<sp/>a<sp/>sample<sp/>trigger<sp/>is<sp/>generated<sp/>at<sp/>each<sp/>falling<sp/>clock<sp/>edge<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/>XMC_DSD_CH_STROBE_DOUBLE_DATA<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>3U,<sp/><sp/></highlight><highlight class="comment">/*<sp/>Double<sp/>data,<sp/>a<sp/>sample<sp/>trigger<sp/>is<sp/>generated<sp/>at<sp/>each<sp/>rising<sp/>and<sp/>falling<sp/>clock<sp/>edge<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/>XMC_DSD_CH_STROBE_DOUBLE_CLOCK_RISE<sp/>=<sp/>5U,<sp/><sp/></highlight><highlight class="comment">/*<sp/>Double<sp/>clock,<sp/>a<sp/>sample<sp/>trigger<sp/>is<sp/>generated<sp/>at<sp/>every<sp/>2nd<sp/>rising<sp/>clock<sp/>edge<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/>XMC_DSD_CH_STROBE_DOUBLE_CLOCK_FALL<sp/>=<sp/>6U<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Double<sp/>clock,<sp/>a<sp/>sample<sp/>trigger<sp/>is<sp/>generated<sp/>at<sp/>every<sp/>2nd<sp/>falling<sp/>clock<sp/>edge<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal">}<sp/><ref refid="group___d_s_d_1gac092a2346cbc4aab408df95beb6284ae" kindref="member">XMC_DSD_CH_STROBE_t</ref>;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>XMC_DSD_CH_CLK_DIV</highlight></codeline>
<codeline lineno="249"><highlight class="normal">{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><ref refid="group___d_s_d_1ggab4e7fab86390d11083766317842074b6af92290b5c8d52063a5db34c772afbfd7" kindref="member">XMC_DSD_CH_CLK_DIV_2</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><ref refid="group___d_s_d_1ggab4e7fab86390d11083766317842074b6ae3f733ce4d8ac562e17b0c2277ad4d5e" kindref="member">XMC_DSD_CH_CLK_DIV_4</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><ref refid="group___d_s_d_1ggab4e7fab86390d11083766317842074b6a986cd51fbdd73966a0366fed1919ca8d" kindref="member">XMC_DSD_CH_CLK_DIV_6</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><ref refid="group___d_s_d_1ggab4e7fab86390d11083766317842074b6aea0dcaa19c05a30cafd4fcff830a9d24" kindref="member">XMC_DSD_CH_CLK_DIV_8</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><ref refid="group___d_s_d_1ggab4e7fab86390d11083766317842074b6a22ef3429a0285f5d47809d2c539c2e86" kindref="member">XMC_DSD_CH_CLK_DIV_10</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><ref refid="group___d_s_d_1ggab4e7fab86390d11083766317842074b6a1dc3da8a9668cca3acb379f1d4374bf8" kindref="member">XMC_DSD_CH_CLK_DIV_12</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><ref refid="group___d_s_d_1ggab4e7fab86390d11083766317842074b6a1cc347b104335e28022f030f2365ff16" kindref="member">XMC_DSD_CH_CLK_DIV_14</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><ref refid="group___d_s_d_1ggab4e7fab86390d11083766317842074b6a74088346c57fa2153fa4f474dd22d154" kindref="member">XMC_DSD_CH_CLK_DIV_16</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><ref refid="group___d_s_d_1ggab4e7fab86390d11083766317842074b6a106fe80a6d799ce3b7aa32e87dfb2ef9" kindref="member">XMC_DSD_CH_CLK_DIV_18</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><ref refid="group___d_s_d_1ggab4e7fab86390d11083766317842074b6ab37aa7334b5f943abba4b7865f12d2f1" kindref="member">XMC_DSD_CH_CLK_DIV_20</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><ref refid="group___d_s_d_1ggab4e7fab86390d11083766317842074b6af32d566fb67e160971a02bbe1e4fba0f" kindref="member">XMC_DSD_CH_CLK_DIV_22</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><ref refid="group___d_s_d_1ggab4e7fab86390d11083766317842074b6a04ca791ac88ab94fb02628c3baed9829" kindref="member">XMC_DSD_CH_CLK_DIV_24</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><ref refid="group___d_s_d_1ggab4e7fab86390d11083766317842074b6a373e5a76ab64bae225ff74f2ca31f384" kindref="member">XMC_DSD_CH_CLK_DIV_26</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><ref refid="group___d_s_d_1ggab4e7fab86390d11083766317842074b6a3e561cda7535d481e9e443b6392ecf41" kindref="member">XMC_DSD_CH_CLK_DIV_28</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><ref refid="group___d_s_d_1ggab4e7fab86390d11083766317842074b6ac3aedde9d6599141f0833350ea679b94" kindref="member">XMC_DSD_CH_CLK_DIV_30</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><ref refid="group___d_s_d_1ggab4e7fab86390d11083766317842074b6afed001abcc2f043d5f65731de6cb4cf7" kindref="member">XMC_DSD_CH_CLK_DIV_32</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="268"><highlight class="normal">}<sp/><ref refid="group___d_s_d_1gab4e7fab86390d11083766317842074b6" kindref="member">XMC_DSD_CH_CLK_t</ref>;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>XMC_DSD_CH_INTEGRATOR_START</highlight></codeline>
<codeline lineno="275"><highlight class="normal">{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><ref refid="group___d_s_d_1ggacf67e1a54b42e975838c0331a67d22f8a6542df96a700282af672859b512f512b" kindref="member">XMC_DSD_CH_INTEGRATOR_START_OFF</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><ref refid="group___d_s_d_1ggacf67e1a54b42e975838c0331a67d22f8a41ff83cc378e90276ab31dbccbae8fec" kindref="member">XMC_DSD_CH_INTEGRATOR_START_TRIGGER_FALL</ref>,<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><ref refid="group___d_s_d_1ggacf67e1a54b42e975838c0331a67d22f8a41554bac76554e256a140371997bc3e0" kindref="member">XMC_DSD_CH_INTEGRATOR_START_TRIGGER_RISE</ref>,<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><ref refid="group___d_s_d_1ggacf67e1a54b42e975838c0331a67d22f8aa0f9eae082895c9446d286311e3ae3f1" kindref="member">XMC_DSD_CH_INTEGRATOR_START_ALLWAYS_ON</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="281"><highlight class="normal">}<sp/><ref refid="group___d_s_d_1gacf67e1a54b42e975838c0331a67d22f8" kindref="member">XMC_DSD_CH_INTEGRATOR_START_t</ref>;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>XMC_DSD_CH_INTEGRATOR_STOP</highlight></codeline>
<codeline lineno="288"><highlight class="normal">{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><ref refid="group___d_s_d_1gga222a39dba6894d68bc2af180f3d42b34ad75dd79f4a198aa99a8795127737ff95" kindref="member">XMC_DSD_CH_INTEGRATOR_STOP_END_OF_LOOPS</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><ref refid="group___d_s_d_1gga222a39dba6894d68bc2af180f3d42b34a37e30791f02595a9c51505de67c09e1f" kindref="member">XMC_DSD_CH_INTEGRATOR_STOP_ENDLESS_OR_INVERSE_TRIGGER</ref><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="292"><highlight class="normal">}<sp/><ref refid="group___d_s_d_1ga222a39dba6894d68bc2af180f3d42b34" kindref="member">XMC_DSD_CH_INTEGRATOR_STOP_t</ref>;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>XMC_DSD_CH_TRIGGER_SOURCE</highlight></codeline>
<codeline lineno="300"><highlight class="normal">{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><ref refid="group___d_s_d_1gga3a6f085bea1f918759879c3b8516fb55afb22627b045136ac12471971455ae485" kindref="member">XMC_DSD_CH_TRIGGER_SOURCE_A</ref><sp/>=<sp/>0U,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><ref refid="group___d_s_d_1gga3a6f085bea1f918759879c3b8516fb55aa613d1b7c9f08fcc129d435ef58e8b77" kindref="member">XMC_DSD_CH_TRIGGER_SOURCE_B</ref><sp/>=<sp/>1U,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><ref refid="group___d_s_d_1gga3a6f085bea1f918759879c3b8516fb55a48dd62f1e68906d40d9162b1509343bd" kindref="member">XMC_DSD_CH_TRIGGER_SOURCE_C</ref><sp/>=<sp/>2U,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><ref refid="group___d_s_d_1gga3a6f085bea1f918759879c3b8516fb55a5d18997f249d6a4648907f5b8149ac01" kindref="member">XMC_DSD_CH_TRIGGER_SOURCE_D</ref><sp/>=<sp/>3U,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><ref refid="group___d_s_d_1gga3a6f085bea1f918759879c3b8516fb55a9611e89435f93733c95030a4ac0bad2f" kindref="member">XMC_DSD_CH_TRIGGER_SOURCE_E</ref><sp/>=<sp/>4U,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><ref refid="group___d_s_d_1gga3a6f085bea1f918759879c3b8516fb55a8e413712204a804d1c13f100d2e3b426" kindref="member">XMC_DSD_CH_TRIGGER_SOURCE_F</ref><sp/>=<sp/>5U,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><ref refid="group___d_s_d_1gga3a6f085bea1f918759879c3b8516fb55ac7f7473a7a9ac51cb06a19e263bc3b00" kindref="member">XMC_DSD_CH_TRIGGER_SOURCE_G</ref><sp/>=<sp/>6U,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><ref refid="group___d_s_d_1gga3a6f085bea1f918759879c3b8516fb55ac8f0f4127665ec3feb70bc3c11ffba82" kindref="member">XMC_DSD_CH_TRIGGER_SOURCE_H</ref><sp/>=<sp/>7U<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="311"><highlight class="normal">}<sp/><ref refid="group___d_s_d_1ga3a6f085bea1f918759879c3b8516fb55" kindref="member">XMC_DSD_CH_TRIGGER_SOURCE_t</ref>;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>XMC_DSD_CH_TIMESTAMP_TRIGGER</highlight></codeline>
<codeline lineno="318"><highlight class="normal">{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><ref refid="group___d_s_d_1gga0b1ee318d29a035ea865a08b6f83b4b6a847dd1a624ff871ba8ab617a46b93800" kindref="member">XMC_DSD_CH_TIMESTAMP_TRIGGER_DISABLE</ref>,<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><ref refid="group___d_s_d_1gga0b1ee318d29a035ea865a08b6f83b4b6a4c2b8f2723391c141957ca8c5ac1aa29" kindref="member">XMC_DSD_CH_TIMESTAMP_TRIGGER_FALL</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><ref refid="group___d_s_d_1gga0b1ee318d29a035ea865a08b6f83b4b6a549783fb5ab277a1c1d8142c0c491ee6" kindref="member">XMC_DSD_CH_TIMESTAMP_TRIGGER_RISE</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><ref refid="group___d_s_d_1gga0b1ee318d29a035ea865a08b6f83b4b6a95228e0589b308b82b26fc5a8038f052" kindref="member">XMC_DSD_CH_TIMESTAMP_TRIGGER_BOTH_EDGES</ref><sp/><sp/></highlight></codeline>
<codeline lineno="324"><highlight class="normal">}<sp/><ref refid="group___d_s_d_1ga0b1ee318d29a035ea865a08b6f83b4b6" kindref="member">XMC_DSD_CH_TIMESTAMP_TRIGGER_t</ref>;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>XMC_DSD_CH_SIGN_SOURCE</highlight></codeline>
<codeline lineno="331"><highlight class="normal">{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><ref refid="group___d_s_d_1gga32064f76d8be2050aeb60f7cf6f5717fa0b1c0b6fe1fbe7929daa3c6a76cc369f" kindref="member">XMC_DSD_CH_SIGN_SOURCE_ON_CHIP_GENERATOR</ref>,<sp/></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><ref refid="group___d_s_d_1gga32064f76d8be2050aeb60f7cf6f5717fa4ed091a3010c8822b5eb6bd63b2d494c" kindref="member">XMC_DSD_CH_SIGN_SOURCE_NEXT_CHANNEL</ref>,<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><ref refid="group___d_s_d_1gga32064f76d8be2050aeb60f7cf6f5717fa5fb0116ec8d6042e4b056b5d1ef2956c" kindref="member">XMC_DSD_CH_SIGN_SOURCE_EXTERNAL_A</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><ref refid="group___d_s_d_1gga32064f76d8be2050aeb60f7cf6f5717fae70967d5826d425b4c0103b1323f9403" kindref="member">XMC_DSD_CH_SIGN_SOURCE_EXTERNAL_B</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="337"><highlight class="normal">}<sp/><ref refid="group___d_s_d_1ga32064f76d8be2050aeb60f7cf6f5717f" kindref="member">XMC_DSD_CH_SIGN_SOURCE_t</ref>;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>XMC_DSD_CH_ID</highlight></codeline>
<codeline lineno="344"><highlight class="normal">{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><ref refid="group___d_s_d_1ggaf4be737ccac0300480dabb3635c9f95ca90ba73b0dbf8db34d53f85a0195a69e5" kindref="member">XMC_DSD_CH_ID_0</ref><sp/>=<sp/>1U,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><ref refid="group___d_s_d_1ggaf4be737ccac0300480dabb3635c9f95cac11a68d45e1de1d459e07779e94ab236" kindref="member">XMC_DSD_CH_ID_1</ref><sp/>=<sp/>2U,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><ref refid="group___d_s_d_1ggaf4be737ccac0300480dabb3635c9f95cae1a6484ad4995f9a2e8e7c39c2e8f6e7" kindref="member">XMC_DSD_CH_ID_2</ref><sp/>=<sp/>4U,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><ref refid="group___d_s_d_1ggaf4be737ccac0300480dabb3635c9f95ca9a883136a56e48e6f5e400f5d8f14d16" kindref="member">XMC_DSD_CH_ID_3</ref><sp/>=<sp/>8U<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="350"><highlight class="normal">}<sp/><ref refid="group___d_s_d_1gaf4be737ccac0300480dabb3635c9f95c" kindref="member">XMC_DSD_CH_ID_t</ref>;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>XMC_DSD_CH_AUX_EVENT</highlight></codeline>
<codeline lineno="358"><highlight class="normal">{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><ref refid="group___d_s_d_1ggae9cb3a22cc1880697d0ea7750a2b6d93a57ad2ad31b4899ab088338edc798b52c" kindref="member">XMC_DSD_CH_AUX_EVENT_DISABLED</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0U,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><ref refid="group___d_s_d_1ggae9cb3a22cc1880697d0ea7750a2b6d93a0a212d10c3ac1bffed59962213fc4a4b" kindref="member">XMC_DSD_CH_AUX_EVENT_EVERY_NEW_RESULT</ref><sp/><sp/><sp/><sp/>=<sp/>1U,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><ref refid="group___d_s_d_1ggae9cb3a22cc1880697d0ea7750a2b6d93a4faabdd8772d2d0cdc1ca7c4338b40d1" kindref="member">XMC_DSD_CH_AUX_EVENT_CAPTURE_SIGN_DELAY</ref><sp/><sp/>=<sp/>2U,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><ref refid="group___d_s_d_1ggae9cb3a22cc1880697d0ea7750a2b6d93a3ab4d0c7568df504e83490122d2307e4" kindref="member">XMC_DSD_CH_AUX_EVENT_INSIDE_BOUNDARY</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>5U,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><ref refid="group___d_s_d_1ggae9cb3a22cc1880697d0ea7750a2b6d93a3abdc67a3d401ff6844abf8e03c40d7a" kindref="member">XMC_DSD_CH_AUX_EVENT_OUTSIDE_BOUNDARY</ref><sp/><sp/><sp/><sp/>=<sp/>9U<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="365"><highlight class="normal">}<sp/><ref refid="group___d_s_d_1gae9cb3a22cc1880697d0ea7750a2b6d93" kindref="member">XMC_DSD_CH_AUX_EVENT_t</ref>;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>XMC_DSD_CH_RESULT_EVENT</highlight></codeline>
<codeline lineno="372"><highlight class="normal">{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><ref refid="group___d_s_d_1gga77628de9d7c52f79eebbe7797bc7b581a1d9f8a186836ef365b4182c2dddbd73b" kindref="member">XMC_DSD_CH_RESULT_EVENT_DISABLE</ref><sp/><sp/>=<sp/>0U,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><ref refid="group___d_s_d_1gga77628de9d7c52f79eebbe7797bc7b581a9bd8a93a112df3d1572f6669eae2651e" kindref="member">XMC_DSD_CH_RESULT_EVENT_ENABLE</ref><sp/><sp/><sp/>=<sp/>3U<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="376"><highlight class="normal">}<sp/><ref refid="group___d_s_d_1ga77628de9d7c52f79eebbe7797bc7b581" kindref="member">XMC_DSD_CH_RESULT_EVENT_t</ref>;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight><highlight class="comment">/*********************************************************************************************************************</highlight></codeline>
<codeline lineno="380"><highlight class="comment"><sp/>*<sp/>DATA<sp/>STRUCTURES</highlight></codeline>
<codeline lineno="381"><highlight class="comment"><sp/>********************************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight><highlight class="comment">/*Anonymous<sp/>structure/union<sp/>guard<sp/>start*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__CC_ARM)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>push</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>anon_unions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(__TASKING__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>warning<sp/>586</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="395" refid="struct_x_m_c___d_s_d___g_e_n_e_r_a_t_o_r___c_o_n_f_i_g__t" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">XMC_DSD_GENERATOR_CONFIG</highlight></codeline>
<codeline lineno="396"><highlight class="normal">{</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">union</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>mode:<sp/>2;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>bit_reverse:<sp/>1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>inverted_polarity:<sp/>1;<sp/></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>frequency:<sp/>4;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>:<sp/>24;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>generator_conf;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="409"><highlight class="normal">}<sp/><ref refid="struct_x_m_c___d_s_d___g_e_n_e_r_a_t_o_r___c_o_n_f_i_g__t" kindref="compound">XMC_DSD_GENERATOR_CONFIG_t</ref>;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="418" refid="struct_x_m_c___d_s_d___c_h___f_i_l_t_e_r___c_o_n_f_i_g__t" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">XMC_DSD_CH_FILTER_CONFIG</highlight></codeline>
<codeline lineno="419"><highlight class="normal">{</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/>uint32_t<sp/>clock_divider:<sp/>4;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/>int16_t<sp/>offset;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">union</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>data_source:<sp/>4;<sp/><sp/></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>:<sp/>12;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>clock_source:<sp/>4;<sp/></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>strobe:<sp/>4;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>:<sp/>8;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>demodulator_conf;<sp/><sp/></highlight><highlight class="comment">/*Demodulator<sp/>Input<sp/>Configuration<sp/>Register*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">union</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>:<sp/>8;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>filter_type:<sp/>2;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>:<sp/>4;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>result_event<sp/>:<sp/>2;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>:<sp/>8;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>:<sp/>8;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>main_filter_conf;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/>uint32_t<sp/>decimation_factor;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/>uint32_t<sp/>filter_start_value;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="451"><highlight class="normal">}<sp/><ref refid="struct_x_m_c___d_s_d___c_h___f_i_l_t_e_r___c_o_n_f_i_g__t" kindref="compound">XMC_DSD_CH_FILTER_CONFIG_t</ref>;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="457" refid="struct_x_m_c___d_s_d___c_h___i_n_t_e_g_r_a_t_o_r___c_o_n_f_i_g__t" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">XMC_DSD_CH_INTEGRATOR_CONFIG</highlight></codeline>
<codeline lineno="458"><highlight class="normal">{</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">union</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>:<sp/>8;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>start_condition:<sp/>2;<sp/></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>:<sp/>2;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>trigger_source:<sp/>3;<sp/><sp/></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>:<sp/>17;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>integrator_trigger;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/>uint32_t<sp/>integration_loop;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/>uint32_t<sp/>discarded_values;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/>uint32_t<sp/>stop_condition;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/>uint32_t<sp/>counted_values;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="477"><highlight class="normal">}<sp/><ref refid="struct_x_m_c___d_s_d___c_h___i_n_t_e_g_r_a_t_o_r___c_o_n_f_i_g__t" kindref="compound">XMC_DSD_CH_INTEGRATOR_CONFIG_t</ref>;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="484" refid="struct_x_m_c___d_s_d___c_h___t_i_m_e_s_t_a_m_p___c_o_n_f_i_g__t" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">XMC_DSD_CH_TIMESTAMP_CONFIG</highlight></codeline>
<codeline lineno="485"><highlight class="normal">{</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">union</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>:<sp/>10;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>trigger_mode:<sp/>2;<sp/></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>trigger_source:<sp/>3;<sp/></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>:<sp/>17;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>timestamp_conf;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="497"><highlight class="normal">}<sp/><ref refid="struct_x_m_c___d_s_d___c_h___t_i_m_e_s_t_a_m_p___c_o_n_f_i_g__t" kindref="compound">XMC_DSD_CH_TIMESTAMP_CONFIG_t</ref>;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight></codeline>
<codeline lineno="502" refid="struct_x_m_c___d_s_d___c_h___a_u_x___f_i_l_t_e_r___c_o_n_f_i_g__t" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">XMC_DSD_CH_AUX_FILTER_CONFIG</highlight></codeline>
<codeline lineno="503"><highlight class="normal">{</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">union</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>:<sp/>8;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>filter_type<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>2;<sp/><sp/></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>result_event_type<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>4;<sp/><sp/></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>enable_integrator_coupling<sp/>:<sp/>1;<sp/><sp/></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>17;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>aux_filter_conf;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">union</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>lower_boundary<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>16;<sp/></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>upper_boundary<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>16;<sp/></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>boundary_conf;</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/>uint32_t<sp/>decimation_factor;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="529"><highlight class="normal">}<sp/><ref refid="struct_x_m_c___d_s_d___c_h___a_u_x___f_i_l_t_e_r___c_o_n_f_i_g__t" kindref="compound">XMC_DSD_CH_AUX_FILTER_CONFIG_t</ref>;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="536" refid="struct_x_m_c___d_s_d___c_h___r_e_c_t_i_f_y___c_o_n_f_i_g__t" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">XMC_DSD_CH_RECTIFY_CONFIG</highlight></codeline>
<codeline lineno="537"><highlight class="normal">{</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">union</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>:<sp/>4;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>sign_source:<sp/>2;<sp/></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>:<sp/>26;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>rectify_config;<sp/><sp/></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/>uint8_t<sp/>delay;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/>uint8_t<sp/>half_cycle;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal">}<sp/><ref refid="struct_x_m_c___d_s_d___c_h___r_e_c_t_i_f_y___c_o_n_f_i_g__t" kindref="compound">XMC_DSD_CH_RECTIFY_CONFIG_t</ref>;</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight><highlight class="comment">/*Anonymous<sp/>structure/union<sp/>guard<sp/>end*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__CC_ARM)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>pop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(__TASKING__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>warning<sp/>restore</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight></codeline>
<codeline lineno="565" refid="struct_x_m_c___d_s_d___c_h___c_o_n_f_i_g__t" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">XMC_DSD_CONFIG</highlight></codeline>
<codeline lineno="566"><highlight class="normal">{</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><ref refid="struct_x_m_c___d_s_d___c_h___f_i_l_t_e_r___c_o_n_f_i_g__t" kindref="compound">XMC_DSD_CH_FILTER_CONFIG_t</ref><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>filter;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><ref refid="struct_x_m_c___d_s_d___c_h___i_n_t_e_g_r_a_t_o_r___c_o_n_f_i_g__t" kindref="compound">XMC_DSD_CH_INTEGRATOR_CONFIG_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>integrator;<sp/><sp/></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><ref refid="struct_x_m_c___d_s_d___c_h___t_i_m_e_s_t_a_m_p___c_o_n_f_i_g__t" kindref="compound">XMC_DSD_CH_TIMESTAMP_CONFIG_t</ref><sp/><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>timestamp;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><ref refid="struct_x_m_c___d_s_d___c_h___a_u_x___f_i_l_t_e_r___c_o_n_f_i_g__t" kindref="compound">XMC_DSD_CH_AUX_FILTER_CONFIG_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>aux;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><ref refid="struct_x_m_c___d_s_d___c_h___r_e_c_t_i_f_y___c_o_n_f_i_g__t" kindref="compound">XMC_DSD_CH_RECTIFY_CONFIG_t</ref><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>rectify;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="572"><highlight class="normal">}<sp/><ref refid="struct_x_m_c___d_s_d___c_h___c_o_n_f_i_g__t" kindref="compound">XMC_DSD_CH_CONFIG_t</ref>;</highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight><highlight class="comment">/**********************************************************************************************************************</highlight></codeline>
<codeline lineno="576"><highlight class="comment"><sp/>*<sp/>API<sp/>PROTOTYPES</highlight></codeline>
<codeline lineno="577"><highlight class="comment"><sp/>*********************************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___d_s_d_1gae625acbcea862aaef4ae6ffa1384213d" kindref="member">XMC_DSD_Enable</ref>(<ref refid="group___d_s_d_1ga4b704e8631e5c1ce127a679e840166d4" kindref="member">XMC_DSD_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dsd);</highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___d_s_d_1gabc530c3f59111a433dca627b52477ccd" kindref="member">XMC_DSD_Disable</ref>(<ref refid="group___d_s_d_1ga4b704e8631e5c1ce127a679e840166d4" kindref="member">XMC_DSD_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dsd);</highlight></codeline>
<codeline lineno="626"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___d_s_d_1gace3fcdbf6e73ac059ac75139f4d4d17c" kindref="member">XMC_DSD_EnableClock</ref>(<ref refid="group___d_s_d_1ga4b704e8631e5c1ce127a679e840166d4" kindref="member">XMC_DSD_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dsd);</highlight></codeline>
<codeline lineno="638"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___d_s_d_1ga201f09e7e0da21c460266de3ad6b7ab2" kindref="member">XMC_DSD_DisableClock</ref>(<ref refid="group___d_s_d_1ga4b704e8631e5c1ce127a679e840166d4" kindref="member">XMC_DSD_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dsd);</highlight></codeline>
<codeline lineno="647"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group___d_s_d_1gaf99009cda039f955b12950d42d700d9c" kindref="member">XMC_DSD_IsEnabled</ref>(<ref refid="group___d_s_d_1ga4b704e8631e5c1ce127a679e840166d4" kindref="member">XMC_DSD_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dsd);</highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___d_s_d_1ga8ef9ed5f2da44e68e667dd86157aa67f" kindref="member">XMC_DSD_Init</ref>(<ref refid="group___d_s_d_1ga4b704e8631e5c1ce127a679e840166d4" kindref="member">XMC_DSD_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dsd);</highlight></codeline>
<codeline lineno="679"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___d_s_d_1gaefcf46240b873558f4813d682d3e7db1" kindref="member">XMC_DSD_CH_Timestamp_Init</ref>(<ref refid="group___d_s_d_1ga0926714ae01c0dc11c07c597e6c48cf4" kindref="member">XMC_DSD_CH_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>channel,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_x_m_c___d_s_d___c_h___t_i_m_e_s_t_a_m_p___c_o_n_f_i_g__t" kindref="compound">XMC_DSD_CH_TIMESTAMP_CONFIG_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>init);</highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"><ref refid="group___d_s_d_1ga1fe41bdf5334f8dafa87942e43adf2e4" kindref="member">XMC_DSD_STATUS_t</ref><sp/><ref refid="group___d_s_d_1ga6d191abec2d9b8d1c8ff1f21ac00313b" kindref="member">XMC_DSD_CH_Init</ref>(<ref refid="group___d_s_d_1ga0926714ae01c0dc11c07c597e6c48cf4" kindref="member">XMC_DSD_CH_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>channel,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_x_m_c___d_s_d___c_h___c_o_n_f_i_g__t" kindref="compound">XMC_DSD_CH_CONFIG_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>init);</highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___d_s_d_1gaf8ff4a18539762c79d68125f7298ccfe" kindref="member">XMC_DSD_Start</ref>(<ref refid="group___d_s_d_1ga4b704e8631e5c1ce127a679e840166d4" kindref="member">XMC_DSD_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dsd,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>channel)</highlight></codeline>
<codeline lineno="715"><highlight class="normal">{</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/>XMC_ASSERT(</highlight><highlight class="stringliteral">&quot;XMC_DSD_Start:Invalid<sp/>module<sp/>pointer&quot;</highlight><highlight class="normal">,<sp/>XMC_DSD_CHECK_MODULE_PTR(dsd));</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/>dsd-&gt;GLOBRC<sp/>|=<sp/>channel;</highlight></codeline>
<codeline lineno="718"><highlight class="normal">}</highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___d_s_d_1gac90d64373b776d4a0a50040243bb98d4" kindref="member">XMC_DSD_Stop</ref>(<ref refid="group___d_s_d_1ga4b704e8631e5c1ce127a679e840166d4" kindref="member">XMC_DSD_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dsd,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>channel)</highlight></codeline>
<codeline lineno="736"><highlight class="normal">{</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/>XMC_ASSERT(</highlight><highlight class="stringliteral">&quot;XMC_DSD_Stop:Invalid<sp/>module<sp/>pointer&quot;</highlight><highlight class="normal">,<sp/>XMC_DSD_CHECK_MODULE_PTR(dsd));</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/>dsd-&gt;GLOBRC<sp/>&amp;=<sp/>(uint32_t)<sp/>~channel;</highlight></codeline>
<codeline lineno="739"><highlight class="normal">}</highlight></codeline>
<codeline lineno="740"><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group___d_s_d_1ga1c932fe74edcf6f32c2f87663edc1122" kindref="member">XMC_DSD_IsChannelStarted</ref>(<ref refid="group___d_s_d_1ga4b704e8631e5c1ce127a679e840166d4" kindref="member">XMC_DSD_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dsd,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group___d_s_d_1gaf4be737ccac0300480dabb3635c9f95c" kindref="member">XMC_DSD_CH_ID_t</ref><sp/>channel)</highlight></codeline>
<codeline lineno="753"><highlight class="normal">{</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/>XMC_ASSERT(</highlight><highlight class="stringliteral">&quot;XMC_DSD_IsChannelStarted:Invalid<sp/>module<sp/>pointer&quot;</highlight><highlight class="normal">,<sp/>XMC_DSD_CHECK_MODULE_PTR(dsd));</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dsd-&gt;GLOBRC<sp/>&amp;<sp/>(uint32_t)channel)</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(status);</highlight></codeline>
<codeline lineno="765"><highlight class="normal">}</highlight></codeline>
<codeline lineno="766"><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___d_s_d_1ga70a28f988abaccc0c76130beb461efc7" kindref="member">XMC_DSD_CH_GetResult</ref>(<ref refid="group___d_s_d_1ga0926714ae01c0dc11c07c597e6c48cf4" kindref="member">XMC_DSD_CH_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>channel,<sp/>int16_t<sp/>*dsd_Result)</highlight></codeline>
<codeline lineno="780"><highlight class="normal">{</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/>uint16_t<sp/>result;</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(uint16_t)((uint32_t)channel-&gt;RESM<sp/>&amp;<sp/>DSD_CH_RESM_RESULT_Msk);</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/>*dsd_Result<sp/>=<sp/>(int16_t)result;</highlight></codeline>
<codeline lineno="784"><highlight class="normal">}</highlight></codeline>
<codeline lineno="785"><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___d_s_d_1ga56bbc99bfe95ae0507d46d4d72e7e99e" kindref="member">XMC_DSD_CH_GetResult_TS</ref>(</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><ref refid="group___d_s_d_1ga0926714ae01c0dc11c07c597e6c48cf4" kindref="member">XMC_DSD_CH_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>channel,</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/>int16_t<sp/>*dsd_Result,</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/>uint8_t<sp/>*dsd_filter_loop,</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/>uint8_t<sp/>*dsd_integration_loop);</highlight></codeline>
<codeline lineno="806"><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___d_s_d_1ga97c150a74b54eceae3c8820bcdbb1286" kindref="member">XMC_DSD_CH_GetResult_TS_Time</ref>(<ref refid="group___d_s_d_1ga0926714ae01c0dc11c07c597e6c48cf4" kindref="member">XMC_DSD_CH_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>channel,<sp/>int16_t<sp/>*dsd_Result,<sp/>uint32_t<sp/>*time);</highlight></codeline>
<codeline lineno="820"><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___d_s_d_1gae0d0b8a3009c9314ac07752ecec7945a" kindref="member">XMC_DSD_CH_GetResult_AUX</ref>(<ref refid="group___d_s_d_1ga0926714ae01c0dc11c07c597e6c48cf4" kindref="member">XMC_DSD_CH_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>channel,<sp/>int16_t<sp/>*dsd_Result)</highlight></codeline>
<codeline lineno="834"><highlight class="normal">{</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/>uint16_t<sp/>result;</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>(uint16_t)<sp/>(channel-&gt;RESA<sp/>&amp;<sp/>DSD_CH_RESA_RESULT_Msk);</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/>*dsd_Result<sp/>=<sp/>(int16_t)<sp/>(result);</highlight></codeline>
<codeline lineno="838"><highlight class="normal">}</highlight></codeline>
<codeline lineno="839"><highlight class="normal"></highlight></codeline>
<codeline lineno="850"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___d_s_d_1ga4110982124cd1c069bdc80c5461e1d56" kindref="member">XMC_DSD_Generator_Init</ref>(<ref refid="group___d_s_d_1ga4b704e8631e5c1ce127a679e840166d4" kindref="member">XMC_DSD_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dsd,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_x_m_c___d_s_d___g_e_n_e_r_a_t_o_r___c_o_n_f_i_g__t" kindref="compound">XMC_DSD_GENERATOR_CONFIG_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>init);</highlight></codeline>
<codeline lineno="851"><highlight class="normal"></highlight></codeline>
<codeline lineno="865"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___d_s_d_1ga7fcaf9ce73d825f8020964d9983d9da2" kindref="member">XMC_DSD_Generator_Start</ref>(<ref refid="group___d_s_d_1ga4b704e8631e5c1ce127a679e840166d4" kindref="member">XMC_DSD_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dsd,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_x_m_c___d_s_d___g_e_n_e_r_a_t_o_r___c_o_n_f_i_g__t" kindref="compound">XMC_DSD_GENERATOR_CONFIG_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>config)</highlight></codeline>
<codeline lineno="866"><highlight class="normal">{</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/>XMC_ASSERT(</highlight><highlight class="stringliteral">&quot;XMC_DSD_Generator_Start:Invalid<sp/>module<sp/>pointer&quot;</highlight><highlight class="normal">,<sp/>XMC_DSD_CHECK_MODULE_PTR(dsd));</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/>XMC_ASSERT(</highlight><highlight class="stringliteral">&quot;XMC_DSD_Generator_Start:NULL<sp/>Pointer&quot;</highlight><highlight class="normal">,<sp/>(config<sp/>!=<sp/>(<ref refid="struct_x_m_c___d_s_d___g_e_n_e_r_a_t_o_r___c_o_n_f_i_g__t" kindref="compound">XMC_DSD_GENERATOR_CONFIG_t</ref><sp/>*)NULL)<sp/>);</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/>dsd-&gt;CGCFG<sp/>|=<sp/>config-&gt;<ref refid="struct_x_m_c___d_s_d___g_e_n_e_r_a_t_o_r___c_o_n_f_i_g__t_1a6b29e4f37f4482274af785ad5ffe96a7" kindref="member">mode</ref>;</highlight></codeline>
<codeline lineno="870"><highlight class="normal">}</highlight></codeline>
<codeline lineno="871"><highlight class="normal"></highlight></codeline>
<codeline lineno="886"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___d_s_d_1ga54588105c52fe3a59667cb946efbca02" kindref="member">XMC_DSD_Generator_Stop</ref>(<ref refid="group___d_s_d_1ga4b704e8631e5c1ce127a679e840166d4" kindref="member">XMC_DSD_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dsd)</highlight></codeline>
<codeline lineno="887"><highlight class="normal">{</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/>XMC_ASSERT(</highlight><highlight class="stringliteral">&quot;XMC_DSD_Generator_Stop:Invalid<sp/>module<sp/>pointer&quot;</highlight><highlight class="normal">,<sp/>XMC_DSD_CHECK_MODULE_PTR(dsd));</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/>dsd-&gt;CGCFG<sp/>&amp;=<sp/>~((uint32_t)DSD_CGCFG_CGMOD_Msk);</highlight></codeline>
<codeline lineno="890"><highlight class="normal">}</highlight></codeline>
<codeline lineno="891"><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___d_s_d_1ga553ef84a4928891b8196e1b302e62070" kindref="member">XMC_DSD_CH_MainFilter_Init</ref>(<ref refid="group___d_s_d_1ga0926714ae01c0dc11c07c597e6c48cf4" kindref="member">XMC_DSD_CH_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>channel,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_x_m_c___d_s_d___c_h___f_i_l_t_e_r___c_o_n_f_i_g__t" kindref="compound">XMC_DSD_CH_FILTER_CONFIG_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>init);</highlight></codeline>
<codeline lineno="909"><highlight class="normal"></highlight></codeline>
<codeline lineno="923"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___d_s_d_1ga550cf32d8f26da8b9d26bed22eb1171b" kindref="member">XMC_DSD_CH_MainFilter_SetOffset</ref>(<ref refid="group___d_s_d_1ga0926714ae01c0dc11c07c597e6c48cf4" kindref="member">XMC_DSD_CH_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>channel,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int16_t<sp/>offset)</highlight></codeline>
<codeline lineno="924"><highlight class="normal">{</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/>XMC_ASSERT(</highlight><highlight class="stringliteral">&quot;XMC_DSD_CH_MainFilter_SetOffset:Invalid<sp/>module<sp/>pointer&quot;</highlight><highlight class="normal">,<sp/>XMC_DSD_CHECK_CHANNEL_PTR(channel));</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/>channel-&gt;OFFM<sp/>=<sp/>(uint32_t)offset;</highlight></codeline>
<codeline lineno="927"><highlight class="normal">}</highlight></codeline>
<codeline lineno="928"><highlight class="normal"></highlight></codeline>
<codeline lineno="939"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___d_s_d_1ga1209337fa505ce1aead18ef6fc1eef72" kindref="member">XMC_DSD_CH_MainFilter_EnableEvent</ref>(<ref refid="group___d_s_d_1ga0926714ae01c0dc11c07c597e6c48cf4" kindref="member">XMC_DSD_CH_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>channel)</highlight></codeline>
<codeline lineno="940"><highlight class="normal">{</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/>XMC_ASSERT(</highlight><highlight class="stringliteral">&quot;XMC_DSD_CH_MainFilter_EnableEvent:Invalid<sp/>module<sp/>pointer&quot;</highlight><highlight class="normal">,<sp/>XMC_DSD_CHECK_CHANNEL_PTR(channel));</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/>channel-&gt;FCFGC<sp/>|=<sp/>(uint32_t)DSD_CH_FCFGC_SRGM_Msk;</highlight></codeline>
<codeline lineno="943"><highlight class="normal">}</highlight></codeline>
<codeline lineno="944"><highlight class="normal"></highlight></codeline>
<codeline lineno="954"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___d_s_d_1ga6b7baf705ddd49f5df11d49cdacfff0f" kindref="member">XMC_DSD_CH_MainFilter_DisableEvent</ref>(<ref refid="group___d_s_d_1ga0926714ae01c0dc11c07c597e6c48cf4" kindref="member">XMC_DSD_CH_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>channel)</highlight></codeline>
<codeline lineno="955"><highlight class="normal">{</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/>XMC_ASSERT(</highlight><highlight class="stringliteral">&quot;XMC_DSD_CH_MainFilter_DisableEvent:Invalid<sp/>module<sp/>pointer&quot;</highlight><highlight class="normal">,<sp/>XMC_DSD_CHECK_CHANNEL_PTR(channel));</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/>channel-&gt;FCFGC<sp/>&amp;=<sp/>~((uint32_t)DSD_CH_FCFGC_SRGM_Msk);</highlight></codeline>
<codeline lineno="958"><highlight class="normal">}</highlight></codeline>
<codeline lineno="959"><highlight class="normal"></highlight></codeline>
<codeline lineno="976"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___d_s_d_1gac5718c77cc5727ccf1b234f1e2653704" kindref="member">XMC_DSD_CH_AuxFilter_Init</ref>(<ref refid="group___d_s_d_1ga0926714ae01c0dc11c07c597e6c48cf4" kindref="member">XMC_DSD_CH_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>channel,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_x_m_c___d_s_d___c_h___a_u_x___f_i_l_t_e_r___c_o_n_f_i_g__t" kindref="compound">XMC_DSD_CH_AUX_FILTER_CONFIG_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>init);</highlight></codeline>
<codeline lineno="977"><highlight class="normal"></highlight></codeline>
<codeline lineno="995"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___d_s_d_1gace30e711b2cbdd0a17e6fc856737d051" kindref="member">XMC_DSD_CH_AuxFilter_SetBoundary</ref>(</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><ref refid="group___d_s_d_1ga0926714ae01c0dc11c07c597e6c48cf4" kindref="member">XMC_DSD_CH_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>channel,</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int16_t<sp/>lower_boundary,</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int16_t<sp/>upper_boundary)</highlight></codeline>
<codeline lineno="999"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/>XMC_ASSERT(</highlight><highlight class="stringliteral">&quot;XMC_DSD_CH_AuxFilter_SetBoundary:Invalid<sp/>module<sp/>pointer&quot;</highlight><highlight class="normal">,<sp/>XMC_DSD_CHECK_CHANNEL_PTR(channel));</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/>channel-&gt;BOUNDSEL<sp/>=<sp/>(((uint32_t)upper_boundary<sp/>&lt;&lt;<sp/>(uint32_t)DSD_CH_BOUNDSEL_BOUNDARYU_Pos)</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>((uint32_t)lower_boundary<sp/>&amp;<sp/>(uint32_t)DSD_CH_BOUNDSEL_BOUNDARYL_Msk));</highlight></codeline>
<codeline lineno="1003"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"></highlight></codeline>
<codeline lineno="1016"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___d_s_d_1ga5caf306dca39c1e83fd2c96ae386b780" kindref="member">XMC_DSD_CH_AuxFilter_EnableEvent</ref>(<ref refid="group___d_s_d_1ga0926714ae01c0dc11c07c597e6c48cf4" kindref="member">XMC_DSD_CH_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>channel,<sp/><ref refid="group___d_s_d_1gae9cb3a22cc1880697d0ea7750a2b6d93" kindref="member">XMC_DSD_CH_AUX_EVENT_t</ref><sp/>event)</highlight></codeline>
<codeline lineno="1017"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/>XMC_ASSERT(</highlight><highlight class="stringliteral">&quot;XMC_DSD_CH_AuxFilter_EnableEvent:Invalid<sp/>module<sp/>pointer&quot;</highlight><highlight class="normal">,<sp/>XMC_DSD_CHECK_CHANNEL_PTR(channel));</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/>channel-&gt;FCFGA<sp/>&amp;=<sp/>~((uint32_t)DSD_CH_FCFGA_ESEL_Msk<sp/>|<sp/>(uint32_t)DSD_CH_FCFGA_SRGA_Msk);</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/>channel-&gt;FCFGA<sp/>|=<sp/>((uint32_t)event<sp/>&lt;&lt;<sp/>DSD_CH_FCFGA_SRGA_Pos);</highlight></codeline>
<codeline lineno="1021"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"></highlight></codeline>
<codeline lineno="1032"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___d_s_d_1gad0bb37ffc88334e571894d16fc396c49" kindref="member">XMC_DSD_CH_AuxFilter_DisableEvent</ref>(<ref refid="group___d_s_d_1ga0926714ae01c0dc11c07c597e6c48cf4" kindref="member">XMC_DSD_CH_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>channel)</highlight></codeline>
<codeline lineno="1033"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/>XMC_ASSERT(</highlight><highlight class="stringliteral">&quot;XMC_DSD_CH_AuxFilter_DisableEvent:Invalid<sp/>module<sp/>pointer&quot;</highlight><highlight class="normal">,<sp/>XMC_DSD_CHECK_CHANNEL_PTR(channel));</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/>channel-&gt;FCFGA<sp/>&amp;=<sp/>~((uint32_t)DSD_CH_FCFGA_ESEL_Msk<sp/>|<sp/>(uint32_t)DSD_CH_FCFGA_SRGA_Msk);</highlight></codeline>
<codeline lineno="1036"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"></highlight></codeline>
<codeline lineno="1055"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___d_s_d_1ga84eaf8c2fda261fcce202c81b2ee94c5" kindref="member">XMC_DSD_CH_Integrator_Init</ref>(<ref refid="group___d_s_d_1ga0926714ae01c0dc11c07c597e6c48cf4" kindref="member">XMC_DSD_CH_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>channel,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_x_m_c___d_s_d___c_h___i_n_t_e_g_r_a_t_o_r___c_o_n_f_i_g__t" kindref="compound">XMC_DSD_CH_INTEGRATOR_CONFIG_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>init);</highlight></codeline>
<codeline lineno="1073"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___d_s_d_1ga21153beece159dc431200a17bbf582cb" kindref="member">XMC_DSD_CH_Rectify_Init</ref>(<ref refid="group___d_s_d_1ga0926714ae01c0dc11c07c597e6c48cf4" kindref="member">XMC_DSD_CH_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>channel,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_x_m_c___d_s_d___c_h___r_e_c_t_i_f_y___c_o_n_f_i_g__t" kindref="compound">XMC_DSD_CH_RECTIFY_CONFIG_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>init);</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"></highlight></codeline>
<codeline lineno="1087"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___d_s_d_1ga78cbc0ea3aa5577e6186f93991bf5fa3" kindref="member">XMC_DSD_CH_GetRectifyDelay</ref>(<ref refid="group___d_s_d_1ga0926714ae01c0dc11c07c597e6c48cf4" kindref="member">XMC_DSD_CH_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>channel,<sp/>uint8_t<sp/>*delay)</highlight></codeline>
<codeline lineno="1088"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/>XMC_ASSERT(</highlight><highlight class="stringliteral">&quot;XMC_DSD_CH_GetRectifyDelay:Invalid<sp/>module<sp/>pointer&quot;</highlight><highlight class="normal">,<sp/>XMC_DSD_CHECK_CHANNEL_PTR(channel));</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/>*delay<sp/>=<sp/>(uint8_t)((channel-&gt;CGSYNC<sp/>&amp;<sp/>DSD_CH_CGSYNC_SDCAP_Msk<sp/>)<sp/>&gt;&gt;<sp/>DSD_CH_CGSYNC_SDCAP_Pos);</highlight></codeline>
<codeline lineno="1091"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1108"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___d_s_d_1ga0dfd9c25608f8dd6d28f68fae3a04d68" kindref="member">XMC_DSD_SetResultEventFlag</ref>(<ref refid="group___d_s_d_1ga4b704e8631e5c1ce127a679e840166d4" kindref="member">XMC_DSD_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dsd,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>channel_id)</highlight></codeline>
<codeline lineno="1109"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/>XMC_ASSERT(</highlight><highlight class="stringliteral">&quot;XMC_DSD_SetResultEventFlag:Invalid<sp/>module<sp/>pointer&quot;</highlight><highlight class="normal">,<sp/>XMC_DSD_CHECK_MODULE_PTR(dsd));</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/>dsd-&gt;EVFLAG<sp/>=<sp/>channel_id;</highlight></codeline>
<codeline lineno="1112"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1129"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___d_s_d_1gac3e92415ba18b5bcedb454bc02409631" kindref="member">XMC_DSD_ClearResultEventFlag</ref>(<ref refid="group___d_s_d_1ga4b704e8631e5c1ce127a679e840166d4" kindref="member">XMC_DSD_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dsd,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>channel_id)</highlight></codeline>
<codeline lineno="1130"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/>XMC_ASSERT(</highlight><highlight class="stringliteral">&quot;XMC_DSD_ClearResultEventFlag:Invalid<sp/>module<sp/>pointer&quot;</highlight><highlight class="normal">,<sp/>XMC_DSD_CHECK_MODULE_PTR(dsd));</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/>dsd-&gt;EVFLAGCLR<sp/>=<sp/>channel_id;</highlight></codeline>
<codeline lineno="1133"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1150"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___d_s_d_1gae73cb88751e69031eb5d9ffbbfec47e5" kindref="member">XMC_DSD_SetAlarmEventFlag</ref>(<ref refid="group___d_s_d_1ga4b704e8631e5c1ce127a679e840166d4" kindref="member">XMC_DSD_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dsd,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>channel_id)</highlight></codeline>
<codeline lineno="1151"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/>XMC_ASSERT(</highlight><highlight class="stringliteral">&quot;XMC_DSD_SetAlarmEventFlag:Invalid<sp/>module<sp/>pointer&quot;</highlight><highlight class="normal">,<sp/>XMC_DSD_CHECK_MODULE_PTR(dsd));</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/>dsd-&gt;EVFLAG<sp/>=<sp/>(channel_id<sp/>&lt;&lt;<sp/>DSD_EVFLAGCLR_ALEC0_Pos);</highlight></codeline>
<codeline lineno="1154"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1171"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___d_s_d_1ga14280e89324e1fb9adaa379d8e10b9fa" kindref="member">XMC_DSD_ClearAlarmEventFlag</ref>(<ref refid="group___d_s_d_1ga4b704e8631e5c1ce127a679e840166d4" kindref="member">XMC_DSD_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dsd,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>channel_id)</highlight></codeline>
<codeline lineno="1172"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/>XMC_ASSERT(</highlight><highlight class="stringliteral">&quot;XMC_DSD_ClearAlarmEventFlag:Invalid<sp/>module<sp/>pointer&quot;</highlight><highlight class="normal">,<sp/>XMC_DSD_CHECK_MODULE_PTR(dsd));</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/>dsd-&gt;EVFLAGCLR<sp/>=<sp/>(channel_id<sp/>&lt;&lt;<sp/>DSD_EVFLAGCLR_ALEC0_Pos);</highlight></codeline>
<codeline lineno="1175"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1177"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1179"><highlight class="normal"></highlight></codeline>
<codeline lineno="1186"><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>DSD_PRESENT<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1187"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*XMC_DSD_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_dsd.h"/>
  </compounddef>
</doxygen>
