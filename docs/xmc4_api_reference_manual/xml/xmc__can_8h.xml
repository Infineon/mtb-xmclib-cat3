<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="xmc__can_8h" kind="file" language="C++">
    <compoundname>xmc_can.h</compoundname>
    <includes local="yes">xmc_common.h</includes>
    <includes refid="xmc__scu_8h" local="yes">xmc_scu.h</includes>
    <includes local="yes">xmc_can_map.h</includes>
    <includes local="no">string.h</includes>
    <incdepgraph>
      <node id="15">
        <label>xmc_common.h</label>
      </node>
      <node id="16">
        <label>xmc_can_map.h</label>
      </node>
      <node id="17">
        <label>string.h</label>
      </node>
      <node id="14">
        <label>xmc_can.h</label>
        <link refid="xmc__can_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="struct_x_m_c___c_a_n___f_i_f_o___c_o_n_f_i_g__t" prot="public">XMC_CAN_FIFO_CONFIG_t</innerclass>
    <innerclass refid="struct_x_m_c___c_a_n___g_a_t_e_w_a_y___c_o_n_f_i_g__t" prot="public">XMC_CAN_GATEWAY_CONFIG_t</innerclass>
    <innerclass refid="struct_x_m_c___c_a_n___m_o__t" prot="public">XMC_CAN_MO_t</innerclass>
    <innerclass refid="struct_x_m_c___c_a_n___n_o_d_e___f_r_a_m_e___c_o_u_n_t_e_r__t" prot="public">XMC_CAN_NODE_FRAME_COUNTER_t</innerclass>
    <innerclass refid="struct_x_m_c___c_a_n___n_o_d_e___n_o_m_i_n_a_l___b_i_t___t_i_m_e___c_o_n_f_i_g__t" prot="public">XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG_t</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="group___c_a_n_1ga67d86a11d6335609895a1d21746707a0" prot="public" static="no">
        <name>CAN_MO_MOIPR_Msk</name>
        <initializer>(0x7U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Message Object event mask </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="176" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" bodystart="176" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n_1ga3861567f5ca18080a4a3218a54ac27f5" prot="public" static="no">
        <name>CAN_NODE_NIPR_Msk</name>
        <initializer>(0x7UL)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Node event mask </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="174" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" bodystart="174" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n_1gaa835dc070e65ec31c19cbe8a993a13d4" prot="public" static="no">
        <name>XMC_CAN_MO_MOAR_STDID_Msk</name>
        <initializer>((0x000007FFUL) &lt;&lt; XMC_CAN_MO_MOAR_STDID_Pos)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Standard Identifier bitMask </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="172" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" bodystart="172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_a_n_1gaa064c66529a2259fdeec10ac612b28f4" prot="public" static="no">
        <name>XMC_CAN_MO_MOAR_STDID_Pos</name>
        <initializer>(18U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Standard Identifier bitposition </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="170" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" bodystart="170" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group___c_a_n_1gaf6e73fbe8be3bebeaae1083536ed1843" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_CAN_ARBITRATION_MODE_t</name>
        <enumvalue id="group___c_a_n_1ggaf6e73fbe8be3bebeaae1083536ed1843a2f16f10b626bec423fa29b79686936c1" prot="public">
          <name>XMC_CAN_ARBITRATION_MODE_ORDER_BASED_PRIO_1</name>
          <initializer>= 1U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Transmit acceptance based in the order(prio) </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_a_n_1ggaf6e73fbe8be3bebeaae1083536ed1843a15039a3d1221fcd179a4ee21f51e7204" prot="public">
          <name>XMC_CAN_ARBITRATION_MODE_IDE_DIR_BASED_PRIO_2</name>
          <initializer>= 2U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Transmit acceptance filtering is based on the CAN identifier </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_a_n_1ggaf6e73fbe8be3bebeaae1083536ed1843a254677673b5d5968ab5d602bd30536e4" prot="public">
          <name>XMC_CAN_ARBITRATION_MODE_ORDER_BASED_PRIO_3</name>
          <initializer>= 3U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Transmit acceptance based in the order </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Defines arbitration mode for transmit acceptance filtering. Use type <emphasis>XMC_CAN_ARBITRATION_MODE_t</emphasis> for this enum. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="241" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" bodystart="240" bodyend="245"/>
      </memberdef>
      <memberdef kind="enum" id="group___c_a_n_1gaa70821b48b35c15555d81a4c81fceb80" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_CAN_CANCLKSRC_t</name>
        <enumvalue id="group___c_a_n_1ggaa70821b48b35c15555d81a4c81fceb80a06bd7df9f9b96e66c870838dce5a4fd4" prot="public">
          <name>XMC_CAN_CANCLKSRC_FPERI</name>
          <initializer>= 0x1U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Use peripheral clock as MCAN baudrate generator input clock. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_a_n_1ggaa70821b48b35c15555d81a4c81fceb80a96f23306c6856ff7ed19d16a0df6e19c" prot="public">
          <name>XMC_CAN_CANCLKSRC_FOHP</name>
          <initializer>= 0x2U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Use high performance oscillator (fOHP) as MCAN baudrate generator input clock. <simplesect kind="note"><para>Only available for XMC1400, XMC4800 and XMC4700 series </para>
</simplesect>
</para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Defines the Clock source used for the MCAN baudrate generator </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="457" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" bodystart="456" bodyend="468"/>
      </memberdef>
      <memberdef kind="enum" id="group___c_a_n_1ga96241438cdf8b6f817c9ab98567f072a" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_CAN_DM_t</name>
        <enumvalue id="group___c_a_n_1gga96241438cdf8b6f817c9ab98567f072aac0e7fa972f989165c81e3a53b63199d5" prot="public">
          <name>XMC_CAN_DM_NORMAL</name>
          <initializer>= 1U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Normal divider mode </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_a_n_1gga96241438cdf8b6f817c9ab98567f072aaf4cc302d3f7b8736fe1db557a6f1e632" prot="public">
          <name>XMC_CAN_DM_FRACTIONAL</name>
          <initializer>= 2U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Fractional divider mode </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_a_n_1gga96241438cdf8b6f817c9ab98567f072aa68e24505b0fc77a4cec71029d2f559a5" prot="public">
          <name>XMC_CAN_DM_OFF</name>
          <initializer>= 3U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Divider Mode in off-state </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Defines the Divider Modes. Use type <emphasis>XMC_CAN_DM_t</emphasis> for this enum. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="261" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" bodystart="260" bodyend="265"/>
      </memberdef>
      <memberdef kind="enum" id="group___c_a_n_1ga97b0064e80ec6d5bfcab78f7a35b49a0" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_CAN_FRAME_COUNT_MODE_t</name>
        <enumvalue id="group___c_a_n_1gga97b0064e80ec6d5bfcab78f7a35b49a0a647789e36d9da1a73ca8f3b527d0184c" prot="public">
          <name>XMC_CAN_FRAME_COUNT_MODE</name>
          <initializer>= 0U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Frame Count Mode </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_a_n_1gga97b0064e80ec6d5bfcab78f7a35b49a0aac7d15812333ab4cd870315680bbe4f1" prot="public">
          <name>XMC_CAN_FRAME_COUNT_MODE_TIME_STAMP</name>
          <initializer>= 1U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The frame counter is incremented with the beginning of a new bit time </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_a_n_1gga97b0064e80ec6d5bfcab78f7a35b49a0af1c283fc1952d44d1aa91317a3a6acbe" prot="public">
          <name>XMC_CAN_FRAME_COUNT_MODE_BIT_TIMING</name>
          <initializer>= 2U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Used for baud rate detection and analysis of the bit timing </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Defines the operation mode of the frame counter. Use type <emphasis>XMC_CAN_FRAME_COUNT_MODE_t</emphasis> for this enum. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="251" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" bodystart="250" bodyend="255"/>
      </memberdef>
      <memberdef kind="enum" id="group___c_a_n_1ga4931cde412f7a12b60fefc606a6c9380" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_CAN_FRAME_TYPE_t</name>
        <enumvalue id="group___c_a_n_1gga4931cde412f7a12b60fefc606a6c9380a0c8700174238a98da38474ae5b0be5fd" prot="public">
          <name>XMC_CAN_FRAME_TYPE_STANDARD_11BITS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Standard type identifier </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_a_n_1gga4931cde412f7a12b60fefc606a6c9380a70a77bae271fd1769d782f8f5cafd999" prot="public">
          <name>XMC_CAN_FRAME_TYPE_EXTENDED_29BITS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Extended type identifier </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Defines Data frame types. Use type <emphasis>XMC_CAN_FRAME_TYPE_t</emphasis> for this enum. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="231" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" bodystart="230" bodyend="234"/>
      </memberdef>
      <memberdef kind="enum" id="group___c_a_n_1ga9550c3eb3076c42f27d5d240d19db0db" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_CAN_LOOKBACKMODE_t</name>
        <enumvalue id="group___c_a_n_1gga9550c3eb3076c42f27d5d240d19db0dba22c34251db302b3be55a5bb97ebd2dab" prot="public">
          <name>XMC_CAN_LOOKBACKMODE_ENABLED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Each CAN node can be connected to the internal CAN bus </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_a_n_1gga9550c3eb3076c42f27d5d240d19db0dbaa30431674d0a8b754ca912a435ac20b4" prot="public">
          <name>XMC_CAN_LOOKBACKMODE_DISABLED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Each CAN node can be connected to the external CAN bus </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Defines loop Back Mode, to enable/disable an in-system test of the MultiCAN module . Use type <emphasis>XMC_CAN_LOOKBACKMODE_t</emphasis> for this enum. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="213" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" bodystart="212" bodyend="216"/>
      </memberdef>
      <memberdef kind="enum" id="group___c_a_n_1ga4a4368056ee3b69f1c38f5fa41687704" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_CAN_MO_EVENT_t</name>
        <enumvalue id="group___c_a_n_1gga4a4368056ee3b69f1c38f5fa41687704a7fd71a6aa1f8cbcb11c8fca26b1da6fe" prot="public">
          <name>XMC_CAN_MO_EVENT_TRANSMIT</name>
          <initializer>= CAN_MO_MOFCR_TXIE_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Message Object transmit event </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_a_n_1gga4a4368056ee3b69f1c38f5fa41687704a22ef9ff08c28497c2a3b2ea4ebfc8908" prot="public">
          <name>XMC_CAN_MO_EVENT_RECEIVE</name>
          <initializer>= CAN_MO_MOFCR_RXIE_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Message Object receive event </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_a_n_1gga4a4368056ee3b69f1c38f5fa41687704a9932d0b3d2bdcb92300f4e77f4d952b8" prot="public">
          <name>XMC_CAN_MO_EVENT_OVERFLOW</name>
          <initializer>= CAN_MO_MOFCR_OVIE_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Message Object overflow event </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Defines mask value for CAN Message Object event type. Use type <emphasis>XMC_CAN_MO_EVENT_t</emphasis> for this enum. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="398" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" bodystart="397" bodyend="402"/>
      </memberdef>
      <memberdef kind="enum" id="group___c_a_n_1ga5779e98919b963f0073cb04a129cb581" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_CAN_MO_POINTER_EVENT_t</name>
        <enumvalue id="group___c_a_n_1gga5779e98919b963f0073cb04a129cb581a6000eb78e912e0f48e909b0faa7f454b" prot="public">
          <name>XMC_CAN_MO_POINTER_EVENT_TRANSMIT</name>
          <initializer>= CAN_MO_MOIPR_TXINP_Pos</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Transmit Event node pointer </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_a_n_1gga5779e98919b963f0073cb04a129cb581a36448cdf2a9633974ed7c196d1c1ae12" prot="public">
          <name>XMC_CAN_MO_POINTER_EVENT_RECEIVE</name>
          <initializer>= CAN_MO_MOIPR_RXINP_Pos</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Receive Event node pointer </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Defines CAN Message Object event node pointer position. Use type <emphasis>XMC_CAN_MO_POINTER_EVENT_t</emphasis> for this enum. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="389" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" bodystart="388" bodyend="392"/>
      </memberdef>
      <memberdef kind="enum" id="group___c_a_n_1ga117048d5267011245c4ff40047d00c64" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_CAN_MO_RESET_STATUS_t</name>
        <enumvalue id="group___c_a_n_1gga117048d5267011245c4ff40047d00c64a1c212d44397a6cd8bbb39f8aed2b9906" prot="public">
          <name>XMC_CAN_MO_RESET_STATUS_RX_PENDING</name>
          <initializer>= CAN_MO_MOCTR_RESRXPND_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Reset receive pending </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_a_n_1gga117048d5267011245c4ff40047d00c64ad133d5e33ad9288c9143a6d447c689af" prot="public">
          <name>XMC_CAN_MO_RESET_STATUS_TX_PENDING</name>
          <initializer>= CAN_MO_MOCTR_RESTXPND_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Reset transmit pending </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_a_n_1gga117048d5267011245c4ff40047d00c64adb418d365b096cf0aca00b3c124696f9" prot="public">
          <name>XMC_CAN_MO_RESET_STATUS_RX_UPDATING</name>
          <initializer>= CAN_MO_MOCTR_RESRXUPD_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Reset receive updating </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_a_n_1gga117048d5267011245c4ff40047d00c64aa771b9bc7ad143ff66e41f7ae9f27edb" prot="public">
          <name>XMC_CAN_MO_RESET_STATUS_NEW_DATA</name>
          <initializer>= CAN_MO_MOCTR_RESNEWDAT_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Reset new data </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_a_n_1gga117048d5267011245c4ff40047d00c64a3547c4dac9d77f6fa0cb3464a3b36708" prot="public">
          <name>XMC_CAN_MO_RESET_STATUS_MESSAGE_LOST</name>
          <initializer>= CAN_MO_MOCTR_RESMSGLST_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Reset message lost </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_a_n_1gga117048d5267011245c4ff40047d00c64a377ea8a361359cbbe2f4286918a8cbab" prot="public">
          <name>XMC_CAN_MO_RESET_STATUS_MESSAGE_VALID</name>
          <initializer>= CAN_MO_MOCTR_RESMSGVAL_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Reset message valid </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_a_n_1gga117048d5267011245c4ff40047d00c64a94b3ac53c417babaa42818b60511efe8" prot="public">
          <name>XMC_CAN_MO_RESET_STATUS_RX_TX_SELECTED</name>
          <initializer>= CAN_MO_MOCTR_RESRTSEL_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Reset transmit/receive selected </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_a_n_1gga117048d5267011245c4ff40047d00c64aadaf7a099094ba1c5d9b903cc2239b2a" prot="public">
          <name>XMC_CAN_MO_RESET_STATUS_RX_ENABLE</name>
          <initializer>= CAN_MO_MOCTR_RESRXEN_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Reset receive enable </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_a_n_1gga117048d5267011245c4ff40047d00c64a6becf65cf034368185880f85060fa8a7" prot="public">
          <name>XMC_CAN_MO_RESET_STATUS_TX_REQUEST</name>
          <initializer>= CAN_MO_MOCTR_RESTXRQ_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Reset transmit request </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_a_n_1gga117048d5267011245c4ff40047d00c64a1a70085e5c0010d3760c9fffe44744a0" prot="public">
          <name>XMC_CAN_MO_RESET_STATUS_TX_ENABLE0</name>
          <initializer>= CAN_MO_MOCTR_RESTXEN0_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Reset transmit enable 0 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_a_n_1gga117048d5267011245c4ff40047d00c64a3be253cb4f6ed3919059db3411ef9096" prot="public">
          <name>XMC_CAN_MO_RESET_STATUS_TX_ENABLE1</name>
          <initializer>= CAN_MO_MOCTR_RESTXEN1_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Reset transmit enable 1 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_a_n_1gga117048d5267011245c4ff40047d00c64ac4305c92dd18bee6b4dfa410b8c35af4" prot="public">
          <name>XMC_CAN_MO_RESET_STATUS_MESSAGE_DIRECTION</name>
          <initializer>= CAN_MO_MOCTR_RESDIR_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Reset message direction </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Defines mask value for CAN Message Object reset status. Use type <emphasis>XMC_CAN_MO_RESET_STATUS_t</emphasis> for this enum. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="290" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" bodystart="289" bodyend="303"/>
      </memberdef>
      <memberdef kind="enum" id="group___c_a_n_1ga71459a95ce4da56054ac63b26450d53f" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_CAN_MO_SET_STATUS_t</name>
        <enumvalue id="group___c_a_n_1gga71459a95ce4da56054ac63b26450d53fa303d6f4c2fb5290c4a4e9d8e56eabe0e" prot="public">
          <name>XMC_CAN_MO_SET_STATUS_RX_PENDING</name>
          <initializer>= CAN_MO_MOCTR_SETRXPND_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Set receive pending </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_a_n_1gga71459a95ce4da56054ac63b26450d53fad4cb2392027d767eed7859614d1f3f1c" prot="public">
          <name>XMC_CAN_MO_SET_STATUS_TX_PENDING</name>
          <initializer>= CAN_MO_MOCTR_SETTXPND_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Set transmit pending </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_a_n_1gga71459a95ce4da56054ac63b26450d53fa6020987f73980696994871cac1317be7" prot="public">
          <name>XMC_CAN_MO_SET_STATUS_RX_UPDATING</name>
          <initializer>= CAN_MO_MOCTR_SETRXUPD_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Set receive updating </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_a_n_1gga71459a95ce4da56054ac63b26450d53fab93297cd07ac9cb60c5d112990613bca" prot="public">
          <name>XMC_CAN_MO_SET_STATUS_NEW_DATA</name>
          <initializer>= CAN_MO_MOCTR_SETNEWDAT_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Set new data </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_a_n_1gga71459a95ce4da56054ac63b26450d53facbdf07442367ad1f79bc190832f30300" prot="public">
          <name>XMC_CAN_MO_SET_STATUS_MESSAGE_LOST</name>
          <initializer>= CAN_MO_MOCTR_SETMSGLST_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Set message lost </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_a_n_1gga71459a95ce4da56054ac63b26450d53faedda8bca0890ce30b0ab1c1b953b3cd2" prot="public">
          <name>XMC_CAN_MO_SET_STATUS_MESSAGE_VALID</name>
          <initializer>= CAN_MO_MOCTR_SETMSGVAL_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Set message valid </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_a_n_1gga71459a95ce4da56054ac63b26450d53fa0ed9e9d339a6f185a9026833efef67b9" prot="public">
          <name>XMC_CAN_MO_SET_STATUS_RX_TX_SELECTED</name>
          <initializer>= CAN_MO_MOCTR_SETRTSEL_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Set transmit/receive selected </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_a_n_1gga71459a95ce4da56054ac63b26450d53fa30b9ba23b0da7b3a073d27d876b39275" prot="public">
          <name>XMC_CAN_MO_SET_STATUS_RX_ENABLE</name>
          <initializer>= CAN_MO_MOCTR_SETRXEN_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Set receive enable </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_a_n_1gga71459a95ce4da56054ac63b26450d53fa12f8d82e7b7de063551dcefb0510fba5" prot="public">
          <name>XMC_CAN_MO_SET_STATUS_TX_REQUEST</name>
          <initializer>= CAN_MO_MOCTR_SETTXRQ_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Set transmit request </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_a_n_1gga71459a95ce4da56054ac63b26450d53fa1c7a46c665294b71d0a2f31ba93bc2a8" prot="public">
          <name>XMC_CAN_MO_SET_STATUS_TX_ENABLE0</name>
          <initializer>= CAN_MO_MOCTR_SETTXEN0_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Set transmit enable 0 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_a_n_1gga71459a95ce4da56054ac63b26450d53fa8a6148a8f7bf272413853a65b57f1034" prot="public">
          <name>XMC_CAN_MO_SET_STATUS_TX_ENABLE1</name>
          <initializer>= CAN_MO_MOCTR_SETTXEN1_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Set transmit enable 1 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_a_n_1gga71459a95ce4da56054ac63b26450d53fa2f2fa2587236ccb1c35873ff54fd767c" prot="public">
          <name>XMC_CAN_MO_SET_STATUS_MESSAGE_DIRECTION</name>
          <initializer>= CAN_MO_MOCTR_SETDIR_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Set message direction </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Defines mask value for CAN Message Object set status. Use type <emphasis>XMC_CAN_MO_SET_STATUS_t</emphasis> for this enum. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="271" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" bodystart="270" bodyend="284"/>
      </memberdef>
      <memberdef kind="enum" id="group___c_a_n_1gabb506b9cf0ade6f965c2af19458a03e5" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_CAN_MO_STATUS_t</name>
        <enumvalue id="group___c_a_n_1ggabb506b9cf0ade6f965c2af19458a03e5a1b8f9b196459950f54e9327f2b3943fc" prot="public">
          <name>XMC_CAN_MO_STATUS_RX_PENDING</name>
          <initializer>= CAN_MO_MOSTAT_RXPND_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Defines message has been successfully received or not received </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_a_n_1ggabb506b9cf0ade6f965c2af19458a03e5a88242e8be7e425ea3d8a3c175f38282e" prot="public">
          <name>XMC_CAN_MO_STATUS_TX_PENDING</name>
          <initializer>= CAN_MO_MOSTAT_TXPND_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Defines message has been successfully transmitted or not transmitted </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_a_n_1ggabb506b9cf0ade6f965c2af19458a03e5a847e70a756e5df4fd8daf9d420bdbce7" prot="public">
          <name>XMC_CAN_MO_STATUS_RX_UPDATING</name>
          <initializer>= CAN_MO_MOSTAT_RXUPD_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Defines Message identifier, DLC, and data of the message object are currently updated or not updated </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_a_n_1ggabb506b9cf0ade6f965c2af19458a03e5a0ab63a7b71c23ce6b7b730a8682039fe" prot="public">
          <name>XMC_CAN_MO_STATUS_NEW_DATA</name>
          <initializer>= CAN_MO_MOSTAT_NEWDAT_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Defines no update of the message object since last flag reset or Message object has been updated </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_a_n_1ggabb506b9cf0ade6f965c2af19458a03e5a41f6ed38392c9872c65216d86206a052" prot="public">
          <name>XMC_CAN_MO_STATUS_MESSAGE_LOST</name>
          <initializer>= CAN_MO_MOSTAT_MSGLST_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>CAN message is lost because NEWDAT has become set again when it has already been set or No CAN message is lost </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_a_n_1ggabb506b9cf0ade6f965c2af19458a03e5a8e37c5d67e1849fee65a5d4e1dbc6413" prot="public">
          <name>XMC_CAN_MO_STATUS_MESSAGE_VALID</name>
          <initializer>= CAN_MO_MOSTAT_MSGVAL_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Message valid </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_a_n_1ggabb506b9cf0ade6f965c2af19458a03e5a7c909235ece370fd6f1cec524fade441" prot="public">
          <name>XMC_CAN_MO_STATUS_RX_TX_SELECTED</name>
          <initializer>= CAN_MO_MOSTAT_RTSEL_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Transmit/Receive selected </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_a_n_1ggabb506b9cf0ade6f965c2af19458a03e5a9c80ec109bfab6b150927c5113164717" prot="public">
          <name>XMC_CAN_MO_STATUS_RX_ENABLE</name>
          <initializer>= CAN_MO_MOSTAT_RXEN_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Receive enable </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_a_n_1ggabb506b9cf0ade6f965c2af19458a03e5ac31300afee5ee84c6a6567f324d09e33" prot="public">
          <name>XMC_CAN_MO_STATUS_TX_REQUEST</name>
          <initializer>= CAN_MO_MOSTAT_TXRQ_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Transmit request </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_a_n_1ggabb506b9cf0ade6f965c2af19458a03e5af66c70b9479a73ab2a17056b03f0603a" prot="public">
          <name>XMC_CAN_MO_STATUS_TX_ENABLE0</name>
          <initializer>= CAN_MO_MOSTAT_TXEN0_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Transmit enable 0 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_a_n_1ggabb506b9cf0ade6f965c2af19458a03e5a0d5ab69ba1731c40cc3610f27274c0d8" prot="public">
          <name>XMC_CAN_MO_STATUS_TX_ENABLE1</name>
          <initializer>= CAN_MO_MOSTAT_TXEN1_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Transmit enable 1 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_a_n_1ggabb506b9cf0ade6f965c2af19458a03e5a37dc776f2f923c7a775b624392b516ae" prot="public">
          <name>XMC_CAN_MO_STATUS_MESSAGE_DIRECTION</name>
          <initializer>= CAN_MO_MOSTAT_DIR_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Message direction </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_a_n_1ggabb506b9cf0ade6f965c2af19458a03e5aafec6b1eb3f72aef309bcb2905aaa412" prot="public">
          <name>XMC_CAN_MO_STATUS_LIST</name>
          <initializer>= CAN_MO_MOSTAT_LIST_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>List allocation </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_a_n_1ggabb506b9cf0ade6f965c2af19458a03e5ac4d00f7505287edec44fe716c2fd0fa4" prot="public">
          <name>XMC_CAN_MO_STATUS_POINTER_TO_PREVIOUS_MO</name>
          <initializer>= CAN_MO_MOSTAT_PPREV_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Pointer to previous Message Object </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_a_n_1ggabb506b9cf0ade6f965c2af19458a03e5aebb8bf978c02107070746df91bb33db5" prot="public">
          <name>XMC_CAN_MO_STATUS_POINTER_TO_NEXT_MO</name>
          <initializer>= (int32_t)CAN_MO_MOSTAT_PNEXT_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Pointer to next Message Object </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Defines mask value for CAN Message Object status. Use type <emphasis>XMC_CAN_MO_STATUS_t</emphasis> for this enum. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="309" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" bodystart="308" bodyend="325"/>
      </memberdef>
      <memberdef kind="enum" id="group___c_a_n_1ga3fbcea02aab3f82946f94f9a31a23cc6" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_CAN_MO_TYPE_t</name>
        <enumvalue id="group___c_a_n_1gga3fbcea02aab3f82946f94f9a31a23cc6adb96d9144918c070dde84f0e56fc77be" prot="public">
          <name>XMC_CAN_MO_TYPE_RECMSGOBJ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Receive Message Object selected </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_a_n_1gga3fbcea02aab3f82946f94f9a31a23cc6a9cbbf9631c069f9b398f617d96f5f920" prot="public">
          <name>XMC_CAN_MO_TYPE_TRANSMSGOBJ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Transmit Message Object selected </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Defines Message Object direction. Use type <emphasis>XMC_CAN_MO_TYPE_t</emphasis> for this enum. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="222" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" bodystart="221" bodyend="225"/>
      </memberdef>
      <memberdef kind="enum" id="group___c_a_n_1ga43682a582f983e5e6d8bed1d863c0525" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_CAN_NODE_CONTROL_t</name>
        <enumvalue id="group___c_a_n_1gga43682a582f983e5e6d8bed1d863c0525aba1126af074ff7159efc7f77a0201826" prot="public">
          <name>XMC_CAN_NODE_CONTROL_NODE_INIT</name>
          <initializer>= CAN_NODE_NCR_INIT_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Node initialization </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_a_n_1gga43682a582f983e5e6d8bed1d863c0525a6716d1c06b6fd151281d6cb386cfc0fb" prot="public">
          <name>XMC_CAN_NODE_CONTROL_TX_INT_ENABLE</name>
          <initializer>= CAN_NODE_NCR_TRIE_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Transfer event enable </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_a_n_1gga43682a582f983e5e6d8bed1d863c0525a3b9e2a20f913aa55e720526491730b0a" prot="public">
          <name>XMC_CAN_NODE_CONTROL_LEC_INT_ENABLE</name>
          <initializer>= CAN_NODE_NCR_LECIE_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>LEC Indicated Error Event Enable </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_a_n_1gga43682a582f983e5e6d8bed1d863c0525a0851c6a8c1e108eb33e6ccf573b07bf8" prot="public">
          <name>XMC_CAN_NODE_CONTROL_ALERT_INT_ENABLE</name>
          <initializer>= CAN_NODE_NCR_ALIE_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Alert Event Enable </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_a_n_1gga43682a582f983e5e6d8bed1d863c0525a7503c88d84b84a6cb31e128741ccdc9f" prot="public">
          <name>XMC_CAN_NODE_CONTROL_CAN_DISABLE</name>
          <initializer>= CAN_NODE_NCR_CANDIS_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>CAN disable </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_a_n_1gga43682a582f983e5e6d8bed1d863c0525adcbafb11f340efecbcc204ad443c9651" prot="public">
          <name>XMC_CAN_NODE_CONTROL_CONF_CHANGE_ENABLE</name>
          <initializer>= CAN_NODE_NCR_CCE_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Configuration change enable </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_a_n_1gga43682a582f983e5e6d8bed1d863c0525a92c2bad37cdb1110a79ec5822c8a18a5" prot="public">
          <name>XMC_CAN_NODE_CONTROL_CAN_ANALYZER_NODEDE</name>
          <initializer>= CAN_NODE_NCR_CALM_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>CAN Analyzer mode </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_a_n_1gga43682a582f983e5e6d8bed1d863c0525ae99f98152a904df2dd041ee6ee94543e" prot="public">
          <name>XMC_CAN_NODE_CONTROL_SUSPENDED_ENABLE</name>
          <initializer>= CAN_NODE_NCR_SUSEN_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Suspend Enable </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Defines mask value for CAN Node control like initialization, node disable and analyzer mode . Use type <emphasis>XMC_CAN_NODE_CONTROL_t</emphasis> for this enum. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="350" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" bodystart="349" bodyend="361"/>
      </memberdef>
      <memberdef kind="enum" id="group___c_a_n_1gae708efa53df4791e665aa6a900eeb6a6" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_CAN_NODE_EVENT_t</name>
        <enumvalue id="group___c_a_n_1ggae708efa53df4791e665aa6a900eeb6a6a2159cba25f718f956a9b11789b6f355e" prot="public">
          <name>XMC_CAN_NODE_EVENT_TX_INT</name>
          <initializer>= CAN_NODE_NCR_TRIE_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Node Transfer OK Event </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_a_n_1ggae708efa53df4791e665aa6a900eeb6a6a28a0b05df7dfc670015e4978f053ff09" prot="public">
          <name>XMC_CAN_NODE_EVENT_ALERT</name>
          <initializer>= CAN_NODE_NCR_ALIE_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Node Alert Event </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_a_n_1ggae708efa53df4791e665aa6a900eeb6a6a7370725ebacb12b3b2947cb3f852b774" prot="public">
          <name>XMC_CAN_NODE_EVENT_LEC</name>
          <initializer>= CAN_NODE_NCR_LECIE_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Last Error code Event </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_a_n_1ggae708efa53df4791e665aa6a900eeb6a6a9201ef0affec049535dc6aa8fdb6740b" prot="public">
          <name>XMC_CAN_NODE_EVENT_CFCIE</name>
          <initializer>= CAN_NODE_NFCR_CFCIE_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>CAN Frame Count Event </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Defines mask value for CAN Node events. Use type <emphasis>XMC_CAN_NODE_EVENT_t</emphasis> for this enum. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="367" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" bodystart="366" bodyend="372"/>
      </memberdef>
      <memberdef kind="enum" id="group___c_a_n_1gacbd6bd74f665b242e800d56b7e1b936d" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_CAN_NODE_INTERRUPT_TRIGGER_t</name>
        <enumvalue id="group___c_a_n_1ggacbd6bd74f665b242e800d56b7e1b936da2abaabf3c7e5b8fb2af53f5ff0915e8f" prot="public">
          <name>XMC_CAN_NODE_INTR_TRIGGER_0</name>
          <initializer>= 0x1U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_a_n_1ggacbd6bd74f665b242e800d56b7e1b936da0e0c527d40de7da78d488be96de2f79d" prot="public">
          <name>XMC_CAN_NODE_INTR_TRIGGER_1</name>
          <initializer>= 0x2U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_a_n_1ggacbd6bd74f665b242e800d56b7e1b936da2ee20164018e0f3c681ae63d76f1006b" prot="public">
          <name>XMC_CAN_NODE_INTR_TRIGGER_2</name>
          <initializer>= 0x4U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_a_n_1ggacbd6bd74f665b242e800d56b7e1b936da6fba78390e3c0b3555f9d3dba2df6ac2" prot="public">
          <name>XMC_CAN_NODE_INTR_TRIGGER_3</name>
          <initializer>= 0x8U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_a_n_1ggacbd6bd74f665b242e800d56b7e1b936da6e653ca3bc35c1b938858125c9226d37" prot="public">
          <name>XMC_CAN_NODE_INTR_TRIGGER_4</name>
          <initializer>= 0x16U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_a_n_1ggacbd6bd74f665b242e800d56b7e1b936da8703aab890b106a005b8618ff9b36647" prot="public">
          <name>XMC_CAN_NODE_INTR_TRIGGER_5</name>
          <initializer>= 0x32U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_a_n_1ggacbd6bd74f665b242e800d56b7e1b936dac73dbe4a28c5712976a1d4dca75244c0" prot="public">
          <name>XMC_CAN_NODE_INTR_TRIGGER_6</name>
          <initializer>= 0x64U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_a_n_1ggacbd6bd74f665b242e800d56b7e1b936da577cb96a6d0bb98268f4d474c92042f6" prot="public">
          <name>XMC_CAN_NODE_INTR_TRIGGER_7</name>
          <initializer>= 0x128U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Defines interrupt request on interrupt output line INT_O[n]. Use type <emphasis>XMC_CAN_NODE_INTERRUPT_TRIGGER_t</emphasis> for this enum. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="442" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" bodystart="441" bodyend="451"/>
      </memberdef>
      <memberdef kind="enum" id="group___c_a_n_1ga58a294b10b4e0b575f0d378313fc3b05" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_CAN_NODE_LAST_ERROR_DIR_t</name>
        <enumvalue id="group___c_a_n_1gga58a294b10b4e0b575f0d378313fc3b05a466fce0833dd131db8d089538553a2cb" prot="public">
          <name>XMC_CAN_NODE_LAST_ERROR_DIR_WHILE_NODE_RECEPCION</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The last error occurred while the CAN node x was receiver </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_a_n_1gga58a294b10b4e0b575f0d378313fc3b05a6e2cf323e7eb07947d286c6ca61d1fa5" prot="public">
          <name>XMC_CAN_NODE_LAST_ERROR_DIR_WHILE_NODE_TRANSMISSION</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The last error occurred while the CAN node x was transmitter </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Defines last error transfer direction. Use type <emphasis>XMC_CAN_NODE_LAST_ERROR_DIR_t</emphasis> for this enum. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="423" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" bodystart="422" bodyend="426"/>
      </memberdef>
      <memberdef kind="enum" id="group___c_a_n_1ga588030349d9f7f929bcdfca3b2e1df13" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_CAN_NODE_LAST_ERROR_INC_t</name>
        <enumvalue id="group___c_a_n_1gga588030349d9f7f929bcdfca3b2e1df13abff5ffb7c38d0839f5b69c0dbd3b8077" prot="public">
          <name>XMC_CAN_NODE_LAST_ERROR_INC_1</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The last error led to an error counter increment of 1. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_a_n_1gga588030349d9f7f929bcdfca3b2e1df13a2fcd1eb4a760d15a93c22d8aa372458a" prot="public">
          <name>XMC_CAN_NODE_LAST_ERROR_INC_8</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The last error led to an error counter increment of 8. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Defines last error increment. Use type <emphasis>XMC_CAN_NODE_LAST_ERROR_INC_t</emphasis> for this enum. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="433" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" bodystart="432" bodyend="436"/>
      </memberdef>
      <memberdef kind="enum" id="group___c_a_n_1ga8df6893c4bb8410cf24639fea906ebea" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_CAN_NODE_POINTER_EVENT_t</name>
        <enumvalue id="group___c_a_n_1gga8df6893c4bb8410cf24639fea906ebeaa6d63393a29fd63308bd2d6b29a870ea0" prot="public">
          <name>XMC_CAN_NODE_POINTER_EVENT_ALERT</name>
          <initializer>= CAN_NODE_NIPR_ALINP_Pos</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Node Alert Event node pointer </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_a_n_1gga8df6893c4bb8410cf24639fea906ebeaadf0723b000e518abb44fbc23709125e2" prot="public">
          <name>XMC_CAN_NODE_POINTER_EVENT_LEC</name>
          <initializer>= CAN_NODE_NIPR_LECINP_Pos</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Last Error code Event node pointer </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_a_n_1gga8df6893c4bb8410cf24639fea906ebeaa2f630df69e6fcb1adf07ffb3d254bf48" prot="public">
          <name>XMC_CAN_NODE_POINTER_EVENT_TRANSFER_OK</name>
          <initializer>= CAN_NODE_NIPR_TRINP_Pos</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Transmit Event node pointer </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_a_n_1gga8df6893c4bb8410cf24639fea906ebeaa8210f7ff39c70d241f29f6aafc533170" prot="public">
          <name>XMC_CAN_NODE_POINTER_EVENT_FRAME_COUNTER</name>
          <initializer>= CAN_NODE_NIPR_CFCINP_Pos</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>CAN Frame Count Event node pointer </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Defines mask value for CAN node pointer events position. Use type <emphasis>XMC_CAN_NODE_POINTER_EVENT_t</emphasis> for this enum. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="378" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" bodystart="377" bodyend="383"/>
      </memberdef>
      <memberdef kind="enum" id="group___c_a_n_1gae061ae75276ded4637f93c9b7d5e44eb" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_CAN_NODE_RECEIVE_INPUT_t</name>
        <enumvalue id="group___c_a_n_1ggae061ae75276ded4637f93c9b7d5e44ebaab62ebed090f4713dac915c70e1c19a1" prot="public">
          <name>XMC_CAN_NODE_RECEIVE_INPUT_RXDCA</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>CAN Receive Input A </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_a_n_1ggae061ae75276ded4637f93c9b7d5e44eba5b49b8672416934d2bd3d5ab3ddb26c9" prot="public">
          <name>XMC_CAN_NODE_RECEIVE_INPUT_RXDCB</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>CAN Receive Input B </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_a_n_1ggae061ae75276ded4637f93c9b7d5e44ebab4cbc80841709a4074a3756af8dea8d5" prot="public">
          <name>XMC_CAN_NODE_RECEIVE_INPUT_RXDCC</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>CAN Receive Input C </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_a_n_1ggae061ae75276ded4637f93c9b7d5e44ebada51c16744dbf9e8ce4b0815407434b0" prot="public">
          <name>XMC_CAN_NODE_RECEIVE_INPUT_RXDCD</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>CAN Receive Input D </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_a_n_1ggae061ae75276ded4637f93c9b7d5e44ebad9fac1be9fdb0f7f5bbd969b3edb7a5b" prot="public">
          <name>XMC_CAN_NODE_RECEIVE_INPUT_RXDCE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>CAN Receive Input E </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_a_n_1ggae061ae75276ded4637f93c9b7d5e44ebab136a51839443d96b8bda9b43278b4e5" prot="public">
          <name>XMC_CAN_NODE_RECEIVE_INPUT_RXDCF</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>CAN Receive Input F </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_a_n_1ggae061ae75276ded4637f93c9b7d5e44eba2050c1e6dc231afdd965de94156fae1b" prot="public">
          <name>XMC_CAN_NODE_RECEIVE_INPUT_RXDCG</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>CAN Receive Input G </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_a_n_1ggae061ae75276ded4637f93c9b7d5e44eba0d4544e0a8dc3421e2f4da23c3346b83" prot="public">
          <name>XMC_CAN_NODE_RECEIVE_INPUT_RXDCH</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>CAN Receive Input H </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Defines the possible receive inputs. Use type <emphasis>XMC_CAN_NODE_RECEIVE_INPUT_t</emphasis> for this enum. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="408" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" bodystart="407" bodyend="417"/>
      </memberdef>
      <memberdef kind="enum" id="group___c_a_n_1ga6efda609ad66be6ae2564b3b4310c362" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_CAN_NODE_STATUS_t</name>
        <enumvalue id="group___c_a_n_1gga6efda609ad66be6ae2564b3b4310c362ac68859ef279c7dec4f14a0ea58d178ae" prot="public">
          <name>XMC_CAN_NODE_STATUS_LAST_ERROR_CODE</name>
          <initializer>= CAN_NODE_NSR_LEC_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Last Error Code </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_a_n_1gga6efda609ad66be6ae2564b3b4310c362aefaab30a4c4568e507a1c21f9f1e11e7" prot="public">
          <name>XMC_CAN_NODE_STATUS_TX_OK</name>
          <initializer>= CAN_NODE_NSR_TXOK_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Message transmitted successfully </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_a_n_1gga6efda609ad66be6ae2564b3b4310c362aa5a64a16d14798b62820958e66b7598f" prot="public">
          <name>XMC_CAN_NODE_STATUS_RX_OK</name>
          <initializer>= CAN_NODE_NSR_RXOK_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Message received successfully </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_a_n_1gga6efda609ad66be6ae2564b3b4310c362ac23f25605f837c3aceb03d19d56fa797" prot="public">
          <name>XMC_CAN_NODE_STATUS_ALERT_WARNING</name>
          <initializer>= CAN_NODE_NSR_ALERT_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Alert warning </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_a_n_1gga6efda609ad66be6ae2564b3b4310c362a53da5cae844bd96caa187caaaf0cd48f" prot="public">
          <name>XMC_CAN_NODE_STATUS_ERROR_WARNING_STATUS</name>
          <initializer>= CAN_NODE_NSR_EWRN_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Error warning status </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_a_n_1gga6efda609ad66be6ae2564b3b4310c362ac04532594e806f091badea37e256ec3f" prot="public">
          <name>XMC_CAN_NODE_STATUS_BUS_OFF</name>
          <initializer>= CAN_NODE_NSR_BOFF_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Bus-off status </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_a_n_1gga6efda609ad66be6ae2564b3b4310c362a7b64eb27a85e13d2804e5ea0a964f7a4" prot="public">
          <name>XMC_CAN_NODE_STATUS_LIST_LENGTH_ERROR</name>
          <initializer>= CAN_NODE_NSR_LLE_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>List length error </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_a_n_1gga6efda609ad66be6ae2564b3b4310c362a54b1b1f1d2129479436d046d654fcd47" prot="public">
          <name>XMC_CAN_NODE_STATUS_LIST_OBJECT_ERROR</name>
          <initializer>= CAN_NODE_NSR_LOE_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>List object error </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_a_n_1gga6efda609ad66be6ae2564b3b4310c362ad09ce552548c3886ba6b3f059cd804ea" prot="public">
          <name>XMC_CAN_NODE_STATUS_SUSPENDED_ACK</name>
          <initializer>= CAN_NODE_NSR_SUSACK_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Suspend Acknowledge </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Defines mask value for CAN Node status. Use type <emphasis>XMC_CAN_NODE_STATUS_t</emphasis> for this enum. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="331" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" bodystart="330" bodyend="343"/>
      </memberdef>
      <memberdef kind="enum" id="group___c_a_n_1gab71d557389d7e9579179770028146451" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_CAN_PANCMD_t</name>
        <enumvalue id="group___c_a_n_1ggab71d557389d7e9579179770028146451a0ac07206e3eecb78c8a699677f886959" prot="public">
          <name>XMC_CAN_PANCMD_INIT_LIST</name>
          <initializer>= 1U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Command to initialize a list </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_a_n_1ggab71d557389d7e9579179770028146451a300c34791f76e74f134a5922dc0b6985" prot="public">
          <name>XMC_CAN_PANCMD_STATIC_ALLOCATE</name>
          <initializer>= 2U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Command to activate static allocation </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_a_n_1ggab71d557389d7e9579179770028146451ad91a22a0921cef701aa3f731485b6685" prot="public">
          <name>XMC_CAN_PANCMD_DYNAMIC_ALLOCATE</name>
          <initializer>= 3U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Command to activate dynamic allocation </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_a_n_1ggab71d557389d7e9579179770028146451ad94d8a70c3660da5e58c6696008ea88f" prot="public">
          <name>XMC_CAN_PANCMD_STATIC_INSERT_BEFORE</name>
          <initializer>= 4U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Remove a message object from the list and insert it before a given object. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_a_n_1ggab71d557389d7e9579179770028146451ac382c884822826d8396541909bcd0fe1" prot="public">
          <name>XMC_CAN_PANCMD_DYNAMIC_INSERT_BEFORE</name>
          <initializer>= 5U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Command to activate dynamic allocation </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_a_n_1ggab71d557389d7e9579179770028146451a96935082e757ceb84812a2ff2d15eec8" prot="public">
          <name>XMC_CAN_PANCMD_STATIC_INSERT_BEHIND</name>
          <initializer>= 6U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Command to activate dynamic allocation </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_a_n_1ggab71d557389d7e9579179770028146451a81e6e9e5b0f9c23050835639b9939294" prot="public">
          <name>XMC_CAN_PANCMD_DYNAMIC_INSERT_BEHIND</name>
          <initializer>= 7U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Command to activate dynamic allocation </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Defines CAN module Panel Commands . Use type <emphasis>XMC_CAN_PANCMD_t</emphasis> for this enum. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="197" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" bodystart="196" bodyend="206"/>
      </memberdef>
      <memberdef kind="enum" id="group___c_a_n_1ga33a809a5460e5265b2fa3a5ddff3f337" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_CAN_STATUS_t</name>
        <enumvalue id="group___c_a_n_1gga33a809a5460e5265b2fa3a5ddff3f337a94696aa2505cc9dfdfa2afbe3310edb2" prot="public">
          <name>XMC_CAN_STATUS_SUCCESS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Driver accepted application request </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_a_n_1gga33a809a5460e5265b2fa3a5ddff3f337aac958dcd220626c9d568b816c59e663c" prot="public">
          <name>XMC_CAN_STATUS_ERROR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Returned when unknown error occurred </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_a_n_1gga33a809a5460e5265b2fa3a5ddff3f337a1a5b04feec85ad064574866daa549634" prot="public">
          <name>XMC_CAN_STATUS_BUSY</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Driver is busy and can not handle request </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_a_n_1gga33a809a5460e5265b2fa3a5ddff3f337a2e7ca339ede5036d6f8144720a2ec555" prot="public">
          <name>XMC_CAN_STATUS_MO_NOT_ACCEPTABLE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Message object type not allowed </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_a_n_1gga33a809a5460e5265b2fa3a5ddff3f337aa22fa07338db7142d8f359396ede3e87" prot="public">
          <name>XMC_CAN_STATUS_MO_DISABLED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Returned if Message object is disabled </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Defines the status of CAN, to verify the CAN related API calls. Use type <emphasis>XMC_CAN_STATUS_t</emphasis> for this enum. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="185" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" bodystart="184" bodyend="191"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group___c_a_n_1gaa3657c03a38eb66c07f4b8ce1fc83aeb" prot="public" static="no">
        <type>CAN_NODE_TypeDef</type>
        <definition>typedef CAN_NODE_TypeDef XMC_CAN_NODE_t</definition>
        <argsstring></argsstring>
        <name>XMC_CAN_NODE_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Defines Node Runtime structure.pointer to the Node CAN register </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="555" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" bodystart="555" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___c_a_n_1ga4c8ef1a9555bd8e1658e480944dca81e" prot="public" static="no">
        <type>CAN_GLOBAL_TypeDef</type>
        <definition>typedef CAN_GLOBAL_TypeDef XMC_CAN_t</definition>
        <argsstring></argsstring>
        <name>XMC_CAN_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Defines CAN Global Initialization structure </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="520" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" bodystart="520" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group___c_a_n_1ga6cb88a392202538165609e216665d7ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CAN_AllocateMOtoNodeList</definition>
        <argsstring>(XMC_CAN_t *const obj, const uint8_t node_num, const uint8_t mo_num)</argsstring>
        <name>XMC_CAN_AllocateMOtoNodeList</name>
        <param>
          <type><ref refid="group___c_a_n_1ga4c8ef1a9555bd8e1658e480944dca81e" kindref="member">XMC_CAN_t</ref> *const</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>const uint8_t</type>
          <declname>node_num</declname>
        </param>
        <param>
          <type>const uint8_t</type>
          <declname>mo_num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global registers,refer CAN_NODE_TypeDef for details.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>node_num</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN node number,Range : 0-2 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mo_num</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN Message Object number,Range : 0-63</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Allocates Message Object from free list to node list. Each <emphasis>node_num</emphasis> is linked to one unique list of message objects. A CAN node performs message transfer only with the <emphasis>mo_num</emphasis> message objects that are allocated to the list of the CAN node. It configures PANCTR register.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para>None </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="665" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n_1gae15982ed9fe8b5d5d516bbfd97acac29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CAN_Disable</definition>
        <argsstring>(XMC_CAN_t *const obj)</argsstring>
        <name>XMC_CAN_Disable</name>
        <param>
          <type><ref refid="group___c_a_n_1ga4c8ef1a9555bd8e1658e480944dca81e" kindref="member">XMC_CAN_t</ref> *const</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global registers,refer CAN_NODE_TypeDef for details.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Disables CAN module. In disabled state, no registers of CAN module can be read or written except the CAN_CLC register.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___c_a_n_1gaa86fb69d66595df948327ff91e8822d6" kindref="member">XMC_CAN_Enable()</ref><linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="625" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n_1gaa86fb69d66595df948327ff91e8822d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CAN_Enable</definition>
        <argsstring>(XMC_CAN_t *const obj)</argsstring>
        <name>XMC_CAN_Enable</name>
        <param>
          <type><ref refid="group___c_a_n_1ga4c8ef1a9555bd8e1658e480944dca81e" kindref="member">XMC_CAN_t</ref> *const</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global registers,refer CAN_NODE_TypeDef for details.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Enables CAN module and initializes all CAN registers to reset values. It is required to re-configure desired CAN nodes, before any data transfer. It configures CAN_CLC.DISR bit.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___c_a_n_1gae15982ed9fe8b5d5d516bbfd97acac29" kindref="member">XMC_CAN_Disable()</ref><linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="643" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n_1ga115c3ec73d6cecc0483c71a02524e043" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CAN_EventTrigger</definition>
        <argsstring>(XMC_CAN_t *const obj, const XMC_CAN_NODE_INTERRUPT_TRIGGER_t service_requestr)</argsstring>
        <name>XMC_CAN_EventTrigger</name>
        <param>
          <type><ref refid="group___c_a_n_1ga4c8ef1a9555bd8e1658e480944dca81e" kindref="member">XMC_CAN_t</ref> *const</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>const <ref refid="group___c_a_n_1gacbd6bd74f665b242e800d56b7e1b936d" kindref="member">XMC_CAN_NODE_INTERRUPT_TRIGGER_t</ref></type>
          <declname>service_requestr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global registers,refer CAN_NODE_TypeDef for details.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>service_requestr</parametername>
</parameternamelist>
<parameterdescription>
<para>Interrupt trigger number selection. Refer <ref refid="group___c_a_n_1gacbd6bd74f665b242e800d56b7e1b936d" kindref="member">XMC_CAN_NODE_INTERRUPT_TRIGGER_t</ref> for valid values. Multiple interrupt trigger events can be ORed.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Configures multiple interrupt requests with a single write operation. <emphasis>service_requestr</emphasis> represents single interrupt request or multiple.It configures MITR register.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para>None </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="739" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" bodystart="739" bodyend="742"/>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n_1ga592a44778b57ac9b8741f04453834611" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CAN_FIFO_DisableForeingRemoteRequest</definition>
        <argsstring>(const XMC_CAN_MO_t *const can_mo)</argsstring>
        <name>XMC_CAN_FIFO_DisableForeingRemoteRequest</name>
        <param>
          <type>const <ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref> *const</type>
          <declname>can_mo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>can_mo</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to Message Object structure. Refer <ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref> data structure for details.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Configuration allows to disable the FIFO Foreign Remote Request. TXRQ of message object n is set on reception of a matching Remote Frame. It configures MOFCR.FRREN register.</para>
</simplesect>
<simplesect kind="par"><title>Related API&apos;s:</title><para><ref refid="group___c_a_n_1ga6857e2566613c34371f0ae653da77174" kindref="member">XMC_CAN_FIFO_EnableForeignRemoteRequest()</ref><linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="2011" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" bodystart="2011" bodyend="2014"/>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n_1ga1210ed3b3c4628122ea9f8032a174721" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CAN_FIFO_DisableRemoteMonitoring</definition>
        <argsstring>(const XMC_CAN_MO_t *const can_mo)</argsstring>
        <name>XMC_CAN_FIFO_DisableRemoteMonitoring</name>
        <param>
          <type>const <ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref> *const</type>
          <declname>can_mo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>can_mo</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to Message Object structure. Refer <ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref> data structure for details.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Configuration allows to disable the FIFO Remote Monitoring. This Specifies Identifier, Identifier Extension bit, and DLC of message object n remain unchanged upon the reception of a matching Remote Frame. It configures MOFCR.RMM bit.</para>
</simplesect>
<simplesect kind="par"><title>Related API&apos;s:</title><para><ref refid="group___c_a_n_1ga62a26191fd7093d125769b42b656f4a8" kindref="member">XMC_CAN_FIFO_EnableRemoteMonitoring()</ref><linebreak/>
<linebreak/>
<linebreak/>
 </para>
</simplesect>
<simplesect kind="par"><title>Note:</title><para>Remote monitoring(RMM) applies only to transmit objects and has no effect on receive objects. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="2058" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" bodystart="2058" bodyend="2061"/>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n_1ga09f2577700dc44e3fc9bfc2e6c0792ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CAN_FIFO_DisableSingleDataTransfer</definition>
        <argsstring>(const XMC_CAN_MO_t *const can_mo)</argsstring>
        <name>XMC_CAN_FIFO_DisableSingleDataTransfer</name>
        <param>
          <type>const <ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref> *const</type>
          <declname>can_mo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>can_mo</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to Message Object structure. Refer <ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref> data structure for details.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Configuration allows to disable the Single Data Transfer of the FIFO Message Object, with this configuration bit MSGVAL is not affected. It configures MOFCR.SDT bit.</para>
</simplesect>
<simplesect kind="par"><title>Related API&apos;s:</title><para><ref refid="group___c_a_n_1ga2ea05416157d30fd67cadffcf1cb485d" kindref="member">XMC_CAN_FIFO_EnableSingleDataTransfer()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="2143" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" bodystart="2143" bodyend="2146"/>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n_1ga6857e2566613c34371f0ae653da77174" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CAN_FIFO_EnableForeignRemoteRequest</definition>
        <argsstring>(const XMC_CAN_MO_t *const can_mo)</argsstring>
        <name>XMC_CAN_FIFO_EnableForeignRemoteRequest</name>
        <param>
          <type>const <ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref> *const</type>
          <declname>can_mo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>can_mo</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to Message Object structure. Refer <ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref> data structure for details.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Configuration allows to enable the FIFO Foreign Remote Request. This Specifies TXRQ of the message object referenced by the pointer CUR is set on reception of a matching Remote Frame. It configures MOFCR.FRREN register.</para>
</simplesect>
<simplesect kind="par"><title>Related API&apos;s:</title><para><ref refid="group___c_a_n_1ga592a44778b57ac9b8741f04453834611" kindref="member">XMC_CAN_FIFO_DisableForeingRemoteRequest()</ref><linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="1991" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" bodystart="1991" bodyend="1994"/>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n_1ga62a26191fd7093d125769b42b656f4a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CAN_FIFO_EnableRemoteMonitoring</definition>
        <argsstring>(const XMC_CAN_MO_t *const can_mo)</argsstring>
        <name>XMC_CAN_FIFO_EnableRemoteMonitoring</name>
        <param>
          <type>const <ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref> *const</type>
          <declname>can_mo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>can_mo</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to Message Object structure. Refer <ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref> data structure for details.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Configuration allows to enable the FIFO Remote Monitoring. This Specifies identifier, IDE(Identifier Extension) bit, and DLC of a matching Remote Frame are copied to transmit object n in order to monitor incoming Remote Frames. It configures MOFCR.RMM bit.</para>
</simplesect>
<simplesect kind="par"><title>Related API&apos;s:</title><para><ref refid="group___c_a_n_1ga1210ed3b3c4628122ea9f8032a174721" kindref="member">XMC_CAN_FIFO_DisableRemoteMonitoring()</ref><linebreak/>
<linebreak/>
<linebreak/>
 </para>
</simplesect>
<simplesect kind="par"><title>Note:</title><para>Remote monitoring(RMM) applies only to transmit objects and has no effect on receive objects. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="2034" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" bodystart="2034" bodyend="2037"/>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n_1ga2ea05416157d30fd67cadffcf1cb485d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CAN_FIFO_EnableSingleDataTransfer</definition>
        <argsstring>(const XMC_CAN_MO_t *const can_mo)</argsstring>
        <name>XMC_CAN_FIFO_EnableSingleDataTransfer</name>
        <param>
          <type>const <ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref> *const</type>
          <declname>can_mo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>can_mo</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to Message Object structure. Refer <ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref> data structure for details.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Configuration allows to enable the Single Data Transfer of the FIFO Message Object. If SDT = 1 and message object n is not a FIFO base object, then MSGVAL is reset when this object has taken part in a successful data transfer (receive or transmit). If SDT = 1 and message object n is a FIFO base object, then MSGVAL is reset when the pointer to the current object CUR reaches the value of SEL in the FIFO/Gateway Pointer Register. It configures MOFCR.SDT bit.</para>
</simplesect>
<simplesect kind="par"><title>Related API&apos;s:</title><para><ref refid="group___c_a_n_1ga09f2577700dc44e3fc9bfc2e6c0792ae" kindref="member">XMC_CAN_FIFO_DisableSingleDataTransfer()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="2123" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" bodystart="2123" bodyend="2126"/>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n_1ga3b77055ea43fb0ebb071fae155feb90b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t XMC_CAN_FIFO_GetCurrentMO</definition>
        <argsstring>(const XMC_CAN_MO_t *const can_mo)</argsstring>
        <name>XMC_CAN_FIFO_GetCurrentMO</name>
        <param>
          <type>const <ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref> *const</type>
          <declname>can_mo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>can_mo</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to Message Object structure. Refer <ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref> data structure for details.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint8_t Current Message Object Number. Range:0-63</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Returns the current FIFO Message Object,points to the actual target object within a FIFO/Gateway structure.</para>
</simplesect>
<simplesect kind="par"><title>Related API&apos;s:</title><para>None </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="2100" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" bodystart="2100" bodyend="2103"/>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n_1ga6300b5ce35687e006890eb0c968a78af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CAN_FIFO_SetSELMO</definition>
        <argsstring>(const XMC_CAN_MO_t *const can_mo, const uint8_t select_pointer)</argsstring>
        <name>XMC_CAN_FIFO_SetSELMO</name>
        <param>
          <type>const <ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref> *const</type>
          <declname>can_mo</declname>
        </param>
        <param>
          <type>const uint8_t</type>
          <declname>select_pointer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>can_mo</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to Message Object structure. Refer <ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref> data structure for details. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>select_pointer</parametername>
</parameternamelist>
<parameterdescription>
<para>Selected Message Object number. Range:0-63</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Set Object Select Pointer. If the current pointer CUR of FIFO base object becomes equal <emphasis>select_pointer</emphasis>, a FIFO overflow interrupt request is generated. Used for FIFO monitoring purpose.</para>
</simplesect>
<simplesect kind="par"><title>Related API&apos;s:</title><para>None </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="2079" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" bodystart="2079" bodyend="2083"/>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n_1gabec17bceec62048721c0e71c4157b8b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CAN_GATEWAY_InitDesObject</definition>
        <argsstring>(const XMC_CAN_MO_t *const can_mo)</argsstring>
        <name>XMC_CAN_GATEWAY_InitDesObject</name>
        <param>
          <type>const <ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref> *const</type>
          <declname>can_mo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>can_mo</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to Message Object structure. Refer <ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref> data structure for details.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Configures the Gateway destination object. The Gateway Mode <emphasis>can_gateway</emphasis> makes it possible to establish an automatic information transfer between two independent CAN buses without CPU interaction. Please refer reference manual <bold>GatewayMode</bold> for more info.</para>
</simplesect>
<simplesect kind="par"><title>Related API&apos;s:</title><para>None </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="2258" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" bodystart="2258" bodyend="2262"/>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n_1ga732a6fda09cb70f66f05ca58f8d8eeab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CAN_GATEWAY_InitSourceObject</definition>
        <argsstring>(const XMC_CAN_MO_t *const can_mo, const XMC_CAN_GATEWAY_CONFIG_t can_gateway)</argsstring>
        <name>XMC_CAN_GATEWAY_InitSourceObject</name>
        <param>
          <type>const <ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref> *const</type>
          <declname>can_mo</declname>
        </param>
        <param>
          <type>const <ref refid="struct_x_m_c___c_a_n___g_a_t_e_w_a_y___c_o_n_f_i_g__t" kindref="compound">XMC_CAN_GATEWAY_CONFIG_t</ref></type>
          <declname>can_gateway</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>can_mo</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to Message Object structure. Refer <ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref> data structure for details. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>can_gateway</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN gateway configuration data structure. Refer <ref refid="struct_x_m_c___c_a_n___g_a_t_e_w_a_y___c_o_n_f_i_g__t" kindref="compound">XMC_CAN_GATEWAY_CONFIG_t</ref> data structure for details.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Configures the Gateway source object. The Gateway Mode <emphasis>can_gateway</emphasis> makes it possible to establish an automatic information transfer between two independent CAN buses without CPU interaction. Please refer reference manual <bold>GatewayMode</bold> for more info.</para>
</simplesect>
<simplesect kind="par"><title>Related API&apos;s:</title><para>None </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="2239" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n_1gaf4303398a9172e5447e43adf375b8382" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t XMC_CAN_GetBaudrateClockFrequency</definition>
        <argsstring>(XMC_CAN_t *const obj)</argsstring>
        <name>XMC_CAN_GetBaudrateClockFrequency</name>
        <param>
          <type><ref refid="group___c_a_n_1ga4c8ef1a9555bd8e1658e480944dca81e" kindref="member">XMC_CAN_t</ref> *const</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global registers,refer CAN_NODE_TypeDef for details.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>baudrate generator input clock frequency</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Gets CAN baudrate generator input clock frequency </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="805" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n_1ga342c01ea7ab6cd06a1ed0bb76447bb81" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___c_a_n_1gaa70821b48b35c15555d81a4c81fceb80" kindref="member">XMC_CAN_CANCLKSRC_t</ref></type>
        <definition>XMC_CAN_CANCLKSRC_t XMC_CAN_GetBaudrateClockSource</definition>
        <argsstring>(XMC_CAN_t *const obj)</argsstring>
        <name>XMC_CAN_GetBaudrateClockSource</name>
        <param>
          <type><ref refid="group___c_a_n_1ga4c8ef1a9555bd8e1658e480944dca81e" kindref="member">XMC_CAN_t</ref> *const</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global registers,refer CAN_NODE_TypeDef for details.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Baudrate generator clock source</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Returns CAN baudrate generator clock source </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="783" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n_1gaf19f8e41011ebe7e77b4662cb81e4332" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t XMC_CAN_GetClockFrequency</definition>
        <argsstring>(XMC_CAN_t *const obj)</argsstring>
        <name>XMC_CAN_GetClockFrequency</name>
        <param>
          <type><ref refid="group___c_a_n_1ga4c8ef1a9555bd8e1658e480944dca81e" kindref="member">XMC_CAN_t</ref> *const</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global registers,refer CAN_NODE_TypeDef for details.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>fCAN clock frequency</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Gets CAN base clock frequency </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="817" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n_1gaee4a5b343f44ffbde1ef26639eb84313" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t XMC_CAN_GetListBegin</definition>
        <argsstring>(XMC_CAN_t *const obj, uint8_t list_idx)</argsstring>
        <name>XMC_CAN_GetListBegin</name>
        <param>
          <type><ref refid="group___c_a_n_1ga4c8ef1a9555bd8e1658e480944dca81e" kindref="member">XMC_CAN_t</ref> *const</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>list_idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer pointing to XMC_CAN Global Initialization structure </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>list_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>List index</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Object index of the first message object in the list list_idx.</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>This function returns object index of the first message object in the list list_idx. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="2302" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" bodystart="2302" bodyend="2305"/>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n_1ga6c3c7f61d0d6e075977ee7473f460df6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t XMC_CAN_GetListSize</definition>
        <argsstring>(XMC_CAN_t *const obj, uint8_t list_idx)</argsstring>
        <name>XMC_CAN_GetListSize</name>
        <param>
          <type><ref refid="group___c_a_n_1ga4c8ef1a9555bd8e1658e480944dca81e" kindref="member">XMC_CAN_t</ref> *const</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>list_idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer pointing to XMC_CAN Global Initialization structure </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>list_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>List index</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of message objects allocated to list list_idx</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>This function returns number of message objects allocated to list list_idx </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="2316" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" bodystart="2316" bodyend="2319"/>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n_1ga1cec2fa8beb70934e400fc96c4ffe50d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CAN_Init</definition>
        <argsstring>(XMC_CAN_t *const obj, XMC_CAN_CANCLKSRC_t clksrc, uint32_t can_frequency)</argsstring>
        <name>XMC_CAN_Init</name>
        <param>
          <type><ref refid="group___c_a_n_1ga4c8ef1a9555bd8e1658e480944dca81e" kindref="member">XMC_CAN_t</ref> *const</type>
          <declname>obj</declname>
        </param>
        <param>
          <type><ref refid="group___c_a_n_1gaa70821b48b35c15555d81a4c81fceb80" kindref="member">XMC_CAN_CANCLKSRC_t</ref></type>
          <declname>clksrc</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>can_frequency</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global registers,refer CAN_NODE_TypeDef for details.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>clksrc</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN module frequency clock source. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>can_frequency</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN module frequency(fCAN). Max. value: Max. clock source frequency, i.e. if using fOHP and using a XTAL of 20MHz then fCAN max. value is 20MHz. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Use clksrc parameter only for XMC1400 series and XMC47/4800 series projects, otherwise omit this parameter.</para>
</simplesect>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Configures clock rate of the module timer clock fCAN. Altering CAN module <emphasis>can_frequency</emphasis> shall affects baud rate, call <ref refid="group___c_a_n_1ga237cbd25e96515d2d1207fe93ae6063a" kindref="member">XMC_CAN_NODE_NominalBitTimeConfigure()</ref> or <ref refid="group___c_a_n_1ga590a52441b24c5877d15271f16dd7a12" kindref="member">XMC_CAN_NODE_NominalBitTimeConfigureEx()</ref> to configure baud rate for current CAN frequency. It configures FDR register.</para>
</simplesect>
<simplesect kind="note"><para>Use <ref refid="group___c_a_n_1gaad8c21b97d426234e799f7a1895907f6" kindref="member">XMC_CAN_InitEx()</ref> for new projects. <ref refid="group___c_a_n_1ga1cec2fa8beb70934e400fc96c4ffe50d" kindref="member">XMC_CAN_Init()</ref> is kept for backward compatibility reasons.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___c_a_n_1ga237cbd25e96515d2d1207fe93ae6063a" kindref="member">XMC_CAN_NODE_NominalBitTimeConfigure()</ref>, <ref refid="group___c_a_n_1ga590a52441b24c5877d15271f16dd7a12" kindref="member">XMC_CAN_NODE_NominalBitTimeConfigureEx()</ref>, <ref refid="group___c_a_n_1gaad8c21b97d426234e799f7a1895907f6" kindref="member">XMC_CAN_InitEx()</ref><linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="842" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n_1gaad8c21b97d426234e799f7a1895907f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t XMC_CAN_InitEx</definition>
        <argsstring>(XMC_CAN_t *const obj, XMC_CAN_CANCLKSRC_t clksrc, uint32_t can_frequency)</argsstring>
        <name>XMC_CAN_InitEx</name>
        <param>
          <type><ref refid="group___c_a_n_1ga4c8ef1a9555bd8e1658e480944dca81e" kindref="member">XMC_CAN_t</ref> *const</type>
          <declname>obj</declname>
        </param>
        <param>
          <type><ref refid="group___c_a_n_1gaa70821b48b35c15555d81a4c81fceb80" kindref="member">XMC_CAN_CANCLKSRC_t</ref></type>
          <declname>clksrc</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>can_frequency</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global registers,refer CAN_NODE_TypeDef for details.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>clksrc</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN module frequency clock source </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>can_frequency</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN module frequency(fCAN). The can_frequency shall be an integer divisor of the CAN clock source frequency (fPERI/fMCLK or fOHP) and it should be selected such that if fulfills the minimum operating frequency specified in the clock control section of the reference manual. In addition the can_frequency shall be an integer multiple of the baudrate. Max. value: Max. clock source frequency, i.e. if using fOHP and using a XTAL of 20MHz then fCAN max. value is 20MHz.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Actual frequency</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Similar to <ref refid="group___c_a_n_1ga1cec2fa8beb70934e400fc96c4ffe50d" kindref="member">XMC_CAN_Init()</ref> configures clock rate of the module timer clock fCAN. The difference being that only the normal divider is used to avoid jitter. In addition the actual achievable frequency is returned. </para>
</simplesect>
<simplesect kind="note"><para>Use <ref refid="group___c_a_n_1gaad8c21b97d426234e799f7a1895907f6" kindref="member">XMC_CAN_InitEx()</ref> for new projects. <ref refid="group___c_a_n_1ga1cec2fa8beb70934e400fc96c4ffe50d" kindref="member">XMC_CAN_Init()</ref> is kept for backward compatibility reasons.</para>
</simplesect>
Altering CAN module <emphasis>can_frequency</emphasis> shall affects baud rate, call <ref refid="group___c_a_n_1ga590a52441b24c5877d15271f16dd7a12" kindref="member">XMC_CAN_NODE_NominalBitTimeConfigureEx()</ref> to configure baud rate for current CAN frequency. It configures FDR register.</para>
<para><simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___c_a_n_1ga237cbd25e96515d2d1207fe93ae6063a" kindref="member">XMC_CAN_NODE_NominalBitTimeConfigure()</ref>, <ref refid="group___c_a_n_1ga590a52441b24c5877d15271f16dd7a12" kindref="member">XMC_CAN_NODE_NominalBitTimeConfigureEx()</ref><linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="772" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n_1ga52fe6641459f69df4dba72f8a0c13c0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool XMC_CAN_IsListEmpty</definition>
        <argsstring>(XMC_CAN_t *const obj, uint8_t list_idx)</argsstring>
        <name>XMC_CAN_IsListEmpty</name>
        <param>
          <type><ref refid="group___c_a_n_1ga4c8ef1a9555bd8e1658e480944dca81e" kindref="member">XMC_CAN_t</ref> *const</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>list_idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer pointing to XMC_CAN Global Initialization structure </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>list_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>List index</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>List empty status.</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>This function returns false in case at least one message object is allocated to list list_idx. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="2288" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" bodystart="2288" bodyend="2291"/>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n_1ga8248647c78ac9309f75f4811dda4e67c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool XMC_CAN_IsPanelControlReady</definition>
        <argsstring>(XMC_CAN_t *const obj)</argsstring>
        <name>XMC_CAN_IsPanelControlReady</name>
        <param>
          <type><ref refid="group___c_a_n_1ga4c8ef1a9555bd8e1658e480944dca81e" kindref="member">XMC_CAN_t</ref> *const</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global registers,refer CAN_NODE_TypeDef for details.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Ready status of list controller</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Returns ready status of the list controller</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___c_a_n_1ga461411e88974c50a6e7b36e73c9fc56e" kindref="member">XMC_CAN_PanelControl()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="681" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" bodystart="681" bodyend="684"/>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n_1ga66d6f89bab2fab4393f1fb083dfd6998" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CAN_MO_AcceptOnlyMatchingIDE</definition>
        <argsstring>(XMC_CAN_MO_t *const can_mo)</argsstring>
        <name>XMC_CAN_MO_AcceptOnlyMatchingIDE</name>
        <param>
          <type><ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref> *const</type>
          <declname>can_mo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>can_mo</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to Message Object structure. Refer <ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref> data structure for details.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Message object receives frames only with matching IDE bit.</para>
</simplesect>
<simplesect kind="par"><title>Related API&apos;s:</title><para><ref refid="group___c_a_n_1ga4a137b8f0c2ac3c5b5cd09e2ca60d385" kindref="member">XMC_CAN_MO_AcceptStandardAndExtendedID()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="1905" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" bodystart="1905" bodyend="1909"/>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n_1ga4a137b8f0c2ac3c5b5cd09e2ca60d385" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CAN_MO_AcceptStandardAndExtendedID</definition>
        <argsstring>(XMC_CAN_MO_t *const can_mo)</argsstring>
        <name>XMC_CAN_MO_AcceptStandardAndExtendedID</name>
        <param>
          <type><ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref> *const</type>
          <declname>can_mo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>can_mo</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to Message Object structure. Refer <ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref> data structure for details.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Message object accepts the reception of both, standard and extended frames.</para>
</simplesect>
<simplesect kind="par"><title>Related API&apos;s:</title><para><ref refid="group___c_a_n_1ga66d6f89bab2fab4393f1fb083dfd6998" kindref="member">XMC_CAN_MO_AcceptOnlyMatchingIDE()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="1925" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" bodystart="1925" bodyend="1929"/>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n_1ga3a06733578e85ec9be83df3ca65c82bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CAN_MO_Config</definition>
        <argsstring>(const XMC_CAN_MO_t *const can_mo)</argsstring>
        <name>XMC_CAN_MO_Config</name>
        <param>
          <type>const <ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref> *const</type>
          <declname>can_mo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>can_mo</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to Message Object structure. Refer <ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref> data structure for details.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Initializes CAN message object. Initialization includes configuring Message Object identifier type, Message Object identifier value, Message Object type, and transfer requests. It configures FDR register.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para>None </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="861" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n_1ga5a7a77e7d7d29c17ca87ffbe3245f76d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CAN_MO_DataLengthCode</definition>
        <argsstring>(const XMC_CAN_MO_t *const can_mo, const uint8_t data_length_code)</argsstring>
        <name>XMC_CAN_MO_DataLengthCode</name>
        <param>
          <type>const <ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref> *const</type>
          <declname>can_mo</declname>
        </param>
        <param>
          <type>const uint8_t</type>
          <declname>data_length_code</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>can_mo</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to Message Object structure. Refer <ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref> data structure for details. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data_length_code</parametername>
</parameternamelist>
<parameterdescription>
<para>transfer data length. Range:0-8</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Configures CAN Message Object Data Length Code. It configures MOFCR register.</para>
</simplesect>
<simplesect kind="par"><title>Related API&apos;s:</title><para>None </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="1778" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" bodystart="1778" bodyend="1782"/>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n_1gae3aae4d86c63769fa898ea11e2f0cd87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CAN_MO_DisableEvent</definition>
        <argsstring>(const XMC_CAN_MO_t *const can_mo, const uint32_t event)</argsstring>
        <name>XMC_CAN_MO_DisableEvent</name>
        <param>
          <type>const <ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref> *const</type>
          <declname>can_mo</declname>
        </param>
        <param>
          <type>const uint32_t</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>can_mo</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to Message Object structure. Refer <ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref> data structure for details. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN node Message Object event selection. Refer <ref refid="group___c_a_n_1ga4a4368056ee3b69f1c38f5fa41687704" kindref="member">XMC_CAN_MO_EVENT_t</ref> for details.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Disable CAN Message Object events. <emphasis>event</emphasis> can be ORed multiple Message Object events. It configures MOFCR register.</para>
</simplesect>
<simplesect kind="par"><title>Related API&apos;s:</title><para><ref refid="group___c_a_n_1ga28a3afd0294c21c2065db2e312a6ebe5" kindref="member">XMC_CAN_MO_EnableEvent()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="1717" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" bodystart="1717" bodyend="1721"/>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n_1ga776a1a1c02708ff6aece5a2beb32953b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CAN_MO_DisableSingleTransmitTrial</definition>
        <argsstring>(const XMC_CAN_MO_t *const can_mo)</argsstring>
        <name>XMC_CAN_MO_DisableSingleTransmitTrial</name>
        <param>
          <type>const <ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref> *const</type>
          <declname>can_mo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>can_mo</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to Message Object structure. Refer <ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref> data structure for details.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Disable the single transmit trial(STT). In STT,TXRQ is cleared on transmission start of message object n. Thus, no transmission retry is performed in case of transmission failure. It configures MOFCR.STT bit.</para>
</simplesect>
<simplesect kind="par"><title>Related API&apos;s:</title><para><ref refid="group___c_a_n_1ga4f01b3116be459e384c3925b44fc2ec6" kindref="member">XMC_CAN_MO_EnableSingleTransmitTrial()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="1758" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" bodystart="1758" bodyend="1761"/>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n_1ga28a3afd0294c21c2065db2e312a6ebe5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CAN_MO_EnableEvent</definition>
        <argsstring>(const XMC_CAN_MO_t *const can_mo, const uint32_t event)</argsstring>
        <name>XMC_CAN_MO_EnableEvent</name>
        <param>
          <type>const <ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref> *const</type>
          <declname>can_mo</declname>
        </param>
        <param>
          <type>const uint32_t</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>can_mo</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to Message Object structure. Refer <ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref> data structure for details. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN node Message Object event selection. Refer <ref refid="group___c_a_n_1ga4a4368056ee3b69f1c38f5fa41687704" kindref="member">XMC_CAN_MO_EVENT_t</ref> for details.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Enable CAN Message Object events. <emphasis>event</emphasis> can be ORed multiple Message Object events. It configures MOFCR register.</para>
</simplesect>
<simplesect kind="par"><title>Related API&apos;s:</title><para><ref refid="group___c_a_n_1gae3aae4d86c63769fa898ea11e2f0cd87" kindref="member">XMC_CAN_MO_DisableEvent()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="1695" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" bodystart="1695" bodyend="1699"/>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n_1ga4f01b3116be459e384c3925b44fc2ec6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CAN_MO_EnableSingleTransmitTrial</definition>
        <argsstring>(const XMC_CAN_MO_t *const can_mo)</argsstring>
        <name>XMC_CAN_MO_EnableSingleTransmitTrial</name>
        <param>
          <type>const <ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref> *const</type>
          <declname>can_mo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>can_mo</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to Message Object structure. Refer <ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref> data structure for details.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Enable the single transmit trial(STT). In STT,TXRQ is cleared on transmission start of message object n. Thus, no transmission retry is performed in case of transmission failure. It configures MOFCR.STT bit.</para>
</simplesect>
<simplesect kind="par"><title>Related API&apos;s:</title><para><ref refid="group___c_a_n_1ga776a1a1c02708ff6aece5a2beb32953b" kindref="member">XMC_CAN_MO_DisableSingleTransmitTrial()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="1738" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" bodystart="1738" bodyend="1741"/>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n_1ga7850274ffd707c7eedd0f5799ac04948" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t XMC_CAN_MO_GetAcceptanceMask</definition>
        <argsstring>(const XMC_CAN_MO_t *const can_mo)</argsstring>
        <name>XMC_CAN_MO_GetAcceptanceMask</name>
        <param>
          <type>const <ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref> *const</type>
          <declname>can_mo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>can_mo</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to Message Object structure. Refer <ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref> data structure for details.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Acceptance mask</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Gets the acceptance mask for the CAN MO.</para>
</simplesect>
<simplesect kind="par"><title>Related API&apos;s:</title><para><ref refid="group___c_a_n_1gaab905544dbd9ba9ede00d5500e9c38f7" kindref="member">XMC_CAN_MO_SetAcceptanceMask()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="1872" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n_1ga0d5ca295b82bcac10c8fb2a570b446f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t XMC_CAN_MO_GetDataLengthCode</definition>
        <argsstring>(const XMC_CAN_MO_t *const can_mo)</argsstring>
        <name>XMC_CAN_MO_GetDataLengthCode</name>
        <param>
          <type>const <ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref> *const</type>
          <declname>can_mo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>can_mo</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to Message Object structure. Refer <ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref> data structure for details.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Data length code</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Gets the Data Length Code.</para>
</simplesect>
<simplesect kind="par"><title>Related API&apos;s:</title><para><ref refid="group___c_a_n_1ga2441a13da1f6ee2235b94c5a6ba522ed" kindref="member">XMC_CAN_MO_SetDataLengthCode()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="1820" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" bodystart="1820" bodyend="1823"/>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n_1ga3947c77efb8efc1eab0af01e20418f75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t XMC_CAN_MO_GetIdentifier</definition>
        <argsstring>(const XMC_CAN_MO_t *const can_mo)</argsstring>
        <name>XMC_CAN_MO_GetIdentifier</name>
        <param>
          <type>const <ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref> *const</type>
          <declname>can_mo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>can_mo</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to Message Object structure. Refer <ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref> data structure for details.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>CAN MO identifier</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Gets the Identifier of the MO</para>
</simplesect>
<simplesect kind="par"><title>Related API&apos;s:</title><para><ref refid="group___c_a_n_1ga54679df9afbdddaf68ffd780ced427d7" kindref="member">XMC_CAN_MO_SetIdentifier()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="1856" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n_1ga19119baa3f77d51a0d28c9342efb1d7d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CAN_MO_GetMessageObject</definition>
        <argsstring>(XMC_CAN_MO_t *const can_mo, uint8_t mo_idx)</argsstring>
        <name>XMC_CAN_MO_GetMessageObject</name>
        <param>
          <type><ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref> *const</type>
          <declname>can_mo</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>mo_idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>can_mo</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to Message Object structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mo_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Message object index.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None.</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>This function updates the hardware message object pointer to message object with index mo_idx </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="2330" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" bodystart="2330" bodyend="2338"/>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n_1ga70d6a7847ba129346e515c269e4770aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t XMC_CAN_MO_GetNextMessageObjectIdx</definition>
        <argsstring>(XMC_CAN_MO_t *can_mo)</argsstring>
        <name>XMC_CAN_MO_GetNextMessageObjectIdx</name>
        <param>
          <type><ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref> *</type>
          <declname>can_mo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>can_mo</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to Message Object structure.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>object index of next linked message object.</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>This function returns the object index of next linked message object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="2348" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" bodystart="2348" bodyend="2351"/>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n_1ga34acd408a7a99294587a5c604e1c9918" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t XMC_CAN_MO_GetStatus</definition>
        <argsstring>(const XMC_CAN_MO_t *const can_mo)</argsstring>
        <name>XMC_CAN_MO_GetStatus</name>
        <param>
          <type>const <ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref> *const</type>
          <declname>can_mo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>can_mo</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to Message Object structure. Refer <ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref> data structure for details.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint32_t Current Message Object status.</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Returns Message Object status, that indicates message object transfer status and message object list status information such as the number of the current message object predecessor and successor message object, as well as the list number to which the message object is assigned.</para>
</simplesect>
<simplesect kind="par"><title>Related API&apos;s:</title><para>None </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="1634" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" bodystart="1634" bodyend="1637"/>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n_1ga303ca6355a2c8b8858eaa016508b7255" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___c_a_n_1ga33a809a5460e5265b2fa3a5ddff3f337" kindref="member">XMC_CAN_STATUS_t</ref></type>
        <definition>XMC_CAN_STATUS_t XMC_CAN_MO_Receive</definition>
        <argsstring>(XMC_CAN_MO_t *can_mo)</argsstring>
        <name>XMC_CAN_MO_Receive</name>
        <param>
          <type><ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref> *</type>
          <declname>can_mo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>can_mo</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to Message Object structure. Refer <ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref> data structure for details.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>XMC_CAN_STATUS_t CAN Node status. Refer <ref refid="group___c_a_n_1ga33a809a5460e5265b2fa3a5ddff3f337" kindref="member">XMC_CAN_STATUS_t</ref> structure for details.</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Reads the Message Object data bytes, into message pointer passed as input parameter <emphasis>can_mo</emphasis>. can_data[0] of can_mo holds lower 4 bytes, can_data[1] of can_mo holds higher 4 bytes.</para>
</simplesect>
<simplesect kind="par"><title>Related API&apos;s:</title><para>None </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="1578" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n_1gaa4af5d86b90db9f02681e7059eadfdda" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___c_a_n_1ga33a809a5460e5265b2fa3a5ddff3f337" kindref="member">XMC_CAN_STATUS_t</ref></type>
        <definition>XMC_CAN_STATUS_t XMC_CAN_MO_ReceiveData</definition>
        <argsstring>(XMC_CAN_MO_t *can_mo)</argsstring>
        <name>XMC_CAN_MO_ReceiveData</name>
        <param>
          <type><ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref> *</type>
          <declname>can_mo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>can_mo</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to Message Object structure. Refer <ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref> data structure for details.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>XMC_CAN_STATUS_t CAN Node status. Refer <ref refid="group___c_a_n_1ga33a809a5460e5265b2fa3a5ddff3f337" kindref="member">XMC_CAN_STATUS_t</ref> structure for details.</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Reads the Message Object data bytes, into message pointer passed as input parameter <emphasis>can_mo</emphasis>. can_data[0] of can_mo holds lower 4 bytes, can_data[1] of can_mo holds higher 4 bytes.</para>
</simplesect>
<simplesect kind="par"><title>Related API&apos;s:</title><para>None </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="1594" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n_1gab88ba4b28db7404e7e3a271c1e585905" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CAN_MO_ResetStatus</definition>
        <argsstring>(const XMC_CAN_MO_t *const can_mo, const uint32_t mask)</argsstring>
        <name>XMC_CAN_MO_ResetStatus</name>
        <param>
          <type>const <ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref> *const</type>
          <declname>can_mo</declname>
        </param>
        <param>
          <type>const uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>can_mo</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to Message Object structure. Refer <ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref> data structure for details. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Message Object set status selection. Refer <ref refid="group___c_a_n_1ga117048d5267011245c4ff40047d00c64" kindref="member">XMC_CAN_MO_RESET_STATUS_t</ref> for details. Multiple enums can be ORed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Clears Message Object interrupt events. It configures MOCTR register.</para>
</simplesect>
<simplesect kind="par"><title>Related API&apos;s:</title><para>None </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="1674" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" bodystart="1674" bodyend="1677"/>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n_1gaab905544dbd9ba9ede00d5500e9c38f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CAN_MO_SetAcceptanceMask</definition>
        <argsstring>(XMC_CAN_MO_t *const can_mo, const uint32_t can_id_mask)</argsstring>
        <name>XMC_CAN_MO_SetAcceptanceMask</name>
        <param>
          <type><ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref> *const</type>
          <declname>can_mo</declname>
        </param>
        <param>
          <type>const uint32_t</type>
          <declname>can_id_mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>can_mo</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to Message Object structure. Refer <ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref> data structure for details. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>can_id_mask</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN MO acceptance mask.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Sets the acceptance mask of the MO</para>
</simplesect>
<simplesect kind="par"><title>Related API&apos;s:</title><para><ref refid="group___c_a_n_1ga7850274ffd707c7eedd0f5799ac04948" kindref="member">XMC_CAN_MO_GetAcceptanceMask()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="1889" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n_1ga2441a13da1f6ee2235b94c5a6ba522ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CAN_MO_SetDataLengthCode</definition>
        <argsstring>(XMC_CAN_MO_t *const can_mo, const uint8_t data_length_code)</argsstring>
        <name>XMC_CAN_MO_SetDataLengthCode</name>
        <param>
          <type><ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref> *const</type>
          <declname>can_mo</declname>
        </param>
        <param>
          <type>const uint8_t</type>
          <declname>data_length_code</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>can_mo</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to Message Object structure. Refer <ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref> data structure for details. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data_length_code</parametername>
</parameternamelist>
<parameterdescription>
<para>transfer data length. Range:0-8</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Configures CAN Message Object Data Length Code. It configures MOFCR register.</para>
</simplesect>
<simplesect kind="par"><title>Related API&apos;s:</title><para><ref refid="group___c_a_n_1ga0d5ca295b82bcac10c8fb2a570b446f0" kindref="member">XMC_CAN_MO_GetDataLengthCode()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="1799" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" bodystart="1799" bodyend="1804"/>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n_1gafe77c3e9f8d0fcde86f2ac020f0d5493" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CAN_MO_SetEventNodePointer</definition>
        <argsstring>(const XMC_CAN_MO_t *const can_mo, const XMC_CAN_MO_POINTER_EVENT_t can_mo_ptr_int, const uint32_t service_request)</argsstring>
        <name>XMC_CAN_MO_SetEventNodePointer</name>
        <param>
          <type>const <ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref> *const</type>
          <declname>can_mo</declname>
        </param>
        <param>
          <type>const <ref refid="group___c_a_n_1ga5779e98919b963f0073cb04a129cb581" kindref="member">XMC_CAN_MO_POINTER_EVENT_t</ref></type>
          <declname>can_mo_ptr_int</declname>
        </param>
        <param>
          <type>const uint32_t</type>
          <declname>service_request</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>can_mo</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to Message Object structure. Refer <ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref> data structure for details. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>can_mo_ptr_int</parametername>
</parameternamelist>
<parameterdescription>
<para>Message Object event node pointer selection. Refer <ref refid="group___c_a_n_1ga5779e98919b963f0073cb04a129cb581" kindref="member">XMC_CAN_MO_POINTER_EVENT_t</ref> structure for valid values. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>service_request</parametername>
</parameternamelist>
<parameterdescription>
<para>interrupt output line of multiCAN module.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Configures Message Object event node pointer with <emphasis>service_request</emphasis> number. It configures MOIPR register.</para>
</simplesect>
<simplesect kind="par"><title>Related API&apos;s:</title><para>None </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
<para>&lt; Message Object event mask </para>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="1611" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" bodystart="1611" bodyend="1617"/>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n_1ga690a85f842a9fddc61c9d2bf0370d308" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CAN_MO_SetExtendedID</definition>
        <argsstring>(XMC_CAN_MO_t *const can_mo)</argsstring>
        <name>XMC_CAN_MO_SetExtendedID</name>
        <param>
          <type><ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref> *const</type>
          <declname>can_mo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>can_mo</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to Message Object structure. Refer <ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref> data structure for details.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Message object handles extended frames with 29-bit identifier.</para>
</simplesect>
<simplesect kind="par"><title>Related API&apos;s:</title><para><ref refid="group___c_a_n_1ga3c8e0550bdb85767ee0d984dd50b9b9e" kindref="member">XMC_CAN_MO_SetStandardID()</ref></para>
</simplesect>
<simplesect kind="par"><title>Note:</title><para>After setting the identifier type user has to set the identifier value by using <ref refid="group___c_a_n_1ga54679df9afbdddaf68ffd780ced427d7" kindref="member">XMC_CAN_MO_SetIdentifier()</ref> API. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="1970" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" bodystart="1970" bodyend="1974"/>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n_1ga54679df9afbdddaf68ffd780ced427d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CAN_MO_SetIdentifier</definition>
        <argsstring>(XMC_CAN_MO_t *const can_mo, const uint32_t can_identifier)</argsstring>
        <name>XMC_CAN_MO_SetIdentifier</name>
        <param>
          <type><ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref> *const</type>
          <declname>can_mo</declname>
        </param>
        <param>
          <type>const uint32_t</type>
          <declname>can_identifier</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>can_mo</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to Message Object structure. Refer <ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref> data structure for details. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>can_identifier</parametername>
</parameternamelist>
<parameterdescription>
<para>Identifier.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Configures CAN Message Object Identifier. It configures MOAR register.</para>
</simplesect>
<simplesect kind="par"><title>Related API&apos;s:</title><para><ref refid="group___c_a_n_1ga3947c77efb8efc1eab0af01e20418f75" kindref="member">XMC_CAN_MO_GetIdentifier()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="1840" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n_1ga3c8e0550bdb85767ee0d984dd50b9b9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CAN_MO_SetStandardID</definition>
        <argsstring>(XMC_CAN_MO_t *const can_mo)</argsstring>
        <name>XMC_CAN_MO_SetStandardID</name>
        <param>
          <type><ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref> *const</type>
          <declname>can_mo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>can_mo</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to Message Object structure. Refer <ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref> data structure for details.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Message object handles standard frames with 11-bit identifier.</para>
</simplesect>
<simplesect kind="par"><title>Related API&apos;s:</title><para><ref refid="group___c_a_n_1ga690a85f842a9fddc61c9d2bf0370d308" kindref="member">XMC_CAN_MO_SetExtendedID()</ref></para>
</simplesect>
<simplesect kind="par"><title>Note:</title><para>After setting the identifier type user has to set the identifier value by using <ref refid="group___c_a_n_1ga54679df9afbdddaf68ffd780ced427d7" kindref="member">XMC_CAN_MO_SetIdentifier()</ref> API. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="1947" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" bodystart="1947" bodyend="1951"/>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n_1gabcb79c734a68ae614d901d69ef8e20fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CAN_MO_SetStatus</definition>
        <argsstring>(const XMC_CAN_MO_t *const can_mo, const uint32_t mask)</argsstring>
        <name>XMC_CAN_MO_SetStatus</name>
        <param>
          <type>const <ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref> *const</type>
          <declname>can_mo</declname>
        </param>
        <param>
          <type>const uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>can_mo</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to Message Object structure. Refer <ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref> data structure for details. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Message Object set status selection. Refer <ref refid="group___c_a_n_1ga71459a95ce4da56054ac63b26450d53f" kindref="member">XMC_CAN_MO_SET_STATUS_t</ref> for details. Multiple enums can be ORed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Configures Message Object set Status. It configures MOCTR register.</para>
</simplesect>
<simplesect kind="par"><title>Related API&apos;s:</title><para><ref refid="group___c_a_n_1gab88ba4b28db7404e7e3a271c1e585905" kindref="member">XMC_CAN_MO_ResetStatus()</ref><linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="1654" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" bodystart="1654" bodyend="1657"/>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n_1ga16dd387e3c8337317efe5246d66c8e91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___c_a_n_1ga33a809a5460e5265b2fa3a5ddff3f337" kindref="member">XMC_CAN_STATUS_t</ref></type>
        <definition>XMC_CAN_STATUS_t XMC_CAN_MO_Transmit</definition>
        <argsstring>(const XMC_CAN_MO_t *const can_mo)</argsstring>
        <name>XMC_CAN_MO_Transmit</name>
        <param>
          <type>const <ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref> *const</type>
          <declname>can_mo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>can_mo</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to Message Object structure. Refer <ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref> data structure for details.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>XMC_CAN_STATUS_t CAN Node status. Refer <ref refid="group___c_a_n_1ga33a809a5460e5265b2fa3a5ddff3f337" kindref="member">XMC_CAN_STATUS_t</ref> structure for details.</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Configures transmit request for sending data frame. It configures MOCTR register. Data shall be updated using <ref refid="group___c_a_n_1gafb022d0b0f3cbf13b291b695741cd47f" kindref="member">XMC_CAN_MO_UpdateData()</ref> before calling this API.</para>
</simplesect>
<simplesect kind="par"><title>Related API&apos;s:</title><para><ref refid="group___c_a_n_1gafb022d0b0f3cbf13b291b695741cd47f" kindref="member">XMC_CAN_MO_UpdateData()</ref><linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="1561" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n_1gafb022d0b0f3cbf13b291b695741cd47f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___c_a_n_1ga33a809a5460e5265b2fa3a5ddff3f337" kindref="member">XMC_CAN_STATUS_t</ref></type>
        <definition>XMC_CAN_STATUS_t XMC_CAN_MO_UpdateData</definition>
        <argsstring>(const XMC_CAN_MO_t *const can_mo)</argsstring>
        <name>XMC_CAN_MO_UpdateData</name>
        <param>
          <type>const <ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref> *const</type>
          <declname>can_mo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>can_mo</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to Message Object structure. Refer <ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref> data structure for details.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>XMC_CAN_STATUS_t CAN Node status. Refer <ref refid="group___c_a_n_1ga33a809a5460e5265b2fa3a5ddff3f337" kindref="member">XMC_CAN_STATUS_t</ref> structure for details.</para>
</simplesect>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Configures Data to be transmitted and data length code.</para>
</simplesect>
<simplesect kind="par"><title>Related API&apos;s:</title><para><ref refid="group___c_a_n_1ga3a06733578e85ec9be83df3ca65c82bf" kindref="member">XMC_CAN_MO_Config()</ref><linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="1544" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n_1ga0824727cc57db59df4efe008625af141" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CAN_NODE_ClearStatus</definition>
        <argsstring>(XMC_CAN_NODE_t *const can_node, XMC_CAN_NODE_STATUS_t can_node_status)</argsstring>
        <name>XMC_CAN_NODE_ClearStatus</name>
        <param>
          <type><ref refid="group___c_a_n_1gaa3657c03a38eb66c07f4b8ce1fc83aeb" kindref="member">XMC_CAN_NODE_t</ref> *const</type>
          <declname>can_node</declname>
        </param>
        <param>
          <type><ref refid="group___c_a_n_1ga6efda609ad66be6ae2564b3b4310c362" kindref="member">XMC_CAN_NODE_STATUS_t</ref></type>
          <declname>can_node_status</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>can_node</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_NODE0-CAN_NODE2. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>can_node_status</parametername>
</parameternamelist>
<parameterdescription>
<para>Status to clear.Refer <ref refid="group___c_a_n_1ga6efda609ad66be6ae2564b3b4310c362" kindref="member">XMC_CAN_NODE_STATUS_t</ref> for valid values.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Clear errors status as well as successfully transferred CAN frames status.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___c_a_n_1ga340523d61c73d6b17af9e7d201a53c31" kindref="member">XMC_CAN_NODE_GetStatus()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="1266" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" bodystart="1266" bodyend="1269"/>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n_1ga3a60a49f75d0f9a4f52286856278a9bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CAN_NODE_Disable</definition>
        <argsstring>(XMC_CAN_NODE_t *const can_node)</argsstring>
        <name>XMC_CAN_NODE_Disable</name>
        <param>
          <type><ref refid="group___c_a_n_1gaa3657c03a38eb66c07f4b8ce1fc83aeb" kindref="member">XMC_CAN_NODE_t</ref> *const</type>
          <declname>can_node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>can_node</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_NODE0-CAN_NODE2.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Disable the CAN node, terminates participation in CAN traffic. It configures NCR.CANDIS bit.</para>
</simplesect>
<simplesect kind="par"><title>Related API&apos;s:</title><para>None </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="1385" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" bodystart="1385" bodyend="1388"/>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n_1ga6f266f543962bf5969d438af202d2d48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CAN_NODE_DisableConfigurationChange</definition>
        <argsstring>(XMC_CAN_NODE_t *const can_node)</argsstring>
        <name>XMC_CAN_NODE_DisableConfigurationChange</name>
        <param>
          <type><ref refid="group___c_a_n_1gaa3657c03a38eb66c07f4b8ce1fc83aeb" kindref="member">XMC_CAN_NODE_t</ref> *const</type>
          <declname>can_node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>can_node</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_NODE0-CAN_NODE2.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Forbid to change the configuration of the CAN node. It configures NCRx.CCE bit.</para>
</simplesect>
<simplesect kind="par"><title>Related API&apos;s:</title><para><ref refid="group___c_a_n_1gac26b568458cf0a7b88018bd3ddf5eccf" kindref="member">XMC_CAN_NODE_EnableConfigurationChange()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="1307" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" bodystart="1307" bodyend="1310"/>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n_1gaf5ed3045870e0180b41ee4f19f63d278" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CAN_NODE_DisableEvent</definition>
        <argsstring>(XMC_CAN_NODE_t *const can_node, const XMC_CAN_NODE_EVENT_t event)</argsstring>
        <name>XMC_CAN_NODE_DisableEvent</name>
        <param>
          <type><ref refid="group___c_a_n_1gaa3657c03a38eb66c07f4b8ce1fc83aeb" kindref="member">XMC_CAN_NODE_t</ref> *const</type>
          <declname>can_node</declname>
        </param>
        <param>
          <type>const <ref refid="group___c_a_n_1gae708efa53df4791e665aa6a900eeb6a6" kindref="member">XMC_CAN_NODE_EVENT_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>can_node</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_NODE0-CAN_NODE2. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN node event mask value. Refer <ref refid="group___c_a_n_1gae708efa53df4791e665aa6a900eeb6a6" kindref="member">XMC_CAN_NODE_EVENT_t</ref> structure for valid values. multiple events can be ORed.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Disable CAN Node events. It configures NFCR register.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___c_a_n_1ga085ec39999617b4880795dd3f5990873" kindref="member">XMC_CAN_NODE_EnableEvent()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="1043" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n_1ga6e59aef13717065359d5ea387e88118b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CAN_NODE_DisableLoopBack</definition>
        <argsstring>(XMC_CAN_NODE_t *const can_node)</argsstring>
        <name>XMC_CAN_NODE_DisableLoopBack</name>
        <param>
          <type><ref refid="group___c_a_n_1gaa3657c03a38eb66c07f4b8ce1fc83aeb" kindref="member">XMC_CAN_NODE_t</ref> *const</type>
          <declname>can_node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>can_node</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_NODE0-CAN_NODE2.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Disable Node Loop-Back Mode, disables internal (virtual) loop-back CAN bus. This API Configures NPCRx register. Call <ref refid="group___c_a_n_1gac26b568458cf0a7b88018bd3ddf5eccf" kindref="member">XMC_CAN_NODE_EnableConfigurationChange()</ref> API before NPCRx configuration, same way <ref refid="group___c_a_n_1ga6f266f543962bf5969d438af202d2d48" kindref="member">XMC_CAN_NODE_DisableConfigurationChange()</ref> API after NPCRx configuration.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:]</title><para><ref refid="group___c_a_n_1ga214ceb497a79f17a1a97090131a11247" kindref="member">XMC_CAN_NODE_EnableLoopBack()</ref></para>
</simplesect>
<simplesect kind="par"><title>Note:</title><para>NPCRx can be written only if bit NCRx.CCE is set. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="1002" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" bodystart="1002" bodyend="1005"/>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n_1ga924a346597f2770058d12d837b7ec05c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CAN_NODE_Enable</definition>
        <argsstring>(XMC_CAN_NODE_t *const can_node)</argsstring>
        <name>XMC_CAN_NODE_Enable</name>
        <param>
          <type><ref refid="group___c_a_n_1gaa3657c03a38eb66c07f4b8ce1fc83aeb" kindref="member">XMC_CAN_NODE_t</ref> *const</type>
          <declname>can_node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>can_node</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_NODE0-CAN_NODE2.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Enable the CAN node, starts the participation in CAN traffic. It configures NCR.CANDIS and the NCR.INIT bits.</para>
</simplesect>
<simplesect kind="par"><title>Related API&apos;s:</title><para>None </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="1366" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" bodystart="1366" bodyend="1370"/>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n_1gac26b568458cf0a7b88018bd3ddf5eccf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CAN_NODE_EnableConfigurationChange</definition>
        <argsstring>(XMC_CAN_NODE_t *const can_node)</argsstring>
        <name>XMC_CAN_NODE_EnableConfigurationChange</name>
        <param>
          <type><ref refid="group___c_a_n_1gaa3657c03a38eb66c07f4b8ce1fc83aeb" kindref="member">XMC_CAN_NODE_t</ref> *const</type>
          <declname>can_node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>can_node</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_NODE0-CAN_NODE2.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Allow to change the configuration of the CAN node, like bit timing, CAN bus transmit/receive ports and error counters read. It configures NCRx.CCE bit.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___c_a_n_1ga6f266f543962bf5969d438af202d2d48" kindref="member">XMC_CAN_NODE_DisableConfigurationChange()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="1287" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" bodystart="1287" bodyend="1290"/>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n_1ga085ec39999617b4880795dd3f5990873" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CAN_NODE_EnableEvent</definition>
        <argsstring>(XMC_CAN_NODE_t *const can_node, const XMC_CAN_NODE_EVENT_t event)</argsstring>
        <name>XMC_CAN_NODE_EnableEvent</name>
        <param>
          <type><ref refid="group___c_a_n_1gaa3657c03a38eb66c07f4b8ce1fc83aeb" kindref="member">XMC_CAN_NODE_t</ref> *const</type>
          <declname>can_node</declname>
        </param>
        <param>
          <type>const <ref refid="group___c_a_n_1gae708efa53df4791e665aa6a900eeb6a6" kindref="member">XMC_CAN_NODE_EVENT_t</ref></type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>can_node</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_NODE0-CAN_NODE2. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN node event mask value. Refer <ref refid="group___c_a_n_1gae708efa53df4791e665aa6a900eeb6a6" kindref="member">XMC_CAN_NODE_EVENT_t</ref> structure for valid values. multiple events can be ORed.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Enable CAN Node events. It configures NFCR register.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___c_a_n_1gaf5ed3045870e0180b41ee4f19f63d278" kindref="member">XMC_CAN_NODE_DisableEvent()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="1024" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n_1ga214ceb497a79f17a1a97090131a11247" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CAN_NODE_EnableLoopBack</definition>
        <argsstring>(XMC_CAN_NODE_t *const can_node)</argsstring>
        <name>XMC_CAN_NODE_EnableLoopBack</name>
        <param>
          <type><ref refid="group___c_a_n_1gaa3657c03a38eb66c07f4b8ce1fc83aeb" kindref="member">XMC_CAN_NODE_t</ref> *const</type>
          <declname>can_node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>can_node</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_NODE0-CAN_NODE2.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Enable Node <emphasis>can_node</emphasis> in Loop-Back Mode. A Node is connected to an internal (virtual) loop-back CAN bus. All CAN nodes which are in Loop- Back Mode are connected to this virtual CAN bus so that they can communicate with each other internally. The external transmit line is forced recessive in Loop-Back Mode. This API Configures NPCRx register. call <ref refid="group___c_a_n_1gac26b568458cf0a7b88018bd3ddf5eccf" kindref="member">XMC_CAN_NODE_EnableConfigurationChange()</ref> API before NPCRx configuration, same way <ref refid="group___c_a_n_1ga6f266f543962bf5969d438af202d2d48" kindref="member">XMC_CAN_NODE_DisableConfigurationChange()</ref> API after NPCRx configuration configuration.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:]</title><para><ref refid="group___c_a_n_1ga6e59aef13717065359d5ea387e88118b" kindref="member">XMC_CAN_NODE_DisableLoopBack()</ref>.</para>
</simplesect>
<simplesect kind="par"><title>Note:</title><para>NPCRx can be written only if bit NCRx.CCE is set. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="977" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" bodystart="977" bodyend="980"/>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n_1gae43a6605f4303deaa9077c9ca1cc29f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CAN_NODE_EnableSuspend</definition>
        <argsstring>(XMC_CAN_NODE_t *const can_node)</argsstring>
        <name>XMC_CAN_NODE_EnableSuspend</name>
        <param>
          <type><ref refid="group___c_a_n_1gaa3657c03a38eb66c07f4b8ce1fc83aeb" kindref="member">XMC_CAN_NODE_t</ref> *const</type>
          <declname>can_node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>can_node</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_NODE0-CAN_NODE2.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Trigger the suspension of the CAN node. An OCDS(on chip debug support) suspend trigger disables the CAN node: As soon as the CAN node becomes bus-idle or bus-off, bit INIT is internally forced to 1 to disable the CAN node. The actual value of bit INIT remains unchanged. It configures NCR.SUSEN bit</para>
</simplesect>
<simplesect kind="par"><title>Related API&apos;s:</title><para>None</para>
</simplesect>
<simplesect kind="par"><title>Note:</title><para>Bit SUSEN is reset via OCDS(on chip debug support) Reset. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="1451" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" bodystart="1451" bodyend="1454"/>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n_1gafd589a86e011a98d636e4fce616dbb18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CAN_NODE_FrameCounterConfigure</definition>
        <argsstring>(XMC_CAN_NODE_t *const can_node, const XMC_CAN_NODE_FRAME_COUNTER_t *const can_node_init)</argsstring>
        <name>XMC_CAN_NODE_FrameCounterConfigure</name>
        <param>
          <type><ref refid="group___c_a_n_1gaa3657c03a38eb66c07f4b8ce1fc83aeb" kindref="member">XMC_CAN_NODE_t</ref> *const</type>
          <declname>can_node</declname>
        </param>
        <param>
          <type>const <ref refid="struct_x_m_c___c_a_n___n_o_d_e___f_r_a_m_e___c_o_u_n_t_e_r__t" kindref="compound">XMC_CAN_NODE_FRAME_COUNTER_t</ref> *const</type>
          <declname>can_node_init</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>can_node</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_NODE0-CAN_NODE2. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>can_node_init</parametername>
</parameternamelist>
<parameterdescription>
<para>frame counter mode selection. Refer <ref refid="struct_x_m_c___c_a_n___n_o_d_e___f_r_a_m_e___c_o_u_n_t_e_r__t" kindref="compound">XMC_CAN_NODE_FRAME_COUNTER_t</ref> for valid values.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Configures frame counter functions. Each CAN <emphasis>can_node</emphasis> is equipped with a frame counter that counts transmitted/received CAN frames or obtains information about the time when a frame has been started to transmit or be received by the CAN node. It configures NFCR register.</para>
</simplesect>
<simplesect kind="par"><title>Related API&apos;s:</title><para>None </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="1494" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" bodystart="1494" bodyend="1500"/>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n_1ga1980308d1958c918cfb16dd43b09ce3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t XMC_CAN_NODE_GetCANFrameCounter</definition>
        <argsstring>(XMC_CAN_NODE_t *const can_node)</argsstring>
        <name>XMC_CAN_NODE_GetCANFrameCounter</name>
        <param>
          <type><ref refid="group___c_a_n_1gaa3657c03a38eb66c07f4b8ce1fc83aeb" kindref="member">XMC_CAN_NODE_t</ref> *const</type>
          <declname>can_node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>can_node</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_NODE0-CAN_NODE2.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint16_t current value of the CAN frame counter. Range :0-65535</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Returns the frame counter value <emphasis>can_node</emphasis> of the CAN node. In Frame Count Mode (CFMOD = 00B), this API returns the frame count value. In Time Stamp Mode (CFMOD = 01B), this API returns the captured bit time count value, captured with the start of a new frame. In all Bit Timing Analysis Modes (CFMOD = 10B), this API always returns the number of fCLC clock cycles (measurement result) minus 1.</para>
</simplesect>
<simplesect kind="par"><title>Related API&apos;s:</title><para>None </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="1520" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" bodystart="1520" bodyend="1523"/>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n_1ga52536f202ef63f0205ec8dad7ae36c3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t XMC_CAN_NODE_GetErrorWarningLevel</definition>
        <argsstring>(XMC_CAN_NODE_t *const can_node)</argsstring>
        <name>XMC_CAN_NODE_GetErrorWarningLevel</name>
        <param>
          <type><ref refid="group___c_a_n_1gaa3657c03a38eb66c07f4b8ce1fc83aeb" kindref="member">XMC_CAN_NODE_t</ref> *const</type>
          <declname>can_node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>can_node</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_NODE0-CAN_NODE2.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint8_t Error Warning Level. Range :0 - 255</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Returns error warning level. This determines the threshold value (warning level, default 96) to be reached in order to set the corresponding error warning bit EWRN. It reads NECNT register.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___c_a_n_1ga3e60df9bc4171abdfa5b7b8e8facae14" kindref="member">XMC_CAN_NODE_SetErrorWarningLevel()</ref><linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="1181" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" bodystart="1181" bodyend="1184"/>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n_1ga32d160a9ce4260e34878a09df80f0131" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___c_a_n_1ga58a294b10b4e0b575f0d378313fc3b05" kindref="member">XMC_CAN_NODE_LAST_ERROR_DIR_t</ref></type>
        <definition>XMC_CAN_NODE_LAST_ERROR_DIR_t XMC_CAN_NODE_GetLastErrTransferDir</definition>
        <argsstring>(XMC_CAN_NODE_t *const node)</argsstring>
        <name>XMC_CAN_NODE_GetLastErrTransferDir</name>
        <param>
          <type><ref refid="group___c_a_n_1gaa3657c03a38eb66c07f4b8ce1fc83aeb" kindref="member">XMC_CAN_NODE_t</ref> *const</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_NODE0-CAN_NODE2.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>XMC_CAN_NODE_LAST_ERROR_DIR_t Last error transfer direction. Refer <ref refid="group___c_a_n_1ga58a294b10b4e0b575f0d378313fc3b05" kindref="member">XMC_CAN_NODE_LAST_ERROR_DIR_t</ref>.</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Returns NODE Last Error occurred during Transmit/receive direction. It returns value of NFCR register.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___c_a_n_1ga02d5e3c90dfff44b3259a31dbb900995" kindref="member">XMC_CAN_NODE_GetLastErrTransferInc()</ref><linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="1060" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" bodystart="1060" bodyend="1063"/>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n_1ga02d5e3c90dfff44b3259a31dbb900995" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___c_a_n_1ga588030349d9f7f929bcdfca3b2e1df13" kindref="member">XMC_CAN_NODE_LAST_ERROR_INC_t</ref></type>
        <definition>XMC_CAN_NODE_LAST_ERROR_INC_t XMC_CAN_NODE_GetLastErrTransferInc</definition>
        <argsstring>(XMC_CAN_NODE_t *const node)</argsstring>
        <name>XMC_CAN_NODE_GetLastErrTransferInc</name>
        <param>
          <type><ref refid="group___c_a_n_1gaa3657c03a38eb66c07f4b8ce1fc83aeb" kindref="member">XMC_CAN_NODE_t</ref> *const</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_NODE0-CAN_NODE2.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>XMC_CAN_NODE_LAST_ERROR_INC_t Last error transfer increment. Refer <ref refid="group___c_a_n_1ga588030349d9f7f929bcdfca3b2e1df13" kindref="member">XMC_CAN_NODE_LAST_ERROR_INC_t</ref>.</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Returns NODE Last Error Transfer Increment. It returns value of NFCR register.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___c_a_n_1ga32d160a9ce4260e34878a09df80f0131" kindref="member">XMC_CAN_NODE_GetLastErrTransferDir()</ref><linebreak/>
<linebreak/>
<linebreak/>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="1080" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" bodystart="1080" bodyend="1083"/>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n_1ga5e296f7d900a54bd56b099a8b23f87d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t XMC_CAN_NODE_GetReceiveErrorCounter</definition>
        <argsstring>(XMC_CAN_NODE_t *const can_node)</argsstring>
        <name>XMC_CAN_NODE_GetReceiveErrorCounter</name>
        <param>
          <type><ref refid="group___c_a_n_1gaa3657c03a38eb66c07f4b8ce1fc83aeb" kindref="member">XMC_CAN_NODE_t</ref> *const</type>
          <declname>can_node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>can_node</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_NODE0-CAN_NODE2.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint8_t receive error counter value.</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Returns Receive Error Counter value. It reads NECNT register.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___c_a_n_1ga05c55e7c28370cd64b77225c43ca6838" kindref="member">XMC_CAN_NODE_SetReceiveErrorCounter()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="1226" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" bodystart="1226" bodyend="1229"/>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n_1ga340523d61c73d6b17af9e7d201a53c31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t XMC_CAN_NODE_GetStatus</definition>
        <argsstring>(XMC_CAN_NODE_t *const can_node)</argsstring>
        <name>XMC_CAN_NODE_GetStatus</name>
        <param>
          <type><ref refid="group___c_a_n_1gaa3657c03a38eb66c07f4b8ce1fc83aeb" kindref="member">XMC_CAN_NODE_t</ref> *const</type>
          <declname>can_node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>can_node</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_NODE0-CAN_NODE2.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint32_t Current status of the node.</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Returns errors status as well as successfully transferred CAN frames status.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___c_a_n_1ga0824727cc57db59df4efe008625af141" kindref="member">XMC_CAN_NODE_ClearStatus()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="1246" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" bodystart="1246" bodyend="1249"/>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n_1gab9167c7c6b40606532beacdfcfe7e650" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t XMC_CAN_NODE_GetTransmitErrorCounter</definition>
        <argsstring>(XMC_CAN_NODE_t *const can_node)</argsstring>
        <name>XMC_CAN_NODE_GetTransmitErrorCounter</name>
        <param>
          <type><ref refid="group___c_a_n_1gaa3657c03a38eb66c07f4b8ce1fc83aeb" kindref="member">XMC_CAN_NODE_t</ref> *const</type>
          <declname>can_node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>can_node</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_NODE0-CAN_NODE2.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint8_t transmit error counter value. Range :0 - 255</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Returns Transmit Error Counter value. If the Bitstream Processor detects an error while a transmit operation is running, the Transmit Error Counter is incremented by 8. An increment of 1 is used when the error condition was reported by an external CAN node via an Error Frame generation. It reads NECNT register.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___c_a_n_1ga9a5d2ce11b0c3bcf0d8274cf340d84d5" kindref="member">XMC_CAN_NODE_SetTransmitErrorCounter()</ref></para>
</simplesect>
<simplesect kind="par"><title>Note:</title><para>NECNTx can be written only if bit NCRx.CCE is set. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="1206" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" bodystart="1206" bodyend="1209"/>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n_1ga237cbd25e96515d2d1207fe93ae6063a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CAN_NODE_NominalBitTimeConfigure</definition>
        <argsstring>(XMC_CAN_NODE_t *const can_node, const XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG_t *const can_bit_time)</argsstring>
        <name>XMC_CAN_NODE_NominalBitTimeConfigure</name>
        <param>
          <type><ref refid="group___c_a_n_1gaa3657c03a38eb66c07f4b8ce1fc83aeb" kindref="member">XMC_CAN_NODE_t</ref> *const</type>
          <declname>can_node</declname>
        </param>
        <param>
          <type>const <ref refid="struct_x_m_c___c_a_n___n_o_d_e___n_o_m_i_n_a_l___b_i_t___t_i_m_e___c_o_n_f_i_g__t" kindref="compound">XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG_t</ref> *const</type>
          <declname>can_bit_time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>can_node</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer pointing to CAN_NODE Structure. Defines CAN_NODE registers. Range :CAN_NODE0-CAN_NODE2 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>can_bit_time</parametername>
</parameternamelist>
<parameterdescription>
<para>Nominal bit time configuration data structure. Refer <ref refid="struct_x_m_c___c_a_n___n_o_d_e___n_o_m_i_n_a_l___b_i_t___t_i_m_e___c_o_n_f_i_g__t" kindref="compound">XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG_t</ref> for details.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Configures CAN node Baudrate. <emphasis>can_bit_time</emphasis> specifies required baudrate for a specified <emphasis>can_node</emphasis>. It configures NBTR register.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para>None </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="904" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n_1ga590a52441b24c5877d15271f16dd7a12" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t XMC_CAN_NODE_NominalBitTimeConfigureEx</definition>
        <argsstring>(XMC_CAN_NODE_t *const can_node, const XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG_t *const can_bit_time)</argsstring>
        <name>XMC_CAN_NODE_NominalBitTimeConfigureEx</name>
        <param>
          <type><ref refid="group___c_a_n_1gaa3657c03a38eb66c07f4b8ce1fc83aeb" kindref="member">XMC_CAN_NODE_t</ref> *const</type>
          <declname>can_node</declname>
        </param>
        <param>
          <type>const <ref refid="struct_x_m_c___c_a_n___n_o_d_e___n_o_m_i_n_a_l___b_i_t___t_i_m_e___c_o_n_f_i_g__t" kindref="compound">XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG_t</ref> *const</type>
          <declname>can_bit_time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>can_node</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer pointing to CAN_NODE Structure. Defines CAN_NODE registers. Range :CAN_NODE0-CAN_NODE2 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>can_bit_time</parametername>
</parameternamelist>
<parameterdescription>
<para>Nominal bit time configuration data structure. Refer <ref refid="struct_x_m_c___c_a_n___n_o_d_e___n_o_m_i_n_a_l___b_i_t___t_i_m_e___c_o_n_f_i_g__t" kindref="compound">XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG_t</ref> for details.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Status on the sucess setting the desired bitrate XMC_CAN_STATUS_t</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Similar to <ref refid="group___c_a_n_1ga237cbd25e96515d2d1207fe93ae6063a" kindref="member">XMC_CAN_NODE_NominalBitTimeConfigure()</ref> configures the CAN node baudrate. The difference being that allows bitrates below 100kpbs. </para>
</simplesect>
<simplesect kind="note"><para>Consider using the new API for new projects. <ref refid="group___c_a_n_1ga237cbd25e96515d2d1207fe93ae6063a" kindref="member">XMC_CAN_NODE_NominalBitTimeConfigure()</ref> is kept for backward compatibility reasons.</para>
</simplesect>
Configures CAN node Baudrate. <emphasis>can_bit_time</emphasis> specifies required baudrate for a specified <emphasis>can_node</emphasis>. It configures NBTR register.</para>
<para><simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___c_a_n_1gaad8c21b97d426234e799f7a1895907f6" kindref="member">XMC_CAN_InitEx()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="926" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n_1gac86e37cc7f4ea0cec6849b08b8ab71b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CAN_NODE_ReSetAnalyzerMode</definition>
        <argsstring>(XMC_CAN_NODE_t *const can_node)</argsstring>
        <name>XMC_CAN_NODE_ReSetAnalyzerMode</name>
        <param>
          <type><ref refid="group___c_a_n_1gaa3657c03a38eb66c07f4b8ce1fc83aeb" kindref="member">XMC_CAN_NODE_t</ref> *const</type>
          <declname>can_node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>can_node</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_NODE0-CAN_NODE2.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Reset the Analyzer mode. CAN node is no more in Analyzer Mode. Please refer <ref refid="group___c_a_n_1ga6e2bd3d9846dcbee149409baf623bbdf" kindref="member">XMC_CAN_NODE_SetAnalyzerMode()</ref>. It configures NCR.CALM bit. <ref refid="group___c_a_n_1gadb89a6e0630d7ccf0b233caa989599ff" kindref="member">XMC_CAN_NODE_SetInitBit()</ref> should be called before set / reset AnalyzerMode.</para>
</simplesect>
<simplesect kind="par"><title>Related API&apos;s:</title><para><ref refid="group___c_a_n_1ga6e2bd3d9846dcbee149409baf623bbdf" kindref="member">XMC_CAN_NODE_SetAnalyzerMode()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="1427" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" bodystart="1427" bodyend="1430"/>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n_1ga403725545e4b32c3dd0e67ba921a6366" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CAN_NODE_ResetInitBit</definition>
        <argsstring>(XMC_CAN_NODE_t *const can_node)</argsstring>
        <name>XMC_CAN_NODE_ResetInitBit</name>
        <param>
          <type><ref refid="group___c_a_n_1gaa3657c03a38eb66c07f4b8ce1fc83aeb" kindref="member">XMC_CAN_NODE_t</ref> *const</type>
          <declname>can_node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>can_node</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_NODE0-CAN_NODE2.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Enable CAN node participation in CAN traffic. Bit INIT is automatically set when the CAN node enters the bus-off state. It configures NCR.INIT bit.</para>
</simplesect>
<simplesect kind="par"><title>Related API&apos;s:</title><para><ref refid="group___c_a_n_1gadb89a6e0630d7ccf0b233caa989599ff" kindref="member">XMC_CAN_NODE_SetInitBit()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="1348" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" bodystart="1348" bodyend="1351"/>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n_1ga6e2bd3d9846dcbee149409baf623bbdf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CAN_NODE_SetAnalyzerMode</definition>
        <argsstring>(XMC_CAN_NODE_t *const can_node)</argsstring>
        <name>XMC_CAN_NODE_SetAnalyzerMode</name>
        <param>
          <type><ref refid="group___c_a_n_1gaa3657c03a38eb66c07f4b8ce1fc83aeb" kindref="member">XMC_CAN_NODE_t</ref> *const</type>
          <declname>can_node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>can_node</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_NODE0-CAN_NODE2.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Configure CAN node in Analyzer Mode. This means that messages may be received, but not transmitted. No acknowledge is sent on the CAN bus upon frame reception. Active-error flags are sent recessive instead of dominant. The transmit line is continuously held at recessive (1) level. <ref refid="group___c_a_n_1gadb89a6e0630d7ccf0b233caa989599ff" kindref="member">XMC_CAN_NODE_SetInitBit()</ref> should be called before set / reset AnalyzerMode. It configures NCR.CALM bit.</para>
</simplesect>
<simplesect kind="par"><title>Related API&apos;s:</title><para><ref refid="group___c_a_n_1gac86e37cc7f4ea0cec6849b08b8ab71b6" kindref="member">XMC_CAN_NODE_ReSetAnalyzerMode()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="1407" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" bodystart="1407" bodyend="1410"/>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n_1ga3e60df9bc4171abdfa5b7b8e8facae14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CAN_NODE_SetErrorWarningLevel</definition>
        <argsstring>(XMC_CAN_NODE_t *const can_node, uint8_t error_warning_level)</argsstring>
        <name>XMC_CAN_NODE_SetErrorWarningLevel</name>
        <param>
          <type><ref refid="group___c_a_n_1gaa3657c03a38eb66c07f4b8ce1fc83aeb" kindref="member">XMC_CAN_NODE_t</ref> *const</type>
          <declname>can_node</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>error_warning_level</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>can_node</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_NODE0-CAN_NODE2. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error_warning_level</parametername>
</parameternamelist>
<parameterdescription>
<para>Error Warning level value. Range :0-255.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Configures error warning level in order to set the corresponding error warning bit EWRN. It configures <emphasis>error_warning_level</emphasis> into NECNT register. Before this configuration call <ref refid="group___c_a_n_1gac26b568458cf0a7b88018bd3ddf5eccf" kindref="member">XMC_CAN_NODE_EnableConfigurationChange()</ref> API.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___c_a_n_1ga52536f202ef63f0205ec8dad7ae36c3a" kindref="member">XMC_CAN_NODE_GetErrorWarningLevel()</ref><linebreak/>
<linebreak/>
<linebreak/>
 </para>
</simplesect>
<simplesect kind="par"><title>Note:</title><para>NECNTx can be written only if bit NCRx.CCE is set. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="1105" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" bodystart="1105" bodyend="1109"/>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n_1ga8878e96aee1e89d19eb5895f31e789b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CAN_NODE_SetEventNodePointer</definition>
        <argsstring>(XMC_CAN_NODE_t *const can_node, const XMC_CAN_NODE_POINTER_EVENT_t ptr_event, const uint32_t service_request)</argsstring>
        <name>XMC_CAN_NODE_SetEventNodePointer</name>
        <param>
          <type><ref refid="group___c_a_n_1gaa3657c03a38eb66c07f4b8ce1fc83aeb" kindref="member">XMC_CAN_NODE_t</ref> *const</type>
          <declname>can_node</declname>
        </param>
        <param>
          <type>const <ref refid="group___c_a_n_1ga8df6893c4bb8410cf24639fea906ebea" kindref="member">XMC_CAN_NODE_POINTER_EVENT_t</ref></type>
          <declname>ptr_event</declname>
        </param>
        <param>
          <type>const uint32_t</type>
          <declname>service_request</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>can_node</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer pointing to CAN_NODE Structure. Defines CAN_NODE registers. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ptr_event</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN_NODE interrupt pointer position. Refer <ref refid="group___c_a_n_1ga8df6893c4bb8410cf24639fea906ebea" kindref="member">XMC_CAN_NODE_POINTER_EVENT_t</ref> structure for valid values. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>service_request</parametername>
</parameternamelist>
<parameterdescription>
<para>Interrupt service request number. Range : 0-7</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Configures node interrupt pointer <emphasis>service_request</emphasis> for CAN Node events <emphasis>ptr_event</emphasis>. It configures NIPR register.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para>None </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
<para>&lt; Node event mask </para>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="881" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" bodystart="881" bodyend="886"/>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n_1gadb89a6e0630d7ccf0b233caa989599ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CAN_NODE_SetInitBit</definition>
        <argsstring>(XMC_CAN_NODE_t *const can_node)</argsstring>
        <name>XMC_CAN_NODE_SetInitBit</name>
        <param>
          <type><ref refid="group___c_a_n_1gaa3657c03a38eb66c07f4b8ce1fc83aeb" kindref="member">XMC_CAN_NODE_t</ref> *const</type>
          <declname>can_node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>can_node</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_NODE0-CAN_NODE2.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Disable CAN node participation in CAN traffic. Bit INIT is automatically set when the CAN node enters the bus-off state. It configures NCR.INIT bit.</para>
</simplesect>
<simplesect kind="par"><title>Related API&apos;s:</title><para><ref refid="group___c_a_n_1ga403725545e4b32c3dd0e67ba921a6366" kindref="member">XMC_CAN_NODE_ResetInitBit()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="1329" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" bodystart="1329" bodyend="1332"/>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n_1ga05c55e7c28370cd64b77225c43ca6838" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CAN_NODE_SetReceiveErrorCounter</definition>
        <argsstring>(XMC_CAN_NODE_t *const can_node, uint8_t can_rec)</argsstring>
        <name>XMC_CAN_NODE_SetReceiveErrorCounter</name>
        <param>
          <type><ref refid="group___c_a_n_1gaa3657c03a38eb66c07f4b8ce1fc83aeb" kindref="member">XMC_CAN_NODE_t</ref> *const</type>
          <declname>can_node</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>can_rec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>can_node</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_NODE0-CAN_NODE2. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>can_rec</parametername>
</parameternamelist>
<parameterdescription>
<para>receive error counter value. Range :0-255</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Configures Receive Error Counter. It configures <emphasis>can_rec</emphasis> into NECNT register. Before this configuration call <ref refid="group___c_a_n_1gac26b568458cf0a7b88018bd3ddf5eccf" kindref="member">XMC_CAN_NODE_EnableConfigurationChange()</ref> API.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___c_a_n_1ga5e296f7d900a54bd56b099a8b23f87d6" kindref="member">XMC_CAN_NODE_GetReceiveErrorCounter()</ref><linebreak/>
<linebreak/>
<linebreak/>
 </para>
</simplesect>
<simplesect kind="par"><title>Note:</title><para>NECNTx can be written only if bit NCRx.CCE is set. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="1158" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" bodystart="1158" bodyend="1162"/>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n_1gaf46cc61decf5ecc62a50f8d960659eab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CAN_NODE_SetReceiveInput</definition>
        <argsstring>(XMC_CAN_NODE_t *const can_node, const XMC_CAN_NODE_RECEIVE_INPUT_t input)</argsstring>
        <name>XMC_CAN_NODE_SetReceiveInput</name>
        <param>
          <type><ref refid="group___c_a_n_1gaa3657c03a38eb66c07f4b8ce1fc83aeb" kindref="member">XMC_CAN_NODE_t</ref> *const</type>
          <declname>can_node</declname>
        </param>
        <param>
          <type>const <ref refid="group___c_a_n_1gae061ae75276ded4637f93c9b7d5e44eb" kindref="member">XMC_CAN_NODE_RECEIVE_INPUT_t</ref></type>
          <declname>input</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>can_node</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_NODE0-CAN_NODE2. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>input</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN receive input selection. Refer <ref refid="group___c_a_n_1gae061ae75276ded4637f93c9b7d5e44eb" kindref="member">XMC_CAN_NODE_RECEIVE_INPUT_t</ref> for details.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para><emphasis>input</emphasis> specifies CAN input receive pin. This API Configures NPCRx register,it is required to call <ref refid="group___c_a_n_1gac26b568458cf0a7b88018bd3ddf5eccf" kindref="member">XMC_CAN_NODE_EnableConfigurationChange()</ref>, before configuring NPCRx register, call <ref refid="group___c_a_n_1ga6f266f543962bf5969d438af202d2d48" kindref="member">XMC_CAN_NODE_DisableConfigurationChange()</ref> API after configuring NPCRx register. CAN input receive pins which falls under analog port pins should call <ref refid="group___g_p_i_o_1gab0944440c16de2b1ae3fd4f328b77cc6" kindref="member">XMC_GPIO_EnableDigitalInput()</ref>,to enable digital pad.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para>None</para>
</simplesect>
<simplesect kind="par"><title>Note:</title><para>NPCRx can be written only if bit NCRx.CCE is set. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="949" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" bodystart="949" bodyend="954"/>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n_1ga9a5d2ce11b0c3bcf0d8274cf340d84d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CAN_NODE_SetTransmitErrorCounter</definition>
        <argsstring>(XMC_CAN_NODE_t *const can_node, uint8_t can_tec)</argsstring>
        <name>XMC_CAN_NODE_SetTransmitErrorCounter</name>
        <param>
          <type><ref refid="group___c_a_n_1gaa3657c03a38eb66c07f4b8ce1fc83aeb" kindref="member">XMC_CAN_NODE_t</ref> *const</type>
          <declname>can_node</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>can_tec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>can_node</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_NODE0-CAN_NODE2. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>can_tec</parametername>
</parameternamelist>
<parameterdescription>
<para>transmit error counter value. Range :0-255</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Configures Transmit error counter. It configures <emphasis>can_tec</emphasis> into NECNT register. Before this configuration call <ref refid="group___c_a_n_1gac26b568458cf0a7b88018bd3ddf5eccf" kindref="member">XMC_CAN_NODE_EnableConfigurationChange()</ref> API.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para><ref refid="group___c_a_n_1gab9167c7c6b40606532beacdfcfe7e650" kindref="member">XMC_CAN_NODE_GetTransmitErrorCounter()</ref><linebreak/>
<linebreak/>
<linebreak/>
 </para>
</simplesect>
<simplesect kind="par"><title>Note:</title><para>NECNTx can be written only if bit NCRx.CCE is set. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="1132" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" bodystart="1132" bodyend="1136"/>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n_1ga461411e88974c50a6e7b36e73c9fc56e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CAN_PanelControl</definition>
        <argsstring>(XMC_CAN_t *const obj, const XMC_CAN_PANCMD_t pancmd, const uint8_t arg1, const uint8_t arg2)</argsstring>
        <name>XMC_CAN_PanelControl</name>
        <param>
          <type><ref refid="group___c_a_n_1ga4c8ef1a9555bd8e1658e480944dca81e" kindref="member">XMC_CAN_t</ref> *const</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>const <ref refid="group___c_a_n_1gab71d557389d7e9579179770028146451" kindref="member">XMC_CAN_PANCMD_t</ref></type>
          <declname>pancmd</declname>
        </param>
        <param>
          <type>const uint8_t</type>
          <declname>arg1</declname>
        </param>
        <param>
          <type>const uint8_t</type>
          <declname>arg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global registers,refer CAN_NODE_TypeDef for details.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pancmd</parametername>
</parameternamelist>
<parameterdescription>
<para>panal command selection. Refer <ref refid="group___c_a_n_1gab71d557389d7e9579179770028146451" kindref="member">XMC_CAN_PANCMD_t</ref> for valid values. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>arg1</parametername>
</parameternamelist>
<parameterdescription>
<para>Panel Argument 1,Range : 0-2 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>arg2</parametername>
</parameternamelist>
<parameterdescription>
<para>Panel Argument 2, Range : 0-63</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Configures the panel command and panel arguments. A panel operation consists of a command code (PANCMD) and up to two panel arguments (PANAR1, PANAR2). Commands that have a return value deliver it to the PANAR1 bit field. Commands that return an error flag deliver it to bit 31 of the Panel Control Register, this means bit 7 of PANAR2. <emphasis>arg1</emphasis> represents panel argument PANAR1,<emphasis>arg2</emphasis> represents panel argument PANAR2 and <emphasis>pancmd</emphasis> represents command code. It configures PANCTR register.</para>
</simplesect>
<simplesect kind="par"><title>Related APIs:</title><para>None </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="709" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" bodystart="709" bodyend="717"/>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n_1gaf3af812306e78f6c35f4837e3f87d4d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CAN_RXFIFO_ConfigMOBaseObject</definition>
        <argsstring>(const XMC_CAN_MO_t *const can_mo, const XMC_CAN_FIFO_CONFIG_t can_fifo)</argsstring>
        <name>XMC_CAN_RXFIFO_ConfigMOBaseObject</name>
        <param>
          <type>const <ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref> *const</type>
          <declname>can_mo</declname>
        </param>
        <param>
          <type>const <ref refid="struct_x_m_c___c_a_n___f_i_f_o___c_o_n_f_i_g__t" kindref="compound">XMC_CAN_FIFO_CONFIG_t</ref></type>
          <declname>can_fifo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>can_mo</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to Message Object structure. Refer <ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref> data structure for details. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>can_fifo</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN FIFO configuration data structure. Refer <ref refid="struct_x_m_c___c_a_n___f_i_f_o___c_o_n_f_i_g__t" kindref="compound">XMC_CAN_FIFO_CONFIG_t</ref> data structure for details.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Configures the base object of receive FIFO.</para>
</simplesect>
<simplesect kind="par"><title>Related API&apos;s:</title><para>None </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="2182" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n_1gaf1de58dc7fb68ad5865fc0db41bc01a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CAN_RXFIFO_ConfigMOSlaveObject</definition>
        <argsstring>(const XMC_CAN_MO_t *const can_mo)</argsstring>
        <name>XMC_CAN_RXFIFO_ConfigMOSlaveObject</name>
        <param>
          <type>const <ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref> *const</type>
          <declname>can_mo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>can_mo</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to Message Object structure. Refer <ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref> data structure for details.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Configures the slave Object of receive FIFO. It configures MOCTR.RESRXEN bit.</para>
</simplesect>
<simplesect kind="par"><title>Related API&apos;s:</title><para>None </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="2216" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" bodystart="2216" bodyend="2219"/>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n_1ga6bfa6ec4cc9efd44470400548b5a0d32" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CAN_SetBaudrateClockSource</definition>
        <argsstring>(XMC_CAN_t *const obj, const XMC_CAN_CANCLKSRC_t source)</argsstring>
        <name>XMC_CAN_SetBaudrateClockSource</name>
        <param>
          <type><ref refid="group___c_a_n_1ga4c8ef1a9555bd8e1658e480944dca81e" kindref="member">XMC_CAN_t</ref> *const</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>const <ref refid="group___c_a_n_1gaa70821b48b35c15555d81a4c81fceb80" kindref="member">XMC_CAN_CANCLKSRC_t</ref></type>
          <declname>source</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global registers,refer CAN_NODE_TypeDef for details.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Sets CAN baudrate generator clock source </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="794" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n_1ga53d857e001d98cde8e1e838370a4eef3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CAN_TXFIFO_ConfigMOBaseObject</definition>
        <argsstring>(const XMC_CAN_MO_t *const can_mo, const XMC_CAN_FIFO_CONFIG_t can_fifo)</argsstring>
        <name>XMC_CAN_TXFIFO_ConfigMOBaseObject</name>
        <param>
          <type>const <ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref> *const</type>
          <declname>can_mo</declname>
        </param>
        <param>
          <type>const <ref refid="struct_x_m_c___c_a_n___f_i_f_o___c_o_n_f_i_g__t" kindref="compound">XMC_CAN_FIFO_CONFIG_t</ref></type>
          <declname>can_fifo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>can_mo</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to Message Object structure. Refer <ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref> data structure for details. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>can_fifo</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN FIFO configuration data structure. Refer <ref refid="struct_x_m_c___c_a_n___f_i_f_o___c_o_n_f_i_g__t" kindref="compound">XMC_CAN_FIFO_CONFIG_t</ref> data structure for details.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Configures the transmit FIFO. A FIFO consists of one base object and n slave objects. Please refer reference manual <bold>Transmit</bold> FIFO for more info.</para>
</simplesect>
<simplesect kind="par"><title>Related API&apos;s:</title><para>None. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="2165" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n_1gac51fa23741c9f64f35dca049aeb9201b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_CAN_TXFIFO_ConfigMOSlaveObject</definition>
        <argsstring>(const XMC_CAN_MO_t *const can_mo, const XMC_CAN_FIFO_CONFIG_t can_fifo)</argsstring>
        <name>XMC_CAN_TXFIFO_ConfigMOSlaveObject</name>
        <param>
          <type>const <ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref> *const</type>
          <declname>can_mo</declname>
        </param>
        <param>
          <type>const <ref refid="struct_x_m_c___c_a_n___f_i_f_o___c_o_n_f_i_g__t" kindref="compound">XMC_CAN_FIFO_CONFIG_t</ref></type>
          <declname>can_fifo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>can_mo</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to Message Object structure. Refer <ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref> data structure for details. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>can_fifo</parametername>
</parameternamelist>
<parameterdescription>
<para>CAN FIFO configuration data structure. Refer <ref refid="struct_x_m_c___c_a_n___f_i_f_o___c_o_n_f_i_g__t" kindref="compound">XMC_CAN_FIFO_CONFIG_t</ref> data structure for details.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>Configures the slave object of transmit FIFO.</para>
</simplesect>
<simplesect kind="par"><title>Related API&apos;s:</title><para>None </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="2199" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___c_a_n_1ga568c53e9d219eabf0defeb9684b6c587" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___c_a_n_1ga33a809a5460e5265b2fa3a5ddff3f337" kindref="member">XMC_CAN_STATUS_t</ref></type>
        <definition>XMC_CAN_STATUS_t XMC_CAN_TXFIFO_Transmit</definition>
        <argsstring>(const XMC_CAN_MO_t *const can_mo)</argsstring>
        <name>XMC_CAN_TXFIFO_Transmit</name>
        <param>
          <type>const <ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref> *const</type>
          <declname>can_mo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>can_mo</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to Message Object structure. Refer <ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref> data structure for details.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>XMC_CAN_STATUS_t CAN Node status. Refer <ref refid="group___c_a_n_1ga33a809a5460e5265b2fa3a5ddff3f337" kindref="member">XMC_CAN_STATUS_t</ref> structure for details.</para>
</simplesect>
<simplesect kind="par"><title>Description:</title><para>To transmit Message Object from the FIFO. Prior to this CAN node Message Object FIFO structure shall be made using <ref refid="group___c_a_n_1ga53d857e001d98cde8e1e838370a4eef3" kindref="member">XMC_CAN_TXFIFO_ConfigMOBaseObject()</ref>, <ref refid="group___c_a_n_1gac51fa23741c9f64f35dca049aeb9201b" kindref="member">XMC_CAN_TXFIFO_ConfigMOSlaveObject()</ref>,<ref refid="group___c_a_n_1gaf3af812306e78f6c35f4837e3f87d4d9" kindref="member">XMC_CAN_RXFIFO_ConfigMOBaseObject()</ref> API&apos;s. Please refer reference manual <bold>MessageObject</bold> <bold>FIFOStructure</bold> for more info. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h" line="2277" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="date"><para>2019-07-02 </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="106"><highlight class="preprocessor">#ifndef<sp/>XMC_CAN_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>XMC_CAN_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="comment">/*********************************************************************************************************************</highlight></codeline>
<codeline lineno="110"><highlight class="comment"><sp/>*<sp/>HEADER<sp/>FILES</highlight></codeline>
<codeline lineno="111"><highlight class="comment"><sp/>********************************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xmc_common.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CAN)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xmc_scu.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xmc_can_map.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="comment">/*********************************************************************************************************************</highlight></codeline>
<codeline lineno="168"><highlight class="comment"><sp/>*<sp/>MACROS</highlight></codeline>
<codeline lineno="169"><highlight class="comment"><sp/>********************************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>XMC_CAN_MO_MOAR_STDID_Pos<sp/>(18U)<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="172"><highlight class="preprocessor">#define<sp/>XMC_CAN_MO_MOAR_STDID_Msk<sp/>((0x000007FFUL)<sp/>&lt;&lt;<sp/>XMC_CAN_MO_MOAR_STDID_Pos)<sp/></highlight></codeline>
<codeline lineno="174"><highlight class="preprocessor">#define<sp/>CAN_NODE_NIPR_Msk<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0x7UL)<sp/></highlight></codeline>
<codeline lineno="176"><highlight class="preprocessor">#define<sp/>CAN_MO_MOIPR_Msk<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0x7U)<sp/><sp/></highlight></codeline>
<codeline lineno="178"><highlight class="preprocessor"></highlight><highlight class="comment">/*********************************************************************************************************************</highlight></codeline>
<codeline lineno="179"><highlight class="comment"><sp/>*<sp/>ENUMS</highlight></codeline>
<codeline lineno="180"><highlight class="comment"><sp/>********************************************************************************************************************/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>XMC_CAN_STATUS</highlight></codeline>
<codeline lineno="185"><highlight class="normal">{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1gga33a809a5460e5265b2fa3a5ddff3f337a94696aa2505cc9dfdfa2afbe3310edb2" kindref="member">XMC_CAN_STATUS_SUCCESS</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1gga33a809a5460e5265b2fa3a5ddff3f337aac958dcd220626c9d568b816c59e663c" kindref="member">XMC_CAN_STATUS_ERROR</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1gga33a809a5460e5265b2fa3a5ddff3f337a1a5b04feec85ad064574866daa549634" kindref="member">XMC_CAN_STATUS_BUSY</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1gga33a809a5460e5265b2fa3a5ddff3f337a2e7ca339ede5036d6f8144720a2ec555" kindref="member">XMC_CAN_STATUS_MO_NOT_ACCEPTABLE</ref>,<sp/></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1gga33a809a5460e5265b2fa3a5ddff3f337aa22fa07338db7142d8f359396ede3e87" kindref="member">XMC_CAN_STATUS_MO_DISABLED</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="191"><highlight class="normal">}<sp/><ref refid="group___c_a_n_1ga33a809a5460e5265b2fa3a5ddff3f337" kindref="member">XMC_CAN_STATUS_t</ref>;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>XMC_CAN_PANCMD</highlight></codeline>
<codeline lineno="197"><highlight class="normal">{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1ggab71d557389d7e9579179770028146451a0ac07206e3eecb78c8a699677f886959" kindref="member">XMC_CAN_PANCMD_INIT_LIST</ref><sp/>=<sp/>1U,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1ggab71d557389d7e9579179770028146451a300c34791f76e74f134a5922dc0b6985" kindref="member">XMC_CAN_PANCMD_STATIC_ALLOCATE</ref><sp/>=<sp/>2U,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1ggab71d557389d7e9579179770028146451ad91a22a0921cef701aa3f731485b6685" kindref="member">XMC_CAN_PANCMD_DYNAMIC_ALLOCATE</ref><sp/>=<sp/>3U,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1ggab71d557389d7e9579179770028146451ad94d8a70c3660da5e58c6696008ea88f" kindref="member">XMC_CAN_PANCMD_STATIC_INSERT_BEFORE</ref><sp/>=<sp/>4U,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1ggab71d557389d7e9579179770028146451ac382c884822826d8396541909bcd0fe1" kindref="member">XMC_CAN_PANCMD_DYNAMIC_INSERT_BEFORE</ref><sp/>=<sp/>5U,<sp/><sp/></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1ggab71d557389d7e9579179770028146451a96935082e757ceb84812a2ff2d15eec8" kindref="member">XMC_CAN_PANCMD_STATIC_INSERT_BEHIND</ref><sp/>=<sp/>6U,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1ggab71d557389d7e9579179770028146451a81e6e9e5b0f9c23050835639b9939294" kindref="member">XMC_CAN_PANCMD_DYNAMIC_INSERT_BEHIND</ref><sp/>=<sp/>7U<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="206"><highlight class="normal">}<sp/><ref refid="group___c_a_n_1gab71d557389d7e9579179770028146451" kindref="member">XMC_CAN_PANCMD_t</ref>;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>XMC_CAN_LOOKBACKMODE</highlight></codeline>
<codeline lineno="213"><highlight class="normal">{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1gga9550c3eb3076c42f27d5d240d19db0dba22c34251db302b3be55a5bb97ebd2dab" kindref="member">XMC_CAN_LOOKBACKMODE_ENABLED</ref>,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1gga9550c3eb3076c42f27d5d240d19db0dbaa30431674d0a8b754ca912a435ac20b4" kindref="member">XMC_CAN_LOOKBACKMODE_DISABLED</ref><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="216"><highlight class="normal">}<sp/><ref refid="group___c_a_n_1ga9550c3eb3076c42f27d5d240d19db0db" kindref="member">XMC_CAN_LOOKBACKMODE_t</ref>;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>XMC_CAN_MO_TYPE</highlight></codeline>
<codeline lineno="222"><highlight class="normal">{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1gga3fbcea02aab3f82946f94f9a31a23cc6adb96d9144918c070dde84f0e56fc77be" kindref="member">XMC_CAN_MO_TYPE_RECMSGOBJ</ref>,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1gga3fbcea02aab3f82946f94f9a31a23cc6a9cbbf9631c069f9b398f617d96f5f920" kindref="member">XMC_CAN_MO_TYPE_TRANSMSGOBJ</ref><sp/><sp/></highlight></codeline>
<codeline lineno="225"><highlight class="normal">}<sp/><ref refid="group___c_a_n_1ga3fbcea02aab3f82946f94f9a31a23cc6" kindref="member">XMC_CAN_MO_TYPE_t</ref>;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>XMC_CAN_FRAME_TYPE</highlight></codeline>
<codeline lineno="231"><highlight class="normal">{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1gga4931cde412f7a12b60fefc606a6c9380a0c8700174238a98da38474ae5b0be5fd" kindref="member">XMC_CAN_FRAME_TYPE_STANDARD_11BITS</ref>,<sp/></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1gga4931cde412f7a12b60fefc606a6c9380a70a77bae271fd1769d782f8f5cafd999" kindref="member">XMC_CAN_FRAME_TYPE_EXTENDED_29BITS</ref><sp/><sp/></highlight></codeline>
<codeline lineno="234"><highlight class="normal">}<sp/><ref refid="group___c_a_n_1ga4931cde412f7a12b60fefc606a6c9380" kindref="member">XMC_CAN_FRAME_TYPE_t</ref>;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>XMC_CAN_ARBITRATION_MODE</highlight></codeline>
<codeline lineno="241"><highlight class="normal">{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1ggaf6e73fbe8be3bebeaae1083536ed1843a2f16f10b626bec423fa29b79686936c1" kindref="member">XMC_CAN_ARBITRATION_MODE_ORDER_BASED_PRIO_1</ref><sp/>=<sp/>1U,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1ggaf6e73fbe8be3bebeaae1083536ed1843a15039a3d1221fcd179a4ee21f51e7204" kindref="member">XMC_CAN_ARBITRATION_MODE_IDE_DIR_BASED_PRIO_2</ref><sp/>=<sp/>2U,<sp/></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1ggaf6e73fbe8be3bebeaae1083536ed1843a254677673b5d5968ab5d602bd30536e4" kindref="member">XMC_CAN_ARBITRATION_MODE_ORDER_BASED_PRIO_3</ref><sp/>=<sp/>3U<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="245"><highlight class="normal">}<sp/><ref refid="group___c_a_n_1gaf6e73fbe8be3bebeaae1083536ed1843" kindref="member">XMC_CAN_ARBITRATION_MODE_t</ref>;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group___c_a_n_1gga97b0064e80ec6d5bfcab78f7a35b49a0a647789e36d9da1a73ca8f3b527d0184c" kindref="member">XMC_CAN_FRAME_COUNT_MODE</ref></highlight></codeline>
<codeline lineno="251"><highlight class="normal">{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1gga97b0064e80ec6d5bfcab78f7a35b49a0a647789e36d9da1a73ca8f3b527d0184c" kindref="member">XMC_CAN_FRAME_COUNT_MODE</ref><sp/>=<sp/>0U,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1gga97b0064e80ec6d5bfcab78f7a35b49a0aac7d15812333ab4cd870315680bbe4f1" kindref="member">XMC_CAN_FRAME_COUNT_MODE_TIME_STAMP</ref><sp/>=<sp/>1U,<sp/><sp/></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1gga97b0064e80ec6d5bfcab78f7a35b49a0af1c283fc1952d44d1aa91317a3a6acbe" kindref="member">XMC_CAN_FRAME_COUNT_MODE_BIT_TIMING</ref><sp/>=<sp/>2U<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="255"><highlight class="normal">}<sp/><ref refid="group___c_a_n_1ga97b0064e80ec6d5bfcab78f7a35b49a0" kindref="member">XMC_CAN_FRAME_COUNT_MODE_t</ref>;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>XMC_CAN_DM</highlight></codeline>
<codeline lineno="261"><highlight class="normal">{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1gga96241438cdf8b6f817c9ab98567f072aac0e7fa972f989165c81e3a53b63199d5" kindref="member">XMC_CAN_DM_NORMAL</ref><sp/>=<sp/>1U,<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1gga96241438cdf8b6f817c9ab98567f072aaf4cc302d3f7b8736fe1db557a6f1e632" kindref="member">XMC_CAN_DM_FRACTIONAL</ref><sp/>=<sp/>2U,<sp/><sp/></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1gga96241438cdf8b6f817c9ab98567f072aa68e24505b0fc77a4cec71029d2f559a5" kindref="member">XMC_CAN_DM_OFF</ref><sp/>=<sp/>3U<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="265"><highlight class="normal">}<sp/><ref refid="group___c_a_n_1ga96241438cdf8b6f817c9ab98567f072a" kindref="member">XMC_CAN_DM_t</ref>;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>XMC_CAN_MO_SET_STATUS</highlight></codeline>
<codeline lineno="271"><highlight class="normal">{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1gga71459a95ce4da56054ac63b26450d53fa303d6f4c2fb5290c4a4e9d8e56eabe0e" kindref="member">XMC_CAN_MO_SET_STATUS_RX_PENDING</ref><sp/>=<sp/>CAN_MO_MOCTR_SETRXPND_Msk,<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1gga71459a95ce4da56054ac63b26450d53fad4cb2392027d767eed7859614d1f3f1c" kindref="member">XMC_CAN_MO_SET_STATUS_TX_PENDING</ref><sp/>=<sp/>CAN_MO_MOCTR_SETTXPND_Msk,<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1gga71459a95ce4da56054ac63b26450d53fa6020987f73980696994871cac1317be7" kindref="member">XMC_CAN_MO_SET_STATUS_RX_UPDATING</ref><sp/>=<sp/>CAN_MO_MOCTR_SETRXUPD_Msk,<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1gga71459a95ce4da56054ac63b26450d53fab93297cd07ac9cb60c5d112990613bca" kindref="member">XMC_CAN_MO_SET_STATUS_NEW_DATA</ref><sp/>=<sp/>CAN_MO_MOCTR_SETNEWDAT_Msk,<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1gga71459a95ce4da56054ac63b26450d53facbdf07442367ad1f79bc190832f30300" kindref="member">XMC_CAN_MO_SET_STATUS_MESSAGE_LOST</ref><sp/>=<sp/>CAN_MO_MOCTR_SETMSGLST_Msk,<sp/><sp/></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1gga71459a95ce4da56054ac63b26450d53faedda8bca0890ce30b0ab1c1b953b3cd2" kindref="member">XMC_CAN_MO_SET_STATUS_MESSAGE_VALID</ref><sp/>=<sp/>CAN_MO_MOCTR_SETMSGVAL_Msk,<sp/></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1gga71459a95ce4da56054ac63b26450d53fa0ed9e9d339a6f185a9026833efef67b9" kindref="member">XMC_CAN_MO_SET_STATUS_RX_TX_SELECTED</ref><sp/>=<sp/>CAN_MO_MOCTR_SETRTSEL_Msk,<sp/></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1gga71459a95ce4da56054ac63b26450d53fa30b9ba23b0da7b3a073d27d876b39275" kindref="member">XMC_CAN_MO_SET_STATUS_RX_ENABLE</ref><sp/>=<sp/>CAN_MO_MOCTR_SETRXEN_Msk,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1gga71459a95ce4da56054ac63b26450d53fa12f8d82e7b7de063551dcefb0510fba5" kindref="member">XMC_CAN_MO_SET_STATUS_TX_REQUEST</ref><sp/>=<sp/>CAN_MO_MOCTR_SETTXRQ_Msk,<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1gga71459a95ce4da56054ac63b26450d53fa1c7a46c665294b71d0a2f31ba93bc2a8" kindref="member">XMC_CAN_MO_SET_STATUS_TX_ENABLE0</ref><sp/>=<sp/>CAN_MO_MOCTR_SETTXEN0_Msk,<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1gga71459a95ce4da56054ac63b26450d53fa8a6148a8f7bf272413853a65b57f1034" kindref="member">XMC_CAN_MO_SET_STATUS_TX_ENABLE1</ref><sp/>=<sp/>CAN_MO_MOCTR_SETTXEN1_Msk,<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1gga71459a95ce4da56054ac63b26450d53fa2f2fa2587236ccb1c35873ff54fd767c" kindref="member">XMC_CAN_MO_SET_STATUS_MESSAGE_DIRECTION</ref><sp/>=<sp/>CAN_MO_MOCTR_SETDIR_Msk<sp/></highlight></codeline>
<codeline lineno="284"><highlight class="normal">}<sp/><ref refid="group___c_a_n_1ga71459a95ce4da56054ac63b26450d53f" kindref="member">XMC_CAN_MO_SET_STATUS_t</ref>;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>XMC_CAN_MO_RESET_STATUS</highlight></codeline>
<codeline lineno="290"><highlight class="normal">{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1gga117048d5267011245c4ff40047d00c64a1c212d44397a6cd8bbb39f8aed2b9906" kindref="member">XMC_CAN_MO_RESET_STATUS_RX_PENDING</ref><sp/>=<sp/>CAN_MO_MOCTR_RESRXPND_Msk,<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1gga117048d5267011245c4ff40047d00c64ad133d5e33ad9288c9143a6d447c689af" kindref="member">XMC_CAN_MO_RESET_STATUS_TX_PENDING</ref><sp/>=<sp/>CAN_MO_MOCTR_RESTXPND_Msk,<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1gga117048d5267011245c4ff40047d00c64adb418d365b096cf0aca00b3c124696f9" kindref="member">XMC_CAN_MO_RESET_STATUS_RX_UPDATING</ref><sp/>=<sp/>CAN_MO_MOCTR_RESRXUPD_Msk,<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1gga117048d5267011245c4ff40047d00c64aa771b9bc7ad143ff66e41f7ae9f27edb" kindref="member">XMC_CAN_MO_RESET_STATUS_NEW_DATA</ref><sp/>=<sp/>CAN_MO_MOCTR_RESNEWDAT_Msk,<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1gga117048d5267011245c4ff40047d00c64a3547c4dac9d77f6fa0cb3464a3b36708" kindref="member">XMC_CAN_MO_RESET_STATUS_MESSAGE_LOST</ref><sp/>=<sp/>CAN_MO_MOCTR_RESMSGLST_Msk,<sp/><sp/></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1gga117048d5267011245c4ff40047d00c64a377ea8a361359cbbe2f4286918a8cbab" kindref="member">XMC_CAN_MO_RESET_STATUS_MESSAGE_VALID</ref><sp/>=<sp/>CAN_MO_MOCTR_RESMSGVAL_Msk,<sp/></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1gga117048d5267011245c4ff40047d00c64a94b3ac53c417babaa42818b60511efe8" kindref="member">XMC_CAN_MO_RESET_STATUS_RX_TX_SELECTED</ref><sp/>=<sp/>CAN_MO_MOCTR_RESRTSEL_Msk,<sp/></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1gga117048d5267011245c4ff40047d00c64aadaf7a099094ba1c5d9b903cc2239b2a" kindref="member">XMC_CAN_MO_RESET_STATUS_RX_ENABLE</ref><sp/>=<sp/>CAN_MO_MOCTR_RESRXEN_Msk,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1gga117048d5267011245c4ff40047d00c64a6becf65cf034368185880f85060fa8a7" kindref="member">XMC_CAN_MO_RESET_STATUS_TX_REQUEST</ref><sp/>=<sp/>CAN_MO_MOCTR_RESTXRQ_Msk,<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1gga117048d5267011245c4ff40047d00c64a1a70085e5c0010d3760c9fffe44744a0" kindref="member">XMC_CAN_MO_RESET_STATUS_TX_ENABLE0</ref><sp/>=<sp/>CAN_MO_MOCTR_RESTXEN0_Msk,<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1gga117048d5267011245c4ff40047d00c64a3be253cb4f6ed3919059db3411ef9096" kindref="member">XMC_CAN_MO_RESET_STATUS_TX_ENABLE1</ref><sp/>=<sp/>CAN_MO_MOCTR_RESTXEN1_Msk,<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1gga117048d5267011245c4ff40047d00c64ac4305c92dd18bee6b4dfa410b8c35af4" kindref="member">XMC_CAN_MO_RESET_STATUS_MESSAGE_DIRECTION</ref><sp/>=<sp/>CAN_MO_MOCTR_RESDIR_Msk<sp/></highlight></codeline>
<codeline lineno="303"><highlight class="normal">}<sp/><ref refid="group___c_a_n_1ga117048d5267011245c4ff40047d00c64" kindref="member">XMC_CAN_MO_RESET_STATUS_t</ref>;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>XMC_CAN_MO_STATUS</highlight></codeline>
<codeline lineno="309"><highlight class="normal">{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1ggabb506b9cf0ade6f965c2af19458a03e5a1b8f9b196459950f54e9327f2b3943fc" kindref="member">XMC_CAN_MO_STATUS_RX_PENDING</ref><sp/>=<sp/>CAN_MO_MOSTAT_RXPND_Msk,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1ggabb506b9cf0ade6f965c2af19458a03e5a88242e8be7e425ea3d8a3c175f38282e" kindref="member">XMC_CAN_MO_STATUS_TX_PENDING</ref><sp/>=<sp/>CAN_MO_MOSTAT_TXPND_Msk,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1ggabb506b9cf0ade6f965c2af19458a03e5a847e70a756e5df4fd8daf9d420bdbce7" kindref="member">XMC_CAN_MO_STATUS_RX_UPDATING</ref><sp/>=<sp/>CAN_MO_MOSTAT_RXUPD_Msk,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1ggabb506b9cf0ade6f965c2af19458a03e5a0ab63a7b71c23ce6b7b730a8682039fe" kindref="member">XMC_CAN_MO_STATUS_NEW_DATA</ref><sp/>=<sp/>CAN_MO_MOSTAT_NEWDAT_Msk,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1ggabb506b9cf0ade6f965c2af19458a03e5a41f6ed38392c9872c65216d86206a052" kindref="member">XMC_CAN_MO_STATUS_MESSAGE_LOST</ref><sp/>=<sp/>CAN_MO_MOSTAT_MSGLST_Msk,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1ggabb506b9cf0ade6f965c2af19458a03e5a8e37c5d67e1849fee65a5d4e1dbc6413" kindref="member">XMC_CAN_MO_STATUS_MESSAGE_VALID</ref><sp/>=<sp/>CAN_MO_MOSTAT_MSGVAL_Msk,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1ggabb506b9cf0ade6f965c2af19458a03e5a7c909235ece370fd6f1cec524fade441" kindref="member">XMC_CAN_MO_STATUS_RX_TX_SELECTED</ref><sp/>=<sp/>CAN_MO_MOSTAT_RTSEL_Msk,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1ggabb506b9cf0ade6f965c2af19458a03e5a9c80ec109bfab6b150927c5113164717" kindref="member">XMC_CAN_MO_STATUS_RX_ENABLE</ref><sp/>=<sp/>CAN_MO_MOSTAT_RXEN_Msk,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1ggabb506b9cf0ade6f965c2af19458a03e5ac31300afee5ee84c6a6567f324d09e33" kindref="member">XMC_CAN_MO_STATUS_TX_REQUEST</ref><sp/>=<sp/>CAN_MO_MOSTAT_TXRQ_Msk,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1ggabb506b9cf0ade6f965c2af19458a03e5af66c70b9479a73ab2a17056b03f0603a" kindref="member">XMC_CAN_MO_STATUS_TX_ENABLE0</ref><sp/>=<sp/>CAN_MO_MOSTAT_TXEN0_Msk,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1ggabb506b9cf0ade6f965c2af19458a03e5a0d5ab69ba1731c40cc3610f27274c0d8" kindref="member">XMC_CAN_MO_STATUS_TX_ENABLE1</ref><sp/>=<sp/>CAN_MO_MOSTAT_TXEN1_Msk,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1ggabb506b9cf0ade6f965c2af19458a03e5a37dc776f2f923c7a775b624392b516ae" kindref="member">XMC_CAN_MO_STATUS_MESSAGE_DIRECTION</ref><sp/>=<sp/>CAN_MO_MOSTAT_DIR_Msk,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1ggabb506b9cf0ade6f965c2af19458a03e5aafec6b1eb3f72aef309bcb2905aaa412" kindref="member">XMC_CAN_MO_STATUS_LIST</ref><sp/>=<sp/>CAN_MO_MOSTAT_LIST_Msk,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1ggabb506b9cf0ade6f965c2af19458a03e5ac4d00f7505287edec44fe716c2fd0fa4" kindref="member">XMC_CAN_MO_STATUS_POINTER_TO_PREVIOUS_MO</ref><sp/>=<sp/>CAN_MO_MOSTAT_PPREV_Msk,<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1ggabb506b9cf0ade6f965c2af19458a03e5aebb8bf978c02107070746df91bb33db5" kindref="member">XMC_CAN_MO_STATUS_POINTER_TO_NEXT_MO</ref><sp/>=<sp/>(int32_t)CAN_MO_MOSTAT_PNEXT_Msk<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="325"><highlight class="normal">}<sp/><ref refid="group___c_a_n_1gabb506b9cf0ade6f965c2af19458a03e5" kindref="member">XMC_CAN_MO_STATUS_t</ref>;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>XMC_CAN_NODE_STATUS</highlight></codeline>
<codeline lineno="331"><highlight class="normal">{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1gga6efda609ad66be6ae2564b3b4310c362ac68859ef279c7dec4f14a0ea58d178ae" kindref="member">XMC_CAN_NODE_STATUS_LAST_ERROR_CODE</ref><sp/>=<sp/>CAN_NODE_NSR_LEC_Msk,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1gga6efda609ad66be6ae2564b3b4310c362aefaab30a4c4568e507a1c21f9f1e11e7" kindref="member">XMC_CAN_NODE_STATUS_TX_OK</ref><sp/>=<sp/>CAN_NODE_NSR_TXOK_Msk,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1gga6efda609ad66be6ae2564b3b4310c362aa5a64a16d14798b62820958e66b7598f" kindref="member">XMC_CAN_NODE_STATUS_RX_OK</ref><sp/>=<sp/>CAN_NODE_NSR_RXOK_Msk,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1gga6efda609ad66be6ae2564b3b4310c362ac23f25605f837c3aceb03d19d56fa797" kindref="member">XMC_CAN_NODE_STATUS_ALERT_WARNING</ref><sp/>=<sp/>CAN_NODE_NSR_ALERT_Msk,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1gga6efda609ad66be6ae2564b3b4310c362a53da5cae844bd96caa187caaaf0cd48f" kindref="member">XMC_CAN_NODE_STATUS_ERROR_WARNING_STATUS</ref><sp/>=<sp/>CAN_NODE_NSR_EWRN_Msk,<sp/></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1gga6efda609ad66be6ae2564b3b4310c362ac04532594e806f091badea37e256ec3f" kindref="member">XMC_CAN_NODE_STATUS_BUS_OFF</ref><sp/>=<sp/>CAN_NODE_NSR_BOFF_Msk,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1gga6efda609ad66be6ae2564b3b4310c362a7b64eb27a85e13d2804e5ea0a964f7a4" kindref="member">XMC_CAN_NODE_STATUS_LIST_LENGTH_ERROR</ref><sp/>=<sp/>CAN_NODE_NSR_LLE_Msk,<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1gga6efda609ad66be6ae2564b3b4310c362a54b1b1f1d2129479436d046d654fcd47" kindref="member">XMC_CAN_NODE_STATUS_LIST_OBJECT_ERROR</ref><sp/>=<sp/>CAN_NODE_NSR_LOE_Msk,<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="340"><highlight class="preprocessor">#if<sp/>!defined(MULTICAN_PLUS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1gga6efda609ad66be6ae2564b3b4310c362ad09ce552548c3886ba6b3f059cd804ea" kindref="member">XMC_CAN_NODE_STATUS_SUSPENDED_ACK</ref><sp/>=<sp/>CAN_NODE_NSR_SUSACK_Msk<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="342"><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal">}<sp/><ref refid="group___c_a_n_1ga6efda609ad66be6ae2564b3b4310c362" kindref="member">XMC_CAN_NODE_STATUS_t</ref>;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>XMC_CAN_NODE_CONTROL</highlight></codeline>
<codeline lineno="350"><highlight class="normal">{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1gga43682a582f983e5e6d8bed1d863c0525aba1126af074ff7159efc7f77a0201826" kindref="member">XMC_CAN_NODE_CONTROL_NODE_INIT</ref><sp/>=<sp/>CAN_NODE_NCR_INIT_Msk,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1gga43682a582f983e5e6d8bed1d863c0525a6716d1c06b6fd151281d6cb386cfc0fb" kindref="member">XMC_CAN_NODE_CONTROL_TX_INT_ENABLE</ref><sp/>=<sp/>CAN_NODE_NCR_TRIE_Msk,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1gga43682a582f983e5e6d8bed1d863c0525a3b9e2a20f913aa55e720526491730b0a" kindref="member">XMC_CAN_NODE_CONTROL_LEC_INT_ENABLE</ref><sp/>=<sp/>CAN_NODE_NCR_LECIE_Msk,<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1gga43682a582f983e5e6d8bed1d863c0525a0851c6a8c1e108eb33e6ccf573b07bf8" kindref="member">XMC_CAN_NODE_CONTROL_ALERT_INT_ENABLE</ref><sp/>=<sp/>CAN_NODE_NCR_ALIE_Msk,<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1gga43682a582f983e5e6d8bed1d863c0525a7503c88d84b84a6cb31e128741ccdc9f" kindref="member">XMC_CAN_NODE_CONTROL_CAN_DISABLE</ref><sp/>=<sp/>CAN_NODE_NCR_CANDIS_Msk,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1gga43682a582f983e5e6d8bed1d863c0525adcbafb11f340efecbcc204ad443c9651" kindref="member">XMC_CAN_NODE_CONTROL_CONF_CHANGE_ENABLE</ref><sp/>=<sp/>CAN_NODE_NCR_CCE_Msk,<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1gga43682a582f983e5e6d8bed1d863c0525a92c2bad37cdb1110a79ec5822c8a18a5" kindref="member">XMC_CAN_NODE_CONTROL_CAN_ANALYZER_NODEDE</ref><sp/>=<sp/>CAN_NODE_NCR_CALM_Msk,<sp/><sp/></highlight></codeline>
<codeline lineno="358"><highlight class="preprocessor">#if<sp/>!defined(MULTICAN_PLUS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1gga43682a582f983e5e6d8bed1d863c0525ae99f98152a904df2dd041ee6ee94543e" kindref="member">XMC_CAN_NODE_CONTROL_SUSPENDED_ENABLE</ref><sp/>=<sp/>CAN_NODE_NCR_SUSEN_Msk<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="360"><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal">}<sp/><ref refid="group___c_a_n_1ga43682a582f983e5e6d8bed1d863c0525" kindref="member">XMC_CAN_NODE_CONTROL_t</ref>;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>XMC_CAN_NODE_EVENT</highlight></codeline>
<codeline lineno="367"><highlight class="normal">{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1ggae708efa53df4791e665aa6a900eeb6a6a2159cba25f718f956a9b11789b6f355e" kindref="member">XMC_CAN_NODE_EVENT_TX_INT</ref><sp/>=<sp/>CAN_NODE_NCR_TRIE_Msk,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1ggae708efa53df4791e665aa6a900eeb6a6a28a0b05df7dfc670015e4978f053ff09" kindref="member">XMC_CAN_NODE_EVENT_ALERT</ref><sp/>=<sp/>CAN_NODE_NCR_ALIE_Msk,<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1ggae708efa53df4791e665aa6a900eeb6a6a7370725ebacb12b3b2947cb3f852b774" kindref="member">XMC_CAN_NODE_EVENT_LEC</ref><sp/>=<sp/>CAN_NODE_NCR_LECIE_Msk,<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1ggae708efa53df4791e665aa6a900eeb6a6a9201ef0affec049535dc6aa8fdb6740b" kindref="member">XMC_CAN_NODE_EVENT_CFCIE</ref><sp/>=<sp/>CAN_NODE_NFCR_CFCIE_Msk<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="372"><highlight class="normal">}<sp/><ref refid="group___c_a_n_1gae708efa53df4791e665aa6a900eeb6a6" kindref="member">XMC_CAN_NODE_EVENT_t</ref>;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>XMC_CAN_NODE_POINTER_EVENT</highlight></codeline>
<codeline lineno="378"><highlight class="normal">{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1gga8df6893c4bb8410cf24639fea906ebeaa6d63393a29fd63308bd2d6b29a870ea0" kindref="member">XMC_CAN_NODE_POINTER_EVENT_ALERT</ref><sp/>=<sp/>CAN_NODE_NIPR_ALINP_Pos,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1gga8df6893c4bb8410cf24639fea906ebeaadf0723b000e518abb44fbc23709125e2" kindref="member">XMC_CAN_NODE_POINTER_EVENT_LEC</ref><sp/>=<sp/>CAN_NODE_NIPR_LECINP_Pos,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1gga8df6893c4bb8410cf24639fea906ebeaa2f630df69e6fcb1adf07ffb3d254bf48" kindref="member">XMC_CAN_NODE_POINTER_EVENT_TRANSFER_OK</ref><sp/>=<sp/>CAN_NODE_NIPR_TRINP_Pos,<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1gga8df6893c4bb8410cf24639fea906ebeaa8210f7ff39c70d241f29f6aafc533170" kindref="member">XMC_CAN_NODE_POINTER_EVENT_FRAME_COUNTER</ref><sp/>=<sp/>CAN_NODE_NIPR_CFCINP_Pos<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="383"><highlight class="normal">}<sp/><ref refid="group___c_a_n_1ga8df6893c4bb8410cf24639fea906ebea" kindref="member">XMC_CAN_NODE_POINTER_EVENT_t</ref>;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>XMC_CAN_MO_POINTER_EVENT</highlight></codeline>
<codeline lineno="389"><highlight class="normal">{</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1gga5779e98919b963f0073cb04a129cb581a6000eb78e912e0f48e909b0faa7f454b" kindref="member">XMC_CAN_MO_POINTER_EVENT_TRANSMIT</ref><sp/>=<sp/>CAN_MO_MOIPR_TXINP_Pos,<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1gga5779e98919b963f0073cb04a129cb581a36448cdf2a9633974ed7c196d1c1ae12" kindref="member">XMC_CAN_MO_POINTER_EVENT_RECEIVE</ref><sp/>=<sp/>CAN_MO_MOIPR_RXINP_Pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="392"><highlight class="normal">}<sp/><ref refid="group___c_a_n_1ga5779e98919b963f0073cb04a129cb581" kindref="member">XMC_CAN_MO_POINTER_EVENT_t</ref>;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>XMC_CAN_MO_EVENT</highlight></codeline>
<codeline lineno="398"><highlight class="normal">{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1gga4a4368056ee3b69f1c38f5fa41687704a7fd71a6aa1f8cbcb11c8fca26b1da6fe" kindref="member">XMC_CAN_MO_EVENT_TRANSMIT</ref><sp/>=<sp/>CAN_MO_MOFCR_TXIE_Msk,<sp/><sp/></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1gga4a4368056ee3b69f1c38f5fa41687704a22ef9ff08c28497c2a3b2ea4ebfc8908" kindref="member">XMC_CAN_MO_EVENT_RECEIVE</ref><sp/>=<sp/>CAN_MO_MOFCR_RXIE_Msk,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1gga4a4368056ee3b69f1c38f5fa41687704a9932d0b3d2bdcb92300f4e77f4d952b8" kindref="member">XMC_CAN_MO_EVENT_OVERFLOW</ref><sp/>=<sp/>CAN_MO_MOFCR_OVIE_Msk,<sp/><sp/></highlight></codeline>
<codeline lineno="402"><highlight class="normal">}<sp/><ref refid="group___c_a_n_1ga4a4368056ee3b69f1c38f5fa41687704" kindref="member">XMC_CAN_MO_EVENT_t</ref>;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>XMC_CAN_NODE_RECEIVE_INPUT</highlight></codeline>
<codeline lineno="408"><highlight class="normal">{</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1ggae061ae75276ded4637f93c9b7d5e44ebaab62ebed090f4713dac915c70e1c19a1" kindref="member">XMC_CAN_NODE_RECEIVE_INPUT_RXDCA</ref>,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1ggae061ae75276ded4637f93c9b7d5e44eba5b49b8672416934d2bd3d5ab3ddb26c9" kindref="member">XMC_CAN_NODE_RECEIVE_INPUT_RXDCB</ref>,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1ggae061ae75276ded4637f93c9b7d5e44ebab4cbc80841709a4074a3756af8dea8d5" kindref="member">XMC_CAN_NODE_RECEIVE_INPUT_RXDCC</ref>,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1ggae061ae75276ded4637f93c9b7d5e44ebada51c16744dbf9e8ce4b0815407434b0" kindref="member">XMC_CAN_NODE_RECEIVE_INPUT_RXDCD</ref>,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1ggae061ae75276ded4637f93c9b7d5e44ebad9fac1be9fdb0f7f5bbd969b3edb7a5b" kindref="member">XMC_CAN_NODE_RECEIVE_INPUT_RXDCE</ref>,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1ggae061ae75276ded4637f93c9b7d5e44ebab136a51839443d96b8bda9b43278b4e5" kindref="member">XMC_CAN_NODE_RECEIVE_INPUT_RXDCF</ref>,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1ggae061ae75276ded4637f93c9b7d5e44eba2050c1e6dc231afdd965de94156fae1b" kindref="member">XMC_CAN_NODE_RECEIVE_INPUT_RXDCG</ref>,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1ggae061ae75276ded4637f93c9b7d5e44eba0d4544e0a8dc3421e2f4da23c3346b83" kindref="member">XMC_CAN_NODE_RECEIVE_INPUT_RXDCH</ref><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="417"><highlight class="normal">}<sp/><ref refid="group___c_a_n_1gae061ae75276ded4637f93c9b7d5e44eb" kindref="member">XMC_CAN_NODE_RECEIVE_INPUT_t</ref>;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>XMC_CAN_NODE_LAST_ERROR_DIR</highlight></codeline>
<codeline lineno="423"><highlight class="normal">{</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1gga58a294b10b4e0b575f0d378313fc3b05a466fce0833dd131db8d089538553a2cb" kindref="member">XMC_CAN_NODE_LAST_ERROR_DIR_WHILE_NODE_RECEPCION</ref>,<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1gga58a294b10b4e0b575f0d378313fc3b05a6e2cf323e7eb07947d286c6ca61d1fa5" kindref="member">XMC_CAN_NODE_LAST_ERROR_DIR_WHILE_NODE_TRANSMISSION</ref><sp/><sp/></highlight></codeline>
<codeline lineno="426"><highlight class="normal">}<sp/><ref refid="group___c_a_n_1ga58a294b10b4e0b575f0d378313fc3b05" kindref="member">XMC_CAN_NODE_LAST_ERROR_DIR_t</ref>;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>XMC_CAN_NODE_LAST_ERROR_INC</highlight></codeline>
<codeline lineno="433"><highlight class="normal">{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1gga588030349d9f7f929bcdfca3b2e1df13abff5ffb7c38d0839f5b69c0dbd3b8077" kindref="member">XMC_CAN_NODE_LAST_ERROR_INC_1</ref>,<sp/></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1gga588030349d9f7f929bcdfca3b2e1df13a2fcd1eb4a760d15a93c22d8aa372458a" kindref="member">XMC_CAN_NODE_LAST_ERROR_INC_8</ref><sp/><sp/></highlight></codeline>
<codeline lineno="436"><highlight class="normal">}<sp/><ref refid="group___c_a_n_1ga588030349d9f7f929bcdfca3b2e1df13" kindref="member">XMC_CAN_NODE_LAST_ERROR_INC_t</ref>;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>XMC_CAN_NODE_INTERRUPT_TRIGGER</highlight></codeline>
<codeline lineno="442"><highlight class="normal">{</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/>XMC_CAN_NODE_INTR_TRIGGER_0<sp/>=<sp/>0x1U,</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/>XMC_CAN_NODE_INTR_TRIGGER_1<sp/>=<sp/>0x2U,</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/>XMC_CAN_NODE_INTR_TRIGGER_2<sp/>=<sp/>0x4U,</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/>XMC_CAN_NODE_INTR_TRIGGER_3<sp/>=<sp/>0x8U,</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/>XMC_CAN_NODE_INTR_TRIGGER_4<sp/>=<sp/>0x16U,</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/>XMC_CAN_NODE_INTR_TRIGGER_5<sp/>=<sp/>0x32U,</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/>XMC_CAN_NODE_INTR_TRIGGER_6<sp/>=<sp/>0x64U,</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/>XMC_CAN_NODE_INTR_TRIGGER_7<sp/>=<sp/>0x128U,</highlight></codeline>
<codeline lineno="451"><highlight class="normal">}<sp/><ref refid="group___c_a_n_1gacbd6bd74f665b242e800d56b7e1b936d" kindref="member">XMC_CAN_NODE_INTERRUPT_TRIGGER_t</ref>;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>XMC_CAN_CANCLKSRC</highlight></codeline>
<codeline lineno="457"><highlight class="normal">{</highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(MULTICAN_PLUS)<sp/>||<sp/>defined(DOXYGEN)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(UC_FAMILY<sp/>==<sp/>XMC4)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1ggaa70821b48b35c15555d81a4c81fceb80a06bd7df9f9b96e66c870838dce5a4fd4" kindref="member">XMC_CAN_CANCLKSRC_FPERI</ref><sp/>=<sp/>0x1U,<sp/></highlight></codeline>
<codeline lineno="461"><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/>XMC_CAN_CANCLKSRC_MCLK<sp/>=<sp/>0x1U,<sp/></highlight></codeline>
<codeline lineno="463"><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1ggaa70821b48b35c15555d81a4c81fceb80a96f23306c6856ff7ed19d16a0df6e19c" kindref="member">XMC_CAN_CANCLKSRC_FOHP</ref><sp/>=<sp/>0x2U,<sp/></highlight></codeline>
<codeline lineno="465"><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1ggaa70821b48b35c15555d81a4c81fceb80a06bd7df9f9b96e66c870838dce5a4fd4" kindref="member">XMC_CAN_CANCLKSRC_FPERI</ref><sp/>=<sp/>0x1U,<sp/></highlight></codeline>
<codeline lineno="467"><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal">}<sp/><ref refid="group___c_a_n_1gaa70821b48b35c15555d81a4c81fceb80" kindref="member">XMC_CAN_CANCLKSRC_t</ref>;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight><highlight class="comment">/*********************************************************************************************************************</highlight></codeline>
<codeline lineno="471"><highlight class="comment"><sp/>*<sp/>DATA<sp/>STRUCTURES</highlight></codeline>
<codeline lineno="472"><highlight class="comment"><sp/>********************************************************************************************************************/</highlight></codeline>
<codeline lineno="476" refid="struct_x_m_c___c_a_n___n_o_d_e___n_o_m_i_n_a_l___b_i_t___t_i_m_e___c_o_n_f_i_g__t" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG</highlight></codeline>
<codeline lineno="477"><highlight class="normal">{</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/>uint32_t<sp/>can_frequency;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/>uint32_t<sp/>baudrate;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/>uint16_t<sp/>sample_point;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/>uint16_t<sp/>sjw;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="483"><highlight class="normal">}<sp/><ref refid="struct_x_m_c___c_a_n___n_o_d_e___n_o_m_i_n_a_l___b_i_t___t_i_m_e___c_o_n_f_i_g__t" kindref="compound">XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG_t</ref>;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="489" refid="struct_x_m_c___c_a_n___f_i_f_o___c_o_n_f_i_g__t" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">XMC_CAN_FIFO_CONFIG</highlight></codeline>
<codeline lineno="490"><highlight class="normal">{</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/>uint8_t<sp/>fifo_bottom;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/>uint8_t<sp/>fifo_top;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/>uint8_t<sp/>fifo_base;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="494"><highlight class="normal">}<sp/><ref refid="struct_x_m_c___c_a_n___f_i_f_o___c_o_n_f_i_g__t" kindref="compound">XMC_CAN_FIFO_CONFIG_t</ref>;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="500" refid="struct_x_m_c___c_a_n___g_a_t_e_w_a_y___c_o_n_f_i_g__t" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">XMC_CAN_GATEWAY_CONFIG</highlight></codeline>
<codeline lineno="501"><highlight class="normal">{</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/>uint8_t<sp/>gateway_bottom;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/>uint8_t<sp/>gateway_top;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/>uint8_t<sp/>gateway_base;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>gateway_data_frame_send;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>gateway_identifier_copy;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>gateway_data_length_code_copy;<sp/></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>gateway_data_copy;<sp/><sp/></highlight></codeline>
<codeline lineno="515"><highlight class="normal">}<sp/><ref refid="struct_x_m_c___c_a_n___g_a_t_e_w_a_y___c_o_n_f_i_g__t" kindref="compound">XMC_CAN_GATEWAY_CONFIG_t</ref>;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>CAN_GLOBAL_TypeDef<sp/><ref refid="group___c_a_n_1ga4c8ef1a9555bd8e1658e480944dca81e" kindref="member">XMC_CAN_t</ref>;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight><highlight class="comment">/*Anonymous<sp/>structure/union<sp/>guard<sp/>start*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__CC_ARM)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>push</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>anon_unions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(__TASKING__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>warning<sp/>586</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight></codeline>
<codeline lineno="535" refid="struct_x_m_c___c_a_n___n_o_d_e___f_r_a_m_e___c_o_u_n_t_e_r__t" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">XMC_CAN_NODE_FRAME_COUNTER</highlight></codeline>
<codeline lineno="536"><highlight class="normal">{</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">union</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>:<sp/>16;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>can_frame_count_selection:<sp/>3;<sp/><sp/></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>can_frame_count_mode:<sp/>2;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>:<sp/>11;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>nfcr;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="550"><highlight class="normal">}<sp/><ref refid="struct_x_m_c___c_a_n___n_o_d_e___f_r_a_m_e___c_o_u_n_t_e_r__t" kindref="compound">XMC_CAN_NODE_FRAME_COUNTER_t</ref>;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>CAN_NODE_TypeDef<sp/><sp/><ref refid="group___c_a_n_1gaa3657c03a38eb66c07f4b8ce1fc83aeb" kindref="member">XMC_CAN_NODE_t</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="560" refid="struct_x_m_c___c_a_n___m_o__t" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">XMC_CAN_MO</highlight></codeline>
<codeline lineno="561"><highlight class="normal">{</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/>CAN_MO_TypeDef<sp/>*can_mo_ptr;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">union</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>can_identifier:<sp/>29;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>can_id_mode:<sp/>1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>can_priority:<sp/>2;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>mo_ar;</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">union</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>can_id_mask:<sp/>29;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>can_ide_mask:<sp/>1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>mo_amr;</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/>uint8_t<sp/>can_data_length;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">union</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>can_data_byte[8];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>can_data_word[4];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>can_data[2];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>can_data_long;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1ga3fbcea02aab3f82946f94f9a31a23cc6" kindref="member">XMC_CAN_MO_TYPE_t</ref><sp/>can_mo_type;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="596"><highlight class="normal">}<sp/><ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref>;</highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight><highlight class="comment">/*Anonymous<sp/>structure/union<sp/>guard<sp/>end*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__CC_ARM)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>pop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(__TASKING__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>warning<sp/>restore</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight><highlight class="comment">/*********************************************************************************************************************</highlight></codeline>
<codeline lineno="604"><highlight class="comment"><sp/>*<sp/>API<sp/>Prototypes</highlight></codeline>
<codeline lineno="605"><highlight class="comment"><sp/>********************************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___c_a_n_1gae15982ed9fe8b5d5d516bbfd97acac29" kindref="member">XMC_CAN_Disable</ref>(<ref refid="group___c_a_n_1ga4c8ef1a9555bd8e1658e480944dca81e" kindref="member">XMC_CAN_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>obj);</highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___c_a_n_1gaa86fb69d66595df948327ff91e8822d6" kindref="member">XMC_CAN_Enable</ref>(<ref refid="group___c_a_n_1ga4c8ef1a9555bd8e1658e480944dca81e" kindref="member">XMC_CAN_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>obj);</highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___c_a_n_1ga6cb88a392202538165609e216665d7ac" kindref="member">XMC_CAN_AllocateMOtoNodeList</ref>(<ref refid="group___c_a_n_1ga4c8ef1a9555bd8e1658e480944dca81e" kindref="member">XMC_CAN_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>obj,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>node_num,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>mo_num);</highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group___c_a_n_1ga8248647c78ac9309f75f4811dda4e67c" kindref="member">XMC_CAN_IsPanelControlReady</ref>(<ref refid="group___c_a_n_1ga4c8ef1a9555bd8e1658e480944dca81e" kindref="member">XMC_CAN_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>obj)</highlight></codeline>
<codeline lineno="682"><highlight class="normal">{</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">)((obj-&gt;PANCTR<sp/>&amp;<sp/>(CAN_PANCTR_BUSY_Msk<sp/>|<sp/>CAN_PANCTR_RBUSY_Msk))<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="684"><highlight class="normal">}</highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___c_a_n_1ga461411e88974c50a6e7b36e73c9fc56e" kindref="member">XMC_CAN_PanelControl</ref>(<ref refid="group___c_a_n_1ga4c8ef1a9555bd8e1658e480944dca81e" kindref="member">XMC_CAN_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>obj,</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group___c_a_n_1gab71d557389d7e9579179770028146451" kindref="member">XMC_CAN_PANCMD_t</ref><sp/>pancmd,</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>arg1,</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>arg2)</highlight></codeline>
<codeline lineno="713"><highlight class="normal">{</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/>obj-&gt;PANCTR<sp/>=<sp/>(((uint32_t)pancmd<sp/>&lt;&lt;<sp/>CAN_PANCTR_PANCMD_Pos)<sp/>&amp;<sp/>(uint32_t)CAN_PANCTR_PANCMD_Msk)<sp/>|</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((uint32_t)arg1<sp/>&lt;&lt;<sp/>CAN_PANCTR_PANAR1_Pos)<sp/>&amp;<sp/>(uint32_t)CAN_PANCTR_PANAR1_Msk)<sp/>|</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((uint32_t)arg2<sp/>&lt;&lt;<sp/>CAN_PANCTR_PANAR2_Pos)<sp/>&amp;<sp/>(uint32_t)CAN_PANCTR_PANAR2_Msk);</highlight></codeline>
<codeline lineno="717"><highlight class="normal">}</highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___c_a_n_1ga115c3ec73d6cecc0483c71a02524e043" kindref="member">XMC_CAN_EventTrigger</ref>(<ref refid="group___c_a_n_1ga4c8ef1a9555bd8e1658e480944dca81e" kindref="member">XMC_CAN_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>obj,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group___c_a_n_1gacbd6bd74f665b242e800d56b7e1b936d" kindref="member">XMC_CAN_NODE_INTERRUPT_TRIGGER_t</ref><sp/>service_requestr)</highlight></codeline>
<codeline lineno="740"><highlight class="normal">{</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/>obj-&gt;MITR<sp/>=<sp/>((uint32_t)service_requestr<sp/>&lt;&lt;<sp/>CAN_MITR_IT_Pos)<sp/>&amp;<sp/>(uint32_t)CAN_MITR_IT_Msk;</highlight></codeline>
<codeline lineno="742"><highlight class="normal">}</highlight></codeline>
<codeline lineno="743"><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal">uint32_t<sp/><ref refid="group___c_a_n_1gaad8c21b97d426234e799f7a1895907f6" kindref="member">XMC_CAN_InitEx</ref>(<ref refid="group___c_a_n_1ga4c8ef1a9555bd8e1658e480944dca81e" kindref="member">XMC_CAN_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>obj,<sp/><ref refid="group___c_a_n_1gaa70821b48b35c15555d81a4c81fceb80" kindref="member">XMC_CAN_CANCLKSRC_t</ref><sp/>clksrc,<sp/>uint32_t<sp/>can_frequency);</highlight></codeline>
<codeline lineno="773"><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"><ref refid="group___c_a_n_1gaa70821b48b35c15555d81a4c81fceb80" kindref="member">XMC_CAN_CANCLKSRC_t</ref><sp/><ref refid="group___c_a_n_1ga342c01ea7ab6cd06a1ed0bb76447bb81" kindref="member">XMC_CAN_GetBaudrateClockSource</ref>(<ref refid="group___c_a_n_1ga4c8ef1a9555bd8e1658e480944dca81e" kindref="member">XMC_CAN_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>obj);</highlight></codeline>
<codeline lineno="784"><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___c_a_n_1ga6bfa6ec4cc9efd44470400548b5a0d32" kindref="member">XMC_CAN_SetBaudrateClockSource</ref>(<ref refid="group___c_a_n_1ga4c8ef1a9555bd8e1658e480944dca81e" kindref="member">XMC_CAN_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>obj,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group___c_a_n_1gaa70821b48b35c15555d81a4c81fceb80" kindref="member">XMC_CAN_CANCLKSRC_t</ref><sp/>source);</highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal">uint32_t<sp/><ref refid="group___c_a_n_1gaf4303398a9172e5447e43adf375b8382" kindref="member">XMC_CAN_GetBaudrateClockFrequency</ref>(<ref refid="group___c_a_n_1ga4c8ef1a9555bd8e1658e480944dca81e" kindref="member">XMC_CAN_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>obj);</highlight></codeline>
<codeline lineno="806"><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal">uint32_t<sp/><ref refid="group___c_a_n_1gaf19f8e41011ebe7e77b4662cb81e4332" kindref="member">XMC_CAN_GetClockFrequency</ref>(<ref refid="group___c_a_n_1ga4c8ef1a9555bd8e1658e480944dca81e" kindref="member">XMC_CAN_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>obj);</highlight></codeline>
<codeline lineno="818"><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(MULTICAN_PLUS)<sp/>||<sp/>defined(DOXYGEN)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal"></highlight></codeline>
<codeline lineno="842"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___c_a_n_1ga1cec2fa8beb70934e400fc96c4ffe50d" kindref="member">XMC_CAN_Init</ref>(<ref refid="group___c_a_n_1ga4c8ef1a9555bd8e1658e480944dca81e" kindref="member">XMC_CAN_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>obj,<sp/><ref refid="group___c_a_n_1gaa70821b48b35c15555d81a4c81fceb80" kindref="member">XMC_CAN_CANCLKSRC_t</ref><sp/>clksrc,<sp/>uint32_t<sp/>can_frequency);</highlight></codeline>
<codeline lineno="843"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___c_a_n_1ga1cec2fa8beb70934e400fc96c4ffe50d" kindref="member">XMC_CAN_Init</ref>(<ref refid="group___c_a_n_1ga4c8ef1a9555bd8e1658e480944dca81e" kindref="member">XMC_CAN_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>obj,<sp/>uint32_t<sp/>can_frequency);</highlight></codeline>
<codeline lineno="845"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="846"><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___c_a_n_1ga3a06733578e85ec9be83df3ca65c82bf" kindref="member">XMC_CAN_MO_Config</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>can_mo);</highlight></codeline>
<codeline lineno="862"><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>NODE<sp/>APIs<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="normal"></highlight></codeline>
<codeline lineno="881"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___c_a_n_1ga8878e96aee1e89d19eb5895f31e789b7" kindref="member">XMC_CAN_NODE_SetEventNodePointer</ref>(<ref refid="group___c_a_n_1gaa3657c03a38eb66c07f4b8ce1fc83aeb" kindref="member">XMC_CAN_NODE_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>can_node,</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group___c_a_n_1ga8df6893c4bb8410cf24639fea906ebea" kindref="member">XMC_CAN_NODE_POINTER_EVENT_t</ref><sp/>ptr_event,</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>service_request)</highlight></codeline>
<codeline lineno="884"><highlight class="normal">{</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/>can_node-&gt;NIPR<sp/>=<sp/>(uint32_t)((can_node-&gt;NIPR)<sp/>&amp;<sp/>~(uint32_t)(<ref refid="group___c_a_n_1ga3861567f5ca18080a4a3218a54ac27f5" kindref="member">CAN_NODE_NIPR_Msk</ref><sp/>&lt;&lt;<sp/>(uint32_t)ptr_event))<sp/>|<sp/>(service_request<sp/>&lt;&lt;<sp/>(uint32_t)ptr_event);</highlight></codeline>
<codeline lineno="886"><highlight class="normal">}</highlight></codeline>
<codeline lineno="887"><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="normal"></highlight></codeline>
<codeline lineno="904"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___c_a_n_1ga237cbd25e96515d2d1207fe93ae6063a" kindref="member">XMC_CAN_NODE_NominalBitTimeConfigure</ref>(<ref refid="group___c_a_n_1gaa3657c03a38eb66c07f4b8ce1fc83aeb" kindref="member">XMC_CAN_NODE_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>can_node,</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_x_m_c___c_a_n___n_o_d_e___n_o_m_i_n_a_l___b_i_t___t_i_m_e___c_o_n_f_i_g__t" kindref="compound">XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>can_bit_time);</highlight></codeline>
<codeline lineno="906"><highlight class="normal"></highlight></codeline>
<codeline lineno="926"><highlight class="normal">int32_t<sp/><ref refid="group___c_a_n_1ga590a52441b24c5877d15271f16dd7a12" kindref="member">XMC_CAN_NODE_NominalBitTimeConfigureEx</ref>(<ref refid="group___c_a_n_1gaa3657c03a38eb66c07f4b8ce1fc83aeb" kindref="member">XMC_CAN_NODE_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>can_node,</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_x_m_c___c_a_n___n_o_d_e___n_o_m_i_n_a_l___b_i_t___t_i_m_e___c_o_n_f_i_g__t" kindref="compound">XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>can_bit_time);</highlight></codeline>
<codeline lineno="928"><highlight class="normal"></highlight></codeline>
<codeline lineno="949"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___c_a_n_1gaf46cc61decf5ecc62a50f8d960659eab" kindref="member">XMC_CAN_NODE_SetReceiveInput</ref>(<ref refid="group___c_a_n_1gaa3657c03a38eb66c07f4b8ce1fc83aeb" kindref="member">XMC_CAN_NODE_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>can_node,</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group___c_a_n_1gae061ae75276ded4637f93c9b7d5e44eb" kindref="member">XMC_CAN_NODE_RECEIVE_INPUT_t</ref><sp/>input)</highlight></codeline>
<codeline lineno="951"><highlight class="normal">{</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/>can_node-&gt;NPCR<sp/>=<sp/>((can_node-&gt;NPCR)<sp/>&amp;<sp/>~(uint32_t)(CAN_NODE_NPCR_RXSEL_Msk))<sp/>|</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((uint32_t)input<sp/>&lt;&lt;<sp/>CAN_NODE_NPCR_RXSEL_Pos)<sp/>&amp;<sp/>(uint32_t)CAN_NODE_NPCR_RXSEL_Msk);</highlight></codeline>
<codeline lineno="954"><highlight class="normal">}</highlight></codeline>
<codeline lineno="955"><highlight class="normal"></highlight></codeline>
<codeline lineno="956"><highlight class="normal"></highlight></codeline>
<codeline lineno="977"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___c_a_n_1ga214ceb497a79f17a1a97090131a11247" kindref="member">XMC_CAN_NODE_EnableLoopBack</ref>(<ref refid="group___c_a_n_1gaa3657c03a38eb66c07f4b8ce1fc83aeb" kindref="member">XMC_CAN_NODE_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>can_node)</highlight></codeline>
<codeline lineno="978"><highlight class="normal">{</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/>can_node-&gt;NPCR<sp/>|=<sp/>(uint32_t)CAN_NODE_NPCR_LBM_Msk;</highlight></codeline>
<codeline lineno="980"><highlight class="normal">}</highlight></codeline>
<codeline lineno="981"><highlight class="normal"></highlight></codeline>
<codeline lineno="982"><highlight class="normal"></highlight></codeline>
<codeline lineno="1002"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___c_a_n_1ga6e59aef13717065359d5ea387e88118b" kindref="member">XMC_CAN_NODE_DisableLoopBack</ref>(<ref refid="group___c_a_n_1gaa3657c03a38eb66c07f4b8ce1fc83aeb" kindref="member">XMC_CAN_NODE_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>can_node)</highlight></codeline>
<codeline lineno="1003"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/>can_node-&gt;NPCR<sp/>&amp;=<sp/>~(uint32_t)CAN_NODE_NPCR_LBM_Msk;</highlight></codeline>
<codeline lineno="1005"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"></highlight></codeline>
<codeline lineno="1007"><highlight class="normal"></highlight></codeline>
<codeline lineno="1024"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___c_a_n_1ga085ec39999617b4880795dd3f5990873" kindref="member">XMC_CAN_NODE_EnableEvent</ref>(<ref refid="group___c_a_n_1gaa3657c03a38eb66c07f4b8ce1fc83aeb" kindref="member">XMC_CAN_NODE_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>can_node,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group___c_a_n_1gae708efa53df4791e665aa6a900eeb6a6" kindref="member">XMC_CAN_NODE_EVENT_t</ref><sp/>event);</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"></highlight></codeline>
<codeline lineno="1026"><highlight class="normal"></highlight></codeline>
<codeline lineno="1043"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___c_a_n_1gaf5ed3045870e0180b41ee4f19f63d278" kindref="member">XMC_CAN_NODE_DisableEvent</ref>(<ref refid="group___c_a_n_1gaa3657c03a38eb66c07f4b8ce1fc83aeb" kindref="member">XMC_CAN_NODE_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>can_node,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group___c_a_n_1gae708efa53df4791e665aa6a900eeb6a6" kindref="member">XMC_CAN_NODE_EVENT_t</ref><sp/>event);</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"></highlight></codeline>
<codeline lineno="1045"><highlight class="normal"></highlight></codeline>
<codeline lineno="1060"><highlight class="normal">__STATIC_INLINE<sp/><ref refid="group___c_a_n_1ga58a294b10b4e0b575f0d378313fc3b05" kindref="member">XMC_CAN_NODE_LAST_ERROR_DIR_t</ref><sp/><ref refid="group___c_a_n_1ga32d160a9ce4260e34878a09df80f0131" kindref="member">XMC_CAN_NODE_GetLastErrTransferDir</ref>(<ref refid="group___c_a_n_1gaa3657c03a38eb66c07f4b8ce1fc83aeb" kindref="member">XMC_CAN_NODE_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>node)</highlight></codeline>
<codeline lineno="1061"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="group___c_a_n_1ga58a294b10b4e0b575f0d378313fc3b05" kindref="member">XMC_CAN_NODE_LAST_ERROR_DIR_t</ref>)(((node-&gt;NECNT)<sp/>&amp;<sp/>CAN_NODE_NECNT_LETD_Msk)<sp/>&gt;&gt;<sp/>CAN_NODE_NECNT_LETD_Pos);</highlight></codeline>
<codeline lineno="1063"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"></highlight></codeline>
<codeline lineno="1065"><highlight class="normal"></highlight></codeline>
<codeline lineno="1080"><highlight class="normal">__STATIC_INLINE<sp/><ref refid="group___c_a_n_1ga588030349d9f7f929bcdfca3b2e1df13" kindref="member">XMC_CAN_NODE_LAST_ERROR_INC_t</ref><sp/><ref refid="group___c_a_n_1ga02d5e3c90dfff44b3259a31dbb900995" kindref="member">XMC_CAN_NODE_GetLastErrTransferInc</ref>(<ref refid="group___c_a_n_1gaa3657c03a38eb66c07f4b8ce1fc83aeb" kindref="member">XMC_CAN_NODE_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>node)</highlight></codeline>
<codeline lineno="1081"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="group___c_a_n_1ga588030349d9f7f929bcdfca3b2e1df13" kindref="member">XMC_CAN_NODE_LAST_ERROR_INC_t</ref>)(((node-&gt;NECNT)<sp/>&amp;<sp/>CAN_NODE_NECNT_LEINC_Msk)<sp/>&gt;&gt;<sp/>CAN_NODE_NECNT_LEINC_Pos);</highlight></codeline>
<codeline lineno="1083"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"></highlight></codeline>
<codeline lineno="1085"><highlight class="normal"></highlight></codeline>
<codeline lineno="1105"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___c_a_n_1ga3e60df9bc4171abdfa5b7b8e8facae14" kindref="member">XMC_CAN_NODE_SetErrorWarningLevel</ref>(<ref refid="group___c_a_n_1gaa3657c03a38eb66c07f4b8ce1fc83aeb" kindref="member">XMC_CAN_NODE_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>can_node,<sp/>uint8_t<sp/>error_warning_level)</highlight></codeline>
<codeline lineno="1106"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/>can_node-&gt;NECNT<sp/>=<sp/>((can_node-&gt;NECNT)<sp/>&amp;<sp/>~(uint32_t)(CAN_NODE_NECNT_EWRNLVL_Msk))<sp/>|</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((uint32_t)error_warning_level<sp/>&lt;&lt;<sp/>CAN_NODE_NECNT_EWRNLVL_Pos)<sp/>&amp;<sp/>(uint32_t)CAN_NODE_NECNT_EWRNLVL_Msk);</highlight></codeline>
<codeline lineno="1109"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"></highlight></codeline>
<codeline lineno="1111"><highlight class="normal"></highlight></codeline>
<codeline lineno="1132"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___c_a_n_1ga9a5d2ce11b0c3bcf0d8274cf340d84d5" kindref="member">XMC_CAN_NODE_SetTransmitErrorCounter</ref>(<ref refid="group___c_a_n_1gaa3657c03a38eb66c07f4b8ce1fc83aeb" kindref="member">XMC_CAN_NODE_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>can_node,<sp/>uint8_t<sp/>can_tec)</highlight></codeline>
<codeline lineno="1133"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/>can_node-&gt;NECNT<sp/>=<sp/>((can_node-&gt;NECNT)<sp/>&amp;<sp/>~(uint32_t)(CAN_NODE_NECNT_TEC_Msk))<sp/>|</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((uint32_t)can_tec<sp/>&lt;&lt;<sp/>CAN_NODE_NECNT_TEC_Pos)<sp/>&amp;<sp/>(uint32_t)CAN_NODE_NECNT_TEC_Msk);</highlight></codeline>
<codeline lineno="1136"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"></highlight></codeline>
<codeline lineno="1138"><highlight class="normal"></highlight></codeline>
<codeline lineno="1158"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___c_a_n_1ga05c55e7c28370cd64b77225c43ca6838" kindref="member">XMC_CAN_NODE_SetReceiveErrorCounter</ref>(<ref refid="group___c_a_n_1gaa3657c03a38eb66c07f4b8ce1fc83aeb" kindref="member">XMC_CAN_NODE_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>can_node,<sp/>uint8_t<sp/>can_rec)</highlight></codeline>
<codeline lineno="1159"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/>can_node-&gt;NECNT<sp/>=<sp/>((can_node-&gt;NECNT)<sp/>&amp;<sp/>~(uint32_t)(CAN_NODE_NECNT_REC_Msk))<sp/>|</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((uint32_t)can_rec<sp/>&lt;&lt;<sp/>CAN_NODE_NECNT_REC_Pos)<sp/>&amp;<sp/>(uint32_t)CAN_NODE_NECNT_REC_Msk);</highlight></codeline>
<codeline lineno="1162"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"></highlight></codeline>
<codeline lineno="1164"><highlight class="normal"></highlight></codeline>
<codeline lineno="1181"><highlight class="normal">__STATIC_INLINE<sp/>uint8_t<sp/><ref refid="group___c_a_n_1ga52536f202ef63f0205ec8dad7ae36c3a" kindref="member">XMC_CAN_NODE_GetErrorWarningLevel</ref>(<ref refid="group___c_a_n_1gaa3657c03a38eb66c07f4b8ce1fc83aeb" kindref="member">XMC_CAN_NODE_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>can_node)</highlight></codeline>
<codeline lineno="1182"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(uint8_t)((uint32_t)((can_node-&gt;NECNT)<sp/><sp/>&amp;<sp/>CAN_NODE_NECNT_EWRNLVL_Msk)<sp/>&gt;&gt;<sp/>CAN_NODE_NECNT_EWRNLVL_Pos);</highlight></codeline>
<codeline lineno="1184"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"></highlight></codeline>
<codeline lineno="1186"><highlight class="normal"></highlight></codeline>
<codeline lineno="1206"><highlight class="normal">__STATIC_INLINE<sp/>uint8_t<sp/><ref refid="group___c_a_n_1gab9167c7c6b40606532beacdfcfe7e650" kindref="member">XMC_CAN_NODE_GetTransmitErrorCounter</ref>(<ref refid="group___c_a_n_1gaa3657c03a38eb66c07f4b8ce1fc83aeb" kindref="member">XMC_CAN_NODE_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>can_node)</highlight></codeline>
<codeline lineno="1207"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(uint8_t)((uint32_t)((can_node-&gt;NECNT)<sp/><sp/>&amp;<sp/>CAN_NODE_NECNT_TEC_Msk)<sp/>&gt;&gt;<sp/>CAN_NODE_NECNT_TEC_Pos);</highlight></codeline>
<codeline lineno="1209"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"></highlight></codeline>
<codeline lineno="1211"><highlight class="normal"></highlight></codeline>
<codeline lineno="1226"><highlight class="normal">__STATIC_INLINE<sp/>uint8_t<sp/><ref refid="group___c_a_n_1ga5e296f7d900a54bd56b099a8b23f87d6" kindref="member">XMC_CAN_NODE_GetReceiveErrorCounter</ref>(<ref refid="group___c_a_n_1gaa3657c03a38eb66c07f4b8ce1fc83aeb" kindref="member">XMC_CAN_NODE_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>can_node)</highlight></codeline>
<codeline lineno="1227"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(uint8_t)((uint32_t)((can_node-&gt;NECNT)<sp/><sp/>&amp;<sp/>CAN_NODE_NECNT_REC_Msk)<sp/>&gt;&gt;<sp/>CAN_NODE_NECNT_REC_Pos);</highlight></codeline>
<codeline lineno="1229"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"></highlight></codeline>
<codeline lineno="1231"><highlight class="normal"></highlight></codeline>
<codeline lineno="1246"><highlight class="normal">__STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group___c_a_n_1ga340523d61c73d6b17af9e7d201a53c31" kindref="member">XMC_CAN_NODE_GetStatus</ref>(<ref refid="group___c_a_n_1gaa3657c03a38eb66c07f4b8ce1fc83aeb" kindref="member">XMC_CAN_NODE_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>can_node)</highlight></codeline>
<codeline lineno="1247"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((can_node-&gt;NSR));</highlight></codeline>
<codeline lineno="1249"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"></highlight></codeline>
<codeline lineno="1266"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___c_a_n_1ga0824727cc57db59df4efe008625af141" kindref="member">XMC_CAN_NODE_ClearStatus</ref>(<ref refid="group___c_a_n_1gaa3657c03a38eb66c07f4b8ce1fc83aeb" kindref="member">XMC_CAN_NODE_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>can_node,<sp/><ref refid="group___c_a_n_1ga6efda609ad66be6ae2564b3b4310c362" kindref="member">XMC_CAN_NODE_STATUS_t</ref><sp/>can_node_status)</highlight></codeline>
<codeline lineno="1267"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/>can_node-&gt;NSR<sp/>&amp;=<sp/>~(uint32_t)can_node_status;</highlight></codeline>
<codeline lineno="1269"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"></highlight></codeline>
<codeline lineno="1271"><highlight class="normal"></highlight></codeline>
<codeline lineno="1287"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___c_a_n_1gac26b568458cf0a7b88018bd3ddf5eccf" kindref="member">XMC_CAN_NODE_EnableConfigurationChange</ref>(<ref refid="group___c_a_n_1gaa3657c03a38eb66c07f4b8ce1fc83aeb" kindref="member">XMC_CAN_NODE_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>can_node)</highlight></codeline>
<codeline lineno="1288"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/>can_node-&gt;NCR<sp/>|=<sp/>(uint32_t)CAN_NODE_NCR_CCE_Msk;</highlight></codeline>
<codeline lineno="1290"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"></highlight></codeline>
<codeline lineno="1292"><highlight class="normal"></highlight></codeline>
<codeline lineno="1307"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___c_a_n_1ga6f266f543962bf5969d438af202d2d48" kindref="member">XMC_CAN_NODE_DisableConfigurationChange</ref>(<ref refid="group___c_a_n_1gaa3657c03a38eb66c07f4b8ce1fc83aeb" kindref="member">XMC_CAN_NODE_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>can_node)</highlight></codeline>
<codeline lineno="1308"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/>can_node-&gt;NCR<sp/>&amp;=<sp/>~(uint32_t)CAN_NODE_NCR_CCE_Msk;</highlight></codeline>
<codeline lineno="1310"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"></highlight></codeline>
<codeline lineno="1312"><highlight class="normal"></highlight></codeline>
<codeline lineno="1313"><highlight class="normal"></highlight></codeline>
<codeline lineno="1329"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___c_a_n_1gadb89a6e0630d7ccf0b233caa989599ff" kindref="member">XMC_CAN_NODE_SetInitBit</ref>(<ref refid="group___c_a_n_1gaa3657c03a38eb66c07f4b8ce1fc83aeb" kindref="member">XMC_CAN_NODE_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>can_node)</highlight></codeline>
<codeline lineno="1330"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/>can_node-&gt;NCR<sp/>|=<sp/>(uint32_t)CAN_NODE_NCR_INIT_Msk;</highlight></codeline>
<codeline lineno="1332"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"></highlight></codeline>
<codeline lineno="1348"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___c_a_n_1ga403725545e4b32c3dd0e67ba921a6366" kindref="member">XMC_CAN_NODE_ResetInitBit</ref>(<ref refid="group___c_a_n_1gaa3657c03a38eb66c07f4b8ce1fc83aeb" kindref="member">XMC_CAN_NODE_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>can_node)</highlight></codeline>
<codeline lineno="1349"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/>can_node-&gt;NCR<sp/>&amp;=<sp/>~(uint32_t)CAN_NODE_NCR_INIT_Msk;</highlight></codeline>
<codeline lineno="1351"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"></highlight></codeline>
<codeline lineno="1366"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___c_a_n_1ga924a346597f2770058d12d837b7ec05c" kindref="member">XMC_CAN_NODE_Enable</ref>(<ref refid="group___c_a_n_1gaa3657c03a38eb66c07f4b8ce1fc83aeb" kindref="member">XMC_CAN_NODE_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>can_node)</highlight></codeline>
<codeline lineno="1367"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/>can_node-&gt;NCR<sp/>&amp;=<sp/>~(uint32_t)CAN_NODE_NCR_CANDIS_Msk;</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><ref refid="group___c_a_n_1ga403725545e4b32c3dd0e67ba921a6366" kindref="member">XMC_CAN_NODE_ResetInitBit</ref>(can_node);</highlight></codeline>
<codeline lineno="1370"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"></highlight></codeline>
<codeline lineno="1385"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___c_a_n_1ga3a60a49f75d0f9a4f52286856278a9bf" kindref="member">XMC_CAN_NODE_Disable</ref>(<ref refid="group___c_a_n_1gaa3657c03a38eb66c07f4b8ce1fc83aeb" kindref="member">XMC_CAN_NODE_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>can_node)</highlight></codeline>
<codeline lineno="1386"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/>can_node-&gt;NCR<sp/>|=<sp/>(uint32_t)CAN_NODE_NCR_CANDIS_Msk;</highlight></codeline>
<codeline lineno="1388"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"></highlight></codeline>
<codeline lineno="1407"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___c_a_n_1ga6e2bd3d9846dcbee149409baf623bbdf" kindref="member">XMC_CAN_NODE_SetAnalyzerMode</ref>(<ref refid="group___c_a_n_1gaa3657c03a38eb66c07f4b8ce1fc83aeb" kindref="member">XMC_CAN_NODE_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>can_node)</highlight></codeline>
<codeline lineno="1408"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/>can_node-&gt;NCR<sp/>|=<sp/>(uint32_t)CAN_NODE_NCR_CALM_Msk;</highlight></codeline>
<codeline lineno="1410"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"></highlight></codeline>
<codeline lineno="1412"><highlight class="normal"></highlight></codeline>
<codeline lineno="1427"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___c_a_n_1gac86e37cc7f4ea0cec6849b08b8ab71b6" kindref="member">XMC_CAN_NODE_ReSetAnalyzerMode</ref>(<ref refid="group___c_a_n_1gaa3657c03a38eb66c07f4b8ce1fc83aeb" kindref="member">XMC_CAN_NODE_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>can_node)</highlight></codeline>
<codeline lineno="1428"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/>can_node-&gt;NCR<sp/>&amp;=<sp/>~(uint32_t)CAN_NODE_NCR_CALM_Msk;</highlight></codeline>
<codeline lineno="1430"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"></highlight></codeline>
<codeline lineno="1432"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(MULTICAN_PLUS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1433"><highlight class="normal"></highlight></codeline>
<codeline lineno="1451"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___c_a_n_1gae43a6605f4303deaa9077c9ca1cc29f7" kindref="member">XMC_CAN_NODE_EnableSuspend</ref>(<ref refid="group___c_a_n_1gaa3657c03a38eb66c07f4b8ce1fc83aeb" kindref="member">XMC_CAN_NODE_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>can_node)</highlight></codeline>
<codeline lineno="1452"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/>can_node-&gt;NCR<sp/>|=<sp/>(uint32_t)CAN_NODE_NCR_SUSEN_Msk;</highlight></codeline>
<codeline lineno="1454"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1456"><highlight class="normal"></highlight></codeline>
<codeline lineno="1470"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>XMC_CAN_NODE_DisableTransmit(<ref refid="group___c_a_n_1gaa3657c03a38eb66c07f4b8ce1fc83aeb" kindref="member">XMC_CAN_NODE_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>can_node)</highlight></codeline>
<codeline lineno="1471"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/>can_node-&gt;NCR<sp/>|=<sp/>(uint32_t)CAN_NODE_NCR_TXDIS_Msk;</highlight></codeline>
<codeline lineno="1473"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1475"><highlight class="normal"></highlight></codeline>
<codeline lineno="1476"><highlight class="normal"></highlight></codeline>
<codeline lineno="1494"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___c_a_n_1gafd589a86e011a98d636e4fce616dbb18" kindref="member">XMC_CAN_NODE_FrameCounterConfigure</ref>(<ref refid="group___c_a_n_1gaa3657c03a38eb66c07f4b8ce1fc83aeb" kindref="member">XMC_CAN_NODE_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>can_node,</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_x_m_c___c_a_n___n_o_d_e___f_r_a_m_e___c_o_u_n_t_e_r__t" kindref="compound">XMC_CAN_NODE_FRAME_COUNTER_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>can_node_init)</highlight></codeline>
<codeline lineno="1496"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/>can_node-&gt;NFCR<sp/>=<sp/>(can_node-&gt;NFCR<sp/>&amp;<sp/>~(uint32_t)(CAN_NODE_NFCR_CFMOD_Msk<sp/>|</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CAN_NODE_NFCR_CFSEL_Msk))<sp/>|</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>can_node_init-&gt;nfcr;</highlight></codeline>
<codeline lineno="1500"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"></highlight></codeline>
<codeline lineno="1502"><highlight class="normal"></highlight></codeline>
<codeline lineno="1520"><highlight class="normal">__STATIC_INLINE<sp/>uint16_t<sp/><ref refid="group___c_a_n_1ga1980308d1958c918cfb16dd43b09ce3b" kindref="member">XMC_CAN_NODE_GetCANFrameCounter</ref>(<ref refid="group___c_a_n_1gaa3657c03a38eb66c07f4b8ce1fc83aeb" kindref="member">XMC_CAN_NODE_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>can_node)</highlight></codeline>
<codeline lineno="1521"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(uint16_t)(((uint32_t)(can_node-&gt;NFCR<sp/>&amp;<sp/>CAN_NODE_NFCR_CFC_Msk)<sp/>&gt;&gt;<sp/>CAN_NODE_NFCR_CFC_Pos));</highlight></codeline>
<codeline lineno="1523"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"></highlight></codeline>
<codeline lineno="1525"><highlight class="normal"></highlight><highlight class="comment">/*MO<sp/>APIs*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1526"><highlight class="normal"></highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><ref refid="group___c_a_n_1ga33a809a5460e5265b2fa3a5ddff3f337" kindref="member">XMC_CAN_STATUS_t</ref><sp/><ref refid="group___c_a_n_1gafb022d0b0f3cbf13b291b695741cd47f" kindref="member">XMC_CAN_MO_UpdateData</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>can_mo);</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"></highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><ref refid="group___c_a_n_1ga33a809a5460e5265b2fa3a5ddff3f337" kindref="member">XMC_CAN_STATUS_t</ref><sp/><ref refid="group___c_a_n_1ga16dd387e3c8337317efe5246d66c8e91" kindref="member">XMC_CAN_MO_Transmit</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>can_mo);</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"></highlight></codeline>
<codeline lineno="1563"><highlight class="normal"></highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><ref refid="group___c_a_n_1ga33a809a5460e5265b2fa3a5ddff3f337" kindref="member">XMC_CAN_STATUS_t</ref><sp/><ref refid="group___c_a_n_1ga303ca6355a2c8b8858eaa016508b7255" kindref="member">XMC_CAN_MO_Receive</ref>(<ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref><sp/>*can_mo);</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"></highlight></codeline>
<codeline lineno="1580"><highlight class="normal"></highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><ref refid="group___c_a_n_1ga33a809a5460e5265b2fa3a5ddff3f337" kindref="member">XMC_CAN_STATUS_t</ref><sp/><ref refid="group___c_a_n_1gaa4af5d86b90db9f02681e7059eadfdda" kindref="member">XMC_CAN_MO_ReceiveData</ref><sp/>(<ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref><sp/>*can_mo);</highlight></codeline>
<codeline lineno="1611"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___c_a_n_1gafe77c3e9f8d0fcde86f2ac020f0d5493" kindref="member">XMC_CAN_MO_SetEventNodePointer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>can_mo,</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group___c_a_n_1ga5779e98919b963f0073cb04a129cb581" kindref="member">XMC_CAN_MO_POINTER_EVENT_t</ref><sp/>can_mo_ptr_int,</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>service_request)</highlight></codeline>
<codeline lineno="1614"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><sp/><sp/>can_mo-&gt;<ref refid="struct_x_m_c___c_a_n___m_o__t_1a93593ca451037e051fd6e76d116d3f4a" kindref="member">can_mo_ptr</ref>-&gt;MOIPR<sp/>=<sp/>((can_mo-&gt;<ref refid="struct_x_m_c___c_a_n___m_o__t_1a93593ca451037e051fd6e76d116d3f4a" kindref="member">can_mo_ptr</ref>-&gt;MOIPR<sp/>)<sp/>&amp;<sp/>~(uint32_t)((uint32_t)<ref refid="group___c_a_n_1ga67d86a11d6335609895a1d21746707a0" kindref="member">CAN_MO_MOIPR_Msk</ref><sp/>&lt;&lt;<sp/>(uint32_t)can_mo_ptr_int))<sp/>|</highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(service_request<sp/>&lt;&lt;<sp/>(uint32_t)can_mo_ptr_int);</highlight></codeline>
<codeline lineno="1617"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1618"><highlight class="normal"></highlight></codeline>
<codeline lineno="1634"><highlight class="normal">__STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group___c_a_n_1ga34acd408a7a99294587a5c604e1c9918" kindref="member">XMC_CAN_MO_GetStatus</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>can_mo)</highlight></codeline>
<codeline lineno="1635"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((can_mo-&gt;<ref refid="struct_x_m_c___c_a_n___m_o__t_1a93593ca451037e051fd6e76d116d3f4a" kindref="member">can_mo_ptr</ref>-&gt;MOSTAT));</highlight></codeline>
<codeline lineno="1637"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1638"><highlight class="normal"></highlight></codeline>
<codeline lineno="1654"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___c_a_n_1gabcb79c734a68ae614d901d69ef8e20fc" kindref="member">XMC_CAN_MO_SetStatus</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>can_mo,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="1655"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1656"><highlight class="normal"><sp/><sp/>can_mo-&gt;<ref refid="struct_x_m_c___c_a_n___m_o__t_1a93593ca451037e051fd6e76d116d3f4a" kindref="member">can_mo_ptr</ref>-&gt;MOCTR<sp/>=<sp/>mask;</highlight></codeline>
<codeline lineno="1657"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1658"><highlight class="normal"></highlight></codeline>
<codeline lineno="1674"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___c_a_n_1gab88ba4b28db7404e7e3a271c1e585905" kindref="member">XMC_CAN_MO_ResetStatus</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>can_mo,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="1675"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1676"><highlight class="normal"><sp/><sp/>can_mo-&gt;<ref refid="struct_x_m_c___c_a_n___m_o__t_1a93593ca451037e051fd6e76d116d3f4a" kindref="member">can_mo_ptr</ref>-&gt;MOCTR<sp/>=<sp/>mask;</highlight></codeline>
<codeline lineno="1677"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1678"><highlight class="normal"></highlight></codeline>
<codeline lineno="1679"><highlight class="normal"></highlight></codeline>
<codeline lineno="1680"><highlight class="normal"></highlight></codeline>
<codeline lineno="1695"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___c_a_n_1ga28a3afd0294c21c2065db2e312a6ebe5" kindref="member">XMC_CAN_MO_EnableEvent</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>can_mo,</highlight></codeline>
<codeline lineno="1696"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>event)</highlight></codeline>
<codeline lineno="1697"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1698"><highlight class="normal"><sp/><sp/>can_mo-&gt;<ref refid="struct_x_m_c___c_a_n___m_o__t_1a93593ca451037e051fd6e76d116d3f4a" kindref="member">can_mo_ptr</ref>-&gt;MOFCR<sp/>|=<sp/>event;</highlight></codeline>
<codeline lineno="1699"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1700"><highlight class="normal"></highlight></codeline>
<codeline lineno="1701"><highlight class="normal"></highlight></codeline>
<codeline lineno="1717"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___c_a_n_1gae3aae4d86c63769fa898ea11e2f0cd87" kindref="member">XMC_CAN_MO_DisableEvent</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>can_mo,</highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>event)</highlight></codeline>
<codeline lineno="1719"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1720"><highlight class="normal"><sp/><sp/>can_mo-&gt;<ref refid="struct_x_m_c___c_a_n___m_o__t_1a93593ca451037e051fd6e76d116d3f4a" kindref="member">can_mo_ptr</ref>-&gt;MOFCR<sp/>&amp;=<sp/>~event;</highlight></codeline>
<codeline lineno="1721"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1722"><highlight class="normal"></highlight></codeline>
<codeline lineno="1738"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___c_a_n_1ga4f01b3116be459e384c3925b44fc2ec6" kindref="member">XMC_CAN_MO_EnableSingleTransmitTrial</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>can_mo)</highlight></codeline>
<codeline lineno="1739"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1740"><highlight class="normal"><sp/><sp/>can_mo-&gt;<ref refid="struct_x_m_c___c_a_n___m_o__t_1a93593ca451037e051fd6e76d116d3f4a" kindref="member">can_mo_ptr</ref>-&gt;MOFCR<sp/>|=<sp/>(uint32_t)<sp/>CAN_MO_MOFCR_STT_Msk;</highlight></codeline>
<codeline lineno="1741"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1742"><highlight class="normal"></highlight></codeline>
<codeline lineno="1743"><highlight class="normal"></highlight></codeline>
<codeline lineno="1758"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___c_a_n_1ga776a1a1c02708ff6aece5a2beb32953b" kindref="member">XMC_CAN_MO_DisableSingleTransmitTrial</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>can_mo)</highlight></codeline>
<codeline lineno="1759"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1760"><highlight class="normal"><sp/><sp/>can_mo-&gt;<ref refid="struct_x_m_c___c_a_n___m_o__t_1a93593ca451037e051fd6e76d116d3f4a" kindref="member">can_mo_ptr</ref>-&gt;MOFCR<sp/>&amp;=<sp/>~(uint32_t)CAN_MO_MOFCR_STT_Msk;</highlight></codeline>
<codeline lineno="1761"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1762"><highlight class="normal"></highlight></codeline>
<codeline lineno="1778"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___c_a_n_1ga5a7a77e7d7d29c17ca87ffbe3245f76d" kindref="member">XMC_CAN_MO_DataLengthCode</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>can_mo,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>data_length_code)</highlight></codeline>
<codeline lineno="1779"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1780"><highlight class="normal"><sp/><sp/>can_mo-&gt;<ref refid="struct_x_m_c___c_a_n___m_o__t_1a93593ca451037e051fd6e76d116d3f4a" kindref="member">can_mo_ptr</ref>-&gt;MOFCR<sp/>=<sp/>((can_mo-&gt;<ref refid="struct_x_m_c___c_a_n___m_o__t_1a93593ca451037e051fd6e76d116d3f4a" kindref="member">can_mo_ptr</ref>-&gt;MOFCR<sp/>)<sp/>&amp;<sp/>~(uint32_t)(CAN_MO_MOFCR_DLC_Msk))<sp/>|</highlight></codeline>
<codeline lineno="1781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((uint32_t)data_length_code<sp/>&lt;&lt;<sp/>CAN_MO_MOFCR_DLC_Pos)<sp/>&amp;<sp/>(uint32_t)CAN_MO_MOFCR_DLC_Msk);</highlight></codeline>
<codeline lineno="1782"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1783"><highlight class="normal"></highlight></codeline>
<codeline lineno="1799"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___c_a_n_1ga2441a13da1f6ee2235b94c5a6ba522ed" kindref="member">XMC_CAN_MO_SetDataLengthCode</ref>(<ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>can_mo,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>data_length_code)</highlight></codeline>
<codeline lineno="1800"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1801"><highlight class="normal"><sp/><sp/>can_mo-&gt;<ref refid="struct_x_m_c___c_a_n___m_o__t_1ace905b2193685e394c9ade25ac146410" kindref="member">can_data_length</ref><sp/>=<sp/>data_length_code;</highlight></codeline>
<codeline lineno="1802"><highlight class="normal"><sp/><sp/>can_mo-&gt;<ref refid="struct_x_m_c___c_a_n___m_o__t_1a93593ca451037e051fd6e76d116d3f4a" kindref="member">can_mo_ptr</ref>-&gt;MOFCR<sp/>=<sp/>((can_mo-&gt;<ref refid="struct_x_m_c___c_a_n___m_o__t_1a93593ca451037e051fd6e76d116d3f4a" kindref="member">can_mo_ptr</ref>-&gt;MOFCR<sp/>)<sp/>&amp;<sp/>~(uint32_t)(CAN_MO_MOFCR_DLC_Msk))<sp/>|</highlight></codeline>
<codeline lineno="1803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((uint32_t)data_length_code<sp/>&lt;&lt;<sp/>CAN_MO_MOFCR_DLC_Pos)<sp/>&amp;<sp/>(uint32_t)CAN_MO_MOFCR_DLC_Msk);</highlight></codeline>
<codeline lineno="1804"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1805"><highlight class="normal"></highlight></codeline>
<codeline lineno="1820"><highlight class="normal">__STATIC_INLINE<sp/>uint8_t<sp/><ref refid="group___c_a_n_1ga0d5ca295b82bcac10c8fb2a570b446f0" kindref="member">XMC_CAN_MO_GetDataLengthCode</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>can_mo)</highlight></codeline>
<codeline lineno="1821"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1822"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(((can_mo-&gt;<ref refid="struct_x_m_c___c_a_n___m_o__t_1a93593ca451037e051fd6e76d116d3f4a" kindref="member">can_mo_ptr</ref>-&gt;MOFCR)<sp/>&amp;<sp/>(uint32_t)(CAN_MO_MOFCR_DLC_Msk))<sp/>&gt;&gt;<sp/>CAN_MO_MOFCR_DLC_Pos);</highlight></codeline>
<codeline lineno="1823"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1824"><highlight class="normal"></highlight></codeline>
<codeline lineno="1840"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___c_a_n_1ga54679df9afbdddaf68ffd780ced427d7" kindref="member">XMC_CAN_MO_SetIdentifier</ref>(<ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>can_mo,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>can_identifier);</highlight></codeline>
<codeline lineno="1841"><highlight class="normal"></highlight></codeline>
<codeline lineno="1856"><highlight class="normal">uint32_t<sp/><ref refid="group___c_a_n_1ga3947c77efb8efc1eab0af01e20418f75" kindref="member">XMC_CAN_MO_GetIdentifier</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>can_mo);</highlight></codeline>
<codeline lineno="1857"><highlight class="normal"></highlight></codeline>
<codeline lineno="1872"><highlight class="normal">uint32_t<sp/><ref refid="group___c_a_n_1ga7850274ffd707c7eedd0f5799ac04948" kindref="member">XMC_CAN_MO_GetAcceptanceMask</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>can_mo);</highlight></codeline>
<codeline lineno="1873"><highlight class="normal"></highlight></codeline>
<codeline lineno="1889"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___c_a_n_1gaab905544dbd9ba9ede00d5500e9c38f7" kindref="member">XMC_CAN_MO_SetAcceptanceMask</ref>(<ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>can_mo,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>can_id_mask);</highlight></codeline>
<codeline lineno="1890"><highlight class="normal"></highlight></codeline>
<codeline lineno="1905"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___c_a_n_1ga66d6f89bab2fab4393f1fb083dfd6998" kindref="member">XMC_CAN_MO_AcceptOnlyMatchingIDE</ref>(<ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>can_mo)</highlight></codeline>
<codeline lineno="1906"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1907"><highlight class="normal"><sp/><sp/>can_mo-&gt;<ref refid="struct_x_m_c___c_a_n___m_o__t_1a0b35f45889a24060818e40e5dac8e889" kindref="member">can_ide_mask</ref><sp/>=<sp/>1U;</highlight></codeline>
<codeline lineno="1908"><highlight class="normal"><sp/><sp/>can_mo-&gt;<ref refid="struct_x_m_c___c_a_n___m_o__t_1a93593ca451037e051fd6e76d116d3f4a" kindref="member">can_mo_ptr</ref>-&gt;MOAMR<sp/>|=<sp/>(uint32_t)(CAN_MO_MOAMR_MIDE_Msk);</highlight></codeline>
<codeline lineno="1909"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1910"><highlight class="normal"></highlight></codeline>
<codeline lineno="1925"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___c_a_n_1ga4a137b8f0c2ac3c5b5cd09e2ca60d385" kindref="member">XMC_CAN_MO_AcceptStandardAndExtendedID</ref>(<ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>can_mo)</highlight></codeline>
<codeline lineno="1926"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1927"><highlight class="normal"><sp/><sp/>can_mo-&gt;<ref refid="struct_x_m_c___c_a_n___m_o__t_1a0b35f45889a24060818e40e5dac8e889" kindref="member">can_ide_mask</ref><sp/>=<sp/>0U;</highlight></codeline>
<codeline lineno="1928"><highlight class="normal"><sp/><sp/>can_mo-&gt;<ref refid="struct_x_m_c___c_a_n___m_o__t_1a93593ca451037e051fd6e76d116d3f4a" kindref="member">can_mo_ptr</ref>-&gt;MOAMR<sp/>&amp;=<sp/>~(uint32_t)(CAN_MO_MOAMR_MIDE_Msk);</highlight></codeline>
<codeline lineno="1929"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1930"><highlight class="normal"></highlight></codeline>
<codeline lineno="1947"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___c_a_n_1ga3c8e0550bdb85767ee0d984dd50b9b9e" kindref="member">XMC_CAN_MO_SetStandardID</ref>(<ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>can_mo)</highlight></codeline>
<codeline lineno="1948"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1949"><highlight class="normal"><sp/><sp/>can_mo-&gt;<ref refid="struct_x_m_c___c_a_n___m_o__t_1a1bc50d1516b0ac8ecef7689e50907d73" kindref="member">can_id_mode</ref><sp/>=<sp/>(uint32_t)<ref refid="group___c_a_n_1gga4931cde412f7a12b60fefc606a6c9380a0c8700174238a98da38474ae5b0be5fd" kindref="member">XMC_CAN_FRAME_TYPE_STANDARD_11BITS</ref>;</highlight></codeline>
<codeline lineno="1950"><highlight class="normal"><sp/><sp/>can_mo-&gt;<ref refid="struct_x_m_c___c_a_n___m_o__t_1a93593ca451037e051fd6e76d116d3f4a" kindref="member">can_mo_ptr</ref>-&gt;MOAR<sp/>&amp;=<sp/>~(uint32_t)(CAN_MO_MOAR_IDE_Msk);</highlight></codeline>
<codeline lineno="1951"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1952"><highlight class="normal"></highlight></codeline>
<codeline lineno="1970"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___c_a_n_1ga690a85f842a9fddc61c9d2bf0370d308" kindref="member">XMC_CAN_MO_SetExtendedID</ref>(<ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>can_mo)</highlight></codeline>
<codeline lineno="1971"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1972"><highlight class="normal"><sp/><sp/>can_mo-&gt;<ref refid="struct_x_m_c___c_a_n___m_o__t_1a1bc50d1516b0ac8ecef7689e50907d73" kindref="member">can_id_mode</ref><sp/>=<sp/>(uint32_t)<ref refid="group___c_a_n_1gga4931cde412f7a12b60fefc606a6c9380a70a77bae271fd1769d782f8f5cafd999" kindref="member">XMC_CAN_FRAME_TYPE_EXTENDED_29BITS</ref>;</highlight></codeline>
<codeline lineno="1973"><highlight class="normal"><sp/><sp/>can_mo-&gt;<ref refid="struct_x_m_c___c_a_n___m_o__t_1a93593ca451037e051fd6e76d116d3f4a" kindref="member">can_mo_ptr</ref>-&gt;MOAR<sp/>|=<sp/>(uint32_t)CAN_MO_MOAR_IDE_Msk;</highlight></codeline>
<codeline lineno="1974"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1975"><highlight class="normal"></highlight></codeline>
<codeline lineno="1991"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___c_a_n_1ga6857e2566613c34371f0ae653da77174" kindref="member">XMC_CAN_FIFO_EnableForeignRemoteRequest</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>can_mo)</highlight></codeline>
<codeline lineno="1992"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1993"><highlight class="normal"><sp/><sp/>can_mo-&gt;<ref refid="struct_x_m_c___c_a_n___m_o__t_1a93593ca451037e051fd6e76d116d3f4a" kindref="member">can_mo_ptr</ref>-&gt;MOFCR<sp/>|=<sp/>(uint32_t)CAN_MO_MOFCR_FRREN_Msk;</highlight></codeline>
<codeline lineno="1994"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1995"><highlight class="normal"></highlight></codeline>
<codeline lineno="2011"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___c_a_n_1ga592a44778b57ac9b8741f04453834611" kindref="member">XMC_CAN_FIFO_DisableForeingRemoteRequest</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>can_mo)</highlight></codeline>
<codeline lineno="2012"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2013"><highlight class="normal"><sp/><sp/>can_mo-&gt;<ref refid="struct_x_m_c___c_a_n___m_o__t_1a93593ca451037e051fd6e76d116d3f4a" kindref="member">can_mo_ptr</ref>-&gt;MOFCR<sp/>&amp;=<sp/>~(uint32_t)CAN_MO_MOFCR_FRREN_Msk;</highlight></codeline>
<codeline lineno="2014"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2015"><highlight class="normal"></highlight></codeline>
<codeline lineno="2016"><highlight class="normal"></highlight></codeline>
<codeline lineno="2034"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___c_a_n_1ga62a26191fd7093d125769b42b656f4a8" kindref="member">XMC_CAN_FIFO_EnableRemoteMonitoring</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>can_mo)</highlight></codeline>
<codeline lineno="2035"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2036"><highlight class="normal"><sp/><sp/>can_mo-&gt;<ref refid="struct_x_m_c___c_a_n___m_o__t_1a93593ca451037e051fd6e76d116d3f4a" kindref="member">can_mo_ptr</ref>-&gt;MOFCR<sp/>|=<sp/>(uint32_t)CAN_MO_MOFCR_RMM_Msk;</highlight></codeline>
<codeline lineno="2037"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2038"><highlight class="normal"></highlight></codeline>
<codeline lineno="2039"><highlight class="normal"></highlight></codeline>
<codeline lineno="2058"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___c_a_n_1ga1210ed3b3c4628122ea9f8032a174721" kindref="member">XMC_CAN_FIFO_DisableRemoteMonitoring</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>can_mo)</highlight></codeline>
<codeline lineno="2059"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2060"><highlight class="normal"><sp/><sp/>can_mo-&gt;<ref refid="struct_x_m_c___c_a_n___m_o__t_1a93593ca451037e051fd6e76d116d3f4a" kindref="member">can_mo_ptr</ref>-&gt;MOFCR<sp/>&amp;=<sp/>~(uint32_t)CAN_MO_MOFCR_RMM_Msk;</highlight></codeline>
<codeline lineno="2061"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2062"><highlight class="normal"></highlight></codeline>
<codeline lineno="2063"><highlight class="normal"></highlight></codeline>
<codeline lineno="2079"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___c_a_n_1ga6300b5ce35687e006890eb0c968a78af" kindref="member">XMC_CAN_FIFO_SetSELMO</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>can_mo,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>select_pointer)</highlight></codeline>
<codeline lineno="2080"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2081"><highlight class="normal"><sp/><sp/>can_mo-&gt;<ref refid="struct_x_m_c___c_a_n___m_o__t_1a93593ca451037e051fd6e76d116d3f4a" kindref="member">can_mo_ptr</ref>-&gt;MOFGPR<sp/>=<sp/>((can_mo-&gt;<ref refid="struct_x_m_c___c_a_n___m_o__t_1a93593ca451037e051fd6e76d116d3f4a" kindref="member">can_mo_ptr</ref>-&gt;MOFGPR<sp/>)<sp/>&amp;<sp/>~(uint32_t)(CAN_MO_MOFGPR_SEL_Msk))<sp/>|</highlight></codeline>
<codeline lineno="2082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((uint32_t)select_pointer<sp/>&lt;&lt;<sp/>CAN_MO_MOFGPR_SEL_Pos)<sp/>&amp;<sp/>(uint32_t)CAN_MO_MOFGPR_SEL_Msk);</highlight></codeline>
<codeline lineno="2083"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2084"><highlight class="normal"></highlight></codeline>
<codeline lineno="2085"><highlight class="normal"></highlight></codeline>
<codeline lineno="2100"><highlight class="normal">__STATIC_INLINE<sp/>uint8_t<sp/><ref refid="group___c_a_n_1ga3b77055ea43fb0ebb071fae155feb90b" kindref="member">XMC_CAN_FIFO_GetCurrentMO</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>can_mo)</highlight></codeline>
<codeline lineno="2101"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(uint8_t)((uint32_t)(can_mo-&gt;<ref refid="struct_x_m_c___c_a_n___m_o__t_1a93593ca451037e051fd6e76d116d3f4a" kindref="member">can_mo_ptr</ref>-&gt;MOFGPR<sp/>&amp;<sp/>CAN_MO_MOFGPR_CUR_Msk)<sp/>&gt;&gt;<sp/>CAN_MO_MOFGPR_CUR_Pos);</highlight></codeline>
<codeline lineno="2103"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2104"><highlight class="normal"></highlight></codeline>
<codeline lineno="2105"><highlight class="normal"></highlight></codeline>
<codeline lineno="2123"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___c_a_n_1ga2ea05416157d30fd67cadffcf1cb485d" kindref="member">XMC_CAN_FIFO_EnableSingleDataTransfer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>can_mo)</highlight></codeline>
<codeline lineno="2124"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2125"><highlight class="normal"><sp/><sp/>can_mo-&gt;<ref refid="struct_x_m_c___c_a_n___m_o__t_1a93593ca451037e051fd6e76d116d3f4a" kindref="member">can_mo_ptr</ref>-&gt;MOFCR<sp/>|=<sp/>(uint32_t)CAN_MO_MOFCR_SDT_Msk;</highlight></codeline>
<codeline lineno="2126"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2127"><highlight class="normal"></highlight></codeline>
<codeline lineno="2128"><highlight class="normal"></highlight></codeline>
<codeline lineno="2143"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___c_a_n_1ga09f2577700dc44e3fc9bfc2e6c0792ae" kindref="member">XMC_CAN_FIFO_DisableSingleDataTransfer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>can_mo)</highlight></codeline>
<codeline lineno="2144"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2145"><highlight class="normal"><sp/><sp/>can_mo-&gt;<ref refid="struct_x_m_c___c_a_n___m_o__t_1a93593ca451037e051fd6e76d116d3f4a" kindref="member">can_mo_ptr</ref>-&gt;MOFCR<sp/>&amp;=<sp/>~(uint32_t)CAN_MO_MOFCR_SDT_Msk;</highlight></codeline>
<codeline lineno="2146"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2147"><highlight class="normal"></highlight></codeline>
<codeline lineno="2148"><highlight class="normal"></highlight></codeline>
<codeline lineno="2165"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___c_a_n_1ga53d857e001d98cde8e1e838370a4eef3" kindref="member">XMC_CAN_TXFIFO_ConfigMOBaseObject</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>can_mo,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_x_m_c___c_a_n___f_i_f_o___c_o_n_f_i_g__t" kindref="compound">XMC_CAN_FIFO_CONFIG_t</ref><sp/>can_fifo);</highlight></codeline>
<codeline lineno="2166"><highlight class="normal"></highlight></codeline>
<codeline lineno="2167"><highlight class="normal"></highlight></codeline>
<codeline lineno="2182"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___c_a_n_1gaf3af812306e78f6c35f4837e3f87d4d9" kindref="member">XMC_CAN_RXFIFO_ConfigMOBaseObject</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>can_mo,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_x_m_c___c_a_n___f_i_f_o___c_o_n_f_i_g__t" kindref="compound">XMC_CAN_FIFO_CONFIG_t</ref><sp/>can_fifo);</highlight></codeline>
<codeline lineno="2183"><highlight class="normal"></highlight></codeline>
<codeline lineno="2184"><highlight class="normal"></highlight></codeline>
<codeline lineno="2199"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___c_a_n_1gac51fa23741c9f64f35dca049aeb9201b" kindref="member">XMC_CAN_TXFIFO_ConfigMOSlaveObject</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>can_mo,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_x_m_c___c_a_n___f_i_f_o___c_o_n_f_i_g__t" kindref="compound">XMC_CAN_FIFO_CONFIG_t</ref><sp/>can_fifo);</highlight></codeline>
<codeline lineno="2200"><highlight class="normal"></highlight></codeline>
<codeline lineno="2201"><highlight class="normal"></highlight></codeline>
<codeline lineno="2216"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___c_a_n_1gaf1de58dc7fb68ad5865fc0db41bc01a3" kindref="member">XMC_CAN_RXFIFO_ConfigMOSlaveObject</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>can_mo)</highlight></codeline>
<codeline lineno="2217"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2218"><highlight class="normal"><sp/><sp/>can_mo-&gt;<ref refid="struct_x_m_c___c_a_n___m_o__t_1a93593ca451037e051fd6e76d116d3f4a" kindref="member">can_mo_ptr</ref>-&gt;MOCTR<sp/>=<sp/>(uint32_t)CAN_MO_MOCTR_RESRXEN_Msk;</highlight></codeline>
<codeline lineno="2219"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2220"><highlight class="normal"></highlight></codeline>
<codeline lineno="2221"><highlight class="normal"></highlight></codeline>
<codeline lineno="2239"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___c_a_n_1ga732a6fda09cb70f66f05ca58f8d8eeab" kindref="member">XMC_CAN_GATEWAY_InitSourceObject</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>can_mo,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_x_m_c___c_a_n___g_a_t_e_w_a_y___c_o_n_f_i_g__t" kindref="compound">XMC_CAN_GATEWAY_CONFIG_t</ref><sp/>can_gateway);</highlight></codeline>
<codeline lineno="2240"><highlight class="normal"></highlight></codeline>
<codeline lineno="2241"><highlight class="normal"></highlight></codeline>
<codeline lineno="2258"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___c_a_n_1gabec17bceec62048721c0e71c4157b8b4" kindref="member">XMC_CAN_GATEWAY_InitDesObject</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>can_mo)</highlight></codeline>
<codeline lineno="2259"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2260"><highlight class="normal"><sp/><sp/>can_mo-&gt;<ref refid="struct_x_m_c___c_a_n___m_o__t_1a93593ca451037e051fd6e76d116d3f4a" kindref="member">can_mo_ptr</ref>-&gt;MOCTR<sp/><sp/>=<sp/>CAN_MO_MOCTR_RESRXEN_Msk<sp/>|</highlight></codeline>
<codeline lineno="2261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CAN_MO_MOCTR_RESNEWDAT_Msk;</highlight></codeline>
<codeline lineno="2262"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2263"><highlight class="normal"></highlight></codeline>
<codeline lineno="2277"><highlight class="normal"><ref refid="group___c_a_n_1ga33a809a5460e5265b2fa3a5ddff3f337" kindref="member">XMC_CAN_STATUS_t</ref><sp/><ref refid="group___c_a_n_1ga568c53e9d219eabf0defeb9684b6c587" kindref="member">XMC_CAN_TXFIFO_Transmit</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>can_mo);</highlight></codeline>
<codeline lineno="2278"><highlight class="normal"></highlight></codeline>
<codeline lineno="2288"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group___c_a_n_1ga52fe6641459f69df4dba72f8a0c13c0a" kindref="member">XMC_CAN_IsListEmpty</ref>(<ref refid="group___c_a_n_1ga4c8ef1a9555bd8e1658e480944dca81e" kindref="member">XMC_CAN_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>obj,<sp/>uint8_t<sp/>list_idx)</highlight></codeline>
<codeline lineno="2289"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2290"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">)(obj-&gt;LIST[list_idx<sp/>+<sp/>1]<sp/>&amp;<sp/>CAN_LIST_EMPTY_Msk);</highlight></codeline>
<codeline lineno="2291"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2292"><highlight class="normal"></highlight></codeline>
<codeline lineno="2302"><highlight class="normal">__STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group___c_a_n_1gaee4a5b343f44ffbde1ef26639eb84313" kindref="member">XMC_CAN_GetListBegin</ref>(<ref refid="group___c_a_n_1ga4c8ef1a9555bd8e1658e480944dca81e" kindref="member">XMC_CAN_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>obj,<sp/>uint8_t<sp/>list_idx)</highlight></codeline>
<codeline lineno="2303"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2304"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((obj-&gt;LIST[list_idx<sp/>+<sp/>1]<sp/>&amp;<sp/>CAN_LIST_BEGIN_Msk)<sp/>&gt;&gt;<sp/>CAN_LIST_BEGIN_Pos);</highlight></codeline>
<codeline lineno="2305"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2306"><highlight class="normal"></highlight></codeline>
<codeline lineno="2316"><highlight class="normal">__STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group___c_a_n_1ga6c3c7f61d0d6e075977ee7473f460df6" kindref="member">XMC_CAN_GetListSize</ref>(<ref refid="group___c_a_n_1ga4c8ef1a9555bd8e1658e480944dca81e" kindref="member">XMC_CAN_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>obj,<sp/>uint8_t<sp/>list_idx)</highlight></codeline>
<codeline lineno="2317"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2318"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((obj-&gt;LIST[list_idx<sp/>+<sp/>1]<sp/>&amp;<sp/>CAN_LIST_SIZE_Msk)<sp/>&gt;&gt;<sp/>CAN_LIST_SIZE_Pos)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="2319"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2320"><highlight class="normal"></highlight></codeline>
<codeline lineno="2330"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___c_a_n_1ga19119baa3f77d51a0d28c9342efb1d7d" kindref="member">XMC_CAN_MO_GetMessageObject</ref>(<ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>can_mo,<sp/>uint8_t<sp/>mo_idx)</highlight></codeline>
<codeline lineno="2331"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2332"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CAN_MO0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2333"><highlight class="normal"><sp/><sp/>CAN_MO_TypeDef<sp/>*can_mo_ptr<sp/>=<sp/>&amp;CAN_MO0[mo_idx];</highlight></codeline>
<codeline lineno="2334"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(CAN_MO)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2335"><highlight class="normal"><sp/><sp/>CAN_MO_TypeDef<sp/>*can_mo_ptr<sp/>=<sp/>&amp;CAN_MO-&gt;MO[mo_idx];</highlight></codeline>
<codeline lineno="2336"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2337"><highlight class="normal"><sp/><sp/>can_mo-&gt;<ref refid="struct_x_m_c___c_a_n___m_o__t_1a93593ca451037e051fd6e76d116d3f4a" kindref="member">can_mo_ptr</ref><sp/>=<sp/>can_mo_ptr;</highlight></codeline>
<codeline lineno="2338"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2339"><highlight class="normal"></highlight></codeline>
<codeline lineno="2348"><highlight class="normal">__STATIC_INLINE<sp/>uint32_t<sp/><ref refid="group___c_a_n_1ga70d6a7847ba129346e515c269e4770aa" kindref="member">XMC_CAN_MO_GetNextMessageObjectIdx</ref>(<ref refid="struct_x_m_c___c_a_n___m_o__t" kindref="compound">XMC_CAN_MO_t</ref><sp/>*can_mo)</highlight></codeline>
<codeline lineno="2349"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2350"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((can_mo-&gt;<ref refid="struct_x_m_c___c_a_n___m_o__t_1a93593ca451037e051fd6e76d116d3f4a" kindref="member">can_mo_ptr</ref>-&gt;MOSTAT<sp/>&amp;<sp/>CAN_MO_MOSTAT_PNEXT_Msk)<sp/>&gt;&gt;<sp/>CAN_MO_MOSTAT_PNEXT_Pos);</highlight></codeline>
<codeline lineno="2351"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2352"><highlight class="normal"></highlight></codeline>
<codeline lineno="2353"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2354"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2355"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2356"><highlight class="normal"></highlight></codeline>
<codeline lineno="2362"><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>defined(CAN)<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2363"><highlight class="normal"></highlight></codeline>
<codeline lineno="2364"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>XMC_CAN_H<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2365"><highlight class="normal"></highlight></codeline>
<codeline lineno="2366"><highlight class="normal"></highlight></codeline>
<codeline lineno="2367"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_can.h"/>
  </compounddef>
</doxygen>
