<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="xmc__eth__mac_8h" kind="file" language="C++">
    <compoundname>xmc_eth_mac.h</compoundname>
    <includes local="yes">xmc_common.h</includes>
    <includes refid="xmc__eth__mac__map_8h" local="yes">xmc_eth_mac_map.h</includes>
    <includedby refid="xmc__eth__phy_8h" local="yes">xmc_eth_phy.h</includedby>
    <incdepgraph>
      <node id="52">
        <label>xmc_common.h</label>
      </node>
      <node id="51">
        <label>xmc_eth_mac.h</label>
        <link refid="xmc__eth__mac_8h"/>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="struct_x_m_c___e_t_h___m_a_c___d_m_a___d_e_s_c__t" prot="public">XMC_ETH_MAC_DMA_DESC_t</innerclass>
    <innerclass refid="union_x_m_c___e_t_h___m_a_c___p_o_r_t___c_t_r_l__t" prot="public">XMC_ETH_MAC_PORT_CTRL_t</innerclass>
    <innerclass refid="struct_x_m_c___e_t_h___m_a_c__t" prot="public">XMC_ETH_MAC_t</innerclass>
    <innerclass refid="struct_x_m_c___e_t_h___m_a_c___t_i_m_e__t" prot="public">XMC_ETH_MAC_TIME_t</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="group___e_t_h___m_a_c_1ga1003f8ba4d475d1587aebab0790e81de" prot="public" static="no">
        <name>ETH_MAC_DMA_RDES0_AFM</name>
        <initializer>(0x40000000U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destination address filter fail </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="169" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="169" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___e_t_h___m_a_c_1ga8169d86837403e66294be3adcee8920f" prot="public" static="no">
        <name>ETH_MAC_DMA_RDES0_CE</name>
        <initializer>(0x00000002U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CRC error </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="185" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="185" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___e_t_h___m_a_c_1ga76a08f9433b38b282849ffd01c4f7daf" prot="public" static="no">
        <name>ETH_MAC_DMA_RDES0_DBE</name>
        <initializer>(0x00000004U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Dribble bit error </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="184" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="184" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___e_t_h___m_a_c_1gaea2d6179f83789c85d7dfbd8d22f3883" prot="public" static="no">
        <name>ETH_MAC_DMA_RDES0_DE</name>
        <initializer>(0x00004000U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Descriptor error </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="172" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___e_t_h___m_a_c_1ga305a5ab7c36661b345d6a0be54d27b13" prot="public" static="no">
        <name>ETH_MAC_DMA_RDES0_ES</name>
        <initializer>(0x00008000U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Error summary </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="171" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="171" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___e_t_h___m_a_c_1ga3b880e7ec1f7187e3bd3d947c11cd492" prot="public" static="no">
        <name>ETH_MAC_DMA_RDES0_ESA</name>
        <initializer>(0x00000001U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Extended Status/Rx MAC address </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="186" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="186" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___e_t_h___m_a_c_1ga53a2c603a9b8d86d382f6ef3b419be02" prot="public" static="no">
        <name>ETH_MAC_DMA_RDES0_FL</name>
        <initializer>(0x3FFF0000U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Frame length mask </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="170" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="170" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___e_t_h___m_a_c_1gaa69eec0bac6b023d5959b8561789a954" prot="public" static="no">
        <name>ETH_MAC_DMA_RDES0_FS</name>
        <initializer>(0x00000200U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>First descriptor </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="177" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="177" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___e_t_h___m_a_c_1ga8cd57cf72ac7c1f2120c127a1e8d1104" prot="public" static="no">
        <name>ETH_MAC_DMA_RDES0_FT</name>
        <initializer>(0x00000020U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Frame type </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="181" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="181" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___e_t_h___m_a_c_1ga88336d46b363448ec041bf008710869e" prot="public" static="no">
        <name>ETH_MAC_DMA_RDES0_LC</name>
        <initializer>(0x00000040U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Late collision </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="180" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="180" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___e_t_h___m_a_c_1ga48b1876b5572b54ac66cebe72eb7f32c" prot="public" static="no">
        <name>ETH_MAC_DMA_RDES0_LE</name>
        <initializer>(0x00001000U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Length error </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="174" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="174" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___e_t_h___m_a_c_1ga9d9e75c156a3f27ddb983aabb26efe88" prot="public" static="no">
        <name>ETH_MAC_DMA_RDES0_LS</name>
        <initializer>(0x00000100U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Last descriptor </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="178" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="178" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___e_t_h___m_a_c_1ga74608d0f79f122185571453e3852f151" prot="public" static="no">
        <name>ETH_MAC_DMA_RDES0_OE</name>
        <initializer>(0x00000800U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Overflow error </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="175" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="175" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___e_t_h___m_a_c_1gae1784f11eba992f7343db8c198c4774b" prot="public" static="no">
        <name>ETH_MAC_DMA_RDES0_OWN</name>
        <initializer>(0x80000000U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>RDES0 Descriptor RX Packet StatusOwn bit 1=DMA, 0=CPU </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="168" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="168" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___e_t_h___m_a_c_1ga929e39015b96afe730b32f71e7ddbd15" prot="public" static="no">
        <name>ETH_MAC_DMA_RDES0_RE</name>
        <initializer>(0x00000008U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Receive error </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="183" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="183" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___e_t_h___m_a_c_1gabaa32d79aaefcee270424690b6ee50c6" prot="public" static="no">
        <name>ETH_MAC_DMA_RDES0_RWT</name>
        <initializer>(0x00000010U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Receive watchdog timeout </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="182" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="182" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___e_t_h___m_a_c_1ga4fac59378d426cc98d5e316741d91245" prot="public" static="no">
        <name>ETH_MAC_DMA_RDES0_SAF</name>
        <initializer>(0x00002000U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Source address filter fail </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="173" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="173" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___e_t_h___m_a_c_1ga9187b94d2cfc8c15ef2d60d798de36f5" prot="public" static="no">
        <name>ETH_MAC_DMA_RDES0_TSA</name>
        <initializer>(0x00000080U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Timestamp available </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="179" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="179" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___e_t_h___m_a_c_1gac56c18d1c14450f31012137edc105b86" prot="public" static="no">
        <name>ETH_MAC_DMA_RDES0_VLAN</name>
        <initializer>(0x00000400U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>VLAN tag </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="176" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="176" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___e_t_h___m_a_c_1ga3e83bb1a082d14964e4bf4cb1af1aeb4" prot="public" static="no">
        <name>ETH_MAC_DMA_TDES0_CC</name>
        <initializer>(0x00000078U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Collision count </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="160" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="160" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___e_t_h___m_a_c_1gaa52b79bd20ee1d9f159139e9aecdbfab" prot="public" static="no">
        <name>ETH_MAC_DMA_TDES0_CIC</name>
        <initializer>(0x00C00000U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Checksum insertion control </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="146" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___e_t_h___m_a_c_1gae04ec90452c675abff308e9c5cf4499b" prot="public" static="no">
        <name>ETH_MAC_DMA_TDES0_DB</name>
        <initializer>(0x00000001U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Deferred bit </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="163" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___e_t_h___m_a_c_1ga229b2bed61de1aa415bf66433e0e2e0b" prot="public" static="no">
        <name>ETH_MAC_DMA_TDES0_DC</name>
        <initializer>(0x08000000U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Disable CRC </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="143" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___e_t_h___m_a_c_1gad60ccf98f46a43fbe355b41a5ad46ad4" prot="public" static="no">
        <name>ETH_MAC_DMA_TDES0_DP</name>
        <initializer>(0x04000000U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Disable pad </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="144" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___e_t_h___m_a_c_1ga1b5306e29ba2a99eaf57ba0d0f3a1c37" prot="public" static="no">
        <name>ETH_MAC_DMA_TDES0_EC</name>
        <initializer>(0x00000100U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Excessive collision </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="158" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="158" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___e_t_h___m_a_c_1ga50c3400bd266b8580f98e99089c92fe6" prot="public" static="no">
        <name>ETH_MAC_DMA_TDES0_ED</name>
        <initializer>(0x00000004U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Excessive deferral </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="161" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="161" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___e_t_h___m_a_c_1ga3c0dbf1066708e5951723674b6a80512" prot="public" static="no">
        <name>ETH_MAC_DMA_TDES0_ES</name>
        <initializer>(0x00008000U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Error summary </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="151" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___e_t_h___m_a_c_1ga74d227e79328a056b70e158609f12c1a" prot="public" static="no">
        <name>ETH_MAC_DMA_TDES0_FF</name>
        <initializer>(0x00002000U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Frame flushed </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="153" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___e_t_h___m_a_c_1ga194b0a2bb48663f4e6b283794711146a" prot="public" static="no">
        <name>ETH_MAC_DMA_TDES0_FS</name>
        <initializer>(0x10000000U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>First segment </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="142" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___e_t_h___m_a_c_1gaf45bca3b3966973935ae121970c948ff" prot="public" static="no">
        <name>ETH_MAC_DMA_TDES0_IC</name>
        <initializer>(0x40000000U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Interrupt on competition </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="140" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___e_t_h___m_a_c_1gaf473c3b83b1f262db8929f21a63d7227" prot="public" static="no">
        <name>ETH_MAC_DMA_TDES0_IHE</name>
        <initializer>(0x00010000U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>IP header error </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="150" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="150" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___e_t_h___m_a_c_1ga398b352052313fff7a834086efcc36de" prot="public" static="no">
        <name>ETH_MAC_DMA_TDES0_IPE</name>
        <initializer>(0x00001000U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>IP payload error </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="154" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="154" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___e_t_h___m_a_c_1ga191100542f6616ad8f5f3efbc1c4bcd6" prot="public" static="no">
        <name>ETH_MAC_DMA_TDES0_JT</name>
        <initializer>(0x00004000U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Jabber timeout </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="152" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="152" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___e_t_h___m_a_c_1gae7ec55ef0bce228533d1be554985913f" prot="public" static="no">
        <name>ETH_MAC_DMA_TDES0_LC</name>
        <initializer>(0x00000200U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Late collision </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="157" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="157" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___e_t_h___m_a_c_1ga970ae6d463ad67386b7d9046133cabd9" prot="public" static="no">
        <name>ETH_MAC_DMA_TDES0_LOC</name>
        <initializer>(0x00000800U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Loss of carrier </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="155" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="155" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___e_t_h___m_a_c_1gacc6c55edf5c798ccf036ac90cad77cba" prot="public" static="no">
        <name>ETH_MAC_DMA_TDES0_LS</name>
        <initializer>(0x20000000U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Last segment </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="141" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___e_t_h___m_a_c_1ga85c18fde391a6ccd254928e6a8e0db7f" prot="public" static="no">
        <name>ETH_MAC_DMA_TDES0_NC</name>
        <initializer>(0x00000400U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>No carrier </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="156" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___e_t_h___m_a_c_1gadc3537e021d7b1e6cd1fd009c8809ee4" prot="public" static="no">
        <name>ETH_MAC_DMA_TDES0_OWN</name>
        <initializer>(0x80000000U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>TDES0 Descriptor TX Packet Control/StatusOwn bit 1=DMA, 0=CPU </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="139" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___e_t_h___m_a_c_1gaa0a2fd76dfa9e310cf5131d0999d6d06" prot="public" static="no">
        <name>ETH_MAC_DMA_TDES0_TCH</name>
        <initializer>(0x00100000U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Second address chained </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="148" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="148" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___e_t_h___m_a_c_1ga091a495cb911bc2d73d3a0756e5382d6" prot="public" static="no">
        <name>ETH_MAC_DMA_TDES0_TER</name>
        <initializer>(0x00200000U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Transmit end of ring </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="147" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___e_t_h___m_a_c_1ga686cca30c6ac0648726d415e68a73417" prot="public" static="no">
        <name>ETH_MAC_DMA_TDES0_TTSE</name>
        <initializer>(0x02000000U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Transmit time stamp enable </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="145" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___e_t_h___m_a_c_1ga66ffa0909655dbd60c3a6483062560c9" prot="public" static="no">
        <name>ETH_MAC_DMA_TDES0_TTSS</name>
        <initializer>(0x00020000U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Transmit time stamp status </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="149" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="149" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___e_t_h___m_a_c_1gab3fbf1393789839ea7ac2c7683a00a21" prot="public" static="no">
        <name>ETH_MAC_DMA_TDES0_UF</name>
        <initializer>(0x00000002U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Underflow error </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="162" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="162" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___e_t_h___m_a_c_1ga26f56f2bd422e7b0a33fe04b60d6eee8" prot="public" static="no">
        <name>ETH_MAC_DMA_TDES0_VF</name>
        <initializer>(0x00000080U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>VLAN frame </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="159" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___e_t_h___m_a_c_1gada0da4d0205de79ef15a43b1b46a56bf" prot="public" static="no">
        <name>XMC_ETH_MAC_BUF_SIZE</name>
        <initializer>(1524)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>ETH MAC buffer size </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="132" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="132" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___e_t_h___m_a_c_1ga598b573e38e6f29e55c39b2f4ea122d8" prot="public" static="no">
        <name>XMC_ETH_MAC_PHY_MAX_RETRIES</name>
        <initializer>(0xffffUL)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Maximum retries </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="133" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="133" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___e_t_h___m_a_c_1gac623bf2418a47b06c032e6ab26494db1" prot="public" static="no">
        <name>XMC_ETH_WAKEUP_REGISTER_LENGTH</name>
        <initializer>(8U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Remote wakeup frame reg length </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="134" column="9" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="134" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group___e_t_h___m_a_c_1gab7f9ae5d92570c07305898a48e5c5b9a" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_ETH_LINK_DUPLEX_t</name>
        <enumvalue id="group___e_t_h___m_a_c_1ggab7f9ae5d92570c07305898a48e5c5b9aac2759735d5e529b08ae33a55b59f595b" prot="public">
          <name>XMC_ETH_LINK_DUPLEX_HALF</name>
          <initializer>= 0UL &lt;&lt; ETH_MAC_CONFIGURATION_DM_Pos</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Half duplex </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___e_t_h___m_a_c_1ggab7f9ae5d92570c07305898a48e5c5b9aa4a8af65cc4d249aca5df386dd0a8cfab" prot="public">
          <name>XMC_ETH_LINK_DUPLEX_FULL</name>
          <initializer>= 1UL &lt;&lt; ETH_MAC_CONFIGURATION_DM_Pos</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Full duplex </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>ETH duplex settings (full/half?) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="265" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="264" bodyend="268"/>
      </memberdef>
      <memberdef kind="enum" id="group___e_t_h___m_a_c_1gaca9dd401fd15250f4b774698e481b0d1" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_ETH_LINK_INTERFACE_t</name>
        <enumvalue id="group___e_t_h___m_a_c_1ggaca9dd401fd15250f4b774698e481b0d1a3b2fa9b609c7b9ef2aebfee85941a40e" prot="public">
          <name>XMC_ETH_LINK_INTERFACE_MII</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Link interface: Media independent interface </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___e_t_h___m_a_c_1ggaca9dd401fd15250f4b774698e481b0d1a40e51e884d969533ec6e9b4a73e0b045" prot="public">
          <name>XMC_ETH_LINK_INTERFACE_RMII</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Link interface: Reduced media independent interface </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Link interface </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="238" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="237" bodyend="241"/>
      </memberdef>
      <memberdef kind="enum" id="group___e_t_h___m_a_c_1ga29d7022e1e9e2c857f79efc6c281b531" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_ETH_LINK_SPEED_t</name>
        <enumvalue id="group___e_t_h___m_a_c_1gga29d7022e1e9e2c857f79efc6c281b531a8c2a2a21c853992077a2ed3a746ab8fb" prot="public">
          <name>XMC_ETH_LINK_SPEED_10M</name>
          <initializer>= 0UL &lt;&lt; ETH_MAC_CONFIGURATION_FES_Pos</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Link speed: 10M </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___e_t_h___m_a_c_1gga29d7022e1e9e2c857f79efc6c281b531a5500817cb99d2be1f4f5fc2981053cac" prot="public">
          <name>XMC_ETH_LINK_SPEED_100M</name>
          <initializer>= 1UL &lt;&lt; ETH_MAC_CONFIGURATION_FES_Pos</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Link speed: 100M </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>ETH link speed </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="256" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="255" bodyend="259"/>
      </memberdef>
      <memberdef kind="enum" id="group___e_t_h___m_a_c_1ga98929c79969eb0198abe9f6aff564660" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_ETH_LINK_STATUS_t</name>
        <enumvalue id="group___e_t_h___m_a_c_1gga98929c79969eb0198abe9f6aff564660adb04bdcadaa17b5969f50ea662081ad2" prot="public">
          <name>XMC_ETH_LINK_STATUS_DOWN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Link status down </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___e_t_h___m_a_c_1gga98929c79969eb0198abe9f6aff564660a3228fdde58088c1e5eb900ea6bce8711" prot="public">
          <name>XMC_ETH_LINK_STATUS_UP</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Link status up </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>ETH link status </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="247" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="246" bodyend="250"/>
      </memberdef>
      <memberdef kind="enum" id="group___e_t_h___m_a_c_1ga0e971b409a48489d9ec6b384541da558" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_ETH_MAC_ADDR_FILTER_t</name>
        <enumvalue id="group___e_t_h___m_a_c_1gga0e971b409a48489d9ec6b384541da558aceedae7faae99c618f4ecff02bf8ef4a" prot="public">
          <name>XMC_ETH_MAC_ADDR_FILTER_MASK_BYTE0</name>
          <initializer>= 0x01000000UL</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Address filter mask: byte 0 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___e_t_h___m_a_c_1gga0e971b409a48489d9ec6b384541da558a45736210a02a1216a3af5247293e40b5" prot="public">
          <name>XMC_ETH_MAC_ADDR_FILTER_MASK_BYTE1</name>
          <initializer>= 0x02000000UL</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Address filter mask: byte 1 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___e_t_h___m_a_c_1gga0e971b409a48489d9ec6b384541da558a55169b543fde65b7f664fbc5c6513013" prot="public">
          <name>XMC_ETH_MAC_ADDR_FILTER_MASK_BYTE2</name>
          <initializer>= 0x04000000UL</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Address filter mask: byte 2 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___e_t_h___m_a_c_1gga0e971b409a48489d9ec6b384541da558a92d851fcdc5c4a11744abffddd4c6de8" prot="public">
          <name>XMC_ETH_MAC_ADDR_FILTER_MASK_BYTE3</name>
          <initializer>= 0x08000000UL</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Address filter mask: byte 3 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___e_t_h___m_a_c_1gga0e971b409a48489d9ec6b384541da558ad56f5735bffef3e85580d0e4cab85784" prot="public">
          <name>XMC_ETH_MAC_ADDR_FILTER_MASK_BYTE4</name>
          <initializer>= 0x10000000UL</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Address filter mask: byte 4 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___e_t_h___m_a_c_1gga0e971b409a48489d9ec6b384541da558a9cd1931808054779b737110342db88ad" prot="public">
          <name>XMC_ETH_MAC_ADDR_FILTER_MASK_BYTE5</name>
          <initializer>= 0x20000000UL</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Address filter mask: byte 5 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___e_t_h___m_a_c_1gga0e971b409a48489d9ec6b384541da558ae0fd030435db189e58b627ff43fdb966" prot="public">
          <name>XMC_ETH_MAC_ADDR_FILTER_SA</name>
          <initializer>= 0x40000000UL</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Address filter SA </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>MAC address filter </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="274" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="273" bodyend="282"/>
      </memberdef>
      <memberdef kind="enum" id="group___e_t_h___m_a_c_1gaaad989c6a075501c036c378ff999795b" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_ETH_MAC_EVENT_t</name>
        <enumvalue id="group___e_t_h___m_a_c_1ggaaad989c6a075501c036c378ff999795bae0bd87f2cfd0fbc368482b65d78a44a7" prot="public">
          <name>XMC_ETH_MAC_EVENT_PMT</name>
          <initializer>= ETH_INTERRUPT_MASK_PMTIM_Msk &lt;&lt; 16</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Power management event </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___e_t_h___m_a_c_1ggaaad989c6a075501c036c378ff999795bac2309b45e97105177e0f448ea3c143b0" prot="public">
          <name>XMC_ETH_MAC_EVENT_TIMESTAMP</name>
          <initializer>= ETH_INTERRUPT_MASK_TSIM_Msk &lt;&lt; 16</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Time stamp event </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___e_t_h___m_a_c_1ggaaad989c6a075501c036c378ff999795bae51a7df3e1fd86d8e8c9534d1a21334a" prot="public">
          <name>XMC_ETH_MAC_EVENT_EARLY_RECEIVE</name>
          <initializer>= ETH_STATUS_ERI_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Early receive </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___e_t_h___m_a_c_1ggaaad989c6a075501c036c378ff999795ba930886c62a56e52a5a4cca2ddcaf3bd0" prot="public">
          <name>XMC_ETH_MAC_EVENT_BUS_ERROR</name>
          <initializer>= ETH_STATUS_FBI_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Bus error </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___e_t_h___m_a_c_1ggaaad989c6a075501c036c378ff999795badf20751378c39d5b18a98239dd9f0713" prot="public">
          <name>XMC_ETH_MAC_EVENT_EARLY_TRANSMIT</name>
          <initializer>= ETH_STATUS_ETI_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Early transmit </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___e_t_h___m_a_c_1ggaaad989c6a075501c036c378ff999795ba15641f48394a65445ceb6383fb59e5f4" prot="public">
          <name>XMC_ETH_MAC_EVENT_RECEIVE_WATCHDOG_TIMEOUT</name>
          <initializer>= ETH_STATUS_RWT_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Receive watchdog time-out </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___e_t_h___m_a_c_1ggaaad989c6a075501c036c378ff999795baf75619b3817bfc8cb265b328c76639f6" prot="public">
          <name>XMC_ETH_MAC_EVENT_RECEIVE_PROCESS_STOPPED</name>
          <initializer>= ETH_STATUS_RPS_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Receive process stopped </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___e_t_h___m_a_c_1ggaaad989c6a075501c036c378ff999795ba7b4563c336b75613bc0a4ee83b241f3c" prot="public">
          <name>XMC_ETH_MAC_EVENT_RECEIVE_BUFFER_UNAVAILABLE</name>
          <initializer>= ETH_STATUS_RU_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Receive buffer unavailable </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___e_t_h___m_a_c_1ggaaad989c6a075501c036c378ff999795bac4c12307f739fd9e2bd35810e3bb6de2" prot="public">
          <name>XMC_ETH_MAC_EVENT_RECEIVE</name>
          <initializer>= ETH_STATUS_RI_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Receive event </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___e_t_h___m_a_c_1ggaaad989c6a075501c036c378ff999795bac8ce5d54200014673f0d766796bec271" prot="public">
          <name>XMC_ETH_MAC_EVENT_TRANSMIT_UNDERFLOW</name>
          <initializer>= ETH_STATUS_UNF_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Transmit underflow </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___e_t_h___m_a_c_1ggaaad989c6a075501c036c378ff999795ba6ed055de613938a6f990c00f66c64099" prot="public">
          <name>XMC_ETH_MAC_EVENT_RECEIVE_OVERFLOW</name>
          <initializer>= ETH_STATUS_OVF_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Receive overflow </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___e_t_h___m_a_c_1ggaaad989c6a075501c036c378ff999795baf4e98b85c81a81c67c83063a152139cc" prot="public">
          <name>XMC_ETH_MAC_EVENT_TRANSMIT_JABBER_TIMEOUT</name>
          <initializer>= ETH_STATUS_TJT_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Transmit jabber time-out </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___e_t_h___m_a_c_1ggaaad989c6a075501c036c378ff999795babb4e8fe789547c32de6339deffb24caf" prot="public">
          <name>XMC_ETH_MAC_EVENT_TRANSMIT_BUFFER_UNAVAILABLE</name>
          <initializer>= ETH_STATUS_TU_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Transmit buffer unavailable </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___e_t_h___m_a_c_1ggaaad989c6a075501c036c378ff999795ba0e15bc11aabc73a9a0f2f7c209197b06" prot="public">
          <name>XMC_ETH_MAC_EVENT_TRANSMIT_PROCESS_STOPPED</name>
          <initializer>= ETH_STATUS_TPS_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Transmit process stopped </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___e_t_h___m_a_c_1ggaaad989c6a075501c036c378ff999795ba56fa742057887c8240fb0bbd5620817c" prot="public">
          <name>XMC_ETH_MAC_EVENT_TRANSMIT</name>
          <initializer>= ETH_STATUS_TI_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Transmit event </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>ETH MAC event </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="216" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="215" bodyend="232"/>
      </memberdef>
      <memberdef kind="enum" id="group___e_t_h___m_a_c_1ga73e7eef3f389735119ae79dfc4743606" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_ETH_MAC_PMT_EVENT_t</name>
        <enumvalue id="group___e_t_h___m_a_c_1gga73e7eef3f389735119ae79dfc4743606a959abf76ddfd36d788edae5d312badae" prot="public">
          <name>XMC_ETH_MAC_PMT_EVENT_ON_WAKEUP_FRAME</name>
          <initializer>= ETH_PMT_CONTROL_STATUS_RWKPKTEN_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Wakeup frame </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___e_t_h___m_a_c_1gga73e7eef3f389735119ae79dfc4743606a56237310420fbd2e12dc421de95a8548" prot="public">
          <name>XMC_ETH_MAC_PMT_EVENT_ON_MAGIC_PACKET</name>
          <initializer>= ETH_PMT_CONTROL_STATUS_MGKPKTEN_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Magic packet </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___e_t_h___m_a_c_1gga73e7eef3f389735119ae79dfc4743606a62f713bc13928a6827efac55ed2cb970" prot="public">
          <name>XMC_ETH_MAC_PMT_EVENT_ON_UNICAST_FRAME_FILTER</name>
          <initializer>= ETH_PMT_CONTROL_STATUS_GLBLUCAST_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Unicast frame filter </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Power management events that triggers a PMT interrupt </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="288" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="287" bodyend="292"/>
      </memberdef>
      <memberdef kind="enum" id="group___e_t_h___m_a_c_1ga8a60bbbfc7a839fd1a60d4ed0079a256" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_ETH_MAC_STATUS_t</name>
        <enumvalue id="group___e_t_h___m_a_c_1gga8a60bbbfc7a839fd1a60d4ed0079a256a3de9fe86827c613d6603a2bca47758e6" prot="public">
          <name>XMC_ETH_MAC_STATUS_OK</name>
          <initializer>= 0U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Driver accepted application request </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___e_t_h___m_a_c_1gga8a60bbbfc7a839fd1a60d4ed0079a256a7941c4fa46903f7d89f623652d1ffe94" prot="public">
          <name>XMC_ETH_MAC_STATUS_BUSY</name>
          <initializer>= 1U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Driver is busy and cannot handle request </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___e_t_h___m_a_c_1gga8a60bbbfc7a839fd1a60d4ed0079a256a2a810b29e441ce6e3a7ed96e16ec212f" prot="public">
          <name>XMC_ETH_MAC_STATUS_ERROR</name>
          <initializer>= 2U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Driver could not fulfil application request </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Ethernet MAC status return values </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="196" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="195" bodyend="200"/>
      </memberdef>
      <memberdef kind="enum" id="group___e_t_h___m_a_c_1gab8ed635081af97e59b61de8accd8da6d" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_ETH_MAC_TIMESTAMP_CONFIG_t</name>
        <enumvalue id="group___e_t_h___m_a_c_1ggab8ed635081af97e59b61de8accd8da6da8351de1e0f8f19c21ed765d3a074bc30" prot="public">
          <name>XMC_ETH_MAC_TIMESTAMP_CONFIG_FINE_UPDATE</name>
          <initializer>= ETH_TIMESTAMP_CONTROL_TSCFUPDT_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Fine update </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___e_t_h___m_a_c_1ggab8ed635081af97e59b61de8accd8da6dab1160efed0255ee8485f0f280d806864" prot="public">
          <name>XMC_ETH_MAC_TIMESTAMP_CONFIG_ENABLE_TS_INTERRUPT</name>
          <initializer>= ETH_TIMESTAMP_CONTROL_TSTRIG_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Timestamp Interrupt Trigger Enable </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___e_t_h___m_a_c_1ggab8ed635081af97e59b61de8accd8da6da34b89184a6fcfc3a37f96e7fc32738e3" prot="public">
          <name>XMC_ETH_MAC_TIMESTAMP_CONFIG_ENABLE_ALL_FRAMES</name>
          <initializer>= ETH_TIMESTAMP_CONTROL_TSENALL_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Enable all frames </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___e_t_h___m_a_c_1ggab8ed635081af97e59b61de8accd8da6da0de51580b22a9cd80a19ac3b4bfd6522" prot="public">
          <name>XMC_ETH_MAC_TIMESTAMP_CONFIG_ENABLE_PTPV2</name>
          <initializer>= ETH_TIMESTAMP_CONTROL_TSVER2ENA_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>PTPV2 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___e_t_h___m_a_c_1ggab8ed635081af97e59b61de8accd8da6da43b06a88c9b4d47769a3b4679d7d0de1" prot="public">
          <name>XMC_ETH_MAC_TIMESTAMP_CONFIG_ENABLE_PTP_OVER_ETHERNET</name>
          <initializer>= ETH_TIMESTAMP_CONTROL_TSIPENA_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>PTP over ETH </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___e_t_h___m_a_c_1ggab8ed635081af97e59b61de8accd8da6da5ae5ccade123253c98d26b591934176a" prot="public">
          <name>XMC_ETH_MAC_TIMESTAMP_CONFIG_ENABLE_PTP_OVER_IPV6</name>
          <initializer>= ETH_TIMESTAMP_CONTROL_TSIPV6ENA_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>PTP over IPV6 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___e_t_h___m_a_c_1ggab8ed635081af97e59b61de8accd8da6dad224291b5dff032816d8ade1eb37113b" prot="public">
          <name>XMC_ETH_MAC_TIMESTAMP_CONFIG_ENABLE_PTP_OVER_IPV4</name>
          <initializer>= ETH_TIMESTAMP_CONTROL_TSIPV4ENA_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>PTP over IPV4 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___e_t_h___m_a_c_1ggab8ed635081af97e59b61de8accd8da6da7a90800b5f223c66a1747187025e4e7d" prot="public">
          <name>XMC_ETH_MAC_TIMESTAMP_CONFIG_ENABLE_MAC_ADDRESS_FILTER</name>
          <initializer>= ETH_TIMESTAMP_CONTROL_TSENMACADDR_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>MAC address filter </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>ETH MAC time-stamp configuration enable </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="299" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="298" bodyend="308"/>
      </memberdef>
      <memberdef kind="enum" id="group___e_t_h___m_a_c_1gaa1f03ed5eed7ba362484d1e11fcbd3fd" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_ETH_MAC_TIMESTAMP_STATUS_t</name>
        <enumvalue id="group___e_t_h___m_a_c_1ggaa1f03ed5eed7ba362484d1e11fcbd3fda77afbac431542acdc557a52d9bacc5e3" prot="public">
          <name>XMC_ETH_MAC_TIMESTAMP_STATUS_SECONDS_OVERFLOW</name>
          <initializer>= ETH_TIMESTAMP_STATUS_TSSOVF_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Indicates that the seconds value of the timestamp has overflowed beyond 0xFFFFFFFF </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___e_t_h___m_a_c_1ggaa1f03ed5eed7ba362484d1e11fcbd3fdad0faf4227b22f9809484e576b49100e0" prot="public">
          <name>XMC_ETH_MAC_TIMESTAMP_STATUS_TARGET_TIME_REACHED</name>
          <initializer>= ETH_TIMESTAMP_STATUS_TSTARGT_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Indicates that the value of system time is greater or equal to the value specified in the Target_Time_ Seconds Register and Target Time Nanoseconds Register </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___e_t_h___m_a_c_1ggaa1f03ed5eed7ba362484d1e11fcbd3fdaab1ea3f645b23a047086c0dd3ab56d10" prot="public">
          <name>XMC_ETH_MAC_TIMESTAMP_STATUS_TARGET_TIMER_ERROR</name>
          <initializer>= ETH_TIMESTAMP_STATUS_TSTRGTERR_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Set when the target time, being programmed in Target Time Registers, is already elapsed </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>ETH MAC time-stamp status </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="314" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="313" bodyend="318"/>
      </memberdef>
      <memberdef kind="enum" id="group___e_t_h___m_a_c_1gae9d99f0e5ec03c5a3213189612c94b18" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_ETH_MAC_TX_FRAME_t</name>
        <enumvalue id="group___e_t_h___m_a_c_1ggae9d99f0e5ec03c5a3213189612c94b18a34c8997c5de52fb2d2e870ed86720478" prot="public">
          <name>XMC_ETH_MAC_TX_FRAME_FRAGMENT</name>
          <initializer>= 0x1U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Indicate frame fragment </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___e_t_h___m_a_c_1ggae9d99f0e5ec03c5a3213189612c94b18a302e24bad8207ab973006131c19540dc" prot="public">
          <name>XMC_ETH_MAC_TX_FRAME_EVENT</name>
          <initializer>= 0x2U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Generate event when frame is transmitted </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___e_t_h___m_a_c_1ggae9d99f0e5ec03c5a3213189612c94b18a1ca26d98a382dc2fdf0368fb9eda50cb" prot="public">
          <name>XMC_ETH_MAC_TX_FRAME_TIMESTAMP</name>
          <initializer>= 0x4U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Capture frame time stamp </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Transmission frame </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="206" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="205" bodyend="210"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group___e_t_h___m_a_c_1ga79c93ea281938e2a4ff4d6e1ee037057" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_ETH_MAC_AdjustPTPClock</definition>
        <argsstring>(XMC_ETH_MAC_t *const eth_mac, uint32_t correction)</argsstring>
        <name>XMC_ETH_MAC_AdjustPTPClock</name>
        <param>
          <type><ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref> *const</type>
          <declname>eth_mac</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>correction</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eth_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref>, pointing to the ETH MAC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>correction</parametername>
</parameternamelist>
<parameterdescription>
<para>Correction factor </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Adjust PTP clock <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>The function can be used to adjust the PTP clock (time synchronization). Please see the function implementation for more information. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="1881" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___e_t_h___m_a_c_1gaa2c00448844a2d4a54a30faec3cad79f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_ETH_MAC_ClearEventStatus</definition>
        <argsstring>(XMC_ETH_MAC_t *const eth_mac, uint32_t event)</argsstring>
        <name>XMC_ETH_MAC_ClearEventStatus</name>
        <param>
          <type><ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref> *const</type>
          <declname>eth_mac</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eth_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref>, pointing to the ETH MAC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>The status of which event (or a combination of logically OR&apos;d events) needs to be cleared </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Clear event status <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>The function clears the status of an event passed as a parameter to the function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="1960" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___e_t_h___m_a_c_1ga02fea7fba60ff4f94e02288376e128f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_ETH_MAC_Disable</definition>
        <argsstring>(XMC_ETH_MAC_t *const eth_mac)</argsstring>
        <name>XMC_ETH_MAC_Disable</name>
        <param>
          <type><ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref> *const</type>
          <declname>eth_mac</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eth_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref>, pointing to the ETH MAC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Disable the Ethernet MAC peripheral <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>The function asserts the peripheral reset. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="495" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___e_t_h___m_a_c_1gae73e447b775804bfd2b6de7a57eacd80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_ETH_MAC_DisableDestinationAddressInverseFilter</definition>
        <argsstring>(XMC_ETH_MAC_t *const eth_mac)</argsstring>
        <name>XMC_ETH_MAC_DisableDestinationAddressInverseFilter</name>
        <param>
          <type><ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref> *const</type>
          <declname>eth_mac</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eth_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref>, pointing to the ETH MAC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Disable destination address inverse filtering <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>The function sets the DAIF bitfield of the MAC_FRAME_FILTER register. It can be used to perform normal filtering of frames. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="860" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="860" bodyend="863"/>
      </memberdef>
      <memberdef kind="function" id="group___e_t_h___m_a_c_1ga76d3458fbbe31b9d90c92d887b789fcb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_ETH_MAC_DisableEvent</definition>
        <argsstring>(XMC_ETH_MAC_t *const eth_mac, uint32_t event)</argsstring>
        <name>XMC_ETH_MAC_DisableEvent</name>
        <param>
          <type><ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref> *const</type>
          <declname>eth_mac</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eth_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref>, pointing to the ETH MAC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>Which event (or a combination of logically OR&apos;d events) needs to be disabled? </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Disable an ETH MAC event(s) <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>The function can be used to disable ETH MAC event(s). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="1947" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___e_t_h___m_a_c_1gaba2aab8aefbfb724785d6ad631bf2760" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_ETH_MAC_DisableFrameBurst</definition>
        <argsstring>(XMC_ETH_MAC_t *const eth_mac)</argsstring>
        <name>XMC_ETH_MAC_DisableFrameBurst</name>
        <param>
          <type><ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref> *const</type>
          <declname>eth_mac</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eth_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref>, pointing to the ETH MAC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Frame burst disable <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>The function can be used to disable frame bursting. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="1163" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="1163" bodyend="1166"/>
      </memberdef>
      <memberdef kind="function" id="group___e_t_h___m_a_c_1ga77b6542933ec6acd8ed390446d417ecc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_ETH_MAC_DisableFrameFilter</definition>
        <argsstring>(XMC_ETH_MAC_t *const eth_mac)</argsstring>
        <name>XMC_ETH_MAC_DisableFrameFilter</name>
        <param>
          <type><ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref> *const</type>
          <declname>eth_mac</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eth_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref>, pointing to the ETH MAC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Disable frame filter <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>The function sets the RA bitfield of the MAC_FRAME_FILTER register. This ensures that the receiver module passes all received frames, irrespective of whether they pass the address filter or not. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="721" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="721" bodyend="724"/>
      </memberdef>
      <memberdef kind="function" id="group___e_t_h___m_a_c_1ga66dfaaa324ee7ebbba781566b543f112" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_ETH_MAC_DisableJumboFrame</definition>
        <argsstring>(XMC_ETH_MAC_t *const eth_mac)</argsstring>
        <name>XMC_ETH_MAC_DisableJumboFrame</name>
        <param>
          <type><ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref> *const</type>
          <declname>eth_mac</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eth_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref>, pointing to the ETH MAC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Jumbo frame disable <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>The function can be used to disable jumbo frames. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="1195" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="1195" bodyend="1198"/>
      </memberdef>
      <memberdef kind="function" id="group___e_t_h___m_a_c_1ga66f8e7315ac9df220333ce7241ef3280" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_ETH_MAC_DisableLoopback</definition>
        <argsstring>(XMC_ETH_MAC_t *const eth_mac)</argsstring>
        <name>XMC_ETH_MAC_DisableLoopback</name>
        <param>
          <type><ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref> *const</type>
          <declname>eth_mac</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eth_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref>, pointing to the ETH MAC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Disable loopback mode <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>The function can be used to disable the loopback mode. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="1257" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="1257" bodyend="1260"/>
      </memberdef>
      <memberdef kind="function" id="group___e_t_h___m_a_c_1gab7c660afefae53674c30d82f72f29d6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_ETH_MAC_DisableMulticastHashFilter</definition>
        <argsstring>(XMC_ETH_MAC_t *const eth_mac)</argsstring>
        <name>XMC_ETH_MAC_DisableMulticastHashFilter</name>
        <param>
          <type><ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref> *const</type>
          <declname>eth_mac</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eth_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref>, pointing to the ETH MAC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Disable multicast hash filter <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>The function disables multicast hash filtering. The MAC performs a perfect destination address filtering for multicast frames post invocation. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="892" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="892" bodyend="895"/>
      </memberdef>
      <memberdef kind="function" id="group___e_t_h___m_a_c_1ga5c435a4b215f6a01e16aa10e217a5c3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_ETH_MAC_DisablePowerDownMode</definition>
        <argsstring>(XMC_ETH_MAC_t *const eth_mac)</argsstring>
        <name>XMC_ETH_MAC_DisablePowerDownMode</name>
        <param>
          <type><ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref> *const</type>
          <declname>eth_mac</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eth_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref>, pointing to the ETH MAC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Disable power down mode <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>The function disables the power down mode of the ETH MAC. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="1723" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="1723" bodyend="1726"/>
      </memberdef>
      <memberdef kind="function" id="group___e_t_h___m_a_c_1ga32cdc1f702972d463518ede56b9b676e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_ETH_MAC_DisablePowerManagmentEvent</definition>
        <argsstring>(XMC_ETH_MAC_t *const eth_mac, uint32_t event)</argsstring>
        <name>XMC_ETH_MAC_DisablePowerManagmentEvent</name>
        <param>
          <type><ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref> *const</type>
          <declname>eth_mac</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eth_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref>, pointing to the ETH MAC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>A valid ETH PMT event (XMC_ETH_MAC_PMT_EVENT_t) or a valid combination of logically OR&apos;d events </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Disable power management event(s) <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>The function disables the event(s) that trigger(s) a PMT interrupt. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="1649" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="1649" bodyend="1652"/>
      </memberdef>
      <memberdef kind="function" id="group___e_t_h___m_a_c_1gadb51f3b8d25d10d25854b994959c5ffc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_ETH_MAC_DisablePromiscuousMode</definition>
        <argsstring>(XMC_ETH_MAC_t *const eth_mac)</argsstring>
        <name>XMC_ETH_MAC_DisablePromiscuousMode</name>
        <param>
          <type><ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref> *const</type>
          <declname>eth_mac</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eth_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref>, pointing to the ETH MAC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Disable promiscuous mode <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>The function disables the promiscuous mode. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="1068" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="1068" bodyend="1071"/>
      </memberdef>
      <memberdef kind="function" id="group___e_t_h___m_a_c_1ga241ed58c3dc7935434a029cb3e7c7530" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_ETH_MAC_DisablePTPAlarm</definition>
        <argsstring>(XMC_ETH_MAC_t *const eth_mac)</argsstring>
        <name>XMC_ETH_MAC_DisablePTPAlarm</name>
        <param>
          <type><ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref> *const</type>
          <declname>eth_mac</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eth_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref>, pointing to the ETH MAC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Disables timestamp interrupt <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>The timestamp interrupt is generated when the System Time becomes greater than the value written in the Target Time register (Alarm). After the generation of the Timestamp Trigger Interrupt, the interrupt is disabled. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="1850" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="1850" bodyend="1853"/>
      </memberdef>
      <memberdef kind="function" id="group___e_t_h___m_a_c_1ga03f99f68d40ed6fed2e7f7b01db56c93" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_ETH_MAC_DisableReceptionBroadcastFrames</definition>
        <argsstring>(XMC_ETH_MAC_t *const eth_mac)</argsstring>
        <name>XMC_ETH_MAC_DisableReceptionBroadcastFrames</name>
        <param>
          <type><ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref> *const</type>
          <declname>eth_mac</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eth_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref>, pointing to the ETH MAC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Disable reception of broadcast frames <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>The function sets the DBF bitfield of the MAC_FRAME_FILTER register. When set, the AFM module filters all incoming broadcast frames. In addition, it overrides all other filter settings. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="1003" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="1003" bodyend="1006"/>
      </memberdef>
      <memberdef kind="function" id="group___e_t_h___m_a_c_1ga91a806835577a99e8606ba03c9b8bb91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_ETH_MAC_DisableReceptionMulticastFrames</definition>
        <argsstring>(XMC_ETH_MAC_t *const eth_mac)</argsstring>
        <name>XMC_ETH_MAC_DisableReceptionMulticastFrames</name>
        <param>
          <type><ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref> *const</type>
          <declname>eth_mac</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eth_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref>, pointing to the ETH MAC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Disable reception of multicast frames <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>The function disables the reception of multicast frames. When invoked, the AFM module passes all received broadcast frames. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="1036" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="1036" bodyend="1039"/>
      </memberdef>
      <memberdef kind="function" id="group___e_t_h___m_a_c_1ga9a0dc0216ac282b5572f4a30a5a4c8ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_ETH_MAC_DisableRx</definition>
        <argsstring>(XMC_ETH_MAC_t *const eth_mac)</argsstring>
        <name>XMC_ETH_MAC_DisableRx</name>
        <param>
          <type><ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref> *const</type>
          <declname>eth_mac</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eth_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref>, pointing to the ETH MAC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>ETH MAC Disable RX <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>The function disables the receive process. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="1380" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="1380" bodyend="1384"/>
      </memberdef>
      <memberdef kind="function" id="group___e_t_h___m_a_c_1gacff8776252fa43035836c5865846b165" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_ETH_MAC_DisableRxOwn</definition>
        <argsstring>(XMC_ETH_MAC_t *const eth_mac)</argsstring>
        <name>XMC_ETH_MAC_DisableRxOwn</name>
        <param>
          <type><ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref> *const</type>
          <declname>eth_mac</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eth_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref>, pointing to the ETH MAC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Disable receive own <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>On invocation of the function, the MAC disables the reception of frames in the half-duplex mode. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="1227" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="1227" bodyend="1230"/>
      </memberdef>
      <memberdef kind="function" id="group___e_t_h___m_a_c_1ga53ff17f7ec0a51862411cb09a1d984ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_ETH_MAC_DisableRxWatchdog</definition>
        <argsstring>(XMC_ETH_MAC_t *const eth_mac)</argsstring>
        <name>XMC_ETH_MAC_DisableRxWatchdog</name>
        <param>
          <type><ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref> *const</type>
          <declname>eth_mac</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eth_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref>, pointing to the ETH MAC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Disable RX watchdog <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>The function disables the RX watchdog by disabling the timer on the RX. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="1100" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="1100" bodyend="1103"/>
      </memberdef>
      <memberdef kind="function" id="group___e_t_h___m_a_c_1gae0f09a9f09bf552bfc4f1059fbc2d6a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_ETH_MAC_DisableSourceAddressFilter</definition>
        <argsstring>(XMC_ETH_MAC_t *const eth_mac)</argsstring>
        <name>XMC_ETH_MAC_DisableSourceAddressFilter</name>
        <param>
          <type><ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref> *const</type>
          <declname>eth_mac</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eth_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref>, pointing to the ETH MAC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Disable source address filter <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>The function resets the SAF bitfield of the MAC_FRAME_FILTER register. Verbatim from the reference manual - "When invoked, the MAC forwards the received frame to the application and updates the SA Match bit of the RxStatus depending on the SA address comparison". </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="791" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="791" bodyend="794"/>
      </memberdef>
      <memberdef kind="function" id="group___e_t_h___m_a_c_1ga307ead3bb8f922ffee8bf6d0cbc3f52f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_ETH_MAC_DisableSourceAddressInverseFilter</definition>
        <argsstring>(XMC_ETH_MAC_t *const eth_mac)</argsstring>
        <name>XMC_ETH_MAC_DisableSourceAddressInverseFilter</name>
        <param>
          <type><ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref> *const</type>
          <declname>eth_mac</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eth_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref>, pointing to the ETH MAC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Disable source address inverse filtering <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>The function resets the SAIF bitfield of the MAC_FRAME_FILTER register. Verbatim from the reference manual - &quot;When invoked, frames whose SA does not match the SA
registers are marked as failing the SA Address filter&quot;. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="826" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="826" bodyend="829"/>
      </memberdef>
      <memberdef kind="function" id="group___e_t_h___m_a_c_1ga5f60f772c4d46b7a5cec26b1a5ebeea9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_ETH_MAC_DisableTx</definition>
        <argsstring>(XMC_ETH_MAC_t *const eth_mac)</argsstring>
        <name>XMC_ETH_MAC_DisableTx</name>
        <param>
          <type><ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref> *const</type>
          <declname>eth_mac</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eth_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref>, pointing to the ETH MAC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>ETH MAC Disable TX <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>The function disables the transmit process. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="1414" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="1414" bodyend="1418"/>
      </memberdef>
      <memberdef kind="function" id="group___e_t_h___m_a_c_1ga7374598672ccd0a9e7e9df6906dbc83c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_ETH_MAC_DisableTxJabber</definition>
        <argsstring>(XMC_ETH_MAC_t *const eth_mac)</argsstring>
        <name>XMC_ETH_MAC_DisableTxJabber</name>
        <param>
          <type><ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref> *const</type>
          <declname>eth_mac</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eth_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref>, pointing to the ETH MAC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Disable TX jabber <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>When the function is invoked, the MAC disables the jabber timer on TX. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="1132" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="1132" bodyend="1135"/>
      </memberdef>
      <memberdef kind="function" id="group___e_t_h___m_a_c_1gab3aeab1851034a86aa479c5cbe75007b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_ETH_MAC_DisableUnicastHashFilter</definition>
        <argsstring>(XMC_ETH_MAC_t *const eth_mac)</argsstring>
        <name>XMC_ETH_MAC_DisableUnicastHashFilter</name>
        <param>
          <type><ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref> *const</type>
          <declname>eth_mac</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eth_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref>, pointing to the ETH MAC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Disable unicast hash filter <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>The function disables unicast hash filtering. When invoked, the MAC performs a perfect destination address filtering for unicast frames. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="924" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="924" bodyend="927"/>
      </memberdef>
      <memberdef kind="function" id="group___e_t_h___m_a_c_1gadede51fe3987ab499b0d44cd2b620490" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_ETH_MAC_Enable</definition>
        <argsstring>(XMC_ETH_MAC_t *const eth_mac)</argsstring>
        <name>XMC_ETH_MAC_Enable</name>
        <param>
          <type><ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref> *const</type>
          <declname>eth_mac</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eth_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref>, pointing to the ETH MAC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Enable the Ethernet MAC peripheral <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>The function de-asserts the peripheral reset. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="483" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___e_t_h___m_a_c_1ga840d3e1fe8fb6af11712f428ddbb8ed7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_ETH_MAC_EnableDestinationAddressInverseFilter</definition>
        <argsstring>(XMC_ETH_MAC_t *const eth_mac)</argsstring>
        <name>XMC_ETH_MAC_EnableDestinationAddressInverseFilter</name>
        <param>
          <type><ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref> *const</type>
          <declname>eth_mac</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eth_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref>, pointing to the ETH MAC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Enable destination address inverse filtering <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>The function sets the DAIF bitfield of the MAC_FRAME_FILTER register. Verbatim from the reference manual - "When invoked, the address check block operates in inverse filtering mode for the DA address comparison for both unicast and multicast frames". </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="844" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="844" bodyend="847"/>
      </memberdef>
      <memberdef kind="function" id="group___e_t_h___m_a_c_1gaf326521d9824002d129045fe2e018bfe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_ETH_MAC_EnableEvent</definition>
        <argsstring>(XMC_ETH_MAC_t *const eth_mac, uint32_t event)</argsstring>
        <name>XMC_ETH_MAC_EnableEvent</name>
        <param>
          <type><ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref> *const</type>
          <declname>eth_mac</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eth_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref>, pointing to the ETH MAC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>Which event (or a combination of logically OR&apos;d events) needs to be enabled? </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Enable ETH MAC event(s) <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>The function can be used to enable ETH MAC event(s). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="1934" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___e_t_h___m_a_c_1ga3caf8d92d228e82b9a98aff3194c73c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_ETH_MAC_EnableFrameBurst</definition>
        <argsstring>(XMC_ETH_MAC_t *const eth_mac)</argsstring>
        <name>XMC_ETH_MAC_EnableFrameBurst</name>
        <param>
          <type><ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref> *const</type>
          <declname>eth_mac</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eth_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref>, pointing to the ETH MAC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Frame burst enable <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>The function can be used to enable frame bursting during transmission in the MII half-duplex mode. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="1148" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="1148" bodyend="1151"/>
      </memberdef>
      <memberdef kind="function" id="group___e_t_h___m_a_c_1ga662d083dd4dc085b2743f9346d983f4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_ETH_MAC_EnableFrameFilter</definition>
        <argsstring>(XMC_ETH_MAC_t *const eth_mac)</argsstring>
        <name>XMC_ETH_MAC_EnableFrameFilter</name>
        <param>
          <type><ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref> *const</type>
          <declname>eth_mac</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eth_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref>, pointing to the ETH MAC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Enable frame filter <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>The function resets the RA bitfield of the MAC_FRAME_FILTER register. This ensures that the receiver module passes only those frames (to the application) that pass the SA or DA address filter. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="704" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="704" bodyend="707"/>
      </memberdef>
      <memberdef kind="function" id="group___e_t_h___m_a_c_1ga50c0e44a8521790a77dd9116b6fa34bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_ETH_MAC_EnableHashPerfectFilter</definition>
        <argsstring>(XMC_ETH_MAC_t *const eth_mac)</argsstring>
        <name>XMC_ETH_MAC_EnableHashPerfectFilter</name>
        <param>
          <type><ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref> *const</type>
          <declname>eth_mac</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eth_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref>, pointing to the ETH MAC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Enable hash perfect filter <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>The function sets the HPF bitfield of the MAC_FRAME_FILTER register. The function configures the address filter to pass a frame if it matches either the perfect filtering or the hash filtering. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="738" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="738" bodyend="741"/>
      </memberdef>
      <memberdef kind="function" id="group___e_t_h___m_a_c_1ga41c3d76438ae9fb43ac236fdb1275297" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_ETH_MAC_EnableJumboFrame</definition>
        <argsstring>(XMC_ETH_MAC_t *const eth_mac)</argsstring>
        <name>XMC_ETH_MAC_EnableJumboFrame</name>
        <param>
          <type><ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref> *const</type>
          <declname>eth_mac</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eth_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref>, pointing to the ETH MAC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Jumbo frame enable <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>The function can be used to enable jumbo frames. When enabled, the MAC allows jumbo frames of 9,018 bytes without reporting a giant frame error in the receive frame status. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="1180" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="1180" bodyend="1183"/>
      </memberdef>
      <memberdef kind="function" id="group___e_t_h___m_a_c_1ga8e4a8abc5b48f7645a947c316350a753" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_ETH_MAC_EnableLoopback</definition>
        <argsstring>(XMC_ETH_MAC_t *const eth_mac)</argsstring>
        <name>XMC_ETH_MAC_EnableLoopback</name>
        <param>
          <type><ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref> *const</type>
          <declname>eth_mac</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eth_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref>, pointing to the ETH MAC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Enable loopback mode <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>The function enables the MAC to operate in the loopback mode using the MII. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="1242" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="1242" bodyend="1245"/>
      </memberdef>
      <memberdef kind="function" id="group___e_t_h___m_a_c_1gaa87efdb6d8a5e4a9bba9687ae05f997a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_ETH_MAC_EnableMulticastHashFilter</definition>
        <argsstring>(XMC_ETH_MAC_t *const eth_mac)</argsstring>
        <name>XMC_ETH_MAC_EnableMulticastHashFilter</name>
        <param>
          <type><ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref> *const</type>
          <declname>eth_mac</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eth_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref>, pointing to the ETH MAC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Enable multicast hash filter <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>When invoked, the MAC performs destination address filtering of received multicast frames according to the hash table. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="876" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="876" bodyend="879"/>
      </memberdef>
      <memberdef kind="function" id="group___e_t_h___m_a_c_1gae2969b186b3091e1cad6a5d290e310fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_ETH_MAC_EnablePerfectFilter</definition>
        <argsstring>(XMC_ETH_MAC_t *const eth_mac)</argsstring>
        <name>XMC_ETH_MAC_EnablePerfectFilter</name>
        <param>
          <type><ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref> *const</type>
          <declname>eth_mac</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eth_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref>, pointing to the ETH MAC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Enable perfect filter <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>The function clears the HPF bitfield of the MAC_FRAME_FILTER register. When the function is invoked, the frame is passed only if it matches the hash filter. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="754" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="754" bodyend="757"/>
      </memberdef>
      <memberdef kind="function" id="group___e_t_h___m_a_c_1ga13799d3f6492fd17626093c05949b060" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_ETH_MAC_EnablePowerDownMode</definition>
        <argsstring>(XMC_ETH_MAC_t *const eth_mac)</argsstring>
        <name>XMC_ETH_MAC_EnablePowerDownMode</name>
        <param>
          <type><ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref> *const</type>
          <declname>eth_mac</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eth_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref>, pointing to the ETH MAC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Enable power down mode <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>The function enables the power down mode of the ETH MAC. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="1708" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="1708" bodyend="1711"/>
      </memberdef>
      <memberdef kind="function" id="group___e_t_h___m_a_c_1ga9d20cc2ca39f6db432a04afc548af458" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_ETH_MAC_EnablePowerManagmentEvent</definition>
        <argsstring>(XMC_ETH_MAC_t *const eth_mac, uint32_t event)</argsstring>
        <name>XMC_ETH_MAC_EnablePowerManagmentEvent</name>
        <param>
          <type><ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref> *const</type>
          <declname>eth_mac</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eth_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref>, pointing to the ETH MAC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>A valid ETH PMT event (XMC_ETH_MAC_PMT_EVENT_t) or a valid combination of logically OR&apos;d events </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Enable power management event(s) <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>The function enables the event(s) that trigger(s) a PMT interrupt. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="1632" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="1632" bodyend="1635"/>
      </memberdef>
      <memberdef kind="function" id="group___e_t_h___m_a_c_1ga874ab17677f1e2e3d3512d1eebdc2e65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_ETH_MAC_EnablePromiscuousMode</definition>
        <argsstring>(XMC_ETH_MAC_t *const eth_mac)</argsstring>
        <name>XMC_ETH_MAC_EnablePromiscuousMode</name>
        <param>
          <type><ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref> *const</type>
          <declname>eth_mac</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eth_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref>, pointing to the ETH MAC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Enable promiscuous mode <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>The function enables the promiscuous mode. In this mode, the address filter module passes all incoming frames regardless of its destination or source address. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="1053" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="1053" bodyend="1056"/>
      </memberdef>
      <memberdef kind="function" id="group___e_t_h___m_a_c_1gafb973e313b2b21b7ccce3e50549c0e69" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_ETH_MAC_EnablePTPAlarm</definition>
        <argsstring>(XMC_ETH_MAC_t *const eth_mac)</argsstring>
        <name>XMC_ETH_MAC_EnablePTPAlarm</name>
        <param>
          <type><ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref> *const</type>
          <declname>eth_mac</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eth_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref>, pointing to the ETH MAC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Enables timestamp interrupt <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>The timestamp interrupt is generated when the System Time becomes greater than the value written in the Target Time register (Alarm). After the generation of the Timestamp Trigger Interrupt, the interrupt is disabled. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="1834" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="1834" bodyend="1837"/>
      </memberdef>
      <memberdef kind="function" id="group___e_t_h___m_a_c_1gadbe2720aa179c44bb8e5348c9262ed41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_ETH_MAC_EnableReceptionBroadcastFrames</definition>
        <argsstring>(XMC_ETH_MAC_t *const eth_mac)</argsstring>
        <name>XMC_ETH_MAC_EnableReceptionBroadcastFrames</name>
        <param>
          <type><ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref> *const</type>
          <declname>eth_mac</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eth_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref>, pointing to the ETH MAC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Enable reception of broadcast frames <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>This function enables the AFM module to pass all received broadcast frames. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="986" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="986" bodyend="989"/>
      </memberdef>
      <memberdef kind="function" id="group___e_t_h___m_a_c_1ga0d7f7d3ef8726625dce910a04477f145" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_ETH_MAC_EnableReceptionMulticastFrames</definition>
        <argsstring>(XMC_ETH_MAC_t *const eth_mac)</argsstring>
        <name>XMC_ETH_MAC_EnableReceptionMulticastFrames</name>
        <param>
          <type><ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref> *const</type>
          <declname>eth_mac</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eth_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref>, pointing to the ETH MAC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Enable reception of multicast frames <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>The function sets the DBF bitfield of the MAC_FRAME_FILTER register. When set, the AFM module filters all incoming broadcast frames. In addition, it overrides all other filter settings. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="1020" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="1020" bodyend="1023"/>
      </memberdef>
      <memberdef kind="function" id="group___e_t_h___m_a_c_1ga70eee228345aab1f84b82fde08086c63" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_ETH_MAC_EnableRx</definition>
        <argsstring>(XMC_ETH_MAC_t *const eth_mac)</argsstring>
        <name>XMC_ETH_MAC_EnableRx</name>
        <param>
          <type><ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref> *const</type>
          <declname>eth_mac</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eth_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref>, pointing to the ETH MAC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>ETH MAC Enable RX <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>The function enables the receiver state machine of the MAC and puts the receive process in running state. The DMA then acquires the descriptor from the receive list and processes the received frames. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="1364" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="1364" bodyend="1368"/>
      </memberdef>
      <memberdef kind="function" id="group___e_t_h___m_a_c_1ga37eb03f1b114b71e683633b3bd658cea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_ETH_MAC_EnableRxOwn</definition>
        <argsstring>(XMC_ETH_MAC_t *const eth_mac)</argsstring>
        <name>XMC_ETH_MAC_EnableRxOwn</name>
        <param>
          <type><ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref> *const</type>
          <declname>eth_mac</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eth_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref>, pointing to the ETH MAC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Enable receive own <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>The function enables the MAC to receive all packets that are given by the PHY while transmitting. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="1211" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="1211" bodyend="1214"/>
      </memberdef>
      <memberdef kind="function" id="group___e_t_h___m_a_c_1ga27fcf79a6e70bb0e5cb4fc2d3b419d83" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_ETH_MAC_EnableRxWatchdog</definition>
        <argsstring>(XMC_ETH_MAC_t *const eth_mac)</argsstring>
        <name>XMC_ETH_MAC_EnableRxWatchdog</name>
        <param>
          <type><ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref> *const</type>
          <declname>eth_mac</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eth_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref>, pointing to the ETH MAC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Enable RX watchdog <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>The function enables the RX watchdog by clearing the WD bitfield of the MAC_CONFIGURATION register. When invoked, the MAC does not allow more than 2048 bytes of the frame being received. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="1085" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="1085" bodyend="1088"/>
      </memberdef>
      <memberdef kind="function" id="group___e_t_h___m_a_c_1ga34f2c04de137a6785a58adcba191e8c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_ETH_MAC_EnableSourceAddressFilter</definition>
        <argsstring>(XMC_ETH_MAC_t *const eth_mac)</argsstring>
        <name>XMC_ETH_MAC_EnableSourceAddressFilter</name>
        <param>
          <type><ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref> *const</type>
          <declname>eth_mac</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eth_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref>, pointing to the ETH MAC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Enable source address filter <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>The function sets the SAF bitfield of the MAC_FRAME_FILTER register. Verbatim from the reference manual - "When invoked, the MAC compares the SA field of the received frames with the values programmed in the enabled SA registers. If the comparison matches, then the SA Match bit of RxStatus Word is set high. When this bit is set high and the SA filter fails, the MAC drops the frame. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="773" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="773" bodyend="776"/>
      </memberdef>
      <memberdef kind="function" id="group___e_t_h___m_a_c_1ga7aad2392d026999981b385d739b6f8bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_ETH_MAC_EnableSourceAddressInverseFilter</definition>
        <argsstring>(XMC_ETH_MAC_t *const eth_mac)</argsstring>
        <name>XMC_ETH_MAC_EnableSourceAddressInverseFilter</name>
        <param>
          <type><ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref> *const</type>
          <declname>eth_mac</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eth_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref>, pointing to the ETH MAC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Enable source address inverse filtering <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>The function resets the SAIF bitfield of the MAC_FRAME_FILTER register. Verbatim from the reference manual - "When invoked, the address check block operates in inverse filtering mode for the SA address comparison. The frames whose SA matches the SA registers are marked as failing the SA Address filter". </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="809" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="809" bodyend="812"/>
      </memberdef>
      <memberdef kind="function" id="group___e_t_h___m_a_c_1gafbc9026aa575d830834a7c29a99c751c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_ETH_MAC_EnableTx</definition>
        <argsstring>(XMC_ETH_MAC_t *const eth_mac)</argsstring>
        <name>XMC_ETH_MAC_EnableTx</name>
        <param>
          <type><ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref> *const</type>
          <declname>eth_mac</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eth_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref>, pointing to the ETH MAC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>ETH MAC Enable TX <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>The function enables the transmit state machine of the MAC and puts the transmit process in running state. The DMA then checks the TX list at the current position for transmitting a frame. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="1398" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="1398" bodyend="1402"/>
      </memberdef>
      <memberdef kind="function" id="group___e_t_h___m_a_c_1gac5790b0f5567783960e6f94de916027f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_ETH_MAC_EnableTxJabber</definition>
        <argsstring>(XMC_ETH_MAC_t *const eth_mac)</argsstring>
        <name>XMC_ETH_MAC_EnableTxJabber</name>
        <param>
          <type><ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref> *const</type>
          <declname>eth_mac</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eth_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref>, pointing to the ETH MAC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Enable TX jabber <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>When the function is invoked, the MAC cuts off the transmitter if the application sends out more than 2,048 bytes of data during transmission (10,240 bytes if jumbo frames are enabled) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="1117" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="1117" bodyend="1120"/>
      </memberdef>
      <memberdef kind="function" id="group___e_t_h___m_a_c_1ga4f9212856fe930fbf9ec6e375fee280c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_ETH_MAC_EnableUnicastHashFilter</definition>
        <argsstring>(XMC_ETH_MAC_t *const eth_mac)</argsstring>
        <name>XMC_ETH_MAC_EnableUnicastHashFilter</name>
        <param>
          <type><ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref> *const</type>
          <declname>eth_mac</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eth_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref>, pointing to the ETH MAC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Enable unicast hash filter <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>The function enables the MAC to perform destination address filtering of unicast frames according to the hash table. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="908" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="908" bodyend="911"/>
      </memberdef>
      <memberdef kind="function" id="group___e_t_h___m_a_c_1ga741a9614dcc93784a6b3eb0fd3767e96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_ETH_MAC_FlushRx</definition>
        <argsstring>(XMC_ETH_MAC_t *const eth_mac)</argsstring>
        <name>XMC_ETH_MAC_FlushRx</name>
        <param>
          <type><ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref> *const</type>
          <declname>eth_mac</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eth_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref>, pointing to the ETH MAC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Flush RX <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>The function initializes the RX DMA descriptors and enables the DMA transmission. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="1442" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___e_t_h___m_a_c_1gaa340c1c166361b7158602510f52d1778" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_ETH_MAC_FlushTx</definition>
        <argsstring>(XMC_ETH_MAC_t *const eth_mac)</argsstring>
        <name>XMC_ETH_MAC_FlushTx</name>
        <param>
          <type><ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref> *const</type>
          <declname>eth_mac</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eth_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref>, pointing to the ETH MAC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Flush TX <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>The function initializes the TX DMA descriptors and enables the DMA transmission. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="1430" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___e_t_h___m_a_c_1gadb48547d7bf26333094b120e13c497b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t XMC_ETH_MAC_GetAddress</definition>
        <argsstring>(XMC_ETH_MAC_t *const eth_mac)</argsstring>
        <name>XMC_ETH_MAC_GetAddress</name>
        <param>
          <type><ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref> *const</type>
          <declname>eth_mac</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eth_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref>, pointing to the ETH MAC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint64_t The MAC address which has been set</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Get MAC address <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>The function returns the current ETH MAC address. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="627" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="627" bodyend="632"/>
      </memberdef>
      <memberdef kind="function" id="group___e_t_h___m_a_c_1gabfe89d7c70b6943ad42e6ba686ef43ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_ETH_MAC_GetAddressEx</definition>
        <argsstring>(XMC_ETH_MAC_t *const eth_mac, uint8_t *const addr)</argsstring>
        <name>XMC_ETH_MAC_GetAddressEx</name>
        <param>
          <type><ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref> *const</type>
          <declname>eth_mac</declname>
        </param>
        <param>
          <type>uint8_t *const</type>
          <declname>addr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eth_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref>, pointing to the ETH MAC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint64_t The MAC address which has been set</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Get MAC address <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>The function returns the current ETH MAC address. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="644" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___e_t_h___m_a_c_1gac0033de297eed155738ffa974143587c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t XMC_ETH_MAC_GetCurrentRxDescIndex</definition>
        <argsstring>(XMC_ETH_MAC_t *const eth_mac)</argsstring>
        <name>XMC_ETH_MAC_GetCurrentRxDescIndex</name>
        <param>
          <type><ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref> *const</type>
          <declname>eth_mac</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eth_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref>, pointing to the ETH MAC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to current TX buffer</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Returns the current TX buffer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="1501" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="1501" bodyend="1504"/>
      </memberdef>
      <memberdef kind="function" id="group___e_t_h___m_a_c_1gaf899118ed28c8fe448d19c362bb537cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t XMC_ETH_MAC_GetCurrentTxDescIndex</definition>
        <argsstring>(XMC_ETH_MAC_t *const eth_mac)</argsstring>
        <name>XMC_ETH_MAC_GetCurrentTxDescIndex</name>
        <param>
          <type><ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref> *const</type>
          <declname>eth_mac</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eth_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref>, pointing to the ETH MAC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to current TX buffer</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Returns the current TX buffer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="1489" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="1489" bodyend="1492"/>
      </memberdef>
      <memberdef kind="function" id="group___e_t_h___m_a_c_1ga460e14bb0682b885f5a6229362e43cf3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t XMC_ETH_MAC_GetEventStatus</definition>
        <argsstring>(const XMC_ETH_MAC_t *const eth_mac)</argsstring>
        <name>XMC_ETH_MAC_GetEventStatus</name>
        <param>
          <type>const <ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref> *const</type>
          <declname>eth_mac</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eth_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref>, pointing to the ETH MAC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint32_t Event status</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Get event status <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>The function returns the ETH status and interrupt status as a single word. The user can then check the status of the events by using an appropriate mask. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="1973" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___e_t_h___m_a_c_1ga2c4cf235c6a7805c72085d4e997b8324" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t XMC_ETH_MAC_GetPTPStatus</definition>
        <argsstring>(const XMC_ETH_MAC_t *const eth_mac)</argsstring>
        <name>XMC_ETH_MAC_GetPTPStatus</name>
        <param>
          <type>const <ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref> *const</type>
          <declname>eth_mac</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eth_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref>, pointing to the ETH MAC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint32_t Timestamp status</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Get PTP status <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>The function returns the timestamp status by reading the TIMESTAMP_STATUS register. As indicated in the reference manual, all bits of the TIMESTAMP_STATUS register (except bits [27:25]) are cleared after the invocation of this function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="1895" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___e_t_h___m_a_c_1ga96e0ce10f2cec680e8dffe9cee6a9c2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_ETH_MAC_GetPTPTime</definition>
        <argsstring>(XMC_ETH_MAC_t *const eth_mac, XMC_ETH_MAC_TIME_t *const time)</argsstring>
        <name>XMC_ETH_MAC_GetPTPTime</name>
        <param>
          <type><ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref> *const</type>
          <declname>eth_mac</declname>
        </param>
        <param>
          <type><ref refid="struct_x_m_c___e_t_h___m_a_c___t_i_m_e__t" kindref="compound">XMC_ETH_MAC_TIME_t</ref> *const</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eth_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref>, pointing to the ETH MAC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c___t_i_m_e__t" kindref="compound">XMC_ETH_MAC_TIME_t</ref>, pointing to the PTP time </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Get PTP time <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>The function obtains the PTP time and writes the nanoseconds and seconds info to the &apos;time&apos; argument. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="1780" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___e_t_h___m_a_c_1gae3249a9cd3cf63c5edb206d721221a61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t *</type>
        <definition>uint8_t* XMC_ETH_MAC_GetRxBuffer</definition>
        <argsstring>(XMC_ETH_MAC_t *const eth_mac)</argsstring>
        <name>XMC_ETH_MAC_GetRxBuffer</name>
        <param>
          <type><ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref> *const</type>
          <declname>eth_mac</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eth_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref>, pointing to the ETH MAC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to current RX buffer</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Returns the current RX buffer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="1589" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="1589" bodyend="1592"/>
      </memberdef>
      <memberdef kind="function" id="group___e_t_h___m_a_c_1ga6ea4b201e230e052d13d21f8c4af7941" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t XMC_ETH_MAC_GetRxFrameSize</definition>
        <argsstring>(XMC_ETH_MAC_t *const eth_mac)</argsstring>
        <name>XMC_ETH_MAC_GetRxFrameSize</name>
        <param>
          <type><ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref> *const</type>
          <declname>eth_mac</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eth_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref>, pointing to the ETH MAC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint32_t RX frame size</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Get RX frame size <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>The function is used to get the effective length of the RX frame size. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="974" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___e_t_h___m_a_c_1gaee26579fc23646c827a3889bc1a2840c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___e_t_h___m_a_c_1ga8a60bbbfc7a839fd1a60d4ed0079a256" kindref="member">XMC_ETH_MAC_STATUS_t</ref></type>
        <definition>XMC_ETH_MAC_STATUS_t XMC_ETH_MAC_GetRxTimeStamp</definition>
        <argsstring>(XMC_ETH_MAC_t *const eth_mac, XMC_ETH_MAC_TIME_t *const time)</argsstring>
        <name>XMC_ETH_MAC_GetRxTimeStamp</name>
        <param>
          <type><ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref> *const</type>
          <declname>eth_mac</declname>
        </param>
        <param>
          <type><ref refid="struct_x_m_c___e_t_h___m_a_c___t_i_m_e__t" kindref="compound">XMC_ETH_MAC_TIME_t</ref> *const</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eth_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref>, pointing to the ETH MAC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c___t_i_m_e__t" kindref="compound">XMC_ETH_MAC_TIME_t</ref>, pointing to the RX timestamp </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>XMC_ETH_MAC_STATUS_t ETH MAC status</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Get RX timestamp <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>The function can be used to get the RX timestamp. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="1908" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___e_t_h___m_a_c_1ga74a2a222b9cd3a89314fe2e7a236b12d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t *</type>
        <definition>uint8_t* XMC_ETH_MAC_GetTxBuffer</definition>
        <argsstring>(XMC_ETH_MAC_t *const eth_mac)</argsstring>
        <name>XMC_ETH_MAC_GetTxBuffer</name>
        <param>
          <type><ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref> *const</type>
          <declname>eth_mac</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eth_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref>, pointing to the ETH MAC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to current TX buffer</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Returns the current TX buffer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="1513" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="1513" bodyend="1516"/>
      </memberdef>
      <memberdef kind="function" id="group___e_t_h___m_a_c_1ga6f2f593e431fa9e5cbee316d4216d470" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t *</type>
        <definition>uint8_t* XMC_ETH_MAC_GetTxBufferEx</definition>
        <argsstring>(XMC_ETH_MAC_t *const eth_mac, uint8_t index)</argsstring>
        <name>XMC_ETH_MAC_GetTxBufferEx</name>
        <param>
          <type><ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref> *const</type>
          <declname>eth_mac</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eth_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref>, pointing to the ETH MAC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to current TX buffer</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Returns the current TX buffer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="1525" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="1525" bodyend="1528"/>
      </memberdef>
      <memberdef kind="function" id="group___e_t_h___m_a_c_1gab4e58ab6315317cfc82f0fb4bf0c9d27" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___e_t_h___m_a_c_1ga8a60bbbfc7a839fd1a60d4ed0079a256" kindref="member">XMC_ETH_MAC_STATUS_t</ref></type>
        <definition>XMC_ETH_MAC_STATUS_t XMC_ETH_MAC_GetTxTimeStamp</definition>
        <argsstring>(XMC_ETH_MAC_t *const eth_mac, XMC_ETH_MAC_TIME_t *const time)</argsstring>
        <name>XMC_ETH_MAC_GetTxTimeStamp</name>
        <param>
          <type><ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref> *const</type>
          <declname>eth_mac</declname>
        </param>
        <param>
          <type><ref refid="struct_x_m_c___e_t_h___m_a_c___t_i_m_e__t" kindref="compound">XMC_ETH_MAC_TIME_t</ref> *const</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eth_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref>, pointing to the ETH MAC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c___t_i_m_e__t" kindref="compound">XMC_ETH_MAC_TIME_t</ref>, pointing to the TX timestamp </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>XMC_ETH_MAC_STATUS_t ETH MAC status</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Get TX timestamp <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>The function can be used to get the TX timestamp. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="1921" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___e_t_h___m_a_c_1ga7c1571e10960029ed06dfb0bdab8a0b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___e_t_h___m_a_c_1ga8a60bbbfc7a839fd1a60d4ed0079a256" kindref="member">XMC_ETH_MAC_STATUS_t</ref></type>
        <definition>XMC_ETH_MAC_STATUS_t XMC_ETH_MAC_Init</definition>
        <argsstring>(XMC_ETH_MAC_t *const eth_mac)</argsstring>
        <name>XMC_ETH_MAC_Init</name>
        <param>
          <type><ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref> *const</type>
          <declname>eth_mac</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eth_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref>, pointing to the ETH MAC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>XMC_ETH_MAC_STATUS_t Initialization status</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Initialize the Ethernet MAC peripheral <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>The function sets the link speed, applies the duplex mode, sets auto-negotiation and loop-back settings. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="430" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___e_t_h___m_a_c_1ga22da6273cc60b12690a8b7cc9ab3fc41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_ETH_MAC_InitEx</definition>
        <argsstring>(XMC_ETH_MAC_t *const eth_mac)</argsstring>
        <name>XMC_ETH_MAC_InitEx</name>
        <param>
          <type><ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref> *const</type>
          <declname>eth_mac</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eth_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref>, pointing to the ETH MAC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Initialize the Ethernet MAC peripheral. <linebreak/>
 Required when initializing the PHY, to deliver the clocks to the MAC, before MAC is reseted. </para>
</simplesect>
<simplesect kind="note"><para>The module needs to be enabled before using <ref refid="group___e_t_h___m_a_c_1gadede51fe3987ab499b0d44cd2b620490" kindref="member">XMC_ETH_MAC_Enable()</ref> <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>The function sets the link speed, applies the duplex mode, sets auto-negotiation and loop-back settings. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="445" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___e_t_h___m_a_c_1ga1d3e8f2f077e4c24188a3220575e3c73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_ETH_MAC_InitPTP</definition>
        <argsstring>(XMC_ETH_MAC_t *const eth_mac, uint32_t config)</argsstring>
        <name>XMC_ETH_MAC_InitPTP</name>
        <param>
          <type><ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref> *const</type>
          <declname>eth_mac</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eth_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref>, pointing to the ETH MAC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>The configuration the PTP should be configured with </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Initialize PTP <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>The function can be used to initialize PTP. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="1752" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___e_t_h___m_a_c_1ga263a0dce4446d49641497a8c91d9462b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_ETH_MAC_InitPTPEx</definition>
        <argsstring>(XMC_ETH_MAC_t *const eth_mac, uint32_t config, XMC_ETH_MAC_TIME_t *const time)</argsstring>
        <name>XMC_ETH_MAC_InitPTPEx</name>
        <param>
          <type><ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref> *const</type>
          <declname>eth_mac</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>config</declname>
        </param>
        <param>
          <type><ref refid="struct_x_m_c___e_t_h___m_a_c___t_i_m_e__t" kindref="compound">XMC_ETH_MAC_TIME_t</ref> *const</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eth_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref>, pointing to the ETH MAC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration of PTP module. See <ref refid="group___e_t_h___m_a_c_1gab8ed635081af97e59b61de8accd8da6d" kindref="member">XMC_ETH_MAC_TIMESTAMP_CONFIG_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para>Initialization time </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Initialize PTP <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>The function can be used to initialize PTP given a time parameter in addition </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="1766" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___e_t_h___m_a_c_1ga5bd52be7452c5c389d34433a82e32204" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_ETH_MAC_InitRxDescriptors</definition>
        <argsstring>(XMC_ETH_MAC_t *const eth_mac)</argsstring>
        <name>XMC_ETH_MAC_InitRxDescriptors</name>
        <param>
          <type><ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref> *const</type>
          <declname>eth_mac</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eth_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref>, pointing to the ETH MAC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Initialize the RX DMA descriptors <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>The function initializes the RX descriptors in a chained configuration. It sets up the status bit, control bit, buffer length and the buffer pointer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="458" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___e_t_h___m_a_c_1ga96935556969275a91eaf7ed760d5721b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_ETH_MAC_InitTxDescriptors</definition>
        <argsstring>(XMC_ETH_MAC_t *const eth_mac)</argsstring>
        <name>XMC_ETH_MAC_InitTxDescriptors</name>
        <param>
          <type><ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref> *const</type>
          <declname>eth_mac</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eth_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref>, pointing to the ETH MAC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Initialize the TX DMA descriptors <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>The function initializes the TX descriptors in a chained configuration. It sets up the status bit, control bit, buffer length and the buffer pointer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="471" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___e_t_h___m_a_c_1ga5fbd156a2c4f275e9c2edd633421fc07" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool XMC_ETH_MAC_IsMagicPacketReceived</definition>
        <argsstring>(XMC_ETH_MAC_t *const eth_mac)</argsstring>
        <name>XMC_ETH_MAC_IsMagicPacketReceived</name>
        <param>
          <type><ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref> *const</type>
          <declname>eth_mac</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eth_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref>, pointing to the ETH MAC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bool true if the received packet is a magic packet, false otherwise</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Is magic packet received? <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>The function checks if the packet received is a magic packet. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="1678" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="1678" bodyend="1681"/>
      </memberdef>
      <memberdef kind="function" id="group___e_t_h___m_a_c_1ga477b1149524fe23ca5f223db7ee79c79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool XMC_ETH_MAC_IsRxDescriptorOwnedByDma</definition>
        <argsstring>(XMC_ETH_MAC_t *const eth_mac)</argsstring>
        <name>XMC_ETH_MAC_IsRxDescriptorOwnedByDma</name>
        <param>
          <type><ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref> *const</type>
          <declname>eth_mac</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eth_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref>, pointing to the ETH MAC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bool true if RX descriptor is owned by DMA, false otherwise</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Is RX descriptor owned by DMA? <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>The function checks if the RX descriptor is owned by the DMA. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
<para>&lt; Own bit 1=DMA, 0=CPU </para>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="1305" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="1305" bodyend="1308"/>
      </memberdef>
      <memberdef kind="function" id="group___e_t_h___m_a_c_1ga3c39b38ba5c465d7f21265c5b6ef2a2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool XMC_ETH_MAC_IsTxDescriptorOwnedByDma</definition>
        <argsstring>(XMC_ETH_MAC_t *const eth_mac)</argsstring>
        <name>XMC_ETH_MAC_IsTxDescriptorOwnedByDma</name>
        <param>
          <type><ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref> *const</type>
          <declname>eth_mac</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eth_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref>, pointing to the ETH MAC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bool true if TX descriptor is owned by DMA, false otherwise</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Is TX descriptor owned by DMA? <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>The function checks if the TX descriptor is owned by the DMA. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
<para>&lt; Own bit 1=DMA, 0=CPU </para>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="1332" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="1332" bodyend="1335"/>
      </memberdef>
      <memberdef kind="function" id="group___e_t_h___m_a_c_1gad3b1e0242bf97fad5ef499814088fc04" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool XMC_ETH_MAC_IsTxDescriptorOwnedByDmaEx</definition>
        <argsstring>(XMC_ETH_MAC_t *const eth_mac, uint8_t index)</argsstring>
        <name>XMC_ETH_MAC_IsTxDescriptorOwnedByDmaEx</name>
        <param>
          <type><ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref> *const</type>
          <declname>eth_mac</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eth_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref>, pointing to the ETH MAC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bool true if TX descriptor is owned by DMA, false otherwise</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Is TX descriptor owned by DMA? <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>The function checks if the TX descriptor is owned by the DMA. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
<para>&lt; Own bit 1=DMA, 0=CPU </para>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="1347" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="1347" bodyend="1350"/>
      </memberdef>
      <memberdef kind="function" id="group___e_t_h___m_a_c_1ga67f9238799a85f398c5b218dd9c20442" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool XMC_ETH_MAC_IsWakeupFrameReceived</definition>
        <argsstring>(XMC_ETH_MAC_t *const eth_mac)</argsstring>
        <name>XMC_ETH_MAC_IsWakeupFrameReceived</name>
        <param>
          <type><ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref> *const</type>
          <declname>eth_mac</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eth_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref>, pointing to the ETH MAC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bool true if the received packet is a wakeup frame, false otherwise</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Is wakeup frame received? <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>The function checks if the packet received is a wakeup frame. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="1693" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="1693" bodyend="1696"/>
      </memberdef>
      <memberdef kind="function" id="group___e_t_h___m_a_c_1ga65220a04566874fe2f9da1aa684c3440" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t XMC_ETH_MAC_ReadFrame</definition>
        <argsstring>(XMC_ETH_MAC_t *const eth_mac, uint8_t *const frame, uint32_t len)</argsstring>
        <name>XMC_ETH_MAC_ReadFrame</name>
        <param>
          <type><ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref> *const</type>
          <declname>eth_mac</declname>
        </param>
        <param>
          <type>uint8_t *const</type>
          <declname>frame</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eth_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref>, pointing to the ETH MAC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>frame</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to a uint8_t constant, holding the received frame </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>Frame length? </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint32_t Length of the frame</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Read a frame <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>The function is used to read a frame. The function returns &apos;len&apos;, the length as specified as the actual parameter in the function call. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="962" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___e_t_h___m_a_c_1ga91cec22aa03df2b9db9553ee72e49279" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___e_t_h___m_a_c_1ga8a60bbbfc7a839fd1a60d4ed0079a256" kindref="member">XMC_ETH_MAC_STATUS_t</ref></type>
        <definition>XMC_ETH_MAC_STATUS_t XMC_ETH_MAC_ReadPhy</definition>
        <argsstring>(XMC_ETH_MAC_t *const eth_mac, uint8_t phy_addr, uint8_t reg_addr, uint16_t *data)</argsstring>
        <name>XMC_ETH_MAC_ReadPhy</name>
        <param>
          <type><ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref> *const</type>
          <declname>eth_mac</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>phy_addr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>reg_addr</declname>
        </param>
        <param>
          <type>uint16_t *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eth_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref>, pointing to the ETH MAC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>phy_addr</parametername>
</parameternamelist>
<parameterdescription>
<para>PHY address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>reg_addr</parametername>
</parameternamelist>
<parameterdescription>
<para>Register address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The destination to which the read data needs to be copied to </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>XMC_ETH_MAC_STATUS_t ETH MAC status</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Read a PHY register <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>The function reads a PHY register. It essentially polls busy bit during max PHY_TIMEOUT time and reads the information into &apos;data&apos; when not busy. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="529" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___e_t_h___m_a_c_1ga63f68aa733579566f9384c6c80132a96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_ETH_MAC_Reset</definition>
        <argsstring>(XMC_ETH_MAC_t *const eth_mac)</argsstring>
        <name>XMC_ETH_MAC_Reset</name>
        <param>
          <type><ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref> *const</type>
          <declname>eth_mac</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eth_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref>, pointing to the ETH MAC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Reset the ETH MAC peripheral <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>The function resets the ETH MAC peripheral. It blocks until reset. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="507" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="507" bodyend="513"/>
      </memberdef>
      <memberdef kind="function" id="group___e_t_h___m_a_c_1ga8bcf5ac4a63bc09d7353fc78ebaf3ae3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_ETH_MAC_ResumeRx</definition>
        <argsstring>(XMC_ETH_MAC_t *const eth_mac)</argsstring>
        <name>XMC_ETH_MAC_ResumeRx</name>
        <param>
          <type><ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref> *const</type>
          <declname>eth_mac</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eth_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref>, pointing to the ETH MAC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Resume RX <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>Verbatim from the reference manual the function enables the DMA to read the current descriptor pointed to by the &quot;current host transmit descriptor&quot; reg. If that descriptor is not available (owned by the CPU), the transmission returns to the suspend state else the transmission resumes. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="1476" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="1476" bodyend="1480"/>
      </memberdef>
      <memberdef kind="function" id="group___e_t_h___m_a_c_1gacd261187b2ef4f417aad5dc19f0da4f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_ETH_MAC_ResumeTx</definition>
        <argsstring>(XMC_ETH_MAC_t *const eth_mac)</argsstring>
        <name>XMC_ETH_MAC_ResumeTx</name>
        <param>
          <type><ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref> *const</type>
          <declname>eth_mac</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eth_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref>, pointing to the ETH MAC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Resume TX <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>Verbatim from the reference manual, the function enables the DMA to read the current descriptor pointed to by the &quot;current host transmit descriptor&quot; reg. If that descriptor is not available (owned by the CPU), the transmission returns to the suspend state else the transmission resumes. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="1457" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="1457" bodyend="1461"/>
      </memberdef>
      <memberdef kind="function" id="group___e_t_h___m_a_c_1ga85e81303eac077b306142da048753b3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_ETH_MAC_ReturnRxDescriptor</definition>
        <argsstring>(XMC_ETH_MAC_t *const eth_mac)</argsstring>
        <name>XMC_ETH_MAC_ReturnRxDescriptor</name>
        <param>
          <type><ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref> *const</type>
          <declname>eth_mac</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eth_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref>, pointing to the ETH MAC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Return RX descriptor <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>The function sets the specified DMA RX descriptor own bit. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="1293" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___e_t_h___m_a_c_1gaa9e99fba29449494fb74c4393b8eb911" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_ETH_MAC_ReturnTxDescriptor</definition>
        <argsstring>(XMC_ETH_MAC_t *const eth_mac)</argsstring>
        <name>XMC_ETH_MAC_ReturnTxDescriptor</name>
        <param>
          <type><ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref> *const</type>
          <declname>eth_mac</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eth_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref>, pointing to the ETH MAC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Return TX descriptor <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>The function sets the specified DMA TX descriptor own bit. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="1320" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___e_t_h___m_a_c_1ga958ce883b8500351b080d3e1e508e0cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___e_t_h___m_a_c_1ga8a60bbbfc7a839fd1a60d4ed0079a256" kindref="member">XMC_ETH_MAC_STATUS_t</ref></type>
        <definition>XMC_ETH_MAC_STATUS_t XMC_ETH_MAC_SendFrame</definition>
        <argsstring>(XMC_ETH_MAC_t *const eth_mac, const uint8_t *frame, uint32_t len, uint32_t flags)</argsstring>
        <name>XMC_ETH_MAC_SendFrame</name>
        <param>
          <type><ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref> *const</type>
          <declname>eth_mac</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>frame</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eth_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref>, pointing to the ETH MAC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>frame</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a uint8_t constant, holding the frame to be transmitted </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of the frame to transmit </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>Additional flags: ored combination of <ref refid="group___e_t_h___m_a_c_1gae9d99f0e5ec03c5a3213189612c94b18" kindref="member">XMC_ETH_MAC_TX_FRAME_t</ref> or zero. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>XMC_ETH_MAC_STATUS_t ETH MAC status (XMC_ETH_MAC_STATUS_BUSY if busy, XMC_ETH_MAC_STATUS_OK otherwise).</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Send a frame <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>The function is used to send a frame. The transmission is done using the ETH MAC&apos;s dedicated DMA unit. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="944" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___e_t_h___m_a_c_1ga04b5d7b825980aa3bc41361cb9e7f08f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_ETH_MAC_SetAddress</definition>
        <argsstring>(XMC_ETH_MAC_t *const eth_mac, uint64_t addr)</argsstring>
        <name>XMC_ETH_MAC_SetAddress</name>
        <param>
          <type><ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref> *const</type>
          <declname>eth_mac</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>addr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eth_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref>, pointing to the ETH MAC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>addr</parametername>
</parameternamelist>
<parameterdescription>
<para>The MAC address to set </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Set MAC address <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>The function sets the MAC address by writing to the MAC_ADDRESS0_HIGH and MAC_ADDRESS0_LOW registers. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="597" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="597" bodyend="601"/>
      </memberdef>
      <memberdef kind="function" id="group___e_t_h___m_a_c_1gac765dbe49bd1c9c336475950265152e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_ETH_MAC_SetAddressEx</definition>
        <argsstring>(XMC_ETH_MAC_t *const eth_mac, const uint8_t *const addr)</argsstring>
        <name>XMC_ETH_MAC_SetAddressEx</name>
        <param>
          <type><ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref> *const</type>
          <declname>eth_mac</declname>
        </param>
        <param>
          <type>const uint8_t *const</type>
          <declname>addr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eth_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref>, pointing to the ETH MAC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>addr</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to 6 byte MAC address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Set MAC address <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>The function sets the MAC address by writing to the MAC_ADDRESS0_HIGH and MAC_ADDRESS0_LOW registers. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="615" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___e_t_h___m_a_c_1gae3a8db950d8c544b3f05b22e30040021" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_ETH_MAC_SetAddressHashFilter</definition>
        <argsstring>(XMC_ETH_MAC_t *const eth_mac, const uint64_t hash)</argsstring>
        <name>XMC_ETH_MAC_SetAddressHashFilter</name>
        <param>
          <type><ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref> *const</type>
          <declname>eth_mac</declname>
        </param>
        <param>
          <type>const uint64_t</type>
          <declname>hash</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eth_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref>, pointing to the ETH MAC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hash</parametername>
</parameternamelist>
<parameterdescription>
<para>The hash to be used for filtering </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Set hash filter for group address filtering <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>The function sets up a hash filter for group address filtering. It writes the given hash value into the HASH_TABLE_LOW and HASH_TABLE_HIGH registers. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="690" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___e_t_h___m_a_c_1gac19ee41fa6c72a8d0d0990668d6fa3c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_ETH_MAC_SetAddressPerfectFilter</definition>
        <argsstring>(XMC_ETH_MAC_t *const eth_mac, uint8_t index, const uint64_t addr, uint32_t flags)</argsstring>
        <name>XMC_ETH_MAC_SetAddressPerfectFilter</name>
        <param>
          <type><ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref> *const</type>
          <declname>eth_mac</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type>const uint64_t</type>
          <declname>addr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eth_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref>, pointing to the ETH MAC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>Table entry index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>addr</parametername>
</parameternamelist>
<parameterdescription>
<para>Address value </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>Compare control. OR&apos;ed combination of <ref refid="group___e_t_h___m_a_c_1ga0e971b409a48489d9ec6b384541da558" kindref="member">XMC_ETH_MAC_ADDR_FILTER_t</ref> or zero.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Set perfect filter for address filtering <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>The function can be used to set perfect filter for address filtering. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="660" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___e_t_h___m_a_c_1ga1cf931a2b14dd2c31db8f0281968ee7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_ETH_MAC_SetAddressPerfectFilterEx</definition>
        <argsstring>(XMC_ETH_MAC_t *const eth_mac, uint8_t index, uint8_t *const addr, uint32_t flags)</argsstring>
        <name>XMC_ETH_MAC_SetAddressPerfectFilterEx</name>
        <param>
          <type><ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref> *const</type>
          <declname>eth_mac</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type>uint8_t *const</type>
          <declname>addr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eth_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref>, pointing to the ETH MAC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>Table entry index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>addr</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to 6 byte MAC address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>Compare control. OR&apos;ed combination of <ref refid="group___e_t_h___m_a_c_1ga0e971b409a48489d9ec6b384541da558" kindref="member">XMC_ETH_MAC_ADDR_FILTER_t</ref> or zero.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Set perfect filter for address filtering <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>The function can be used to set perfect filter for address filtering. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="676" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___e_t_h___m_a_c_1gaf463cc59d8a1f8f9a2c4364f4fc8557c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_ETH_MAC_SetLink</definition>
        <argsstring>(XMC_ETH_MAC_t *const eth_mac, XMC_ETH_LINK_SPEED_t speed, XMC_ETH_LINK_DUPLEX_t duplex)</argsstring>
        <name>XMC_ETH_MAC_SetLink</name>
        <param>
          <type><ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref> *const</type>
          <declname>eth_mac</declname>
        </param>
        <param>
          <type><ref refid="group___e_t_h___m_a_c_1ga29d7022e1e9e2c857f79efc6c281b531" kindref="member">XMC_ETH_LINK_SPEED_t</ref></type>
          <declname>speed</declname>
        </param>
        <param>
          <type><ref refid="group___e_t_h___m_a_c_1gab7f9ae5d92570c07305898a48e5c5b9a" kindref="member">XMC_ETH_LINK_DUPLEX_t</ref></type>
          <declname>duplex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eth_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref>, pointing to the ETH MAC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>speed</parametername>
</parameternamelist>
<parameterdescription>
<para>The speed at which the link is set (10M or 100M?) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>duplex</parametername>
</parameternamelist>
<parameterdescription>
<para>Duplex settings (half or full duplex?) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Set link <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>The function sets the link speed and duplex settings. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="1274" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="1274" bodyend="1281"/>
      </memberdef>
      <memberdef kind="function" id="group___e_t_h___m_a_c_1ga5aadd2dd9a23bc269a89588cf456f334" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___e_t_h___m_a_c_1ga8a60bbbfc7a839fd1a60d4ed0079a256" kindref="member">XMC_ETH_MAC_STATUS_t</ref></type>
        <definition>XMC_ETH_MAC_STATUS_t XMC_ETH_MAC_SetManagmentClockDivider</definition>
        <argsstring>(XMC_ETH_MAC_t *const eth_mac)</argsstring>
        <name>XMC_ETH_MAC_SetManagmentClockDivider</name>
        <param>
          <type><ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref> *const</type>
          <declname>eth_mac</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eth_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref>, pointing to the ETH MAC base address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>XMC_ETH_MAC_STATUS_t ETH MAC status</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Set management clock divider <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>The function sets the management clock divider by writing to the GMII_ADDRESS register. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="583" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___e_t_h___m_a_c_1ga584c9301cd59e5b9bb4660ed75f136cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_ETH_MAC_SetPortControl</definition>
        <argsstring>(XMC_ETH_MAC_t *const eth_mac, const XMC_ETH_MAC_PORT_CTRL_t port_ctrl)</argsstring>
        <name>XMC_ETH_MAC_SetPortControl</name>
        <param>
          <type><ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref> *const</type>
          <declname>eth_mac</declname>
        </param>
        <param>
          <type>const <ref refid="union_x_m_c___e_t_h___m_a_c___p_o_r_t___c_t_r_l__t" kindref="compound">XMC_ETH_MAC_PORT_CTRL_t</ref></type>
          <declname>port_ctrl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eth_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref>, pointing to the ETH MAC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>port_ctrl</parametername>
</parameternamelist>
<parameterdescription>
<para>Port control configuration </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Set port control configuration <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>The function sets the port control by writing the configuration into the CON register.</para>
</simplesect>
<simplesect kind="note"><para>MII Mode is only available in:<itemizedlist>
<listitem><para>XMC4500 LQFP144 and BGA144 packages</para>
</listitem><listitem><para>XMC4700 LQFP144 and BGA196 packages</para>
</listitem><listitem><para>XMC4800 LQFP144 and BGA196 packages </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="566" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="566" bodyend="570"/>
      </memberdef>
      <memberdef kind="function" id="group___e_t_h___m_a_c_1ga579dee94a8ae0170afd420fe502fea45" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_ETH_MAC_SetPTPAlarm</definition>
        <argsstring>(XMC_ETH_MAC_t *const eth_mac, const XMC_ETH_MAC_TIME_t *const time)</argsstring>
        <name>XMC_ETH_MAC_SetPTPAlarm</name>
        <param>
          <type><ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref> *const</type>
          <declname>eth_mac</declname>
        </param>
        <param>
          <type>const <ref refid="struct_x_m_c___e_t_h___m_a_c___t_i_m_e__t" kindref="compound">XMC_ETH_MAC_TIME_t</ref> *const</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eth_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref>, pointing to the ETH MAC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c___t_i_m_e__t" kindref="compound">XMC_ETH_MAC_TIME_t</ref>, pointing to the PTP time </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Set PTP alarm <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>The function programs the TARGET_TIME_NANOSECONDS and TARGET_TIME_SECONDS registers. It can be used to schedule an interrupt event triggered when the set alarm time limit is reached. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="1821" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___e_t_h___m_a_c_1ga3c880ede4aabe77eeed225d79fb4de79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_ETH_MAC_SetPTPTime</definition>
        <argsstring>(XMC_ETH_MAC_t *const eth_mac, XMC_ETH_MAC_TIME_t *const time)</argsstring>
        <name>XMC_ETH_MAC_SetPTPTime</name>
        <param>
          <type><ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref> *const</type>
          <declname>eth_mac</declname>
        </param>
        <param>
          <type><ref refid="struct_x_m_c___e_t_h___m_a_c___t_i_m_e__t" kindref="compound">XMC_ETH_MAC_TIME_t</ref> *const</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eth_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref>, pointing to the ETH MAC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c___t_i_m_e__t" kindref="compound">XMC_ETH_MAC_TIME_t</ref>, pointing to the PTP time </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Get PTP time <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>The function sets the PTP time give by the time parameter </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="1793" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___e_t_h___m_a_c_1gadb8165a4b25983c13e57e8695f09dbb9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_ETH_MAC_SetRxBuffer</definition>
        <argsstring>(XMC_ETH_MAC_t *const eth_mac, const uint8_t *const address)</argsstring>
        <name>XMC_ETH_MAC_SetRxBuffer</name>
        <param>
          <type><ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref> *const</type>
          <declname>eth_mac</declname>
        </param>
        <param>
          <type>const uint8_t *const</type>
          <declname>address</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eth_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref>, pointing to the ETH MAC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>addresss</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Sets the buffer address of the current TX buffer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="1564" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="1564" bodyend="1567"/>
      </memberdef>
      <memberdef kind="function" id="group___e_t_h___m_a_c_1ga01bb905eef6b7311a1e0518a6b0c804c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_ETH_MAC_SetRxBufferEx</definition>
        <argsstring>(XMC_ETH_MAC_t *const eth_mac, uint8_t index, const uint8_t *const address)</argsstring>
        <name>XMC_ETH_MAC_SetRxBufferEx</name>
        <param>
          <type><ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref> *const</type>
          <declname>eth_mac</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type>const uint8_t *const</type>
          <declname>address</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eth_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref>, pointing to the ETH MAC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>addresss</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Sets the buffer address of the current TX buffer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="1577" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="1577" bodyend="1580"/>
      </memberdef>
      <memberdef kind="function" id="group___e_t_h___m_a_c_1ga3c888de4d20202f4750338b7a4449194" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_ETH_MAC_SetTxBuffer</definition>
        <argsstring>(XMC_ETH_MAC_t *const eth_mac, const uint8_t *const address)</argsstring>
        <name>XMC_ETH_MAC_SetTxBuffer</name>
        <param>
          <type><ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref> *const</type>
          <declname>eth_mac</declname>
        </param>
        <param>
          <type>const uint8_t *const</type>
          <declname>address</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eth_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref>, pointing to the ETH MAC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>addresss</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Sets the buffer address of the current TX buffer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="1538" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="1538" bodyend="1541"/>
      </memberdef>
      <memberdef kind="function" id="group___e_t_h___m_a_c_1gade76ed7bd93d592d1a505346bfe25e14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_ETH_MAC_SetTxBufferEx</definition>
        <argsstring>(XMC_ETH_MAC_t *const eth_mac, uint8_t index, const uint8_t *const address)</argsstring>
        <name>XMC_ETH_MAC_SetTxBufferEx</name>
        <param>
          <type><ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref> *const</type>
          <declname>eth_mac</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type>const uint8_t *const</type>
          <declname>address</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eth_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref>, pointing to the ETH MAC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>addresss</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer address </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Sets the buffer address of the current TX buffer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="1551" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="1551" bodyend="1554"/>
      </memberdef>
      <memberdef kind="function" id="group___e_t_h___m_a_c_1ga76214d7d76134b4bd33561ee987786af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_ETH_MAC_SetTxBufferSize</definition>
        <argsstring>(XMC_ETH_MAC_t *const eth_mac, uint32_t size)</argsstring>
        <name>XMC_ETH_MAC_SetTxBufferSize</name>
        <param>
          <type><ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref> *const</type>
          <declname>eth_mac</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eth_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref>, pointing to the ETH MAC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of buffer </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Sets the current TX buffer size. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="1602" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="1602" bodyend="1605"/>
      </memberdef>
      <memberdef kind="function" id="group___e_t_h___m_a_c_1gaf2565c09976ab6cab18becde3202bbdc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_ETH_MAC_SetTxBufferSizeEx</definition>
        <argsstring>(XMC_ETH_MAC_t *const eth_mac, uint8_t index, uint32_t size)</argsstring>
        <name>XMC_ETH_MAC_SetTxBufferSizeEx</name>
        <param>
          <type><ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref> *const</type>
          <declname>eth_mac</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eth_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref>, pointing to the ETH MAC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of buffer </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Sets the current TX buffer size. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="1615" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" bodystart="1615" bodyend="1618"/>
      </memberdef>
      <memberdef kind="function" id="group___e_t_h___m_a_c_1ga102b426c338d738545e50e6e4b1ad1cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_ETH_MAC_SetVLANTag</definition>
        <argsstring>(XMC_ETH_MAC_t *const eth_mac, uint32_t tag)</argsstring>
        <name>XMC_ETH_MAC_SetVLANTag</name>
        <param>
          <type><ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref> *const</type>
          <declname>eth_mac</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>tag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eth_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref>, pointing to the ETH MAC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tag</parametername>
</parameternamelist>
<parameterdescription>
<para>The (16 bit) VLAN tag to set </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Set VLAN tag <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>The function sets the VLAN tag to identify the VLAN frames. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="1739" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___e_t_h___m_a_c_1ga6fc34fd7381e818aff7d32cc8708c904" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_ETH_MAC_SetWakeUpFrameFilter</definition>
        <argsstring>(XMC_ETH_MAC_t *const eth_mac, const uint32_t(*const filter)[(8U)])</argsstring>
        <name>XMC_ETH_MAC_SetWakeUpFrameFilter</name>
        <param>
          <type><ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref> *const</type>
          <declname>eth_mac</declname>
        </param>
        <param>
          <type>const uint32_t(*)</type>
          <declname>filter</declname>
          <array>[(8U)]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eth_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref>, pointing to the ETH MAC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filter</parametername>
</parameternamelist>
<parameterdescription>
<para>wake-up filter registers </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Set wakeup frame filter <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>The function populates the remote wakeup frame registers. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="1665" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___e_t_h___m_a_c_1gabc072dcfcd304504f072aa477a9bc128" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_ETH_MAC_UpdateAddend</definition>
        <argsstring>(XMC_ETH_MAC_t *const eth_mac, uint32_t addend)</argsstring>
        <name>XMC_ETH_MAC_UpdateAddend</name>
        <param>
          <type><ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref> *const</type>
          <declname>eth_mac</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>addend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eth_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref>, pointing to the ETH MAC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>addend</parametername>
</parameternamelist>
<parameterdescription>
<para>Addend value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Adjust PTP clock <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>The function is used to adjust the PTP clock (time synchronization) to compensate a reference clock drift. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="1867" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___e_t_h___m_a_c_1gaaccaa54e8c0a0051ff5e8dafc4eef9fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_ETH_MAC_UpdatePTPTime</definition>
        <argsstring>(XMC_ETH_MAC_t *const eth_mac, const XMC_ETH_MAC_TIME_t *const time)</argsstring>
        <name>XMC_ETH_MAC_UpdatePTPTime</name>
        <param>
          <type><ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref> *const</type>
          <declname>eth_mac</declname>
        </param>
        <param>
          <type>const <ref refid="struct_x_m_c___e_t_h___m_a_c___t_i_m_e__t" kindref="compound">XMC_ETH_MAC_TIME_t</ref> *const</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eth_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref>, pointing to the ETH MAC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c___t_i_m_e__t" kindref="compound">XMC_ETH_MAC_TIME_t</ref>, pointing to the PTP time </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Update PTP time <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>The function updates the PTP time with the nanoseconds and seconds info contained in the &apos;time&apos; argument. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="1807" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___e_t_h___m_a_c_1ga93fe0633828038a19649f5cb8a2a5f42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___e_t_h___m_a_c_1ga8a60bbbfc7a839fd1a60d4ed0079a256" kindref="member">XMC_ETH_MAC_STATUS_t</ref></type>
        <definition>XMC_ETH_MAC_STATUS_t XMC_ETH_MAC_WritePhy</definition>
        <argsstring>(XMC_ETH_MAC_t *const eth_mac, uint8_t phy_addr, uint8_t reg_addr, uint16_t data)</argsstring>
        <name>XMC_ETH_MAC_WritePhy</name>
        <param>
          <type><ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref> *const</type>
          <declname>eth_mac</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>phy_addr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>reg_addr</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eth_mac</parametername>
</parameternamelist>
<parameterdescription>
<para>A constant pointer to <ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref>, pointing to the ETH MAC base address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>phy_addr</parametername>
</parameternamelist>
<parameterdescription>
<para>PHY address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>reg_addr</parametername>
</parameternamelist>
<parameterdescription>
<para>Register address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The data to write </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>XMC_ETH_MAC_STATUS_t ETH MAC status</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Write a PHY register <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>The function reads a PHY register. It essentially writes the data and polls the busy bit until it is no longer busy. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h" line="545" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="date"><para>2019-12-16 </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="115"><highlight class="preprocessor">#ifndef<sp/>XMC_ETH_MAC_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>XMC_ETH_MAC_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="comment">/**********************************************************************************************************************</highlight></codeline>
<codeline lineno="119"><highlight class="comment"><sp/>*<sp/>HEADER<sp/>FILES</highlight></codeline>
<codeline lineno="120"><highlight class="comment"><sp/>*********************************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xmc_common.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>(ETH0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xmc_eth_mac_map.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="comment">/**********************************************************************************************************************</highlight></codeline>
<codeline lineno="129"><highlight class="comment"><sp/>*<sp/>MACROS</highlight></codeline>
<codeline lineno="130"><highlight class="comment"><sp/>*********************************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>XMC_ETH_MAC_BUF_SIZE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(1524)<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="133"><highlight class="preprocessor">#define<sp/>XMC_ETH_MAC_PHY_MAX_RETRIES<sp/><sp/><sp/><sp/>(0xffffUL)<sp/></highlight></codeline>
<codeline lineno="134"><highlight class="preprocessor">#define<sp/>XMC_ETH_WAKEUP_REGISTER_LENGTH<sp/>(8U)<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="139"><highlight class="preprocessor">#define<sp/>ETH_MAC_DMA_TDES0_OWN<sp/><sp/>(0x80000000U)<sp/></highlight></codeline>
<codeline lineno="140"><highlight class="preprocessor">#define<sp/>ETH_MAC_DMA_TDES0_IC<sp/><sp/><sp/>(0x40000000U)<sp/></highlight></codeline>
<codeline lineno="141"><highlight class="preprocessor">#define<sp/>ETH_MAC_DMA_TDES0_LS<sp/><sp/><sp/>(0x20000000U)<sp/></highlight></codeline>
<codeline lineno="142"><highlight class="preprocessor">#define<sp/>ETH_MAC_DMA_TDES0_FS<sp/><sp/><sp/>(0x10000000U)<sp/></highlight></codeline>
<codeline lineno="143"><highlight class="preprocessor">#define<sp/>ETH_MAC_DMA_TDES0_DC<sp/><sp/><sp/>(0x08000000U)<sp/></highlight></codeline>
<codeline lineno="144"><highlight class="preprocessor">#define<sp/>ETH_MAC_DMA_TDES0_DP<sp/><sp/><sp/>(0x04000000U)<sp/></highlight></codeline>
<codeline lineno="145"><highlight class="preprocessor">#define<sp/>ETH_MAC_DMA_TDES0_TTSE<sp/>(0x02000000U)<sp/></highlight></codeline>
<codeline lineno="146"><highlight class="preprocessor">#define<sp/>ETH_MAC_DMA_TDES0_CIC<sp/><sp/>(0x00C00000U)<sp/></highlight></codeline>
<codeline lineno="147"><highlight class="preprocessor">#define<sp/>ETH_MAC_DMA_TDES0_TER<sp/><sp/>(0x00200000U)<sp/></highlight></codeline>
<codeline lineno="148"><highlight class="preprocessor">#define<sp/>ETH_MAC_DMA_TDES0_TCH<sp/><sp/>(0x00100000U)<sp/></highlight></codeline>
<codeline lineno="149"><highlight class="preprocessor">#define<sp/>ETH_MAC_DMA_TDES0_TTSS<sp/>(0x00020000U)<sp/></highlight></codeline>
<codeline lineno="150"><highlight class="preprocessor">#define<sp/>ETH_MAC_DMA_TDES0_IHE<sp/><sp/>(0x00010000U)<sp/></highlight></codeline>
<codeline lineno="151"><highlight class="preprocessor">#define<sp/>ETH_MAC_DMA_TDES0_ES<sp/><sp/><sp/>(0x00008000U)<sp/></highlight></codeline>
<codeline lineno="152"><highlight class="preprocessor">#define<sp/>ETH_MAC_DMA_TDES0_JT<sp/><sp/><sp/>(0x00004000U)<sp/></highlight></codeline>
<codeline lineno="153"><highlight class="preprocessor">#define<sp/>ETH_MAC_DMA_TDES0_FF<sp/><sp/><sp/>(0x00002000U)<sp/></highlight></codeline>
<codeline lineno="154"><highlight class="preprocessor">#define<sp/>ETH_MAC_DMA_TDES0_IPE<sp/><sp/>(0x00001000U)<sp/></highlight></codeline>
<codeline lineno="155"><highlight class="preprocessor">#define<sp/>ETH_MAC_DMA_TDES0_LOC<sp/><sp/>(0x00000800U)<sp/></highlight></codeline>
<codeline lineno="156"><highlight class="preprocessor">#define<sp/>ETH_MAC_DMA_TDES0_NC<sp/><sp/><sp/>(0x00000400U)<sp/></highlight></codeline>
<codeline lineno="157"><highlight class="preprocessor">#define<sp/>ETH_MAC_DMA_TDES0_LC<sp/><sp/><sp/>(0x00000200U)<sp/></highlight></codeline>
<codeline lineno="158"><highlight class="preprocessor">#define<sp/>ETH_MAC_DMA_TDES0_EC<sp/><sp/><sp/>(0x00000100U)<sp/></highlight></codeline>
<codeline lineno="159"><highlight class="preprocessor">#define<sp/>ETH_MAC_DMA_TDES0_VF<sp/><sp/><sp/>(0x00000080U)<sp/></highlight></codeline>
<codeline lineno="160"><highlight class="preprocessor">#define<sp/>ETH_MAC_DMA_TDES0_CC<sp/><sp/><sp/>(0x00000078U)<sp/></highlight></codeline>
<codeline lineno="161"><highlight class="preprocessor">#define<sp/>ETH_MAC_DMA_TDES0_ED<sp/><sp/><sp/>(0x00000004U)<sp/></highlight></codeline>
<codeline lineno="162"><highlight class="preprocessor">#define<sp/>ETH_MAC_DMA_TDES0_UF<sp/><sp/><sp/>(0x00000002U)<sp/></highlight></codeline>
<codeline lineno="163"><highlight class="preprocessor">#define<sp/>ETH_MAC_DMA_TDES0_DB<sp/><sp/><sp/>(0x00000001U)<sp/></highlight></codeline>
<codeline lineno="168"><highlight class="preprocessor">#define<sp/>ETH_MAC_DMA_RDES0_OWN<sp/><sp/>(0x80000000U)<sp/></highlight></codeline>
<codeline lineno="169"><highlight class="preprocessor">#define<sp/>ETH_MAC_DMA_RDES0_AFM<sp/><sp/>(0x40000000U)<sp/></highlight></codeline>
<codeline lineno="170"><highlight class="preprocessor">#define<sp/>ETH_MAC_DMA_RDES0_FL<sp/><sp/><sp/>(0x3FFF0000U)<sp/></highlight></codeline>
<codeline lineno="171"><highlight class="preprocessor">#define<sp/>ETH_MAC_DMA_RDES0_ES<sp/><sp/><sp/>(0x00008000U)<sp/></highlight></codeline>
<codeline lineno="172"><highlight class="preprocessor">#define<sp/>ETH_MAC_DMA_RDES0_DE<sp/><sp/><sp/>(0x00004000U)<sp/></highlight></codeline>
<codeline lineno="173"><highlight class="preprocessor">#define<sp/>ETH_MAC_DMA_RDES0_SAF<sp/><sp/>(0x00002000U)<sp/></highlight></codeline>
<codeline lineno="174"><highlight class="preprocessor">#define<sp/>ETH_MAC_DMA_RDES0_LE<sp/><sp/><sp/>(0x00001000U)<sp/></highlight></codeline>
<codeline lineno="175"><highlight class="preprocessor">#define<sp/>ETH_MAC_DMA_RDES0_OE<sp/><sp/><sp/>(0x00000800U)<sp/></highlight></codeline>
<codeline lineno="176"><highlight class="preprocessor">#define<sp/>ETH_MAC_DMA_RDES0_VLAN<sp/>(0x00000400U)<sp/></highlight></codeline>
<codeline lineno="177"><highlight class="preprocessor">#define<sp/>ETH_MAC_DMA_RDES0_FS<sp/><sp/><sp/>(0x00000200U)<sp/></highlight></codeline>
<codeline lineno="178"><highlight class="preprocessor">#define<sp/>ETH_MAC_DMA_RDES0_LS<sp/><sp/><sp/>(0x00000100U)<sp/></highlight></codeline>
<codeline lineno="179"><highlight class="preprocessor">#define<sp/>ETH_MAC_DMA_RDES0_TSA<sp/><sp/>(0x00000080U)<sp/></highlight></codeline>
<codeline lineno="180"><highlight class="preprocessor">#define<sp/>ETH_MAC_DMA_RDES0_LC<sp/><sp/><sp/>(0x00000040U)<sp/></highlight></codeline>
<codeline lineno="181"><highlight class="preprocessor">#define<sp/>ETH_MAC_DMA_RDES0_FT<sp/><sp/><sp/>(0x00000020U)<sp/></highlight></codeline>
<codeline lineno="182"><highlight class="preprocessor">#define<sp/>ETH_MAC_DMA_RDES0_RWT<sp/><sp/>(0x00000010U)<sp/></highlight></codeline>
<codeline lineno="183"><highlight class="preprocessor">#define<sp/>ETH_MAC_DMA_RDES0_RE<sp/><sp/><sp/>(0x00000008U)<sp/></highlight></codeline>
<codeline lineno="184"><highlight class="preprocessor">#define<sp/>ETH_MAC_DMA_RDES0_DBE<sp/><sp/>(0x00000004U)<sp/></highlight></codeline>
<codeline lineno="185"><highlight class="preprocessor">#define<sp/>ETH_MAC_DMA_RDES0_CE<sp/><sp/><sp/>(0x00000002U)<sp/></highlight></codeline>
<codeline lineno="186"><highlight class="preprocessor">#define<sp/>ETH_MAC_DMA_RDES0_ESA<sp/><sp/>(0x00000001U)<sp/></highlight></codeline>
<codeline lineno="188"><highlight class="preprocessor"></highlight><highlight class="comment">/**********************************************************************************************************************</highlight></codeline>
<codeline lineno="189"><highlight class="comment"><sp/>*<sp/>ENUMS</highlight></codeline>
<codeline lineno="190"><highlight class="comment"><sp/>*********************************************************************************************************************/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>XMC_ETH_MAC_STATUS</highlight></codeline>
<codeline lineno="196"><highlight class="normal">{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><ref refid="group___e_t_h___m_a_c_1gga8a60bbbfc7a839fd1a60d4ed0079a256a3de9fe86827c613d6603a2bca47758e6" kindref="member">XMC_ETH_MAC_STATUS_OK</ref><sp/><sp/><sp/><sp/>=<sp/>0U,<sp/></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><ref refid="group___e_t_h___m_a_c_1gga8a60bbbfc7a839fd1a60d4ed0079a256a7941c4fa46903f7d89f623652d1ffe94" kindref="member">XMC_ETH_MAC_STATUS_BUSY</ref><sp/><sp/>=<sp/>1U,<sp/></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><ref refid="group___e_t_h___m_a_c_1gga8a60bbbfc7a839fd1a60d4ed0079a256a2a810b29e441ce6e3a7ed96e16ec212f" kindref="member">XMC_ETH_MAC_STATUS_ERROR</ref><sp/>=<sp/>2U<sp/><sp/></highlight></codeline>
<codeline lineno="200"><highlight class="normal">}<sp/><ref refid="group___e_t_h___m_a_c_1ga8a60bbbfc7a839fd1a60d4ed0079a256" kindref="member">XMC_ETH_MAC_STATUS_t</ref>;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>XMC_ETH_MAC_TX_FRAME</highlight></codeline>
<codeline lineno="206"><highlight class="normal">{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><ref refid="group___e_t_h___m_a_c_1ggae9d99f0e5ec03c5a3213189612c94b18a34c8997c5de52fb2d2e870ed86720478" kindref="member">XMC_ETH_MAC_TX_FRAME_FRAGMENT</ref><sp/><sp/>=<sp/>0x1U,<sp/></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><ref refid="group___e_t_h___m_a_c_1ggae9d99f0e5ec03c5a3213189612c94b18a302e24bad8207ab973006131c19540dc" kindref="member">XMC_ETH_MAC_TX_FRAME_EVENT</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>0x2U,<sp/></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><ref refid="group___e_t_h___m_a_c_1ggae9d99f0e5ec03c5a3213189612c94b18a1ca26d98a382dc2fdf0368fb9eda50cb" kindref="member">XMC_ETH_MAC_TX_FRAME_TIMESTAMP</ref><sp/>=<sp/>0x4U<sp/><sp/></highlight></codeline>
<codeline lineno="210"><highlight class="normal">}<sp/><ref refid="group___e_t_h___m_a_c_1gae9d99f0e5ec03c5a3213189612c94b18" kindref="member">XMC_ETH_MAC_TX_FRAME_t</ref>;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>XMC_ETH_MAC_EVENT</highlight></codeline>
<codeline lineno="216"><highlight class="normal">{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><ref refid="group___e_t_h___m_a_c_1ggaaad989c6a075501c036c378ff999795bae0bd87f2cfd0fbc368482b65d78a44a7" kindref="member">XMC_ETH_MAC_EVENT_PMT</ref><sp/>=<sp/>ETH_INTERRUPT_MASK_PMTIM_Msk<sp/>&lt;&lt;<sp/>16,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><ref refid="group___e_t_h___m_a_c_1ggaaad989c6a075501c036c378ff999795bac2309b45e97105177e0f448ea3c143b0" kindref="member">XMC_ETH_MAC_EVENT_TIMESTAMP</ref><sp/>=<sp/>ETH_INTERRUPT_MASK_TSIM_Msk<sp/>&lt;&lt;<sp/>16,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><ref refid="group___e_t_h___m_a_c_1ggaaad989c6a075501c036c378ff999795bae51a7df3e1fd86d8e8c9534d1a21334a" kindref="member">XMC_ETH_MAC_EVENT_EARLY_RECEIVE</ref><sp/>=<sp/>ETH_STATUS_ERI_Msk,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><ref refid="group___e_t_h___m_a_c_1ggaaad989c6a075501c036c378ff999795ba930886c62a56e52a5a4cca2ddcaf3bd0" kindref="member">XMC_ETH_MAC_EVENT_BUS_ERROR</ref><sp/>=<sp/>ETH_STATUS_FBI_Msk,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><ref refid="group___e_t_h___m_a_c_1ggaaad989c6a075501c036c378ff999795badf20751378c39d5b18a98239dd9f0713" kindref="member">XMC_ETH_MAC_EVENT_EARLY_TRANSMIT</ref><sp/>=<sp/>ETH_STATUS_ETI_Msk,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><ref refid="group___e_t_h___m_a_c_1ggaaad989c6a075501c036c378ff999795ba15641f48394a65445ceb6383fb59e5f4" kindref="member">XMC_ETH_MAC_EVENT_RECEIVE_WATCHDOG_TIMEOUT</ref><sp/>=<sp/>ETH_STATUS_RWT_Msk,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><ref refid="group___e_t_h___m_a_c_1ggaaad989c6a075501c036c378ff999795baf75619b3817bfc8cb265b328c76639f6" kindref="member">XMC_ETH_MAC_EVENT_RECEIVE_PROCESS_STOPPED</ref><sp/>=<sp/>ETH_STATUS_RPS_Msk,<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><ref refid="group___e_t_h___m_a_c_1ggaaad989c6a075501c036c378ff999795ba7b4563c336b75613bc0a4ee83b241f3c" kindref="member">XMC_ETH_MAC_EVENT_RECEIVE_BUFFER_UNAVAILABLE</ref><sp/>=<sp/>ETH_STATUS_RU_Msk,<sp/><sp/></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><ref refid="group___e_t_h___m_a_c_1ggaaad989c6a075501c036c378ff999795bac4c12307f739fd9e2bd35810e3bb6de2" kindref="member">XMC_ETH_MAC_EVENT_RECEIVE</ref><sp/>=<sp/>ETH_STATUS_RI_Msk,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><ref refid="group___e_t_h___m_a_c_1ggaaad989c6a075501c036c378ff999795bac8ce5d54200014673f0d766796bec271" kindref="member">XMC_ETH_MAC_EVENT_TRANSMIT_UNDERFLOW</ref><sp/>=<sp/>ETH_STATUS_UNF_Msk,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><ref refid="group___e_t_h___m_a_c_1ggaaad989c6a075501c036c378ff999795ba6ed055de613938a6f990c00f66c64099" kindref="member">XMC_ETH_MAC_EVENT_RECEIVE_OVERFLOW</ref><sp/>=<sp/>ETH_STATUS_OVF_Msk,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><ref refid="group___e_t_h___m_a_c_1ggaaad989c6a075501c036c378ff999795baf4e98b85c81a81c67c83063a152139cc" kindref="member">XMC_ETH_MAC_EVENT_TRANSMIT_JABBER_TIMEOUT</ref><sp/>=<sp/>ETH_STATUS_TJT_Msk,<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><ref refid="group___e_t_h___m_a_c_1ggaaad989c6a075501c036c378ff999795babb4e8fe789547c32de6339deffb24caf" kindref="member">XMC_ETH_MAC_EVENT_TRANSMIT_BUFFER_UNAVAILABLE</ref><sp/>=<sp/>ETH_STATUS_TU_Msk,<sp/></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><ref refid="group___e_t_h___m_a_c_1ggaaad989c6a075501c036c378ff999795ba0e15bc11aabc73a9a0f2f7c209197b06" kindref="member">XMC_ETH_MAC_EVENT_TRANSMIT_PROCESS_STOPPED</ref><sp/>=<sp/>ETH_STATUS_TPS_Msk,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><ref refid="group___e_t_h___m_a_c_1ggaaad989c6a075501c036c378ff999795ba56fa742057887c8240fb0bbd5620817c" kindref="member">XMC_ETH_MAC_EVENT_TRANSMIT</ref><sp/>=<sp/>ETH_STATUS_TI_Msk<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="232"><highlight class="normal">}<sp/><ref refid="group___e_t_h___m_a_c_1gaaad989c6a075501c036c378ff999795b" kindref="member">XMC_ETH_MAC_EVENT_t</ref>;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>XMC_ETH_LINK_INTERFACE</highlight></codeline>
<codeline lineno="238"><highlight class="normal">{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><ref refid="group___e_t_h___m_a_c_1ggaca9dd401fd15250f4b774698e481b0d1a3b2fa9b609c7b9ef2aebfee85941a40e" kindref="member">XMC_ETH_LINK_INTERFACE_MII</ref>,<sp/></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><ref refid="group___e_t_h___m_a_c_1ggaca9dd401fd15250f4b774698e481b0d1a40e51e884d969533ec6e9b4a73e0b045" kindref="member">XMC_ETH_LINK_INTERFACE_RMII</ref><sp/></highlight></codeline>
<codeline lineno="241"><highlight class="normal">}<sp/><ref refid="group___e_t_h___m_a_c_1gaca9dd401fd15250f4b774698e481b0d1" kindref="member">XMC_ETH_LINK_INTERFACE_t</ref>;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>XMC_ETH_LINK_STATUS</highlight></codeline>
<codeline lineno="247"><highlight class="normal">{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><ref refid="group___e_t_h___m_a_c_1gga98929c79969eb0198abe9f6aff564660adb04bdcadaa17b5969f50ea662081ad2" kindref="member">XMC_ETH_LINK_STATUS_DOWN</ref>,<sp/></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><ref refid="group___e_t_h___m_a_c_1gga98929c79969eb0198abe9f6aff564660a3228fdde58088c1e5eb900ea6bce8711" kindref="member">XMC_ETH_LINK_STATUS_UP</ref><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="250"><highlight class="normal">}<sp/><ref refid="group___e_t_h___m_a_c_1ga98929c79969eb0198abe9f6aff564660" kindref="member">XMC_ETH_LINK_STATUS_t</ref>;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>XMC_ETH_LINK_SPEED</highlight></codeline>
<codeline lineno="256"><highlight class="normal">{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><ref refid="group___e_t_h___m_a_c_1gga29d7022e1e9e2c857f79efc6c281b531a8c2a2a21c853992077a2ed3a746ab8fb" kindref="member">XMC_ETH_LINK_SPEED_10M</ref><sp/><sp/>=<sp/>0UL<sp/>&lt;&lt;<sp/>ETH_MAC_CONFIGURATION_FES_Pos,<sp/></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><ref refid="group___e_t_h___m_a_c_1gga29d7022e1e9e2c857f79efc6c281b531a5500817cb99d2be1f4f5fc2981053cac" kindref="member">XMC_ETH_LINK_SPEED_100M</ref><sp/>=<sp/>1UL<sp/>&lt;&lt;<sp/>ETH_MAC_CONFIGURATION_FES_Pos<sp/><sp/></highlight></codeline>
<codeline lineno="259"><highlight class="normal">}<sp/><ref refid="group___e_t_h___m_a_c_1ga29d7022e1e9e2c857f79efc6c281b531" kindref="member">XMC_ETH_LINK_SPEED_t</ref>;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>XMC_ETH_LINK_DUPLEX</highlight></codeline>
<codeline lineno="265"><highlight class="normal">{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><ref refid="group___e_t_h___m_a_c_1ggab7f9ae5d92570c07305898a48e5c5b9aac2759735d5e529b08ae33a55b59f595b" kindref="member">XMC_ETH_LINK_DUPLEX_HALF</ref><sp/>=<sp/>0UL<sp/>&lt;&lt;<sp/>ETH_MAC_CONFIGURATION_DM_Pos,<sp/></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><ref refid="group___e_t_h___m_a_c_1ggab7f9ae5d92570c07305898a48e5c5b9aa4a8af65cc4d249aca5df386dd0a8cfab" kindref="member">XMC_ETH_LINK_DUPLEX_FULL</ref><sp/>=<sp/>1UL<sp/>&lt;&lt;<sp/>ETH_MAC_CONFIGURATION_DM_Pos<sp/><sp/></highlight></codeline>
<codeline lineno="268"><highlight class="normal">}<sp/><ref refid="group___e_t_h___m_a_c_1gab7f9ae5d92570c07305898a48e5c5b9a" kindref="member">XMC_ETH_LINK_DUPLEX_t</ref>;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>XMC_ETH_MAC_ADDR_FILTER</highlight></codeline>
<codeline lineno="274"><highlight class="normal">{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><ref refid="group___e_t_h___m_a_c_1gga0e971b409a48489d9ec6b384541da558aceedae7faae99c618f4ecff02bf8ef4a" kindref="member">XMC_ETH_MAC_ADDR_FILTER_MASK_BYTE0</ref><sp/>=<sp/>0x01000000UL,<sp/></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><ref refid="group___e_t_h___m_a_c_1gga0e971b409a48489d9ec6b384541da558a45736210a02a1216a3af5247293e40b5" kindref="member">XMC_ETH_MAC_ADDR_FILTER_MASK_BYTE1</ref><sp/>=<sp/>0x02000000UL,<sp/></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><ref refid="group___e_t_h___m_a_c_1gga0e971b409a48489d9ec6b384541da558a55169b543fde65b7f664fbc5c6513013" kindref="member">XMC_ETH_MAC_ADDR_FILTER_MASK_BYTE2</ref><sp/>=<sp/>0x04000000UL,<sp/></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><ref refid="group___e_t_h___m_a_c_1gga0e971b409a48489d9ec6b384541da558a92d851fcdc5c4a11744abffddd4c6de8" kindref="member">XMC_ETH_MAC_ADDR_FILTER_MASK_BYTE3</ref><sp/>=<sp/>0x08000000UL,<sp/></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><ref refid="group___e_t_h___m_a_c_1gga0e971b409a48489d9ec6b384541da558ad56f5735bffef3e85580d0e4cab85784" kindref="member">XMC_ETH_MAC_ADDR_FILTER_MASK_BYTE4</ref><sp/>=<sp/>0x10000000UL,<sp/></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><ref refid="group___e_t_h___m_a_c_1gga0e971b409a48489d9ec6b384541da558a9cd1931808054779b737110342db88ad" kindref="member">XMC_ETH_MAC_ADDR_FILTER_MASK_BYTE5</ref><sp/>=<sp/>0x20000000UL,<sp/></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><ref refid="group___e_t_h___m_a_c_1gga0e971b409a48489d9ec6b384541da558ae0fd030435db189e58b627ff43fdb966" kindref="member">XMC_ETH_MAC_ADDR_FILTER_SA</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x40000000UL<sp/><sp/></highlight></codeline>
<codeline lineno="282"><highlight class="normal">}<sp/><ref refid="group___e_t_h___m_a_c_1ga0e971b409a48489d9ec6b384541da558" kindref="member">XMC_ETH_MAC_ADDR_FILTER_t</ref>;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>XMC_ETH_MAC_PMT_EVENT</highlight></codeline>
<codeline lineno="288"><highlight class="normal">{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><ref refid="group___e_t_h___m_a_c_1gga73e7eef3f389735119ae79dfc4743606a959abf76ddfd36d788edae5d312badae" kindref="member">XMC_ETH_MAC_PMT_EVENT_ON_WAKEUP_FRAME</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>ETH_PMT_CONTROL_STATUS_RWKPKTEN_Msk,<sp/><sp/></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><ref refid="group___e_t_h___m_a_c_1gga73e7eef3f389735119ae79dfc4743606a56237310420fbd2e12dc421de95a8548" kindref="member">XMC_ETH_MAC_PMT_EVENT_ON_MAGIC_PACKET</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>ETH_PMT_CONTROL_STATUS_MGKPKTEN_Msk,<sp/><sp/></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><ref refid="group___e_t_h___m_a_c_1gga73e7eef3f389735119ae79dfc4743606a62f713bc13928a6827efac55ed2cb970" kindref="member">XMC_ETH_MAC_PMT_EVENT_ON_UNICAST_FRAME_FILTER</ref><sp/>=<sp/>ETH_PMT_CONTROL_STATUS_GLBLUCAST_Msk<sp/><sp/></highlight></codeline>
<codeline lineno="292"><highlight class="normal">}<sp/><ref refid="group___e_t_h___m_a_c_1ga73e7eef3f389735119ae79dfc4743606" kindref="member">XMC_ETH_MAC_PMT_EVENT_t</ref>;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>XMC_ETH_MAC_TIMESTAMP_CONFIG</highlight></codeline>
<codeline lineno="299"><highlight class="normal">{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><ref refid="group___e_t_h___m_a_c_1ggab8ed635081af97e59b61de8accd8da6da8351de1e0f8f19c21ed765d3a074bc30" kindref="member">XMC_ETH_MAC_TIMESTAMP_CONFIG_FINE_UPDATE</ref><sp/>=<sp/>ETH_TIMESTAMP_CONTROL_TSCFUPDT_Msk,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><ref refid="group___e_t_h___m_a_c_1ggab8ed635081af97e59b61de8accd8da6dab1160efed0255ee8485f0f280d806864" kindref="member">XMC_ETH_MAC_TIMESTAMP_CONFIG_ENABLE_TS_INTERRUPT</ref><sp/>=<sp/>ETH_TIMESTAMP_CONTROL_TSTRIG_Msk,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><ref refid="group___e_t_h___m_a_c_1ggab8ed635081af97e59b61de8accd8da6da34b89184a6fcfc3a37f96e7fc32738e3" kindref="member">XMC_ETH_MAC_TIMESTAMP_CONFIG_ENABLE_ALL_FRAMES</ref><sp/>=<sp/>ETH_TIMESTAMP_CONTROL_TSENALL_Msk,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><ref refid="group___e_t_h___m_a_c_1ggab8ed635081af97e59b61de8accd8da6da0de51580b22a9cd80a19ac3b4bfd6522" kindref="member">XMC_ETH_MAC_TIMESTAMP_CONFIG_ENABLE_PTPV2</ref><sp/>=<sp/>ETH_TIMESTAMP_CONTROL_TSVER2ENA_Msk,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><ref refid="group___e_t_h___m_a_c_1ggab8ed635081af97e59b61de8accd8da6da43b06a88c9b4d47769a3b4679d7d0de1" kindref="member">XMC_ETH_MAC_TIMESTAMP_CONFIG_ENABLE_PTP_OVER_ETHERNET</ref><sp/>=<sp/>ETH_TIMESTAMP_CONTROL_TSIPENA_Msk,<sp/></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><ref refid="group___e_t_h___m_a_c_1ggab8ed635081af97e59b61de8accd8da6da5ae5ccade123253c98d26b591934176a" kindref="member">XMC_ETH_MAC_TIMESTAMP_CONFIG_ENABLE_PTP_OVER_IPV6</ref><sp/>=<sp/>ETH_TIMESTAMP_CONTROL_TSIPV6ENA_Msk,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><ref refid="group___e_t_h___m_a_c_1ggab8ed635081af97e59b61de8accd8da6dad224291b5dff032816d8ade1eb37113b" kindref="member">XMC_ETH_MAC_TIMESTAMP_CONFIG_ENABLE_PTP_OVER_IPV4</ref><sp/>=<sp/>ETH_TIMESTAMP_CONTROL_TSIPV4ENA_Msk,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><ref refid="group___e_t_h___m_a_c_1ggab8ed635081af97e59b61de8accd8da6da7a90800b5f223c66a1747187025e4e7d" kindref="member">XMC_ETH_MAC_TIMESTAMP_CONFIG_ENABLE_MAC_ADDRESS_FILTER</ref><sp/>=<sp/>ETH_TIMESTAMP_CONTROL_TSENMACADDR_Msk<sp/></highlight></codeline>
<codeline lineno="308"><highlight class="normal">}<sp/><ref refid="group___e_t_h___m_a_c_1gab8ed635081af97e59b61de8accd8da6d" kindref="member">XMC_ETH_MAC_TIMESTAMP_CONFIG_t</ref>;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>XMC_ETH_MAC_TIMESTAMP_STATUS</highlight></codeline>
<codeline lineno="314"><highlight class="normal">{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><ref refid="group___e_t_h___m_a_c_1ggaa1f03ed5eed7ba362484d1e11fcbd3fda77afbac431542acdc557a52d9bacc5e3" kindref="member">XMC_ETH_MAC_TIMESTAMP_STATUS_SECONDS_OVERFLOW</ref><sp/>=<sp/>ETH_TIMESTAMP_STATUS_TSSOVF_Msk,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><ref refid="group___e_t_h___m_a_c_1ggaa1f03ed5eed7ba362484d1e11fcbd3fdad0faf4227b22f9809484e576b49100e0" kindref="member">XMC_ETH_MAC_TIMESTAMP_STATUS_TARGET_TIME_REACHED</ref><sp/>=<sp/>ETH_TIMESTAMP_STATUS_TSTARGT_Msk,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><ref refid="group___e_t_h___m_a_c_1ggaa1f03ed5eed7ba362484d1e11fcbd3fdaab1ea3f645b23a047086c0dd3ab56d10" kindref="member">XMC_ETH_MAC_TIMESTAMP_STATUS_TARGET_TIMER_ERROR</ref><sp/>=<sp/>ETH_TIMESTAMP_STATUS_TSTRGTERR_Msk,<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="318"><highlight class="normal">}<sp/><ref refid="group___e_t_h___m_a_c_1gaa1f03ed5eed7ba362484d1e11fcbd3fd" kindref="member">XMC_ETH_MAC_TIMESTAMP_STATUS_t</ref>;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight><highlight class="comment">/**********************************************************************************************************************</highlight></codeline>
<codeline lineno="322"><highlight class="comment"><sp/>*<sp/>DATA<sp/>STRUCTURES</highlight></codeline>
<codeline lineno="323"><highlight class="comment"><sp/>*********************************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Anonymous<sp/>structure/union<sp/>guard<sp/>start<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>(__CC_ARM)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>push</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>anon_unions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined<sp/>(__TASKING__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>warning<sp/>586</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="336" refid="union_x_m_c___e_t_h___m_a_c___p_o_r_t___c_t_r_l__t" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">XMC_ETH_MAC_PORT_CTRL</highlight></codeline>
<codeline lineno="337"><highlight class="normal">{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>rxd0:<sp/>2;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>rxd1:<sp/>2;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>rxd2:<sp/>2;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>rxd3:<sp/>2;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>clk_rmii:<sp/>2;<sp/></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>crs_dv:<sp/>2;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>crs:<sp/>2;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>rxer:<sp/>2;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>col:<sp/>2;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>clk_tx:<sp/>2;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t:<sp/>2;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>mdio:<sp/>2;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t:<sp/>2;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>mode:<sp/>1;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/>uint32_t<sp/>raw;</highlight></codeline>
<codeline lineno="359"><highlight class="normal">}<sp/><ref refid="union_x_m_c___e_t_h___m_a_c___p_o_r_t___c_t_r_l__t" kindref="compound">XMC_ETH_MAC_PORT_CTRL_t</ref>;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="364" refid="struct_x_m_c___e_t_h___m_a_c___d_m_a___d_e_s_c__t" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">XMC_ETH_MAC_DMA_DESC</highlight></codeline>
<codeline lineno="365"><highlight class="normal">{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/>status;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/>length;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/>buffer1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/>buffer2;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/>extended_status;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/>reserved;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/>time_stamp_nanoseconds;<sp/></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/>time_stamp_seconds;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="374"><highlight class="normal">}<sp/><ref refid="struct_x_m_c___e_t_h___m_a_c___d_m_a___d_e_s_c__t" kindref="compound">XMC_ETH_MAC_DMA_DESC_t</ref>;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="379" refid="struct_x_m_c___e_t_h___m_a_c___t_i_m_e__t" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">XMC_ETH_MAC_TIME</highlight></codeline>
<codeline lineno="380"><highlight class="normal">{</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/>uint32_t<sp/>seconds;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/>int32_t<sp/>nanoseconds;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="383"><highlight class="normal">}<sp/><ref refid="struct_x_m_c___e_t_h___m_a_c___t_i_m_e__t" kindref="compound">XMC_ETH_MAC_TIME_t</ref>;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="388" refid="struct_x_m_c___e_t_h___m_a_c__t" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">XMC_ETH_MAC</highlight></codeline>
<codeline lineno="389"><highlight class="normal">{</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/>ETH_GLOBAL_TypeDef<sp/>*regs;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/>uint64_t<sp/>address;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><ref refid="struct_x_m_c___e_t_h___m_a_c___d_m_a___d_e_s_c__t" kindref="compound">XMC_ETH_MAC_DMA_DESC_t</ref><sp/>*rx_desc;<sp/></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><ref refid="struct_x_m_c___e_t_h___m_a_c___d_m_a___d_e_s_c__t" kindref="compound">XMC_ETH_MAC_DMA_DESC_t</ref><sp/>*tx_desc;<sp/></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/>uint8_t<sp/>*rx_buf;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/>uint8_t<sp/>*tx_buf;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/>uint8_t<sp/>*frame_end;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/>uint8_t<sp/>num_rx_buf;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/>uint8_t<sp/>num_tx_buf;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/>uint8_t<sp/>tx_index;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/>uint8_t<sp/>rx_index;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/>uint8_t<sp/>tx_ts_index;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="402"><highlight class="normal">}<sp/><ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref>;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Anonymous<sp/>structure/union<sp/>guard<sp/>end<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>(__CC_ARM)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>pop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined<sp/>(__TASKING__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>warning<sp/>restore</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight><highlight class="comment">/**********************************************************************************************************************</highlight></codeline>
<codeline lineno="412"><highlight class="comment"><sp/>*<sp/>API<sp/>PROTOTYPES</highlight></codeline>
<codeline lineno="413"><highlight class="comment"><sp/>*********************************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><ref refid="group___e_t_h___m_a_c_1ga8a60bbbfc7a839fd1a60d4ed0079a256" kindref="member">XMC_ETH_MAC_STATUS_t</ref><sp/><ref refid="group___e_t_h___m_a_c_1ga7c1571e10960029ed06dfb0bdab8a0b9" kindref="member">XMC_ETH_MAC_Init</ref>(<ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eth_mac);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___e_t_h___m_a_c_1ga22da6273cc60b12690a8b7cc9ab3fc41" kindref="member">XMC_ETH_MAC_InitEx</ref>(<ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eth_mac);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___e_t_h___m_a_c_1ga5bd52be7452c5c389d34433a82e32204" kindref="member">XMC_ETH_MAC_InitRxDescriptors</ref>(<ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eth_mac);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___e_t_h___m_a_c_1ga96935556969275a91eaf7ed760d5721b" kindref="member">XMC_ETH_MAC_InitTxDescriptors</ref>(<ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eth_mac);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___e_t_h___m_a_c_1gadede51fe3987ab499b0d44cd2b620490" kindref="member">XMC_ETH_MAC_Enable</ref>(<ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eth_mac);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___e_t_h___m_a_c_1ga02fea7fba60ff4f94e02288376e128f7" kindref="member">XMC_ETH_MAC_Disable</ref>(<ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eth_mac);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___e_t_h___m_a_c_1ga63f68aa733579566f9384c6c80132a96" kindref="member">XMC_ETH_MAC_Reset</ref>(<ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eth_mac)</highlight></codeline>
<codeline lineno="508"><highlight class="normal">{</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/>eth_mac-&gt;<ref refid="struct_x_m_c___e_t_h___m_a_c__t_1a7febd80638cbe7497e478e50cb3dada0" kindref="member">regs</ref>-&gt;BUS_MODE<sp/>|=<sp/>(uint32_t)ETH_BUS_MODE_SWR_Msk;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((eth_mac-&gt;<ref refid="struct_x_m_c___e_t_h___m_a_c__t_1a7febd80638cbe7497e478e50cb3dada0" kindref="member">regs</ref>-&gt;BUS_MODE<sp/>&amp;<sp/>(uint32_t)ETH_BUS_MODE_SWR_Msk)<sp/>!=<sp/>0U)</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="513"><highlight class="normal">}</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><ref refid="group___e_t_h___m_a_c_1ga8a60bbbfc7a839fd1a60d4ed0079a256" kindref="member">XMC_ETH_MAC_STATUS_t</ref><sp/><ref refid="group___e_t_h___m_a_c_1ga91cec22aa03df2b9db9553ee72e49279" kindref="member">XMC_ETH_MAC_ReadPhy</ref>(<ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eth_mac,<sp/>uint8_t<sp/>phy_addr,<sp/>uint8_t<sp/>reg_addr,<sp/>uint16_t<sp/>*data);</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><ref refid="group___e_t_h___m_a_c_1ga8a60bbbfc7a839fd1a60d4ed0079a256" kindref="member">XMC_ETH_MAC_STATUS_t</ref><sp/><ref refid="group___e_t_h___m_a_c_1ga93fe0633828038a19649f5cb8a2a5f42" kindref="member">XMC_ETH_MAC_WritePhy</ref>(<ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eth_mac,<sp/>uint8_t<sp/>phy_addr,<sp/>uint8_t<sp/>reg_addr,<sp/>uint16_t<sp/>data);</highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___e_t_h___m_a_c_1ga584c9301cd59e5b9bb4660ed75f136cd" kindref="member">XMC_ETH_MAC_SetPortControl</ref>(<ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eth_mac,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="union_x_m_c___e_t_h___m_a_c___p_o_r_t___c_t_r_l__t" kindref="compound">XMC_ETH_MAC_PORT_CTRL_t</ref><sp/>port_ctrl)</highlight></codeline>
<codeline lineno="567"><highlight class="normal">{</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/>XMC_UNUSED_ARG(eth_mac);</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/>ETH0_CON-&gt;CON<sp/>=<sp/>(uint32_t)port_ctrl.raw;</highlight></codeline>
<codeline lineno="570"><highlight class="normal">}</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><ref refid="group___e_t_h___m_a_c_1ga8a60bbbfc7a839fd1a60d4ed0079a256" kindref="member">XMC_ETH_MAC_STATUS_t</ref><sp/><ref refid="group___e_t_h___m_a_c_1ga5aadd2dd9a23bc269a89588cf456f334" kindref="member">XMC_ETH_MAC_SetManagmentClockDivider</ref>(<ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eth_mac);</highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___e_t_h___m_a_c_1ga04b5d7b825980aa3bc41361cb9e7f08f" kindref="member">XMC_ETH_MAC_SetAddress</ref>(<ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eth_mac,<sp/>uint64_t<sp/>addr)</highlight></codeline>
<codeline lineno="598"><highlight class="normal">{</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/>eth_mac-&gt;<ref refid="struct_x_m_c___e_t_h___m_a_c__t_1a7febd80638cbe7497e478e50cb3dada0" kindref="member">regs</ref>-&gt;MAC_ADDRESS0_HIGH<sp/>=<sp/>(uint32_t)(addr<sp/>&gt;&gt;<sp/>32);</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/>eth_mac-&gt;<ref refid="struct_x_m_c___e_t_h___m_a_c__t_1a7febd80638cbe7497e478e50cb3dada0" kindref="member">regs</ref>-&gt;MAC_ADDRESS0_LOW<sp/>=<sp/>(uint32_t)addr;</highlight></codeline>
<codeline lineno="601"><highlight class="normal">}</highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___e_t_h___m_a_c_1gac765dbe49bd1c9c336475950265152e8" kindref="member">XMC_ETH_MAC_SetAddressEx</ref>(<ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eth_mac,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>addr);</highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal">__STATIC_INLINE<sp/>uint64_t<sp/><ref refid="group___e_t_h___m_a_c_1gadb48547d7bf26333094b120e13c497b7" kindref="member">XMC_ETH_MAC_GetAddress</ref>(<ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eth_mac)</highlight></codeline>
<codeline lineno="628"><highlight class="normal">{</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/>uint32_t<sp/>mac_addr_high<sp/>=<sp/>eth_mac-&gt;<ref refid="struct_x_m_c___e_t_h___m_a_c__t_1a7febd80638cbe7497e478e50cb3dada0" kindref="member">regs</ref>-&gt;MAC_ADDRESS0_HIGH;</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/>uint32_t<sp/>mac_addr_low<sp/>=<sp/>eth_mac-&gt;<ref refid="struct_x_m_c___e_t_h___m_a_c__t_1a7febd80638cbe7497e478e50cb3dada0" kindref="member">regs</ref>-&gt;MAC_ADDRESS0_HIGH;</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((((uint64_t)mac_addr_high<sp/>&lt;&lt;<sp/>32))<sp/>|<sp/>(uint64_t)mac_addr_low);</highlight></codeline>
<codeline lineno="632"><highlight class="normal">}</highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___e_t_h___m_a_c_1gabfe89d7c70b6943ad42e6ba686ef43ca" kindref="member">XMC_ETH_MAC_GetAddressEx</ref>(<ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eth_mac,<sp/>uint8_t<sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>addr);</highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___e_t_h___m_a_c_1gac19ee41fa6c72a8d0d0990668d6fa3c0" kindref="member">XMC_ETH_MAC_SetAddressPerfectFilter</ref>(<ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eth_mac,<sp/>uint8_t<sp/>index,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>addr,<sp/>uint32_t<sp/>flags);</highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___e_t_h___m_a_c_1ga1cf931a2b14dd2c31db8f0281968ee7c" kindref="member">XMC_ETH_MAC_SetAddressPerfectFilterEx</ref>(<ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eth_mac,<sp/>uint8_t<sp/>index,<sp/>uint8_t<sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>addr,<sp/>uint32_t<sp/>flags);</highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___e_t_h___m_a_c_1gae3a8db950d8c544b3f05b22e30040021" kindref="member">XMC_ETH_MAC_SetAddressHashFilter</ref>(<ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eth_mac,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>hash);</highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___e_t_h___m_a_c_1ga662d083dd4dc085b2743f9346d983f4f" kindref="member">XMC_ETH_MAC_EnableFrameFilter</ref>(<ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eth_mac)</highlight></codeline>
<codeline lineno="705"><highlight class="normal">{</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/>eth_mac-&gt;<ref refid="struct_x_m_c___e_t_h___m_a_c__t_1a7febd80638cbe7497e478e50cb3dada0" kindref="member">regs</ref>-&gt;MAC_FRAME_FILTER<sp/>&amp;=<sp/>(uint32_t)~ETH_MAC_FRAME_FILTER_RA_Msk;</highlight></codeline>
<codeline lineno="707"><highlight class="normal">}</highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___e_t_h___m_a_c_1ga77b6542933ec6acd8ed390446d417ecc" kindref="member">XMC_ETH_MAC_DisableFrameFilter</ref>(<ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eth_mac)</highlight></codeline>
<codeline lineno="722"><highlight class="normal">{</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/>eth_mac-&gt;<ref refid="struct_x_m_c___e_t_h___m_a_c__t_1a7febd80638cbe7497e478e50cb3dada0" kindref="member">regs</ref>-&gt;MAC_FRAME_FILTER<sp/>|=<sp/>(uint32_t)ETH_MAC_FRAME_FILTER_RA_Msk;</highlight></codeline>
<codeline lineno="724"><highlight class="normal">}</highlight></codeline>
<codeline lineno="725"><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___e_t_h___m_a_c_1ga50c0e44a8521790a77dd9116b6fa34bc" kindref="member">XMC_ETH_MAC_EnableHashPerfectFilter</ref>(<ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eth_mac)</highlight></codeline>
<codeline lineno="739"><highlight class="normal">{</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/>eth_mac-&gt;<ref refid="struct_x_m_c___e_t_h___m_a_c__t_1a7febd80638cbe7497e478e50cb3dada0" kindref="member">regs</ref>-&gt;MAC_FRAME_FILTER<sp/>|=<sp/>(uint32_t)ETH_MAC_FRAME_FILTER_HPF_Msk;</highlight></codeline>
<codeline lineno="741"><highlight class="normal">}</highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___e_t_h___m_a_c_1gae2969b186b3091e1cad6a5d290e310fe" kindref="member">XMC_ETH_MAC_EnablePerfectFilter</ref>(<ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eth_mac)</highlight></codeline>
<codeline lineno="755"><highlight class="normal">{</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/>eth_mac-&gt;<ref refid="struct_x_m_c___e_t_h___m_a_c__t_1a7febd80638cbe7497e478e50cb3dada0" kindref="member">regs</ref>-&gt;MAC_FRAME_FILTER<sp/>&amp;=<sp/>(uint32_t)~ETH_MAC_FRAME_FILTER_HPF_Msk;</highlight></codeline>
<codeline lineno="757"><highlight class="normal">}</highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___e_t_h___m_a_c_1ga34f2c04de137a6785a58adcba191e8c1" kindref="member">XMC_ETH_MAC_EnableSourceAddressFilter</ref>(<ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eth_mac)</highlight></codeline>
<codeline lineno="774"><highlight class="normal">{</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/>eth_mac-&gt;<ref refid="struct_x_m_c___e_t_h___m_a_c__t_1a7febd80638cbe7497e478e50cb3dada0" kindref="member">regs</ref>-&gt;MAC_FRAME_FILTER<sp/>|=<sp/>(uint32_t)ETH_MAC_FRAME_FILTER_SAF_Msk;</highlight></codeline>
<codeline lineno="776"><highlight class="normal">}</highlight></codeline>
<codeline lineno="777"><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___e_t_h___m_a_c_1gae0f09a9f09bf552bfc4f1059fbc2d6a8" kindref="member">XMC_ETH_MAC_DisableSourceAddressFilter</ref>(<ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eth_mac)</highlight></codeline>
<codeline lineno="792"><highlight class="normal">{</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/>eth_mac-&gt;<ref refid="struct_x_m_c___e_t_h___m_a_c__t_1a7febd80638cbe7497e478e50cb3dada0" kindref="member">regs</ref>-&gt;MAC_FRAME_FILTER<sp/>&amp;=<sp/>(uint32_t)~ETH_MAC_FRAME_FILTER_SAF_Msk;</highlight></codeline>
<codeline lineno="794"><highlight class="normal">}</highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___e_t_h___m_a_c_1ga7aad2392d026999981b385d739b6f8bd" kindref="member">XMC_ETH_MAC_EnableSourceAddressInverseFilter</ref>(<ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eth_mac)</highlight></codeline>
<codeline lineno="810"><highlight class="normal">{</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/>eth_mac-&gt;<ref refid="struct_x_m_c___e_t_h___m_a_c__t_1a7febd80638cbe7497e478e50cb3dada0" kindref="member">regs</ref>-&gt;MAC_FRAME_FILTER<sp/>|=<sp/>(uint32_t)ETH_MAC_FRAME_FILTER_SAIF_Msk;</highlight></codeline>
<codeline lineno="812"><highlight class="normal">}</highlight></codeline>
<codeline lineno="813"><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___e_t_h___m_a_c_1ga307ead3bb8f922ffee8bf6d0cbc3f52f" kindref="member">XMC_ETH_MAC_DisableSourceAddressInverseFilter</ref>(<ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eth_mac)</highlight></codeline>
<codeline lineno="827"><highlight class="normal">{</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/>eth_mac-&gt;<ref refid="struct_x_m_c___e_t_h___m_a_c__t_1a7febd80638cbe7497e478e50cb3dada0" kindref="member">regs</ref>-&gt;MAC_FRAME_FILTER<sp/>&amp;=<sp/>(uint32_t)~ETH_MAC_FRAME_FILTER_SAIF_Msk;</highlight></codeline>
<codeline lineno="829"><highlight class="normal">}</highlight></codeline>
<codeline lineno="830"><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___e_t_h___m_a_c_1ga840d3e1fe8fb6af11712f428ddbb8ed7" kindref="member">XMC_ETH_MAC_EnableDestinationAddressInverseFilter</ref>(<ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eth_mac)</highlight></codeline>
<codeline lineno="845"><highlight class="normal">{</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/>eth_mac-&gt;<ref refid="struct_x_m_c___e_t_h___m_a_c__t_1a7febd80638cbe7497e478e50cb3dada0" kindref="member">regs</ref>-&gt;MAC_FRAME_FILTER<sp/>|=<sp/>(uint32_t)ETH_MAC_FRAME_FILTER_DAIF_Msk;</highlight></codeline>
<codeline lineno="847"><highlight class="normal">}</highlight></codeline>
<codeline lineno="848"><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___e_t_h___m_a_c_1gae73e447b775804bfd2b6de7a57eacd80" kindref="member">XMC_ETH_MAC_DisableDestinationAddressInverseFilter</ref>(<ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eth_mac)</highlight></codeline>
<codeline lineno="861"><highlight class="normal">{</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/>eth_mac-&gt;<ref refid="struct_x_m_c___e_t_h___m_a_c__t_1a7febd80638cbe7497e478e50cb3dada0" kindref="member">regs</ref>-&gt;MAC_FRAME_FILTER<sp/>&amp;=<sp/>(uint32_t)~ETH_MAC_FRAME_FILTER_DAIF_Msk;</highlight></codeline>
<codeline lineno="863"><highlight class="normal">}</highlight></codeline>
<codeline lineno="864"><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___e_t_h___m_a_c_1gaa87efdb6d8a5e4a9bba9687ae05f997a" kindref="member">XMC_ETH_MAC_EnableMulticastHashFilter</ref>(<ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eth_mac)</highlight></codeline>
<codeline lineno="877"><highlight class="normal">{</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/>eth_mac-&gt;<ref refid="struct_x_m_c___e_t_h___m_a_c__t_1a7febd80638cbe7497e478e50cb3dada0" kindref="member">regs</ref>-&gt;MAC_FRAME_FILTER<sp/>|=<sp/>(uint32_t)ETH_MAC_FRAME_FILTER_HMC_Msk;</highlight></codeline>
<codeline lineno="879"><highlight class="normal">}</highlight></codeline>
<codeline lineno="880"><highlight class="normal"></highlight></codeline>
<codeline lineno="892"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___e_t_h___m_a_c_1gab7c660afefae53674c30d82f72f29d6d" kindref="member">XMC_ETH_MAC_DisableMulticastHashFilter</ref>(<ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eth_mac)</highlight></codeline>
<codeline lineno="893"><highlight class="normal">{</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/>eth_mac-&gt;<ref refid="struct_x_m_c___e_t_h___m_a_c__t_1a7febd80638cbe7497e478e50cb3dada0" kindref="member">regs</ref>-&gt;MAC_FRAME_FILTER<sp/>&amp;=<sp/>(uint32_t)~ETH_MAC_FRAME_FILTER_HMC_Msk;</highlight></codeline>
<codeline lineno="895"><highlight class="normal">}</highlight></codeline>
<codeline lineno="896"><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___e_t_h___m_a_c_1ga4f9212856fe930fbf9ec6e375fee280c" kindref="member">XMC_ETH_MAC_EnableUnicastHashFilter</ref>(<ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eth_mac)</highlight></codeline>
<codeline lineno="909"><highlight class="normal">{</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/>eth_mac-&gt;<ref refid="struct_x_m_c___e_t_h___m_a_c__t_1a7febd80638cbe7497e478e50cb3dada0" kindref="member">regs</ref>-&gt;MAC_FRAME_FILTER<sp/>|=<sp/>(uint32_t)ETH_MAC_FRAME_FILTER_HUC_Msk;</highlight></codeline>
<codeline lineno="911"><highlight class="normal">}</highlight></codeline>
<codeline lineno="912"><highlight class="normal"></highlight></codeline>
<codeline lineno="924"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___e_t_h___m_a_c_1gab3aeab1851034a86aa479c5cbe75007b" kindref="member">XMC_ETH_MAC_DisableUnicastHashFilter</ref>(<ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eth_mac)</highlight></codeline>
<codeline lineno="925"><highlight class="normal">{</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/>eth_mac-&gt;<ref refid="struct_x_m_c___e_t_h___m_a_c__t_1a7febd80638cbe7497e478e50cb3dada0" kindref="member">regs</ref>-&gt;MAC_FRAME_FILTER<sp/>&amp;=<sp/>(uint32_t)~ETH_MAC_FRAME_FILTER_HUC_Msk;</highlight></codeline>
<codeline lineno="927"><highlight class="normal">}</highlight></codeline>
<codeline lineno="928"><highlight class="normal"></highlight></codeline>
<codeline lineno="944"><highlight class="normal"><ref refid="group___e_t_h___m_a_c_1ga8a60bbbfc7a839fd1a60d4ed0079a256" kindref="member">XMC_ETH_MAC_STATUS_t</ref><sp/><ref refid="group___e_t_h___m_a_c_1ga958ce883b8500351b080d3e1e508e0cf" kindref="member">XMC_ETH_MAC_SendFrame</ref>(<ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eth_mac,</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*frame,</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>len,</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>flags);</highlight></codeline>
<codeline lineno="948"><highlight class="normal"></highlight></codeline>
<codeline lineno="962"><highlight class="normal">uint32_t<sp/><ref refid="group___e_t_h___m_a_c_1ga65220a04566874fe2f9da1aa684c3440" kindref="member">XMC_ETH_MAC_ReadFrame</ref>(<ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eth_mac,<sp/>uint8_t<sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>frame,<sp/>uint32_t<sp/>len);</highlight></codeline>
<codeline lineno="963"><highlight class="normal"></highlight></codeline>
<codeline lineno="974"><highlight class="normal">uint32_t<sp/><ref refid="group___e_t_h___m_a_c_1ga6ea4b201e230e052d13d21f8c4af7941" kindref="member">XMC_ETH_MAC_GetRxFrameSize</ref>(<ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eth_mac);</highlight></codeline>
<codeline lineno="975"><highlight class="normal"></highlight></codeline>
<codeline lineno="986"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___e_t_h___m_a_c_1gadbe2720aa179c44bb8e5348c9262ed41" kindref="member">XMC_ETH_MAC_EnableReceptionBroadcastFrames</ref>(<ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eth_mac)</highlight></codeline>
<codeline lineno="987"><highlight class="normal">{</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/>eth_mac-&gt;<ref refid="struct_x_m_c___e_t_h___m_a_c__t_1a7febd80638cbe7497e478e50cb3dada0" kindref="member">regs</ref>-&gt;MAC_FRAME_FILTER<sp/>&amp;=<sp/>(uint32_t)~ETH_MAC_FRAME_FILTER_DBF_Msk;</highlight></codeline>
<codeline lineno="989"><highlight class="normal">}</highlight></codeline>
<codeline lineno="990"><highlight class="normal"></highlight></codeline>
<codeline lineno="1003"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___e_t_h___m_a_c_1ga03f99f68d40ed6fed2e7f7b01db56c93" kindref="member">XMC_ETH_MAC_DisableReceptionBroadcastFrames</ref>(<ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eth_mac)</highlight></codeline>
<codeline lineno="1004"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/>eth_mac-&gt;<ref refid="struct_x_m_c___e_t_h___m_a_c__t_1a7febd80638cbe7497e478e50cb3dada0" kindref="member">regs</ref>-&gt;MAC_FRAME_FILTER<sp/>|=<sp/>(uint32_t)ETH_MAC_FRAME_FILTER_DBF_Msk;</highlight></codeline>
<codeline lineno="1006"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"></highlight></codeline>
<codeline lineno="1020"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___e_t_h___m_a_c_1ga0d7f7d3ef8726625dce910a04477f145" kindref="member">XMC_ETH_MAC_EnableReceptionMulticastFrames</ref>(<ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eth_mac)</highlight></codeline>
<codeline lineno="1021"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/>eth_mac-&gt;<ref refid="struct_x_m_c___e_t_h___m_a_c__t_1a7febd80638cbe7497e478e50cb3dada0" kindref="member">regs</ref>-&gt;MAC_FRAME_FILTER<sp/>|=<sp/>(uint32_t)ETH_MAC_FRAME_FILTER_PM_Msk;</highlight></codeline>
<codeline lineno="1023"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"></highlight></codeline>
<codeline lineno="1036"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___e_t_h___m_a_c_1ga91a806835577a99e8606ba03c9b8bb91" kindref="member">XMC_ETH_MAC_DisableReceptionMulticastFrames</ref>(<ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eth_mac)</highlight></codeline>
<codeline lineno="1037"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/>eth_mac-&gt;<ref refid="struct_x_m_c___e_t_h___m_a_c__t_1a7febd80638cbe7497e478e50cb3dada0" kindref="member">regs</ref>-&gt;MAC_FRAME_FILTER<sp/>&amp;=<sp/>(uint32_t)~ETH_MAC_FRAME_FILTER_PM_Msk;</highlight></codeline>
<codeline lineno="1039"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"></highlight></codeline>
<codeline lineno="1053"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___e_t_h___m_a_c_1ga874ab17677f1e2e3d3512d1eebdc2e65" kindref="member">XMC_ETH_MAC_EnablePromiscuousMode</ref>(<ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eth_mac)</highlight></codeline>
<codeline lineno="1054"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/>eth_mac-&gt;<ref refid="struct_x_m_c___e_t_h___m_a_c__t_1a7febd80638cbe7497e478e50cb3dada0" kindref="member">regs</ref>-&gt;MAC_FRAME_FILTER<sp/>|=<sp/>(uint32_t)ETH_MAC_FRAME_FILTER_PR_Msk;</highlight></codeline>
<codeline lineno="1056"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"></highlight></codeline>
<codeline lineno="1068"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___e_t_h___m_a_c_1gadb51f3b8d25d10d25854b994959c5ffc" kindref="member">XMC_ETH_MAC_DisablePromiscuousMode</ref>(<ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eth_mac)</highlight></codeline>
<codeline lineno="1069"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/>eth_mac-&gt;<ref refid="struct_x_m_c___e_t_h___m_a_c__t_1a7febd80638cbe7497e478e50cb3dada0" kindref="member">regs</ref>-&gt;MAC_FRAME_FILTER<sp/>&amp;=<sp/>(uint32_t)~ETH_MAC_FRAME_FILTER_PR_Msk;</highlight></codeline>
<codeline lineno="1071"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"></highlight></codeline>
<codeline lineno="1085"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___e_t_h___m_a_c_1ga27fcf79a6e70bb0e5cb4fc2d3b419d83" kindref="member">XMC_ETH_MAC_EnableRxWatchdog</ref>(<ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eth_mac)</highlight></codeline>
<codeline lineno="1086"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/>eth_mac-&gt;<ref refid="struct_x_m_c___e_t_h___m_a_c__t_1a7febd80638cbe7497e478e50cb3dada0" kindref="member">regs</ref>-&gt;MAC_CONFIGURATION<sp/>&amp;=<sp/>(uint32_t)~ETH_MAC_CONFIGURATION_WD_Msk;</highlight></codeline>
<codeline lineno="1088"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"></highlight></codeline>
<codeline lineno="1100"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___e_t_h___m_a_c_1ga53ff17f7ec0a51862411cb09a1d984ef" kindref="member">XMC_ETH_MAC_DisableRxWatchdog</ref>(<ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eth_mac)</highlight></codeline>
<codeline lineno="1101"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/>eth_mac-&gt;<ref refid="struct_x_m_c___e_t_h___m_a_c__t_1a7febd80638cbe7497e478e50cb3dada0" kindref="member">regs</ref>-&gt;MAC_CONFIGURATION<sp/>|=<sp/>(uint32_t)ETH_MAC_CONFIGURATION_WD_Msk;</highlight></codeline>
<codeline lineno="1103"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"></highlight></codeline>
<codeline lineno="1117"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___e_t_h___m_a_c_1gac5790b0f5567783960e6f94de916027f" kindref="member">XMC_ETH_MAC_EnableTxJabber</ref>(<ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eth_mac)</highlight></codeline>
<codeline lineno="1118"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/>eth_mac-&gt;<ref refid="struct_x_m_c___e_t_h___m_a_c__t_1a7febd80638cbe7497e478e50cb3dada0" kindref="member">regs</ref>-&gt;MAC_CONFIGURATION<sp/>&amp;=<sp/>(uint32_t)~ETH_MAC_CONFIGURATION_JD_Msk;</highlight></codeline>
<codeline lineno="1120"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"></highlight></codeline>
<codeline lineno="1132"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___e_t_h___m_a_c_1ga7374598672ccd0a9e7e9df6906dbc83c" kindref="member">XMC_ETH_MAC_DisableTxJabber</ref>(<ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eth_mac)</highlight></codeline>
<codeline lineno="1133"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/>eth_mac-&gt;<ref refid="struct_x_m_c___e_t_h___m_a_c__t_1a7febd80638cbe7497e478e50cb3dada0" kindref="member">regs</ref>-&gt;MAC_CONFIGURATION<sp/>|=<sp/>(uint32_t)ETH_MAC_CONFIGURATION_JD_Msk;</highlight></codeline>
<codeline lineno="1135"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"></highlight></codeline>
<codeline lineno="1148"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___e_t_h___m_a_c_1ga3caf8d92d228e82b9a98aff3194c73c8" kindref="member">XMC_ETH_MAC_EnableFrameBurst</ref>(<ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eth_mac)</highlight></codeline>
<codeline lineno="1149"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/>eth_mac-&gt;<ref refid="struct_x_m_c___e_t_h___m_a_c__t_1a7febd80638cbe7497e478e50cb3dada0" kindref="member">regs</ref>-&gt;MAC_CONFIGURATION<sp/>|=<sp/>(uint32_t)ETH_MAC_CONFIGURATION_BE_Msk;</highlight></codeline>
<codeline lineno="1151"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"></highlight></codeline>
<codeline lineno="1163"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___e_t_h___m_a_c_1gaba2aab8aefbfb724785d6ad631bf2760" kindref="member">XMC_ETH_MAC_DisableFrameBurst</ref>(<ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eth_mac)</highlight></codeline>
<codeline lineno="1164"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/>eth_mac-&gt;<ref refid="struct_x_m_c___e_t_h___m_a_c__t_1a7febd80638cbe7497e478e50cb3dada0" kindref="member">regs</ref>-&gt;MAC_CONFIGURATION<sp/>&amp;=<sp/>(uint32_t)~ETH_MAC_CONFIGURATION_BE_Msk;</highlight></codeline>
<codeline lineno="1166"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"></highlight></codeline>
<codeline lineno="1180"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___e_t_h___m_a_c_1ga41c3d76438ae9fb43ac236fdb1275297" kindref="member">XMC_ETH_MAC_EnableJumboFrame</ref>(<ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eth_mac)</highlight></codeline>
<codeline lineno="1181"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/>eth_mac-&gt;<ref refid="struct_x_m_c___e_t_h___m_a_c__t_1a7febd80638cbe7497e478e50cb3dada0" kindref="member">regs</ref>-&gt;MAC_CONFIGURATION<sp/>|=<sp/>(uint32_t)ETH_MAC_CONFIGURATION_JE_Msk;</highlight></codeline>
<codeline lineno="1183"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"></highlight></codeline>
<codeline lineno="1195"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___e_t_h___m_a_c_1ga66dfaaa324ee7ebbba781566b543f112" kindref="member">XMC_ETH_MAC_DisableJumboFrame</ref>(<ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eth_mac)</highlight></codeline>
<codeline lineno="1196"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/>eth_mac-&gt;<ref refid="struct_x_m_c___e_t_h___m_a_c__t_1a7febd80638cbe7497e478e50cb3dada0" kindref="member">regs</ref>-&gt;MAC_CONFIGURATION<sp/>&amp;=<sp/>(uint32_t)~ETH_MAC_CONFIGURATION_JE_Msk;</highlight></codeline>
<codeline lineno="1198"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"></highlight></codeline>
<codeline lineno="1211"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___e_t_h___m_a_c_1ga37eb03f1b114b71e683633b3bd658cea" kindref="member">XMC_ETH_MAC_EnableRxOwn</ref>(<ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eth_mac)</highlight></codeline>
<codeline lineno="1212"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/>eth_mac-&gt;<ref refid="struct_x_m_c___e_t_h___m_a_c__t_1a7febd80638cbe7497e478e50cb3dada0" kindref="member">regs</ref>-&gt;MAC_CONFIGURATION<sp/>&amp;=<sp/>(uint32_t)~ETH_MAC_CONFIGURATION_DO_Msk;</highlight></codeline>
<codeline lineno="1214"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"></highlight></codeline>
<codeline lineno="1227"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___e_t_h___m_a_c_1gacff8776252fa43035836c5865846b165" kindref="member">XMC_ETH_MAC_DisableRxOwn</ref>(<ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eth_mac)</highlight></codeline>
<codeline lineno="1228"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/>eth_mac-&gt;<ref refid="struct_x_m_c___e_t_h___m_a_c__t_1a7febd80638cbe7497e478e50cb3dada0" kindref="member">regs</ref>-&gt;MAC_CONFIGURATION<sp/>|=<sp/>(uint32_t)ETH_MAC_CONFIGURATION_DO_Msk;</highlight></codeline>
<codeline lineno="1230"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"></highlight></codeline>
<codeline lineno="1242"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___e_t_h___m_a_c_1ga8e4a8abc5b48f7645a947c316350a753" kindref="member">XMC_ETH_MAC_EnableLoopback</ref>(<ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eth_mac)</highlight></codeline>
<codeline lineno="1243"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/>eth_mac-&gt;<ref refid="struct_x_m_c___e_t_h___m_a_c__t_1a7febd80638cbe7497e478e50cb3dada0" kindref="member">regs</ref>-&gt;MAC_CONFIGURATION<sp/>|=<sp/>(uint32_t)ETH_MAC_CONFIGURATION_LM_Msk;</highlight></codeline>
<codeline lineno="1245"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"></highlight></codeline>
<codeline lineno="1257"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___e_t_h___m_a_c_1ga66f8e7315ac9df220333ce7241ef3280" kindref="member">XMC_ETH_MAC_DisableLoopback</ref>(<ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eth_mac)</highlight></codeline>
<codeline lineno="1258"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/>eth_mac-&gt;<ref refid="struct_x_m_c___e_t_h___m_a_c__t_1a7febd80638cbe7497e478e50cb3dada0" kindref="member">regs</ref>-&gt;MAC_CONFIGURATION<sp/>&amp;=<sp/>(uint32_t)~ETH_MAC_CONFIGURATION_LM_Msk;</highlight></codeline>
<codeline lineno="1260"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"></highlight></codeline>
<codeline lineno="1274"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___e_t_h___m_a_c_1gaf463cc59d8a1f8f9a2c4364f4fc8557c" kindref="member">XMC_ETH_MAC_SetLink</ref>(<ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eth_mac,</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___e_t_h___m_a_c_1ga29d7022e1e9e2c857f79efc6c281b531" kindref="member">XMC_ETH_LINK_SPEED_t</ref><sp/>speed,</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___e_t_h___m_a_c_1gab7f9ae5d92570c07305898a48e5c5b9a" kindref="member">XMC_ETH_LINK_DUPLEX_t</ref><sp/>duplex)</highlight></codeline>
<codeline lineno="1277"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/>eth_mac-&gt;<ref refid="struct_x_m_c___e_t_h___m_a_c__t_1a7febd80638cbe7497e478e50cb3dada0" kindref="member">regs</ref>-&gt;MAC_CONFIGURATION<sp/>=<sp/>(eth_mac-&gt;<ref refid="struct_x_m_c___e_t_h___m_a_c__t_1a7febd80638cbe7497e478e50cb3dada0" kindref="member">regs</ref>-&gt;MAC_CONFIGURATION<sp/>&amp;</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(uint32_t)~(ETH_MAC_CONFIGURATION_DM_Msk<sp/>|<sp/>ETH_MAC_CONFIGURATION_FES_Msk))<sp/>|</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(uint32_t)speed<sp/>|<sp/>(uint32_t)duplex;</highlight></codeline>
<codeline lineno="1281"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"></highlight></codeline>
<codeline lineno="1293"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___e_t_h___m_a_c_1ga85e81303eac077b306142da048753b3e" kindref="member">XMC_ETH_MAC_ReturnRxDescriptor</ref>(<ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eth_mac);</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"></highlight></codeline>
<codeline lineno="1305"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group___e_t_h___m_a_c_1ga477b1149524fe23ca5f223db7ee79c79" kindref="member">XMC_ETH_MAC_IsRxDescriptorOwnedByDma</ref>(<ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eth_mac)</highlight></codeline>
<codeline lineno="1306"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((eth_mac-&gt;<ref refid="struct_x_m_c___e_t_h___m_a_c__t_1af66e76bbc240b59944cc76eb7bf67c6e" kindref="member">rx_desc</ref>[eth_mac-&gt;<ref refid="struct_x_m_c___e_t_h___m_a_c__t_1ac4b08f79fc99cb2c9c396b1d2be494bb" kindref="member">rx_index</ref>].<ref refid="struct_x_m_c___e_t_h___m_a_c___d_m_a___d_e_s_c__t_1a9d5ec73a70e8d3f1e4e13411f24f4135" kindref="member">status</ref><sp/>&amp;<sp/><ref refid="group___e_t_h___m_a_c_1gae1784f11eba992f7343db8c198c4774b" kindref="member">ETH_MAC_DMA_RDES0_OWN</ref>)<sp/>!=<sp/>0U);</highlight></codeline>
<codeline lineno="1308"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"></highlight></codeline>
<codeline lineno="1320"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___e_t_h___m_a_c_1gaa9e99fba29449494fb74c4393b8eb911" kindref="member">XMC_ETH_MAC_ReturnTxDescriptor</ref>(<ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eth_mac);</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"></highlight></codeline>
<codeline lineno="1332"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group___e_t_h___m_a_c_1ga3c39b38ba5c465d7f21265c5b6ef2a2d" kindref="member">XMC_ETH_MAC_IsTxDescriptorOwnedByDma</ref>(<ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eth_mac)</highlight></codeline>
<codeline lineno="1333"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((eth_mac-&gt;<ref refid="struct_x_m_c___e_t_h___m_a_c__t_1a43510ff59f7aa55c21781f9806391d69" kindref="member">tx_desc</ref>[eth_mac-&gt;<ref refid="struct_x_m_c___e_t_h___m_a_c__t_1afe6711d9a4857506ccc25f1b7c6be7fb" kindref="member">tx_index</ref>].<ref refid="struct_x_m_c___e_t_h___m_a_c___d_m_a___d_e_s_c__t_1a9d5ec73a70e8d3f1e4e13411f24f4135" kindref="member">status</ref><sp/>&amp;<sp/><ref refid="group___e_t_h___m_a_c_1gadc3537e021d7b1e6cd1fd009c8809ee4" kindref="member">ETH_MAC_DMA_TDES0_OWN</ref>)<sp/>!=<sp/>0U);</highlight></codeline>
<codeline lineno="1335"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"></highlight></codeline>
<codeline lineno="1347"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group___e_t_h___m_a_c_1gad3b1e0242bf97fad5ef499814088fc04" kindref="member">XMC_ETH_MAC_IsTxDescriptorOwnedByDmaEx</ref>(<ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eth_mac,<sp/>uint8_t<sp/>index)</highlight></codeline>
<codeline lineno="1348"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((eth_mac-&gt;<ref refid="struct_x_m_c___e_t_h___m_a_c__t_1a43510ff59f7aa55c21781f9806391d69" kindref="member">tx_desc</ref>[index].<ref refid="struct_x_m_c___e_t_h___m_a_c___d_m_a___d_e_s_c__t_1a9d5ec73a70e8d3f1e4e13411f24f4135" kindref="member">status</ref><sp/>&amp;<sp/><ref refid="group___e_t_h___m_a_c_1gadc3537e021d7b1e6cd1fd009c8809ee4" kindref="member">ETH_MAC_DMA_TDES0_OWN</ref>)<sp/>!=<sp/>0U);</highlight></codeline>
<codeline lineno="1350"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"></highlight></codeline>
<codeline lineno="1364"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___e_t_h___m_a_c_1ga70eee228345aab1f84b82fde08086c63" kindref="member">XMC_ETH_MAC_EnableRx</ref>(<ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eth_mac)</highlight></codeline>
<codeline lineno="1365"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/>eth_mac-&gt;<ref refid="struct_x_m_c___e_t_h___m_a_c__t_1a7febd80638cbe7497e478e50cb3dada0" kindref="member">regs</ref>-&gt;OPERATION_MODE<sp/>|=<sp/>(uint32_t)ETH_OPERATION_MODE_SR_Msk;</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/>eth_mac-&gt;<ref refid="struct_x_m_c___e_t_h___m_a_c__t_1a7febd80638cbe7497e478e50cb3dada0" kindref="member">regs</ref>-&gt;MAC_CONFIGURATION<sp/>|=<sp/>(uint32_t)ETH_MAC_CONFIGURATION_RE_Msk;</highlight></codeline>
<codeline lineno="1368"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"></highlight></codeline>
<codeline lineno="1380"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___e_t_h___m_a_c_1ga9a0dc0216ac282b5572f4a30a5a4c8ce" kindref="member">XMC_ETH_MAC_DisableRx</ref>(<ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eth_mac)</highlight></codeline>
<codeline lineno="1381"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/>eth_mac-&gt;<ref refid="struct_x_m_c___e_t_h___m_a_c__t_1a7febd80638cbe7497e478e50cb3dada0" kindref="member">regs</ref>-&gt;MAC_CONFIGURATION<sp/>&amp;=<sp/>(uint32_t)~ETH_MAC_CONFIGURATION_RE_Msk;</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/>eth_mac-&gt;<ref refid="struct_x_m_c___e_t_h___m_a_c__t_1a7febd80638cbe7497e478e50cb3dada0" kindref="member">regs</ref>-&gt;OPERATION_MODE<sp/>&amp;=<sp/>(uint32_t)~ETH_OPERATION_MODE_SR_Msk;</highlight></codeline>
<codeline lineno="1384"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"></highlight></codeline>
<codeline lineno="1398"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___e_t_h___m_a_c_1gafbc9026aa575d830834a7c29a99c751c" kindref="member">XMC_ETH_MAC_EnableTx</ref>(<ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eth_mac)</highlight></codeline>
<codeline lineno="1399"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/>eth_mac-&gt;<ref refid="struct_x_m_c___e_t_h___m_a_c__t_1a7febd80638cbe7497e478e50cb3dada0" kindref="member">regs</ref>-&gt;OPERATION_MODE<sp/>|=<sp/>(uint32_t)ETH_OPERATION_MODE_ST_Msk;</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/>eth_mac-&gt;<ref refid="struct_x_m_c___e_t_h___m_a_c__t_1a7febd80638cbe7497e478e50cb3dada0" kindref="member">regs</ref>-&gt;MAC_CONFIGURATION<sp/>|=<sp/>(uint32_t)ETH_MAC_CONFIGURATION_TE_Msk;</highlight></codeline>
<codeline lineno="1402"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"></highlight></codeline>
<codeline lineno="1414"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___e_t_h___m_a_c_1ga5f60f772c4d46b7a5cec26b1a5ebeea9" kindref="member">XMC_ETH_MAC_DisableTx</ref>(<ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eth_mac)</highlight></codeline>
<codeline lineno="1415"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/>eth_mac-&gt;<ref refid="struct_x_m_c___e_t_h___m_a_c__t_1a7febd80638cbe7497e478e50cb3dada0" kindref="member">regs</ref>-&gt;MAC_CONFIGURATION<sp/>&amp;=<sp/>(uint32_t)~ETH_MAC_CONFIGURATION_TE_Msk;</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/>eth_mac-&gt;<ref refid="struct_x_m_c___e_t_h___m_a_c__t_1a7febd80638cbe7497e478e50cb3dada0" kindref="member">regs</ref>-&gt;OPERATION_MODE<sp/>&amp;=<sp/>(uint32_t)~ETH_OPERATION_MODE_ST_Msk;</highlight></codeline>
<codeline lineno="1418"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"></highlight></codeline>
<codeline lineno="1430"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___e_t_h___m_a_c_1gaa340c1c166361b7158602510f52d1778" kindref="member">XMC_ETH_MAC_FlushTx</ref>(<ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eth_mac);</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"></highlight></codeline>
<codeline lineno="1442"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___e_t_h___m_a_c_1ga741a9614dcc93784a6b3eb0fd3767e96" kindref="member">XMC_ETH_MAC_FlushRx</ref>(<ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eth_mac);</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"></highlight></codeline>
<codeline lineno="1457"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___e_t_h___m_a_c_1gacd261187b2ef4f417aad5dc19f0da4f0" kindref="member">XMC_ETH_MAC_ResumeTx</ref>(<ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eth_mac)</highlight></codeline>
<codeline lineno="1458"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/>eth_mac-&gt;<ref refid="struct_x_m_c___e_t_h___m_a_c__t_1a7febd80638cbe7497e478e50cb3dada0" kindref="member">regs</ref>-&gt;STATUS<sp/>=<sp/>(uint32_t)ETH_STATUS_TPS_Msk;</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/>eth_mac-&gt;<ref refid="struct_x_m_c___e_t_h___m_a_c__t_1a7febd80638cbe7497e478e50cb3dada0" kindref="member">regs</ref>-&gt;TRANSMIT_POLL_DEMAND<sp/>=<sp/>0U;</highlight></codeline>
<codeline lineno="1461"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"></highlight></codeline>
<codeline lineno="1476"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___e_t_h___m_a_c_1ga8bcf5ac4a63bc09d7353fc78ebaf3ae3" kindref="member">XMC_ETH_MAC_ResumeRx</ref>(<ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eth_mac)</highlight></codeline>
<codeline lineno="1477"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/>eth_mac-&gt;<ref refid="struct_x_m_c___e_t_h___m_a_c__t_1a7febd80638cbe7497e478e50cb3dada0" kindref="member">regs</ref>-&gt;STATUS<sp/>=<sp/>(uint32_t)ETH_STATUS_RU_Msk;</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/>eth_mac-&gt;<ref refid="struct_x_m_c___e_t_h___m_a_c__t_1a7febd80638cbe7497e478e50cb3dada0" kindref="member">regs</ref>-&gt;RECEIVE_POLL_DEMAND<sp/>=<sp/>0U;</highlight></codeline>
<codeline lineno="1480"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"></highlight></codeline>
<codeline lineno="1489"><highlight class="normal">__STATIC_INLINE<sp/>uint8_t<sp/><ref refid="group___e_t_h___m_a_c_1gaf899118ed28c8fe448d19c362bb537cb" kindref="member">XMC_ETH_MAC_GetCurrentTxDescIndex</ref>(<ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eth_mac)</highlight></codeline>
<codeline lineno="1490"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>eth_mac-&gt;<ref refid="struct_x_m_c___e_t_h___m_a_c__t_1afe6711d9a4857506ccc25f1b7c6be7fb" kindref="member">tx_index</ref>;</highlight></codeline>
<codeline lineno="1492"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"></highlight></codeline>
<codeline lineno="1501"><highlight class="normal">__STATIC_INLINE<sp/>uint8_t<sp/><ref refid="group___e_t_h___m_a_c_1gac0033de297eed155738ffa974143587c" kindref="member">XMC_ETH_MAC_GetCurrentRxDescIndex</ref>(<ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eth_mac)</highlight></codeline>
<codeline lineno="1502"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>eth_mac-&gt;<ref refid="struct_x_m_c___e_t_h___m_a_c__t_1ac4b08f79fc99cb2c9c396b1d2be494bb" kindref="member">rx_index</ref>;</highlight></codeline>
<codeline lineno="1504"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"></highlight></codeline>
<codeline lineno="1513"><highlight class="normal">__STATIC_INLINE<sp/>uint8_t<sp/>*<ref refid="group___e_t_h___m_a_c_1ga74a2a222b9cd3a89314fe2e7a236b12d" kindref="member">XMC_ETH_MAC_GetTxBuffer</ref>(<ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eth_mac)</highlight></codeline>
<codeline lineno="1514"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(uint8_t<sp/>*)(eth_mac-&gt;<ref refid="struct_x_m_c___e_t_h___m_a_c__t_1a43510ff59f7aa55c21781f9806391d69" kindref="member">tx_desc</ref>[eth_mac-&gt;<ref refid="struct_x_m_c___e_t_h___m_a_c__t_1afe6711d9a4857506ccc25f1b7c6be7fb" kindref="member">tx_index</ref>].<ref refid="struct_x_m_c___e_t_h___m_a_c___d_m_a___d_e_s_c__t_1a457828e16cd02e6193af5a4ead1f3724" kindref="member">buffer1</ref>);</highlight></codeline>
<codeline lineno="1516"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"></highlight></codeline>
<codeline lineno="1525"><highlight class="normal">__STATIC_INLINE<sp/>uint8_t<sp/>*<ref refid="group___e_t_h___m_a_c_1ga6f2f593e431fa9e5cbee316d4216d470" kindref="member">XMC_ETH_MAC_GetTxBufferEx</ref>(<ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eth_mac,<sp/>uint8_t<sp/>index)</highlight></codeline>
<codeline lineno="1526"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(uint8_t<sp/>*)(eth_mac-&gt;<ref refid="struct_x_m_c___e_t_h___m_a_c__t_1a43510ff59f7aa55c21781f9806391d69" kindref="member">tx_desc</ref>[index].<ref refid="struct_x_m_c___e_t_h___m_a_c___d_m_a___d_e_s_c__t_1a457828e16cd02e6193af5a4ead1f3724" kindref="member">buffer1</ref>);</highlight></codeline>
<codeline lineno="1528"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"></highlight></codeline>
<codeline lineno="1538"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___e_t_h___m_a_c_1ga3c888de4d20202f4750338b7a4449194" kindref="member">XMC_ETH_MAC_SetTxBuffer</ref>(<ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eth_mac,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>address)</highlight></codeline>
<codeline lineno="1539"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/>eth_mac-&gt;<ref refid="struct_x_m_c___e_t_h___m_a_c__t_1a43510ff59f7aa55c21781f9806391d69" kindref="member">tx_desc</ref>[eth_mac-&gt;<ref refid="struct_x_m_c___e_t_h___m_a_c__t_1afe6711d9a4857506ccc25f1b7c6be7fb" kindref="member">tx_index</ref>].<ref refid="struct_x_m_c___e_t_h___m_a_c___d_m_a___d_e_s_c__t_1a457828e16cd02e6193af5a4ead1f3724" kindref="member">buffer1</ref><sp/>=<sp/>(uint32_t)address;</highlight></codeline>
<codeline lineno="1541"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"></highlight></codeline>
<codeline lineno="1551"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___e_t_h___m_a_c_1gade76ed7bd93d592d1a505346bfe25e14" kindref="member">XMC_ETH_MAC_SetTxBufferEx</ref>(<ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eth_mac,<sp/>uint8_t<sp/>index,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>address)</highlight></codeline>
<codeline lineno="1552"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/>eth_mac-&gt;<ref refid="struct_x_m_c___e_t_h___m_a_c__t_1a43510ff59f7aa55c21781f9806391d69" kindref="member">tx_desc</ref>[index].<ref refid="struct_x_m_c___e_t_h___m_a_c___d_m_a___d_e_s_c__t_1a457828e16cd02e6193af5a4ead1f3724" kindref="member">buffer1</ref><sp/>=<sp/>(uint32_t)address;</highlight></codeline>
<codeline lineno="1554"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"></highlight></codeline>
<codeline lineno="1564"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___e_t_h___m_a_c_1gadb8165a4b25983c13e57e8695f09dbb9" kindref="member">XMC_ETH_MAC_SetRxBuffer</ref>(<ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eth_mac,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>address)</highlight></codeline>
<codeline lineno="1565"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/>eth_mac-&gt;<ref refid="struct_x_m_c___e_t_h___m_a_c__t_1af66e76bbc240b59944cc76eb7bf67c6e" kindref="member">rx_desc</ref>[eth_mac-&gt;<ref refid="struct_x_m_c___e_t_h___m_a_c__t_1ac4b08f79fc99cb2c9c396b1d2be494bb" kindref="member">rx_index</ref>].<ref refid="struct_x_m_c___e_t_h___m_a_c___d_m_a___d_e_s_c__t_1a457828e16cd02e6193af5a4ead1f3724" kindref="member">buffer1</ref><sp/>=<sp/>(uint32_t)address;</highlight></codeline>
<codeline lineno="1567"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"></highlight></codeline>
<codeline lineno="1577"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___e_t_h___m_a_c_1ga01bb905eef6b7311a1e0518a6b0c804c" kindref="member">XMC_ETH_MAC_SetRxBufferEx</ref>(<ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eth_mac,<sp/>uint8_t<sp/>index,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>address)</highlight></codeline>
<codeline lineno="1578"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/>eth_mac-&gt;<ref refid="struct_x_m_c___e_t_h___m_a_c__t_1af66e76bbc240b59944cc76eb7bf67c6e" kindref="member">rx_desc</ref>[index].<ref refid="struct_x_m_c___e_t_h___m_a_c___d_m_a___d_e_s_c__t_1a457828e16cd02e6193af5a4ead1f3724" kindref="member">buffer1</ref><sp/>=<sp/>(uint32_t)address;</highlight></codeline>
<codeline lineno="1580"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"></highlight></codeline>
<codeline lineno="1589"><highlight class="normal">__STATIC_INLINE<sp/>uint8_t<sp/>*<ref refid="group___e_t_h___m_a_c_1gae3249a9cd3cf63c5edb206d721221a61" kindref="member">XMC_ETH_MAC_GetRxBuffer</ref>(<ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eth_mac)</highlight></codeline>
<codeline lineno="1590"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(uint8_t<sp/>*)(eth_mac-&gt;<ref refid="struct_x_m_c___e_t_h___m_a_c__t_1af66e76bbc240b59944cc76eb7bf67c6e" kindref="member">rx_desc</ref>[eth_mac-&gt;<ref refid="struct_x_m_c___e_t_h___m_a_c__t_1ac4b08f79fc99cb2c9c396b1d2be494bb" kindref="member">rx_index</ref>].<ref refid="struct_x_m_c___e_t_h___m_a_c___d_m_a___d_e_s_c__t_1a457828e16cd02e6193af5a4ead1f3724" kindref="member">buffer1</ref>);</highlight></codeline>
<codeline lineno="1592"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1593"><highlight class="normal"></highlight></codeline>
<codeline lineno="1602"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___e_t_h___m_a_c_1ga76214d7d76134b4bd33561ee987786af" kindref="member">XMC_ETH_MAC_SetTxBufferSize</ref>(<ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eth_mac,<sp/>uint32_t<sp/>size)</highlight></codeline>
<codeline lineno="1603"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/>eth_mac-&gt;<ref refid="struct_x_m_c___e_t_h___m_a_c__t_1a43510ff59f7aa55c21781f9806391d69" kindref="member">tx_desc</ref>[eth_mac-&gt;<ref refid="struct_x_m_c___e_t_h___m_a_c__t_1afe6711d9a4857506ccc25f1b7c6be7fb" kindref="member">tx_index</ref>].<ref refid="struct_x_m_c___e_t_h___m_a_c___d_m_a___d_e_s_c__t_1aa22e7675f77b1f89a273f53b2707fc8b" kindref="member">length</ref><sp/>=<sp/>size;</highlight></codeline>
<codeline lineno="1605"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1606"><highlight class="normal"></highlight></codeline>
<codeline lineno="1615"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___e_t_h___m_a_c_1gaf2565c09976ab6cab18becde3202bbdc" kindref="member">XMC_ETH_MAC_SetTxBufferSizeEx</ref>(<ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eth_mac,<sp/>uint8_t<sp/>index,<sp/>uint32_t<sp/>size)</highlight></codeline>
<codeline lineno="1616"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/>eth_mac-&gt;<ref refid="struct_x_m_c___e_t_h___m_a_c__t_1a43510ff59f7aa55c21781f9806391d69" kindref="member">tx_desc</ref>[index].<ref refid="struct_x_m_c___e_t_h___m_a_c___d_m_a___d_e_s_c__t_1aa22e7675f77b1f89a273f53b2707fc8b" kindref="member">length</ref><sp/>=<sp/>size;</highlight></codeline>
<codeline lineno="1618"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"></highlight></codeline>
<codeline lineno="1632"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___e_t_h___m_a_c_1ga9d20cc2ca39f6db432a04afc548af458" kindref="member">XMC_ETH_MAC_EnablePowerManagmentEvent</ref>(<ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eth_mac,<sp/>uint32_t<sp/>event)</highlight></codeline>
<codeline lineno="1633"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/>eth_mac-&gt;<ref refid="struct_x_m_c___e_t_h___m_a_c__t_1a7febd80638cbe7497e478e50cb3dada0" kindref="member">regs</ref>-&gt;PMT_CONTROL_STATUS<sp/>|=<sp/>(uint32_t)event;</highlight></codeline>
<codeline lineno="1635"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1636"><highlight class="normal"></highlight></codeline>
<codeline lineno="1649"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___e_t_h___m_a_c_1ga32cdc1f702972d463518ede56b9b676e" kindref="member">XMC_ETH_MAC_DisablePowerManagmentEvent</ref>(<ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eth_mac,<sp/>uint32_t<sp/>event)</highlight></codeline>
<codeline lineno="1650"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1651"><highlight class="normal"><sp/><sp/>eth_mac-&gt;<ref refid="struct_x_m_c___e_t_h___m_a_c__t_1a7febd80638cbe7497e478e50cb3dada0" kindref="member">regs</ref>-&gt;PMT_CONTROL_STATUS<sp/>&amp;=<sp/>~(uint32_t)event;</highlight></codeline>
<codeline lineno="1652"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1653"><highlight class="normal"></highlight></codeline>
<codeline lineno="1665"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___e_t_h___m_a_c_1ga6fc34fd7381e818aff7d32cc8708c904" kindref="member">XMC_ETH_MAC_SetWakeUpFrameFilter</ref>(<ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eth_mac,</highlight></codeline>
<codeline lineno="1666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>(*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>filter)[<ref refid="group___e_t_h___m_a_c_1gac623bf2418a47b06c032e6ab26494db1" kindref="member">XMC_ETH_WAKEUP_REGISTER_LENGTH</ref>]);</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"></highlight></codeline>
<codeline lineno="1678"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group___e_t_h___m_a_c_1ga5fbd156a2c4f275e9c2edd633421fc07" kindref="member">XMC_ETH_MAC_IsMagicPacketReceived</ref>(<ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eth_mac)</highlight></codeline>
<codeline lineno="1679"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1680"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">)(eth_mac-&gt;<ref refid="struct_x_m_c___e_t_h___m_a_c__t_1a7febd80638cbe7497e478e50cb3dada0" kindref="member">regs</ref>-&gt;PMT_CONTROL_STATUS<sp/>&amp;<sp/>(uint32_t)ETH_PMT_CONTROL_STATUS_MGKPRCVD_Msk);</highlight></codeline>
<codeline lineno="1681"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1682"><highlight class="normal"></highlight></codeline>
<codeline lineno="1693"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group___e_t_h___m_a_c_1ga67f9238799a85f398c5b218dd9c20442" kindref="member">XMC_ETH_MAC_IsWakeupFrameReceived</ref>(<ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eth_mac)</highlight></codeline>
<codeline lineno="1694"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">)(eth_mac-&gt;<ref refid="struct_x_m_c___e_t_h___m_a_c__t_1a7febd80638cbe7497e478e50cb3dada0" kindref="member">regs</ref>-&gt;PMT_CONTROL_STATUS<sp/>&amp;<sp/>(uint32_t)ETH_PMT_CONTROL_STATUS_RWKPRCVD_Msk);</highlight></codeline>
<codeline lineno="1696"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1697"><highlight class="normal"></highlight></codeline>
<codeline lineno="1708"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___e_t_h___m_a_c_1ga13799d3f6492fd17626093c05949b060" kindref="member">XMC_ETH_MAC_EnablePowerDownMode</ref>(<ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eth_mac)</highlight></codeline>
<codeline lineno="1709"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1710"><highlight class="normal"><sp/><sp/>eth_mac-&gt;<ref refid="struct_x_m_c___e_t_h___m_a_c__t_1a7febd80638cbe7497e478e50cb3dada0" kindref="member">regs</ref>-&gt;PMT_CONTROL_STATUS<sp/>|=<sp/>(uint32_t)ETH_PMT_CONTROL_STATUS_PWRDWN_Msk;</highlight></codeline>
<codeline lineno="1711"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1712"><highlight class="normal"></highlight></codeline>
<codeline lineno="1723"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___e_t_h___m_a_c_1ga5c435a4b215f6a01e16aa10e217a5c3e" kindref="member">XMC_ETH_MAC_DisablePowerDownMode</ref>(<ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eth_mac)</highlight></codeline>
<codeline lineno="1724"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1725"><highlight class="normal"><sp/><sp/>eth_mac-&gt;<ref refid="struct_x_m_c___e_t_h___m_a_c__t_1a7febd80638cbe7497e478e50cb3dada0" kindref="member">regs</ref>-&gt;PMT_CONTROL_STATUS<sp/>&amp;=<sp/>~(uint32_t)ETH_PMT_CONTROL_STATUS_PWRDWN_Msk;</highlight></codeline>
<codeline lineno="1726"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1727"><highlight class="normal"></highlight></codeline>
<codeline lineno="1739"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___e_t_h___m_a_c_1ga102b426c338d738545e50e6e4b1ad1cc" kindref="member">XMC_ETH_MAC_SetVLANTag</ref>(<ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eth_mac,<sp/>uint32_t<sp/>tag);</highlight></codeline>
<codeline lineno="1740"><highlight class="normal"></highlight></codeline>
<codeline lineno="1752"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___e_t_h___m_a_c_1ga1d3e8f2f077e4c24188a3220575e3c73" kindref="member">XMC_ETH_MAC_InitPTP</ref>(<ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eth_mac,<sp/>uint32_t<sp/>config);</highlight></codeline>
<codeline lineno="1753"><highlight class="normal"></highlight></codeline>
<codeline lineno="1766"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___e_t_h___m_a_c_1ga263a0dce4446d49641497a8c91d9462b" kindref="member">XMC_ETH_MAC_InitPTPEx</ref>(<ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eth_mac,<sp/>uint32_t<sp/>config,<sp/><ref refid="struct_x_m_c___e_t_h___m_a_c___t_i_m_e__t" kindref="compound">XMC_ETH_MAC_TIME_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>time);</highlight></codeline>
<codeline lineno="1767"><highlight class="normal"></highlight></codeline>
<codeline lineno="1780"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___e_t_h___m_a_c_1ga96e0ce10f2cec680e8dffe9cee6a9c2e" kindref="member">XMC_ETH_MAC_GetPTPTime</ref>(<ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eth_mac,<sp/><ref refid="struct_x_m_c___e_t_h___m_a_c___t_i_m_e__t" kindref="compound">XMC_ETH_MAC_TIME_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>time);</highlight></codeline>
<codeline lineno="1781"><highlight class="normal"></highlight></codeline>
<codeline lineno="1793"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___e_t_h___m_a_c_1ga3c880ede4aabe77eeed225d79fb4de79" kindref="member">XMC_ETH_MAC_SetPTPTime</ref>(<ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eth_mac,<sp/><ref refid="struct_x_m_c___e_t_h___m_a_c___t_i_m_e__t" kindref="compound">XMC_ETH_MAC_TIME_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>time);</highlight></codeline>
<codeline lineno="1794"><highlight class="normal"></highlight></codeline>
<codeline lineno="1807"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___e_t_h___m_a_c_1gaaccaa54e8c0a0051ff5e8dafc4eef9fa" kindref="member">XMC_ETH_MAC_UpdatePTPTime</ref>(<ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eth_mac,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_x_m_c___e_t_h___m_a_c___t_i_m_e__t" kindref="compound">XMC_ETH_MAC_TIME_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>time);</highlight></codeline>
<codeline lineno="1808"><highlight class="normal"></highlight></codeline>
<codeline lineno="1821"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___e_t_h___m_a_c_1ga579dee94a8ae0170afd420fe502fea45" kindref="member">XMC_ETH_MAC_SetPTPAlarm</ref>(<ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eth_mac,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_x_m_c___e_t_h___m_a_c___t_i_m_e__t" kindref="compound">XMC_ETH_MAC_TIME_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>time);</highlight></codeline>
<codeline lineno="1822"><highlight class="normal"></highlight></codeline>
<codeline lineno="1834"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___e_t_h___m_a_c_1gafb973e313b2b21b7ccce3e50549c0e69" kindref="member">XMC_ETH_MAC_EnablePTPAlarm</ref>(<ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eth_mac)</highlight></codeline>
<codeline lineno="1835"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1836"><highlight class="normal"><sp/><sp/>eth_mac-&gt;<ref refid="struct_x_m_c___e_t_h___m_a_c__t_1a7febd80638cbe7497e478e50cb3dada0" kindref="member">regs</ref>-&gt;TIMESTAMP_CONTROL<sp/>|=<sp/>(uint32_t)ETH_TIMESTAMP_CONTROL_TSTRIG_Msk;</highlight></codeline>
<codeline lineno="1837"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1838"><highlight class="normal"></highlight></codeline>
<codeline lineno="1850"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___e_t_h___m_a_c_1ga241ed58c3dc7935434a029cb3e7c7530" kindref="member">XMC_ETH_MAC_DisablePTPAlarm</ref>(<ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eth_mac)</highlight></codeline>
<codeline lineno="1851"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1852"><highlight class="normal"><sp/><sp/>eth_mac-&gt;<ref refid="struct_x_m_c___e_t_h___m_a_c__t_1a7febd80638cbe7497e478e50cb3dada0" kindref="member">regs</ref>-&gt;TIMESTAMP_CONTROL<sp/>&amp;=<sp/>(uint32_t)~ETH_TIMESTAMP_CONTROL_TSTRIG_Msk;</highlight></codeline>
<codeline lineno="1853"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1854"><highlight class="normal"></highlight></codeline>
<codeline lineno="1855"><highlight class="normal"></highlight></codeline>
<codeline lineno="1867"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___e_t_h___m_a_c_1gabc072dcfcd304504f072aa477a9bc128" kindref="member">XMC_ETH_MAC_UpdateAddend</ref>(<ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eth_mac,<sp/>uint32_t<sp/>addend);</highlight></codeline>
<codeline lineno="1868"><highlight class="normal"></highlight></codeline>
<codeline lineno="1881"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___e_t_h___m_a_c_1ga79c93ea281938e2a4ff4d6e1ee037057" kindref="member">XMC_ETH_MAC_AdjustPTPClock</ref>(<ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eth_mac,<sp/>uint32_t<sp/>correction);</highlight></codeline>
<codeline lineno="1882"><highlight class="normal"></highlight></codeline>
<codeline lineno="1895"><highlight class="normal">uint32_t<sp/><ref refid="group___e_t_h___m_a_c_1ga2c4cf235c6a7805c72085d4e997b8324" kindref="member">XMC_ETH_MAC_GetPTPStatus</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eth_mac);</highlight></codeline>
<codeline lineno="1896"><highlight class="normal"></highlight></codeline>
<codeline lineno="1908"><highlight class="normal"><ref refid="group___e_t_h___m_a_c_1ga8a60bbbfc7a839fd1a60d4ed0079a256" kindref="member">XMC_ETH_MAC_STATUS_t</ref><sp/><ref refid="group___e_t_h___m_a_c_1gaee26579fc23646c827a3889bc1a2840c" kindref="member">XMC_ETH_MAC_GetRxTimeStamp</ref>(<ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eth_mac,<sp/><ref refid="struct_x_m_c___e_t_h___m_a_c___t_i_m_e__t" kindref="compound">XMC_ETH_MAC_TIME_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>time);</highlight></codeline>
<codeline lineno="1909"><highlight class="normal"></highlight></codeline>
<codeline lineno="1921"><highlight class="normal"><ref refid="group___e_t_h___m_a_c_1ga8a60bbbfc7a839fd1a60d4ed0079a256" kindref="member">XMC_ETH_MAC_STATUS_t</ref><sp/><ref refid="group___e_t_h___m_a_c_1gab4e58ab6315317cfc82f0fb4bf0c9d27" kindref="member">XMC_ETH_MAC_GetTxTimeStamp</ref>(<ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eth_mac,<sp/><ref refid="struct_x_m_c___e_t_h___m_a_c___t_i_m_e__t" kindref="compound">XMC_ETH_MAC_TIME_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>time);</highlight></codeline>
<codeline lineno="1922"><highlight class="normal"></highlight></codeline>
<codeline lineno="1934"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___e_t_h___m_a_c_1gaf326521d9824002d129045fe2e018bfe" kindref="member">XMC_ETH_MAC_EnableEvent</ref>(<ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eth_mac,<sp/>uint32_t<sp/>event);</highlight></codeline>
<codeline lineno="1935"><highlight class="normal"></highlight></codeline>
<codeline lineno="1947"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___e_t_h___m_a_c_1ga76d3458fbbe31b9d90c92d887b789fcb" kindref="member">XMC_ETH_MAC_DisableEvent</ref>(<ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eth_mac,<sp/>uint32_t<sp/>event);</highlight></codeline>
<codeline lineno="1948"><highlight class="normal"></highlight></codeline>
<codeline lineno="1960"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___e_t_h___m_a_c_1gaa2c00448844a2d4a54a30faec3cad79f" kindref="member">XMC_ETH_MAC_ClearEventStatus</ref>(<ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eth_mac,<sp/>uint32_t<sp/>event);</highlight></codeline>
<codeline lineno="1961"><highlight class="normal"></highlight></codeline>
<codeline lineno="1973"><highlight class="normal">uint32_t<sp/><ref refid="group___e_t_h___m_a_c_1ga460e14bb0682b885f5a6229362e43cf3" kindref="member">XMC_ETH_MAC_GetEventStatus</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_x_m_c___e_t_h___m_a_c__t" kindref="compound">XMC_ETH_MAC_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eth_mac);</highlight></codeline>
<codeline lineno="1974"><highlight class="normal"></highlight></codeline>
<codeline lineno="1975"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1976"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1977"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1978"><highlight class="normal"></highlight></codeline>
<codeline lineno="1984"><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>defined<sp/>(ETH0)<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1985"><highlight class="normal"></highlight></codeline>
<codeline lineno="1986"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>XMC_ETH_MAC_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_eth_mac.h"/>
  </compounddef>
</doxygen>
