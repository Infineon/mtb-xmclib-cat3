<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="xmc__ecat_8h" kind="file" language="C++">
    <compoundname>xmc_ecat.h</compoundname>
    <includes local="yes">xmc_common.h</includes>
    <includes local="yes">xmc_ecat_map.h</includes>
    <incdepgraph>
      <node id="42">
        <label>xmc_ecat.h</label>
        <link refid="xmc__ecat_8h"/>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>xmc_common.h</label>
      </node>
      <node id="44">
        <label>xmc_ecat_map.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="union_x_m_c___e_c_a_t___c_o_n_f_i_g__t" prot="public">XMC_ECAT_CONFIG_t</innerclass>
    <innerclass refid="struct_x_m_c___e_c_a_t___p_o_r_t___c_t_r_l__t" prot="public">XMC_ECAT_PORT_CTRL_t</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group___e_c_a_t_1ga9402d2cecbc451c5d399b8421879a868" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_ECAT_EVENT_t</name>
        <enumvalue id="group___e_c_a_t_1gga9402d2cecbc451c5d399b8421879a868a4e2aa9cfeee708fd5fab4851419cd31d" prot="public">
          <name>XMC_ECAT_EVENT_AL_CONTROL</name>
          <initializer>= ECAT_AL_EVENT_MASK_AL_CE_MASK_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Application control event mask </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___e_c_a_t_1gga9402d2cecbc451c5d399b8421879a868a41112774f0b2f4e0ffec1fcc5d5864f2" prot="public">
          <name>XMC_ECAT_EVENT_DC_LATCH</name>
          <initializer>= ECAT_AL_EVENT_MASK_DC_LE_MASK_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Distributed Clock latch event mask </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___e_c_a_t_1gga9402d2cecbc451c5d399b8421879a868a1cc677fedae413d018ce84d1f27fbe2f" prot="public">
          <name>XMC_ECAT_EVENT_DC_SYNC0</name>
          <initializer>= ECAT_AL_EVENT_MASK_ST_S0_MASK_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>State of distributed clock sync-0 event mask </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___e_c_a_t_1gga9402d2cecbc451c5d399b8421879a868ac18135277393fd5800a1185c7f7f93a2" prot="public">
          <name>XMC_ECAT_EVENT_DC_SYNC1</name>
          <initializer>= ECAT_AL_EVENT_MASK_ST_S1_MASK_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>State of distributed clock sync-1 event mask </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___e_c_a_t_1gga9402d2cecbc451c5d399b8421879a868af2b5e847c4fc1f7dbfe6b27f5b589cdd" prot="public">
          <name>XMC_ECAT_EVENT_SM_ACTIVATION_REGISTER</name>
          <initializer>= ECAT_AL_EVENT_MASK_SM_A_MASK_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SyncManager activation register mask </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___e_c_a_t_1gga9402d2cecbc451c5d399b8421879a868a7274f70c022eb0ccb8756e0ee54e57fa" prot="public">
          <name>XMC_ECAT_EVENT_EEPROM</name>
          <initializer>= ECAT_AL_EVENT_MASK_EEP_E_MASK_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>EEPROM Emulation event mask </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___e_c_a_t_1gga9402d2cecbc451c5d399b8421879a868a13d25e8fc95c101d4ad26d3e3abcfdd2" prot="public">
          <name>XMC_ECAT_EVENT_WATCHDOG</name>
          <initializer>= ECAT_AL_EVENT_MASK_WP_D_MASK_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>WATCHDOG process data event mask </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___e_c_a_t_1gga9402d2cecbc451c5d399b8421879a868a03893697692f86b657a6eb1334865dc9" prot="public">
          <name>XMC_ECAT_EVENT_SM0</name>
          <initializer>= ECAT_AL_EVENT_MASK_SMI_0_MASK_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Sync Manager 0 event mask </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___e_c_a_t_1gga9402d2cecbc451c5d399b8421879a868a2bf3f483b7e670934b03bbe8805988e0" prot="public">
          <name>XMC_ECAT_EVENT_SM1</name>
          <initializer>= ECAT_AL_EVENT_MASK_SMI_1_MASK_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Sync Manager 1 event mask </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___e_c_a_t_1gga9402d2cecbc451c5d399b8421879a868aa12ac74a4523870880fa6a831b6d7793" prot="public">
          <name>XMC_ECAT_EVENT_SM2</name>
          <initializer>= ECAT_AL_EVENT_MASK_SMI_2_MASK_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Sync Manager 2 event mask </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___e_c_a_t_1gga9402d2cecbc451c5d399b8421879a868a7c4e7da792fcff011b030de6ac1bdaf9" prot="public">
          <name>XMC_ECAT_EVENT_SM3</name>
          <initializer>= ECAT_AL_EVENT_MASK_SMI_3_MASK_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Sync Manager 3 event mask </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___e_c_a_t_1gga9402d2cecbc451c5d399b8421879a868afb6edbdff957514248142646d1139d22" prot="public">
          <name>XMC_ECAT_EVENT_SM4</name>
          <initializer>= ECAT_AL_EVENT_MASK_SMI_4_MASK_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Sync Manager 4 event mask </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___e_c_a_t_1gga9402d2cecbc451c5d399b8421879a868a23dcec8ab1292e89328c76b3aa9d9e96" prot="public">
          <name>XMC_ECAT_EVENT_SM5</name>
          <initializer>= ECAT_AL_EVENT_MASK_SMI_5_MASK_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Sync Manager 5 event mask </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___e_c_a_t_1gga9402d2cecbc451c5d399b8421879a868a2c9c905fd4d55a8680ba080fd8ffe8db" prot="public">
          <name>XMC_ECAT_EVENT_SM6</name>
          <initializer>= ECAT_AL_EVENT_MASK_SMI_6_MASK_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Sync Manager 6 event mask </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___e_c_a_t_1gga9402d2cecbc451c5d399b8421879a868a847c7259b2598f22e2d81b17b0204ab0" prot="public">
          <name>XMC_ECAT_EVENT_SM7</name>
          <initializer>= ECAT_AL_EVENT_MASK_SMI_7_MASK_Msk</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Sync Manager 7 event mask </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>EtherCAT event enumeration types </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ecat.h" line="108" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ecat.h" bodystart="107" bodyend="124"/>
      </memberdef>
      <memberdef kind="enum" id="group___e_c_a_t_1gab1b5537677cae18a8801a3441b49ee62" prot="public" static="no" strong="no">
        <type></type>
        <name>XMC_ECAT_STATUS_t</name>
        <enumvalue id="group___e_c_a_t_1ggab1b5537677cae18a8801a3441b49ee62a5bc826d8b68c209f80f0a7ea3e665933" prot="public">
          <name>XMC_ECAT_STATUS_OK</name>
          <initializer>= 0U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Driver accepted application request </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___e_c_a_t_1ggab1b5537677cae18a8801a3441b49ee62a4b35955b9ab4d3bbb97a4f29d00ac0cf" prot="public">
          <name>XMC_ECAT_STATUS_BUSY</name>
          <initializer>= 1U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Driver is busy and cannot handle request </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___e_c_a_t_1ggab1b5537677cae18a8801a3441b49ee62ac77d6331741ebb38bfed9c9f12b242d4" prot="public">
          <name>XMC_ECAT_STATUS_ERROR</name>
          <initializer>= 2U</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Driver could not fulfil application request </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>ECAT status return values </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ecat.h" line="98" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ecat.h" bodystart="97" bodyend="102"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group___e_c_a_t_1ga81b5c1eaffe2c84cf73ce7ebac0544d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_ECAT_Disable</definition>
        <argsstring>(void)</argsstring>
        <name>XMC_ECAT_Disable</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Disable the EtherCAT peripheral <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>The function asserts the peripheral reset. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ecat.h" line="290" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___e_c_a_t_1ga3e498babbb59882312137766d2b2e70f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_ECAT_DisableEvent</definition>
        <argsstring>(uint32_t event)</argsstring>
        <name>XMC_ECAT_DisableEvent</name>
        <param>
          <type>uint32_t</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>Single or logically OR&apos;d events specified in the enum type @refXMC_ECAT_EVENT_t </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Disable an ECAT event(s) <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>The function can be used to disable ECAT event(s). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ecat.h" line="363" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___e_c_a_t_1ga20fbe77b86c01c3e311fd7ed4be50aa8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_ECAT_DisableSyncManChannel</definition>
        <argsstring>(const uint8_t channel)</argsstring>
        <name>XMC_ECAT_DisableSyncManChannel</name>
        <param>
          <type>const uint8_t</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>SyncManager channel number. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Disables selected SyncManager channel <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>Sets bit 0 of the corresponding 0x807 register. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ecat.h" line="389" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___e_c_a_t_1gaa35b5d6b5f3acbcc087884a05363c3ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_ECAT_Enable</definition>
        <argsstring>(void)</argsstring>
        <name>XMC_ECAT_Enable</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Enable the EtherCAT peripheral <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>The function de-asserts the peripheral reset. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ecat.h" line="278" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___e_c_a_t_1ga290147da4fafee983cb87bd89e250422" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_ECAT_EnableEvent</definition>
        <argsstring>(uint32_t event)</argsstring>
        <name>XMC_ECAT_EnableEvent</name>
        <param>
          <type>uint32_t</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>Single or logically OR&apos;d events specified in the enum type @refXMC_ECAT_EVENT_t </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Enable ECAT event(s) <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>The function can be used to enable ECAT event(s). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ecat.h" line="351" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___e_c_a_t_1ga825f2662f72b0c45f324632c7b678f2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_ECAT_EnableSyncManChannel</definition>
        <argsstring>(const uint8_t channel)</argsstring>
        <name>XMC_ECAT_EnableSyncManChannel</name>
        <param>
          <type>const uint8_t</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>SyncManager channel number. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Enables selected SyncManager channel <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>Resets bit 0 of the corresponding 0x807 register. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ecat.h" line="401" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___e_c_a_t_1ga3f5f43ca67aec259a94d7fe58ae9777c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t XMC_ECAT_GetALEventMask</definition>
        <argsstring>(void)</argsstring>
        <name>XMC_ECAT_GetALEventMask</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint16_t Content of register 0x220-0x221</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Get content of AL event register <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>Get the first two bytes of the AL Event register (0x220-0x221). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ecat.h" line="428" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ecat.h" bodystart="428" bodyend="431"/>
      </memberdef>
      <memberdef kind="function" id="group___e_c_a_t_1gaab9fab89dd35a17739178337fc8693e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t XMC_ECAT_GetALEventRegister</definition>
        <argsstring>(void)</argsstring>
        <name>XMC_ECAT_GetALEventRegister</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint16_t Content of register 0x220-0x221</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Get content of AL event register <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>Get the first two bytes of the AL Event register (0x220-0x221). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ecat.h" line="413" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ecat.h" bodystart="413" bodyend="416"/>
      </memberdef>
      <memberdef kind="function" id="group___e_c_a_t_1ga0b0335de55c30755747fdf449645e1a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t XMC_ECAT_GetEventStatus</definition>
        <argsstring>(void)</argsstring>
        <name>XMC_ECAT_GetEventStatus</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint32_t Event status</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Get event status <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>The function returns the ECAT status and interrupt status as a single word. The user can then check the status of the events by using an appropriate mask. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ecat.h" line="376" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___e_c_a_t_1gafe24f6be2d2729750e60e87c27a71381" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_ECAT_Init</definition>
        <argsstring>(XMC_ECAT_CONFIG_t *const config)</argsstring>
        <name>XMC_ECAT_Init</name>
        <param>
          <type><ref refid="union_x_m_c___e_c_a_t___c_o_n_f_i_g__t" kindref="compound">XMC_ECAT_CONFIG_t</ref> *const</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="union_x_m_c___e_c_a_t___c_o_n_f_i_g__t" kindref="compound">XMC_ECAT_CONFIG_t</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>XMC_ECAT_STATUS_t ECAT Initialization status</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Initialize the Ethernet MAC peripheral <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>The function sets the link speed, applies the duplex mode, sets auto-negotiation and loop-back settings. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ecat.h" line="266" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___e_c_a_t_1ga1c591d9ba2c9016f328ad79bca9ecbd2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___e_c_a_t_1gab1b5537677cae18a8801a3441b49ee62" kindref="member">XMC_ECAT_STATUS_t</ref></type>
        <definition>XMC_ECAT_STATUS_t XMC_ECAT_ReadPhy</definition>
        <argsstring>(uint8_t phy_addr, uint8_t reg_addr, uint16_t *data)</argsstring>
        <name>XMC_ECAT_ReadPhy</name>
        <param>
          <type>uint8_t</type>
          <declname>phy_addr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>reg_addr</declname>
        </param>
        <param>
          <type>uint16_t *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>phy_addr</parametername>
</parameternamelist>
<parameterdescription>
<para>PHY address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>reg_addr</parametername>
</parameternamelist>
<parameterdescription>
<para>Register address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The destination to which the read data needs to be copied to.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>XMC_ECAT_STATUS_t EtherCAT Read PHY API return status</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Read a PHY register <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>The function reads a PHY register. It essentially polls busy bit during max PHY_TIMEOUT time and reads the information into &apos;data&apos; when not busy. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ecat.h" line="306" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___e_c_a_t_1ga172c4c1cabfd29c981fed161ca4d366f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_ECAT_SetALEventMask</definition>
        <argsstring>(uint16_t intMask)</argsstring>
        <name>XMC_ECAT_SetALEventMask</name>
        <param>
          <type>uint16_t</type>
          <declname>intMask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>intMask</parametername>
</parameternamelist>
<parameterdescription>
<para>Interrupt mask (disabled interrupt shall be zero) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Sets application event mask register <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>Performs a logical OR with the AL Event Mask register (0x0204 : 0x0205). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ecat.h" line="443" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ecat.h" bodystart="443" bodyend="446"/>
      </memberdef>
      <memberdef kind="function" id="group___e_c_a_t_1ga45a5a867acb63735113c118bcc1a4d51" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XMC_ECAT_SetPortControl</definition>
        <argsstring>(const XMC_ECAT_PORT_CTRL_t port_ctrl)</argsstring>
        <name>XMC_ECAT_SetPortControl</name>
        <param>
          <type>const <ref refid="struct_x_m_c___e_c_a_t___p_o_r_t___c_t_r_l__t" kindref="compound">XMC_ECAT_PORT_CTRL_t</ref></type>
          <declname>port_ctrl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>port_ctrl</parametername>
</parameternamelist>
<parameterdescription>
<para>Port control configuration </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>None</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Set port control configuration <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>The function sets the port control by writing the configuration into the ECAT CON register. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ecat.h" line="334" column="1" bodyfile="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ecat.h" bodystart="334" bodyend="339"/>
      </memberdef>
      <memberdef kind="function" id="group___e_c_a_t_1ga7d058669f327b10b3725f3c09c30840f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___e_c_a_t_1gab1b5537677cae18a8801a3441b49ee62" kindref="member">XMC_ECAT_STATUS_t</ref></type>
        <definition>XMC_ECAT_STATUS_t XMC_ECAT_WritePhy</definition>
        <argsstring>(uint8_t phy_addr, uint8_t reg_addr, uint16_t data)</argsstring>
        <name>XMC_ECAT_WritePhy</name>
        <param>
          <type>uint8_t</type>
          <declname>phy_addr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>reg_addr</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>phy_addr</parametername>
</parameternamelist>
<parameterdescription>
<para>PHY address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>reg_addr</parametername>
</parameternamelist>
<parameterdescription>
<para>Register address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The data to write </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>XMC_ECAT_STATUS_t EtherCAT Write PHY API return status</para>
</simplesect>
<simplesect kind="par"><title>Description: </title><para>Write a PHY register <linebreak/>
</para>
</simplesect>
<simplesect kind="par"><title></title><para>The function reads a PHY register. It essentially writes the data and polls the busy bit until it is no longer busy. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ecat.h" line="321" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="date"><para>2015-12-27 </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="73"><highlight class="preprocessor">#ifndef<sp/>XMC_ECAT_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>XMC_ECAT_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="comment">/**********************************************************************************************************************</highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/>*<sp/>HEADER<sp/>FILES</highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/>*********************************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xmc_common.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>(ECAT0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xmc_ecat_map.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="comment">/**********************************************************************************************************************</highlight></codeline>
<codeline lineno="87"><highlight class="comment"><sp/>*<sp/>MACROS</highlight></codeline>
<codeline lineno="88"><highlight class="comment"><sp/>*********************************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="comment">/**********************************************************************************************************************</highlight></codeline>
<codeline lineno="91"><highlight class="comment"><sp/>*<sp/>ENUMS</highlight></codeline>
<codeline lineno="92"><highlight class="comment"><sp/>*********************************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>XMC_ECAT_STATUS</highlight></codeline>
<codeline lineno="98"><highlight class="normal">{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><ref refid="group___e_c_a_t_1ggab1b5537677cae18a8801a3441b49ee62a5bc826d8b68c209f80f0a7ea3e665933" kindref="member">XMC_ECAT_STATUS_OK</ref><sp/><sp/><sp/><sp/>=<sp/>0U,<sp/></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><ref refid="group___e_c_a_t_1ggab1b5537677cae18a8801a3441b49ee62a4b35955b9ab4d3bbb97a4f29d00ac0cf" kindref="member">XMC_ECAT_STATUS_BUSY</ref><sp/><sp/>=<sp/>1U,<sp/></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><ref refid="group___e_c_a_t_1ggab1b5537677cae18a8801a3441b49ee62ac77d6331741ebb38bfed9c9f12b242d4" kindref="member">XMC_ECAT_STATUS_ERROR</ref><sp/>=<sp/>2U<sp/><sp/></highlight></codeline>
<codeline lineno="102"><highlight class="normal">}<sp/><ref refid="group___e_c_a_t_1gab1b5537677cae18a8801a3441b49ee62" kindref="member">XMC_ECAT_STATUS_t</ref>;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>XMC_ECAT_EVENT</highlight></codeline>
<codeline lineno="108"><highlight class="normal">{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><ref refid="group___e_c_a_t_1gga9402d2cecbc451c5d399b8421879a868a4e2aa9cfeee708fd5fab4851419cd31d" kindref="member">XMC_ECAT_EVENT_AL_CONTROL</ref><sp/>=<sp/>ECAT_AL_EVENT_MASK_AL_CE_MASK_Msk,<sp/></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><ref refid="group___e_c_a_t_1gga9402d2cecbc451c5d399b8421879a868a41112774f0b2f4e0ffec1fcc5d5864f2" kindref="member">XMC_ECAT_EVENT_DC_LATCH</ref><sp/>=<sp/>ECAT_AL_EVENT_MASK_DC_LE_MASK_Msk,<sp/><sp/></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><ref refid="group___e_c_a_t_1gga9402d2cecbc451c5d399b8421879a868a1cc677fedae413d018ce84d1f27fbe2f" kindref="member">XMC_ECAT_EVENT_DC_SYNC0</ref><sp/>=<sp/>ECAT_AL_EVENT_MASK_ST_S0_MASK_Msk,<sp/></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><ref refid="group___e_c_a_t_1gga9402d2cecbc451c5d399b8421879a868ac18135277393fd5800a1185c7f7f93a2" kindref="member">XMC_ECAT_EVENT_DC_SYNC1</ref><sp/>=<sp/>ECAT_AL_EVENT_MASK_ST_S1_MASK_Msk,<sp/></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><ref refid="group___e_c_a_t_1gga9402d2cecbc451c5d399b8421879a868af2b5e847c4fc1f7dbfe6b27f5b589cdd" kindref="member">XMC_ECAT_EVENT_SM_ACTIVATION_REGISTER</ref><sp/>=<sp/>ECAT_AL_EVENT_MASK_SM_A_MASK_Msk,<sp/></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><ref refid="group___e_c_a_t_1gga9402d2cecbc451c5d399b8421879a868a7274f70c022eb0ccb8756e0ee54e57fa" kindref="member">XMC_ECAT_EVENT_EEPROM</ref><sp/>=<sp/>ECAT_AL_EVENT_MASK_EEP_E_MASK_Msk,<sp/></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><ref refid="group___e_c_a_t_1gga9402d2cecbc451c5d399b8421879a868a13d25e8fc95c101d4ad26d3e3abcfdd2" kindref="member">XMC_ECAT_EVENT_WATCHDOG</ref><sp/>=<sp/>ECAT_AL_EVENT_MASK_WP_D_MASK_Msk,<sp/></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><ref refid="group___e_c_a_t_1gga9402d2cecbc451c5d399b8421879a868a03893697692f86b657a6eb1334865dc9" kindref="member">XMC_ECAT_EVENT_SM0</ref><sp/>=<sp/>ECAT_AL_EVENT_MASK_SMI_0_MASK_Msk,<sp/></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><ref refid="group___e_c_a_t_1gga9402d2cecbc451c5d399b8421879a868a2bf3f483b7e670934b03bbe8805988e0" kindref="member">XMC_ECAT_EVENT_SM1</ref><sp/>=<sp/>ECAT_AL_EVENT_MASK_SMI_1_MASK_Msk,<sp/></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><ref refid="group___e_c_a_t_1gga9402d2cecbc451c5d399b8421879a868aa12ac74a4523870880fa6a831b6d7793" kindref="member">XMC_ECAT_EVENT_SM2</ref><sp/>=<sp/>ECAT_AL_EVENT_MASK_SMI_2_MASK_Msk,<sp/></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><ref refid="group___e_c_a_t_1gga9402d2cecbc451c5d399b8421879a868a7c4e7da792fcff011b030de6ac1bdaf9" kindref="member">XMC_ECAT_EVENT_SM3</ref><sp/>=<sp/>ECAT_AL_EVENT_MASK_SMI_3_MASK_Msk,<sp/></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><ref refid="group___e_c_a_t_1gga9402d2cecbc451c5d399b8421879a868afb6edbdff957514248142646d1139d22" kindref="member">XMC_ECAT_EVENT_SM4</ref><sp/>=<sp/>ECAT_AL_EVENT_MASK_SMI_4_MASK_Msk,<sp/></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><ref refid="group___e_c_a_t_1gga9402d2cecbc451c5d399b8421879a868a23dcec8ab1292e89328c76b3aa9d9e96" kindref="member">XMC_ECAT_EVENT_SM5</ref><sp/>=<sp/>ECAT_AL_EVENT_MASK_SMI_5_MASK_Msk,<sp/></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><ref refid="group___e_c_a_t_1gga9402d2cecbc451c5d399b8421879a868a2c9c905fd4d55a8680ba080fd8ffe8db" kindref="member">XMC_ECAT_EVENT_SM6</ref><sp/>=<sp/>ECAT_AL_EVENT_MASK_SMI_6_MASK_Msk,<sp/></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><ref refid="group___e_c_a_t_1gga9402d2cecbc451c5d399b8421879a868a847c7259b2598f22e2d81b17b0204ab0" kindref="member">XMC_ECAT_EVENT_SM7</ref><sp/>=<sp/>ECAT_AL_EVENT_MASK_SMI_7_MASK_Msk<sp/><sp/></highlight></codeline>
<codeline lineno="124"><highlight class="normal">}<sp/><ref refid="group___e_c_a_t_1ga9402d2cecbc451c5d399b8421879a868" kindref="member">XMC_ECAT_EVENT_t</ref>;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="comment">/**********************************************************************************************************************</highlight></codeline>
<codeline lineno="127"><highlight class="comment"><sp/>*<sp/>DATA<sp/>STRUCTURES</highlight></codeline>
<codeline lineno="128"><highlight class="comment"><sp/>*********************************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Anonymous<sp/>structure/union<sp/>guard<sp/>start<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>(__CC_ARM)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>push</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>anon_unions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined<sp/>(__TASKING__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>warning<sp/>586</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="141" refid="struct_x_m_c___e_c_a_t___p_o_r_t___c_t_r_l__t" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">XMC_ECAT_PORT_CTRL</highlight></codeline>
<codeline lineno="142"><highlight class="normal">{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">union</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>enable_rstreq:<sp/>1;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t:<sp/>7;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>latch_input0:<sp/>2;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t:<sp/>2;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>latch_input1:<sp/>2;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t:<sp/>2;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>phyaddr_offset:<sp/>5;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t:<sp/>1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>mdio:<sp/>2;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t:<sp/>8;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>raw;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>}<sp/>common;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">union</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>rxd0:<sp/>2;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>rxd1:<sp/>2;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>rxd2:<sp/>2;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>rxd3:<sp/>2;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>rx_err:<sp/>2;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>rx_dv:<sp/>2;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>rx_clk:<sp/>2;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t:<sp/>2;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>link:<sp/>2;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t:<sp/>10;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>tx_clk:<sp/>2;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>tx_shift:<sp/>2;<sp/></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>raw;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/>}<sp/>port0;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">union</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>rxd0:<sp/>2;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>rxd1:<sp/>2;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>rxd2:<sp/>2;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>rxd3:<sp/>2;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>rx_err:<sp/>2;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>rx_dv:<sp/>2;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>rx_clk:<sp/>2;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t:<sp/>2;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>link:<sp/>2;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t:<sp/>10;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>tx_clk:<sp/>2;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>tx_shift:<sp/>2;<sp/></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>raw;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/>}<sp/>port1;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal">}<sp/><ref refid="struct_x_m_c___e_c_a_t___p_o_r_t___c_t_r_l__t" kindref="compound">XMC_ECAT_PORT_CTRL_t</ref>;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="209" refid="union_x_m_c___e_c_a_t___c_o_n_f_i_g__t" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">XMC_ECAT_CONFIG</highlight></codeline>
<codeline lineno="210"><highlight class="normal">{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>:<sp/>8;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>:<sp/>2;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>enable_dc_sync_out<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>enable_dc_latch_in<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>enable_enhanced_link_p0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>enable_enhanced_link_p1<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>:<sp/>2;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>:<sp/>16;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>sync_pulse_length;<sp/></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>:<sp/>16;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>station_alias;<sp/></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>:<sp/>16;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>:<sp/>16;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>checksum;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/>uint32_t<sp/>dword[4];<sp/></highlight></codeline>
<codeline lineno="238"><highlight class="normal">}<sp/><ref refid="union_x_m_c___e_c_a_t___c_o_n_f_i_g__t" kindref="compound">XMC_ECAT_CONFIG_t</ref>;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Anonymous<sp/>structure/union<sp/>guard<sp/>end<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>(__CC_ARM)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>pop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined<sp/>(__TASKING__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>warning<sp/>restore</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="comment">/**********************************************************************************************************************</highlight></codeline>
<codeline lineno="248"><highlight class="comment"><sp/>*<sp/>API<sp/>PROTOTYPES</highlight></codeline>
<codeline lineno="249"><highlight class="comment"><sp/>*********************************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___e_c_a_t_1gafe24f6be2d2729750e60e87c27a71381" kindref="member">XMC_ECAT_Init</ref>(<ref refid="union_x_m_c___e_c_a_t___c_o_n_f_i_g__t" kindref="compound">XMC_ECAT_CONFIG_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>config);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___e_c_a_t_1gaa35b5d6b5f3acbcc087884a05363c3ff" kindref="member">XMC_ECAT_Enable</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___e_c_a_t_1ga81b5c1eaffe2c84cf73ce7ebac0544d0" kindref="member">XMC_ECAT_Disable</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><ref refid="group___e_c_a_t_1gab1b5537677cae18a8801a3441b49ee62" kindref="member">XMC_ECAT_STATUS_t</ref><sp/><ref refid="group___e_c_a_t_1ga1c591d9ba2c9016f328ad79bca9ecbd2" kindref="member">XMC_ECAT_ReadPhy</ref>(uint8_t<sp/>phy_addr,<sp/>uint8_t<sp/>reg_addr,<sp/>uint16_t<sp/>*data);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><ref refid="group___e_c_a_t_1gab1b5537677cae18a8801a3441b49ee62" kindref="member">XMC_ECAT_STATUS_t</ref><sp/><ref refid="group___e_c_a_t_1ga7d058669f327b10b3725f3c09c30840f" kindref="member">XMC_ECAT_WritePhy</ref>(uint8_t<sp/>phy_addr,<sp/>uint8_t<sp/>reg_addr,<sp/>uint16_t<sp/>data);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___e_c_a_t_1ga45a5a867acb63735113c118bcc1a4d51" kindref="member">XMC_ECAT_SetPortControl</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_x_m_c___e_c_a_t___p_o_r_t___c_t_r_l__t" kindref="compound">XMC_ECAT_PORT_CTRL_t</ref><sp/>port_ctrl)</highlight></codeline>
<codeline lineno="335"><highlight class="normal">{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/>ECAT0_CON-&gt;CON<sp/>=<sp/>(uint32_t)port_ctrl.common.raw;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/>ECAT0_CON-&gt;CONP0<sp/>=<sp/>(uint32_t)port_ctrl.port0.raw;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/>ECAT0_CON-&gt;CONP1<sp/>=<sp/>(uint32_t)port_ctrl.port1.raw;</highlight></codeline>
<codeline lineno="339"><highlight class="normal">}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___e_c_a_t_1ga290147da4fafee983cb87bd89e250422" kindref="member">XMC_ECAT_EnableEvent</ref>(uint32_t<sp/>event);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___e_c_a_t_1ga3e498babbb59882312137766d2b2e70f" kindref="member">XMC_ECAT_DisableEvent</ref>(uint32_t<sp/>event);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal">uint32_t<sp/><ref refid="group___e_c_a_t_1ga0b0335de55c30755747fdf449645e1a3" kindref="member">XMC_ECAT_GetEventStatus</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___e_c_a_t_1ga20fbe77b86c01c3e311fd7ed4be50aa8" kindref="member">XMC_ECAT_DisableSyncManChannel</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>channel);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___e_c_a_t_1ga825f2662f72b0c45f324632c7b678f2b" kindref="member">XMC_ECAT_EnableSyncManChannel</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>channel);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal">__STATIC_INLINE<sp/>uint16_t<sp/><ref refid="group___e_c_a_t_1gaab9fab89dd35a17739178337fc8693e7" kindref="member">XMC_ECAT_GetALEventRegister</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="414"><highlight class="normal">{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((uint16_t)ECAT0-&gt;AL_EVENT_REQ);</highlight></codeline>
<codeline lineno="416"><highlight class="normal">}</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal">__STATIC_INLINE<sp/>uint16_t<sp/><ref refid="group___e_c_a_t_1ga3f5f43ca67aec259a94d7fe58ae9777c" kindref="member">XMC_ECAT_GetALEventMask</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="429"><highlight class="normal">{</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((uint16_t)ECAT0-&gt;AL_EVENT_MASK);</highlight></codeline>
<codeline lineno="431"><highlight class="normal">}</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal">__STATIC_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___e_c_a_t_1ga172c4c1cabfd29c981fed161ca4d366f" kindref="member">XMC_ECAT_SetALEventMask</ref>(uint16_t<sp/>intMask)</highlight></codeline>
<codeline lineno="444"><highlight class="normal">{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/>ECAT0-&gt;AL_EVENT_MASK<sp/>|=<sp/>(uint32_t)(intMask);</highlight></codeline>
<codeline lineno="446"><highlight class="normal">}</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal">}</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>defined<sp/>(ECAT)<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>XMC_ECAT_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/var/tmp/gitlab-runner1/builds/xyH-6YS9/0/repo/mtb-xmclib-cat3/XMCLib/inc/xmc_ecat.h"/>
  </compounddef>
</doxygen>
